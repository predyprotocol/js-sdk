{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotFiller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "settlementData",
          "type": "bytes"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "updateQuoteTokenMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001d7d38038062001d7d83398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b611caf80620000ce6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e7f13701461005c57806374304a79146100a2578063944b560b146100b7578063a966d863146100ca578063e1c951ca146100ea575b600080fd5b61008561006a366004610b96565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b56100b0366004610d69565b6100fd565b005b6100b56100c5366004610e64565b610192565b6100dd6100d8366004610f7c565b610295565b60405161009991906110a6565b6100b56100f8366004610b96565b6105b1565b6000546040805180820182523081526020810184905290516391d0370f60e01b81526001600160a01b03909216916391d0370f91610149918691670de0b6b3a764000091600401611134565b610180604051808303816000875af1158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d919061115c565b505050565b6000546001600160a01b031633146101bd57604051637542ed5d60e11b815260040160405180910390fd5b600082608001518060200190518101906101d79190611214565b905060008113156102045761018d6101f28460000151610606565b6000546001600160a01b031683610681565b600081121561018d576000546001600160a01b031663c6b6d34060013061022a8561122d565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561027857600080fd5b505af115801561028c573d6000803e3d6000fd5b50505050505050565b61029d610b22565b600083600001518060200190518101906102b7919061132e565b905060006102c9828660200151610785565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b03166102f957600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b0390811691161461033057600080fd5b6103398161083b565b6000546040805160a08082018352858301516001600160401b03168252602080870151818401526080808801518486015291870151606084015260c087015184518083019190915284518082039092018252840184529082015290516309b819b360e41b81526001600160a01b0390921691639b819b30916103bf918890600401611410565b610180604051808303816000875af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610403919061115c565b925081602001516000036104ad5781516020908101518482018051600090815260038452604080822080546001600160a01b0319166001600160a01b0395861617905590549151865190940151905163055a6d9b60e51b8152600481019490945282166024840152169063ab4db36090604401600060405180830381600087803b15801561049057600080fd5b505af11580156104a4573d6000803e3d6000fd5b505050506104f2565b60208084015160009081526003825260409020548351909101516001600160a01b039081169116146104f25760405163708c545360e01b815260040160405180910390fd5b8160e001516001600160a01b031663799f5b1b83856040518363ffffffff1660e01b8152600401610524929190611468565b60006040518083038186803b15801561053c57600080fd5b505afa158015610550573d6000803e3d6000fd5b5050505060008260c0015112156105a8576040808301516001600160401b03166000908152600160209081529190205483519091015160c08401516105a8926001600160a01b031691906105a39061122d565b610681565b50505b92915050565b6000818152600160205260409020546001600160a01b0316610603576105d681610606565b600082815260016020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190611835565b60600151519392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916106dd919061190d565b6000604051808303816000865af19150503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b606091505b50915091508180156107495750805115806107495750808060200190518101906107499190611929565b61077e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b6040805161014081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905282526020820181905291810182905260608082019290925260808101919091526000808460c00151136107eb5760006107f1565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b0316815260200182815260200161082a866109d4565b815260200184905291505092915050565b61084481610a67565b6002546001600160a01b031663137c29fe6108c2836040805160a0808201835260006060808401828152608080860184905290855260208086018490529486019290925284519283018552858401516001600160a01b0316838201908152868601518484015283528551015192820192909252925101519082015290565b6040805180820182526000808252602091820152815180830183523081529186015190820152846000015160200151856060015160405160200161090590611944565b60408051601f19818403018152608083019091526047808352909190611c33602083013960405160200161093a929190611a6f565b60408051601f1981840301815260608301909152602e808352909190611c05602083013960405160200161096f929190611a9e565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526109a69695949392600401611aef565b600060405180830381600087803b1580156109c057600080fd5b505af115801561077e573d6000803e3d6000fd5b60006040516020016109e590611944565b60405160208183030381529060405280519060200120610a088360000151610ab8565b83602001518460400151856060015186608001518760a001518860c001518960e001518a6101000151604051602001610a4a9a99989796959493929190611b92565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b03163014610a9257604051639db8d5b160e01b815260040160405180910390fd5b8051608001514211156106035760405163387b2e5560e11b815260040160405180910390fd5b6000604051806080016040528060478152602001611c3360479139805160209182012083518483015160608601516080870151604051610a4a96019485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b6040518060e00160405280610b666040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610ba857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610be757610be7610baf565b60405290565b60405160c081016001600160401b0381118282101715610be757610be7610baf565b60405160a081016001600160401b0381118282101715610be757610be7610baf565b604080519081016001600160401b0381118282101715610be757610be7610baf565b60405161012081016001600160401b0381118282101715610be757610be7610baf565b60405161022081016001600160401b0381118282101715610be757610be7610baf565b60405161016081016001600160401b0381118282101715610be757610be7610baf565b604051601f8201601f191681016001600160401b0381118282101715610ce457610ce4610baf565b604052919050565b60006001600160401b03821115610d0557610d05610baf565b50601f01601f191660200190565b600082601f830112610d2457600080fd5b8135610d37610d3282610cec565b610cbc565b818152846020838601011115610d4c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610d7c57600080fd5b8235915060208301356001600160401b03811115610d9957600080fd5b610da585828601610d13565b9150509250929050565b6000818303610180811215610dc357600080fd5b610dcb610bc5565b915060c0811215610ddb57600080fd5b50610de4610bed565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215610e7857600080fd5b82356001600160401b0380821115610e8f57600080fd5b9084019060a08287031215610ea357600080fd5b610eab610c0f565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115610edf57600080fd5b610eeb88828601610d13565b608083015250809450505050610f048460208501610daf565b90509250929050565b6001600160a01b038116811461060357600080fd5b600060408284031215610f3457600080fd5b610f3c610c31565b90508135610f4981610f0d565b815260208201356001600160401b03811115610f6457600080fd5b610f7084828501610d13565b60208301525092915050565b60008060408385031215610f8f57600080fd5b82356001600160401b0380821115610fa657600080fd5b9084019060408287031215610fba57600080fd5b610fc2610c31565b823582811115610fd157600080fd5b610fdd88828601610d13565b825250602083013582811115610ff257600080fd5b610ffe88828601610d13565b60208301525080945050602085013591508082111561101c57600080fd5b50610da585828601610f22565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b61018081016105ab8284611029565b60005b838110156110d05781810151838201526020016110b8565b50506000910152565b600081518084526110f18160208601602086016110b5565b601f01601f19169290920160200192915050565b60018060a01b038151168252600060208201516040602085015261112c60408501826110d9565b949350505050565b8381528260208201526060604082015260006111536060830184611105565b95945050505050565b600081830361018081121561117057600080fd5b611178610bc5565b60c082121561118657600080fd5b61118e610bed565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b60006020828403121561122657600080fd5b5051919050565b6000600160ff1b820161125057634e487b7160e01b600052601160045260246000fd5b5060000390565b805161126281610f0d565b919050565b600060a0828403121561127957600080fd5b611281610c0f565b9050815161128e81610f0d565b8152602082015161129e81610f0d565b602082015260408201516112b181610f0d565b80604083015250606082015160608201526080820151608082015292915050565b80516001600160401b038116811461126257600080fd5b600082601f8301126112fa57600080fd5b8151611308610d3282610cec565b81815284602083860101111561131d57600080fd5b61112c8260208301602087016110b5565b60006020828403121561134057600080fd5b81516001600160401b038082111561135757600080fd5b908301906101a0828603121561136c57600080fd5b611374610c53565b61137e8684611267565b815260a0830151602082015261139660c084016112d2565b60408201526113a760e08401611257565b606082015261010080840151608083015261012084015160a083015261014084015160c08301526113db6101608501611257565b60e0830152610180840151838111156113f357600080fd5b6113ff888287016112e9565b918301919091525095945050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261145460e08401826110d9565b905082810360208401526111538185611105565b6101a0808252835180516001600160a01b039081168484015260208083015182166101c086015260408084015183166101e0870152606080850151610200880152608094850151610220880152918801516102408701528701516001600160401b03166102608601528601518116610280850152908501516102a084015260a08501516102c084015260c08501516102e084015260e0850151166103008301526101008401516103208301829052600091906115286103408501826110d9565b925050506115396020830184611029565b9392505050565b60006080828403121561155257600080fd5b604051608081018181106001600160401b038211171561157457611574610baf565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008183036101c08112156115b957600080fd5b6115c1610bed565b915082516115ce81610f0d565b825260208301516115de81610f0d565b602083015260c0603f19820112156115f557600080fd5b506115fe610bed565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a08201528060408301525061164c836101008401611540565b606082015261018082015160808201526101a082015160a082015292915050565b8051600281900b811461126257600080fd5b60006060828403121561169157600080fd5b604051606081018181106001600160401b03821117156116b3576116b3610baf565b604052825181529050806116c96020840161166d565b60208201526116da6040840161166d565b60408201525092915050565b6000604082840312156116f857600080fd5b611700610c31565b9050815181526020820151602082015292915050565b6000610260828403121561172957600080fd5b611731610c76565b905061173c82611257565b815261174a6020830161166d565b602082015261175b6040830161166d565b604082015261176c606083016112d2565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a06117df848285016116e6565b908201526101e06117f2848483016116e6565b6101c08301526102208301519082015261024090910151610200820152919050565b8051801515811461126257600080fd5b805160ff8116811461126257600080fd5b6000610720828403121561184857600080fd5b611850610c99565b8251815261186060208401611257565b602082015261187160408401611257565b604082015261188384606085016115a5565b60608201526118968461022085016115a5565b60808201526118a9846103e0850161167f565b60a08201526118bc846104408501611716565b60c08201526118ce6106a08401611257565b60e08201526118e06106c08401611814565b6101008201526118f36106e08401611824565b610120820152610700929092015161014083015250919050565b6000825161191f8184602087016110b5565b9190910192915050565b60006020828403121561193b57600080fd5b61153982611814565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b60008351611a818184602088016110b5565b835190830190611a958183602088016110b5565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351611acc8160138501602088016110b5565b835190830190611ae38160138401602088016110b5565b01601301949350505050565b6000610140611b12838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152611b46608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e083018690526101008301819052611b70818401866110d9565b9050828103610120840152611b8581856110d9565b9998505050505050505050565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e08501528086166101008501525080610120840152611bf3818401856110d9565b9d9c5050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a26469706673582212200ec4afd924b4fa0e77f5ea1ae0ef7746b307bf283fb1fff9b0d1849cad98699664736f6c63430008130033",
    "sourceMap": "860:3853:55:-:0;;;1169:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:10:61;:22;;-1:-1:-1;;;;;381:22:61;;;-1:-1:-1;;;;;;381:22:61;;;;;;;1267:8:55::1;:35:::0;;;;;::::1;::::0;::::1;;::::0;;860:3853;;14:143:161;-1:-1:-1;;;;;101:31:161;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:161;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;860:3853:55;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631e7f13701461005c57806374304a79146100a2578063944b560b146100b7578063a966d863146100ca578063e1c951ca146100ea575b600080fd5b61008561006a366004610b96565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b56100b0366004610d69565b6100fd565b005b6100b56100c5366004610e64565b610192565b6100dd6100d8366004610f7c565b610295565b60405161009991906110a6565b6100b56100f8366004610b96565b6105b1565b6000546040805180820182523081526020810184905290516391d0370f60e01b81526001600160a01b03909216916391d0370f91610149918691670de0b6b3a764000091600401611134565b610180604051808303816000875af1158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d919061115c565b505050565b6000546001600160a01b031633146101bd57604051637542ed5d60e11b815260040160405180910390fd5b600082608001518060200190518101906101d79190611214565b905060008113156102045761018d6101f28460000151610606565b6000546001600160a01b031683610681565b600081121561018d576000546001600160a01b031663c6b6d34060013061022a8561122d565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561027857600080fd5b505af115801561028c573d6000803e3d6000fd5b50505050505050565b61029d610b22565b600083600001518060200190518101906102b7919061132e565b905060006102c9828660200151610785565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b03166102f957600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b0390811691161461033057600080fd5b6103398161083b565b6000546040805160a08082018352858301516001600160401b03168252602080870151818401526080808801518486015291870151606084015260c087015184518083019190915284518082039092018252840184529082015290516309b819b360e41b81526001600160a01b0390921691639b819b30916103bf918890600401611410565b610180604051808303816000875af11580156103df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610403919061115c565b925081602001516000036104ad5781516020908101518482018051600090815260038452604080822080546001600160a01b0319166001600160a01b0395861617905590549151865190940151905163055a6d9b60e51b8152600481019490945282166024840152169063ab4db36090604401600060405180830381600087803b15801561049057600080fd5b505af11580156104a4573d6000803e3d6000fd5b505050506104f2565b60208084015160009081526003825260409020548351909101516001600160a01b039081169116146104f25760405163708c545360e01b815260040160405180910390fd5b8160e001516001600160a01b031663799f5b1b83856040518363ffffffff1660e01b8152600401610524929190611468565b60006040518083038186803b15801561053c57600080fd5b505afa158015610550573d6000803e3d6000fd5b5050505060008260c0015112156105a8576040808301516001600160401b03166000908152600160209081529190205483519091015160c08401516105a8926001600160a01b031691906105a39061122d565b610681565b50505b92915050565b6000818152600160205260409020546001600160a01b0316610603576105d681610606565b600082815260016020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015610651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106759190611835565b60600151519392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916106dd919061190d565b6000604051808303816000865af19150503d806000811461071a576040519150601f19603f3d011682016040523d82523d6000602084013e61071f565b606091505b50915091508180156107495750805115806107495750808060200190518101906107499190611929565b61077e5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b6040805161014081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905282526020820181905291810182905260608082019290925260808101919091526000808460c00151136107eb5760006107f1565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b0316815260200182815260200161082a866109d4565b815260200184905291505092915050565b61084481610a67565b6002546001600160a01b031663137c29fe6108c2836040805160a0808201835260006060808401828152608080860184905290855260208086018490529486019290925284519283018552858401516001600160a01b0316838201908152868601518484015283528551015192820192909252925101519082015290565b6040805180820182526000808252602091820152815180830183523081529186015190820152846000015160200151856060015160405160200161090590611944565b60408051601f19818403018152608083019091526047808352909190611c33602083013960405160200161093a929190611a6f565b60408051601f1981840301815260608301909152602e808352909190611c05602083013960405160200161096f929190611a9e565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526109a69695949392600401611aef565b600060405180830381600087803b1580156109c057600080fd5b505af115801561077e573d6000803e3d6000fd5b60006040516020016109e590611944565b60405160208183030381529060405280519060200120610a088360000151610ab8565b83602001518460400151856060015186608001518760a001518860c001518960e001518a6101000151604051602001610a4a9a99989796959493929190611b92565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b03163014610a9257604051639db8d5b160e01b815260040160405180910390fd5b8051608001514211156106035760405163387b2e5560e11b815260040160405180910390fd5b6000604051806080016040528060478152602001611c3360479139805160209182012083518483015160608601516080870151604051610a4a96019485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b6040518060e00160405280610b666040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610ba857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610be757610be7610baf565b60405290565b60405160c081016001600160401b0381118282101715610be757610be7610baf565b60405160a081016001600160401b0381118282101715610be757610be7610baf565b604080519081016001600160401b0381118282101715610be757610be7610baf565b60405161012081016001600160401b0381118282101715610be757610be7610baf565b60405161022081016001600160401b0381118282101715610be757610be7610baf565b60405161016081016001600160401b0381118282101715610be757610be7610baf565b604051601f8201601f191681016001600160401b0381118282101715610ce457610ce4610baf565b604052919050565b60006001600160401b03821115610d0557610d05610baf565b50601f01601f191660200190565b600082601f830112610d2457600080fd5b8135610d37610d3282610cec565b610cbc565b818152846020838601011115610d4c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610d7c57600080fd5b8235915060208301356001600160401b03811115610d9957600080fd5b610da585828601610d13565b9150509250929050565b6000818303610180811215610dc357600080fd5b610dcb610bc5565b915060c0811215610ddb57600080fd5b50610de4610bed565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215610e7857600080fd5b82356001600160401b0380821115610e8f57600080fd5b9084019060a08287031215610ea357600080fd5b610eab610c0f565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115610edf57600080fd5b610eeb88828601610d13565b608083015250809450505050610f048460208501610daf565b90509250929050565b6001600160a01b038116811461060357600080fd5b600060408284031215610f3457600080fd5b610f3c610c31565b90508135610f4981610f0d565b815260208201356001600160401b03811115610f6457600080fd5b610f7084828501610d13565b60208301525092915050565b60008060408385031215610f8f57600080fd5b82356001600160401b0380821115610fa657600080fd5b9084019060408287031215610fba57600080fd5b610fc2610c31565b823582811115610fd157600080fd5b610fdd88828601610d13565b825250602083013582811115610ff257600080fd5b610ffe88828601610d13565b60208301525080945050602085013591508082111561101c57600080fd5b50610da585828601610f22565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b61018081016105ab8284611029565b60005b838110156110d05781810151838201526020016110b8565b50506000910152565b600081518084526110f18160208601602086016110b5565b601f01601f19169290920160200192915050565b60018060a01b038151168252600060208201516040602085015261112c60408501826110d9565b949350505050565b8381528260208201526060604082015260006111536060830184611105565b95945050505050565b600081830361018081121561117057600080fd5b611178610bc5565b60c082121561118657600080fd5b61118e610bed565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b60006020828403121561122657600080fd5b5051919050565b6000600160ff1b820161125057634e487b7160e01b600052601160045260246000fd5b5060000390565b805161126281610f0d565b919050565b600060a0828403121561127957600080fd5b611281610c0f565b9050815161128e81610f0d565b8152602082015161129e81610f0d565b602082015260408201516112b181610f0d565b80604083015250606082015160608201526080820151608082015292915050565b80516001600160401b038116811461126257600080fd5b600082601f8301126112fa57600080fd5b8151611308610d3282610cec565b81815284602083860101111561131d57600080fd5b61112c8260208301602087016110b5565b60006020828403121561134057600080fd5b81516001600160401b038082111561135757600080fd5b908301906101a0828603121561136c57600080fd5b611374610c53565b61137e8684611267565b815260a0830151602082015261139660c084016112d2565b60408201526113a760e08401611257565b606082015261010080840151608083015261012084015160a083015261014084015160c08301526113db6101608501611257565b60e0830152610180840151838111156113f357600080fd5b6113ff888287016112e9565b918301919091525095945050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261145460e08401826110d9565b905082810360208401526111538185611105565b6101a0808252835180516001600160a01b039081168484015260208083015182166101c086015260408084015183166101e0870152606080850151610200880152608094850151610220880152918801516102408701528701516001600160401b03166102608601528601518116610280850152908501516102a084015260a08501516102c084015260c08501516102e084015260e0850151166103008301526101008401516103208301829052600091906115286103408501826110d9565b925050506115396020830184611029565b9392505050565b60006080828403121561155257600080fd5b604051608081018181106001600160401b038211171561157457611574610baf565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008183036101c08112156115b957600080fd5b6115c1610bed565b915082516115ce81610f0d565b825260208301516115de81610f0d565b602083015260c0603f19820112156115f557600080fd5b506115fe610bed565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a08201528060408301525061164c836101008401611540565b606082015261018082015160808201526101a082015160a082015292915050565b8051600281900b811461126257600080fd5b60006060828403121561169157600080fd5b604051606081018181106001600160401b03821117156116b3576116b3610baf565b604052825181529050806116c96020840161166d565b60208201526116da6040840161166d565b60408201525092915050565b6000604082840312156116f857600080fd5b611700610c31565b9050815181526020820151602082015292915050565b6000610260828403121561172957600080fd5b611731610c76565b905061173c82611257565b815261174a6020830161166d565b602082015261175b6040830161166d565b604082015261176c606083016112d2565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a06117df848285016116e6565b908201526101e06117f2848483016116e6565b6101c08301526102208301519082015261024090910151610200820152919050565b8051801515811461126257600080fd5b805160ff8116811461126257600080fd5b6000610720828403121561184857600080fd5b611850610c99565b8251815261186060208401611257565b602082015261187160408401611257565b604082015261188384606085016115a5565b60608201526118968461022085016115a5565b60808201526118a9846103e0850161167f565b60a08201526118bc846104408501611716565b60c08201526118ce6106a08401611257565b60e08201526118e06106c08401611814565b6101008201526118f36106e08401611824565b610120820152610700929092015161014083015250919050565b6000825161191f8184602087016110b5565b9190910192915050565b60006020828403121561193b57600080fd5b61153982611814565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b60008351611a818184602088016110b5565b835190830190611a958183602088016110b5565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351611acc8160138501602088016110b5565b835190830190611ae38160138401602088016110b5565b01601301949350505050565b6000610140611b12838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152611b46608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e083018690526101008301819052611b70818401866110d9565b9050828103610120840152611b8581856110d9565b9998505050505050505050565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e08501528086166101008501525080610120840152611bf3818401856110d9565b9d9c5050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a26469706673582212200ec4afd924b4fa0e77f5ea1ae0ef7746b307bf283fb1fff9b0d1849cad98699664736f6c63430008130033",
    "sourceMap": "860:3853:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1106:56:55;;;;;;-1:-1:-1;;;;;472:32:161;;;454:51;;442:2;427:18;1106:56:55;;;;;;;;4149:205;;;;;;:::i;:::-;;:::i;:::-;;1315:634;;;;;;:::i;:::-;;:::i;2194:1758::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;707:191:61:-;;;;;;:::i;:::-;;:::i;4149:205:55:-;4243:10;;4289:57;;;;;;;;4324:4;4289:57;;;;;;;;4243:104;;-1:-1:-1;;;4243:104:55;;-1:-1:-1;;;;;4243:10:55;;;;:30;;:104;;4274:7;;4283:4;;4243:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4149:205;;:::o;1315:634::-;477:10:61;;-1:-1:-1;;;;;477:10:61;455;:33;451:68;;497:22;;-1:-1:-1;;;497:22:61;;;;;;;;;;;451:68;1510:25:55::1;1549:11;:21;;;1538:43;;;;;;;;;;;;:::i;:::-;1510:71;;1617:1;1596:18;:22;1592:351;;;1634:150;1679:41;1701:11;:18;;;1679:21;:41::i;:::-;1730:10;::::0;-1:-1:-1;;;;;1730:10:55::1;1751:18:::0;1634:27:::1;:150::i;1592:351::-;1826:1;1805:18;:22;1801:142;;;1864:10;::::0;-1:-1:-1;;;;;1864:10:55::1;1843:38;1864:10:::0;1896:4:::1;1911:19;1912:18:::0;1911:19:::1;:::i;:::-;1843:89;::::0;-1:-1:-1;;;;;;1843:89:55::1;::::0;;;;;;11561:14:161;;11554:22;1843:89:55::1;::::0;::::1;11536:41:161::0;-1:-1:-1;;;;;11613:32:161;;;11593:18;;;11586:60;11662:18;;;11655:34;11509:18;;1843:89:55::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1500:449;1315:634:::0;;:::o;2194:1758::-;2326:41;;:::i;:::-;2383:28;2425:5;:11;;;2414:37;;;;;;;;;;;;:::i;:::-;2383:68;;2461:34;2498:44;2520:10;2532:5;:9;;;2498:21;:44::i;:::-;2576:17;;;;;-1:-1:-1;;;;;2561:33:55;2606:1;2561:33;;;:14;:33;;;;2461:81;;-1:-1:-1;;;;;;2561:33:55;2553:56;;;;;;2764:17;;;;;-1:-1:-1;;;;;2749:33:55;;;;;:14;:33;;;;2717:28;;;;-1:-1:-1;;;;;2717:65:55;;;2749:33;;2717:65;2709:74;;;;;;2794:27;2807:13;2794:12;:27::i;:::-;2846:10;;2876:247;;;;;;;;;2916:17;;;;-1:-1:-1;;;;;2876:247:55;;;;2951:21;;;;2876:247;;;;2990:22;;;;;2876:247;;;;3030:26;;;;2876:247;;;;3085:23;;;;3074:35;;;;;14483:25:161;;;;3074:35:55;;;;;;;;;;14456:18:161;;3074:35:55;;2876:247;;;;2846:315;;-1:-1:-1;;;2846:315:55;;-1:-1:-1;;;;;2846:10:55;;;;:16;;:315;;3137:14;;2846:315;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2832:329;;3176:10;:21;;;3201:1;3176:26;3172:375;;3255:15;;:22;;;;;3232:19;;;;;3255:15;3218:34;;;:13;:34;;;;;;:59;;-1:-1:-1;;;;;;3218:59:55;-1:-1:-1;;;;;3218:59:55;;;;;;3292:10;;3319:19;;3340:15;;:22;;;;3292:71;;-1:-1:-1;;;3292:71:55;;;;;15507:25:161;;;;15568:32;;15548:18;;;15541:60;3292:10:55;;:26;;15480:18:161;;3292:71:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:375;;;3438:19;;;;;3424:34;;;;:13;:34;;;;;;3398:15;;:22;;;;-1:-1:-1;;;;;3398:60:55;;;3424:34;;3398:60;3394:143;;3485:37;;-1:-1:-1;;;3485:37:55;;;;;;;;;;;3394:143;3635:10;:27;;;-1:-1:-1;;;;;3619:53:55;;3673:10;3685:11;3619:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:1;3712:10;:23;;;:27;3708:209;;;3815:17;;;;;-1:-1:-1;;;;;3800:33:55;;;;;:14;:33;;;;;;;;3835:15;;:22;;;;3868:23;;;;3755:151;;-1:-1:-1;;;;;3800:33:55;;3835:22;3867:24;;;:::i;:::-;3755:27;:151::i;:::-;3927:18;;2194:1758;;;;;:::o;707:191:61:-;809:1;775:22;;;:14;:22;;;;;;-1:-1:-1;;;;;775:22:61;771:121;;852:29;874:6;852:21;:29::i;:::-;827:22;;;;:14;:22;;;;;:54;;-1:-1:-1;;;;;;827:54:61;-1:-1:-1;;;;;827:54:61;;;;;;;;;;771:121;707:191;:::o;904:208::-;974:7;1029:10;;:32;;-1:-1:-1;;;1029:32:61;;;;;14483:25:161;;;974:7:61;;-1:-1:-1;;;;;1029:10:61;;:24;;14456:18:161;;1029:32:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1079:20;;;:26;;904:208;-1:-1:-1;;;904:208:61:o;1221:309:54:-;1381:59;;;-1:-1:-1;;;;;23573:32:161;;;1381:59:54;;;23555:51:161;23622:18;;;;23615:34;;;1381:59:54;;;;;;;;;;23528:18:161;;;;1381:59:54;;;;;;;-1:-1:-1;;;;;1381:59:54;-1:-1:-1;;;1381:59:54;;;1370:71;;-1:-1:-1;;;;1370:10:54;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:54;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:54;;24361:2:161;1451:72:54;;;24343:21:161;24400:1;24380:18;;;24373:29;-1:-1:-1;;;24418:18:161;;;24411:32;24460:18;;1451:72:54;;;;;;;;1324:206;;1221:309;;;:::o;2271:385:95:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:14:95;2500:1;2474:10;:23;;;:27;:66;;2539:1;2474:66;;;2512:10;:23;;;2474:66;2457:83;;2558:91;;;;;;;;2572:10;:15;;;2558:91;;;;2589:10;:28;;;-1:-1:-1;;;;;2558:91:95;;;;;2619:6;2558:91;;;;2627:16;2632:10;2627:4;:16::i;:::-;2558:91;;;;;;;2551:98;-1:-1:-1;;2271:385:95;;;;:::o;4360:351:55:-;4429:16;:5;:14;:16::i;:::-;4456:8;;-1:-1:-1;;;;;4456:8:55;:34;4504:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:98;;569:79;;;;;613:11;;;;-1:-1:-1;;;;;569:79:98;506:233;;;569:79;;;634:12;;;;569:79;;;;506:233;;669:10;;:16;;506:233;;;;;;;709:10;;:19;;506:233;;;;;346:400;4504:16:55;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:98;;;;;;;4564:4:55;998:84:98;;1068:12;;;;998:84;;;;4584:5:55;:10;;;:17;;;4615:5;:10;;;747:334:95;;;;;;;:::i;:::-;;;;-1:-1:-1;;747:334:95;;;;;;1258:28;;;;;;;;;;747:334;;;1258:28;747:334;1258:28;;;1221:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1221:66:95;;;;;;1598:22;;;;;;;;;;1221:66;;;1598:22;1221:66;1598:22;;;1546:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1546:75:95;;;;;;;;;;4685:9:55;;;;-1:-1:-1;;;;;;4456:248:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1744:521:95;1806:7;747:334;;;;;;;:::i;:::-;;;;;;;;;;;;;1345:29;;;;;;1924:17;:5;:10;;;:15;:17::i;:::-;1959:5;:16;;;1993:5;:12;;;2023:5;:23;;;2064:5;:17;;;2099:5;:21;;;2138:5;:18;;;2174:5;:22;;;2214:5;:20;;;1855:393;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1832:426;;;;;;1825:433;;1744:521;;;:::o;549:297:101:-;656:18;;:25;-1:-1:-1;;;;;631:51:101;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:101;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:101;;;;;;;;;;;559:189:97;619:7;446:15;;;;;;;;;;;;;;;;;436:26;;;;;;;688:11;;701;;;;714:10;;;;726:13;;;;655:85;;;;;29785:25:161;;;-1:-1:-1;;;;;29884:15:161;;;29879:2;29864:18;;29857:43;29936:15;;;;29931:2;29916:18;;29909:43;29983:2;29968:18;;29961:34;;;;30026:3;30011:19;;30004:35;29772:3;29757:19;;29526:519;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:161:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:161;;14:180;-1:-1:-1;14:180:161:o;516:127::-;577:10;572:3;568:20;565:1;558:31;608:4;605:1;598:15;632:4;629:1;622:15;648:253;720:2;714:9;762:4;750:17;;-1:-1:-1;;;;;782:34:161;;818:22;;;779:62;776:88;;;844:18;;:::i;:::-;880:2;873:22;648:253;:::o;906:::-;978:2;972:9;1020:4;1008:17;;-1:-1:-1;;;;;1040:34:161;;1076:22;;;1037:62;1034:88;;;1102:18;;:::i;1164:253::-;1236:2;1230:9;1278:4;1266:17;;-1:-1:-1;;;;;1298:34:161;;1334:22;;;1295:62;1292:88;;;1360:18;;:::i;1422:257::-;1494:4;1488:11;;;1526:17;;-1:-1:-1;;;;;1558:34:161;;1594:22;;;1555:62;1552:88;;;1620:18;;:::i;1684:255::-;1756:2;1750:9;1798:6;1786:19;;-1:-1:-1;;;;;1820:34:161;;1856:22;;;1817:62;1814:88;;;1882:18;;:::i;1944:255::-;2016:2;2010:9;2058:6;2046:19;;-1:-1:-1;;;;;2080:34:161;;2116:22;;;2077:62;2074:88;;;2142:18;;:::i;2204:255::-;2276:2;2270:9;2318:6;2306:19;;-1:-1:-1;;;;;2340:34:161;;2376:22;;;2337:62;2334:88;;;2402:18;;:::i;2464:275::-;2535:2;2529:9;2600:2;2581:13;;-1:-1:-1;;2577:27:161;2565:40;;-1:-1:-1;;;;;2620:34:161;;2656:22;;;2617:62;2614:88;;;2682:18;;:::i;:::-;2718:2;2711:22;2464:275;;-1:-1:-1;2464:275:161:o;2744:186::-;2792:4;-1:-1:-1;;;;;2817:6:161;2814:30;2811:56;;;2847:18;;:::i;:::-;-1:-1:-1;2913:2:161;2892:15;-1:-1:-1;;2888:29:161;2919:4;2884:40;;2744:186::o;2935:462::-;2977:5;3030:3;3023:4;3015:6;3011:17;3007:27;2997:55;;3048:1;3045;3038:12;2997:55;3084:6;3071:20;3115:48;3131:31;3159:2;3131:31;:::i;:::-;3115:48;:::i;:::-;3188:2;3179:7;3172:19;3234:3;3227:4;3222:2;3214:6;3210:15;3206:26;3203:35;3200:55;;;3251:1;3248;3241:12;3200:55;3316:2;3309:4;3301:6;3297:17;3290:4;3281:7;3277:18;3264:55;3364:1;3339:16;;;3357:4;3335:27;3328:38;;;;3343:7;2935:462;-1:-1:-1;;;2935:462:161:o;3402:388::-;3479:6;3487;3540:2;3528:9;3519:7;3515:23;3511:32;3508:52;;;3556:1;3553;3546:12;3508:52;3592:9;3579:23;3569:33;;3653:2;3642:9;3638:18;3625:32;-1:-1:-1;;;;;3672:6:161;3669:30;3666:50;;;3712:1;3709;3702:12;3666:50;3735:49;3776:7;3767:6;3756:9;3752:22;3735:49;:::i;:::-;3725:59;;;3402:388;;;;;:::o;3795:1106::-;3853:5;3892:9;3887:3;3883:19;3922:6;3918:2;3914:15;3911:35;;;3942:1;3939;3932:12;3911:35;3964:22;;:::i;:::-;3955:31;;4006:4;4002:2;3998:13;3995:33;;;4024:1;4021;4014:12;3995:33;;4052:22;;:::i;:::-;4112:9;4099:23;4090:7;4083:40;4185:2;4174:9;4170:18;4157:32;4152:2;4143:7;4139:16;4132:58;4252:2;4241:9;4237:18;4224:32;4219:2;4210:7;4206:16;4199:58;4319:2;4308:9;4304:18;4291:32;4286:2;4277:7;4273:16;4266:58;4387:3;4376:9;4372:19;4359:33;4353:3;4344:7;4340:17;4333:60;4456:3;4445:9;4441:19;4428:33;4422:3;4413:7;4409:17;4402:60;4485:7;4478:5;4471:22;;4553:4;4542:9;4538:20;4525:34;4520:2;4513:5;4509:14;4502:58;4620:4;4609:9;4605:20;4592:34;4587:2;4580:5;4576:14;4569:58;4687:3;4676:9;4672:19;4659:33;4654:2;4647:5;4643:14;4636:57;4754:3;4743:9;4739:19;4726:33;4720:3;4713:5;4709:15;4702:58;4821:3;4810:9;4806:19;4793:33;4787:3;4780:5;4776:15;4769:58;4889:3;4878:9;4874:19;4861:33;4854:4;4847:5;4843:16;4836:59;3795:1106;;;;:::o;4906:972::-;5034:6;5042;5095:3;5083:9;5074:7;5070:23;5066:33;5063:53;;;5112:1;5109;5102:12;5063:53;5152:9;5139:23;-1:-1:-1;;;;;5222:2:161;5214:6;5211:14;5208:34;;;5238:1;5235;5228:12;5208:34;5261:22;;;;5317:4;5299:16;;;5295:27;5292:47;;;5335:1;5332;5325:12;5292:47;5361:22;;:::i;:::-;5419:2;5406:16;5399:5;5392:31;5476:2;5472;5468:11;5455:25;5450:2;5443:5;5439:14;5432:49;5534:2;5530;5526:11;5513:25;5508:2;5501:5;5497:14;5490:49;5592:2;5588;5584:11;5571:25;5566:2;5559:5;5555:14;5548:49;5643:3;5639:2;5635:12;5622:26;5673:2;5663:8;5660:16;5657:36;;;5689:1;5686;5679:12;5657:36;5726:44;5762:7;5751:8;5747:2;5743:17;5726:44;:::i;:::-;5720:3;5713:5;5709:15;5702:69;;5790:5;5780:15;;;;;5814:58;5864:7;5859:2;5848:9;5844:18;5814:58;:::i;:::-;5804:68;;4906:972;;;;;:::o;5883:131::-;-1:-1:-1;;;;;5958:31:161;;5948:42;;5938:70;;6004:1;6001;5994:12;6019:489;6080:5;6128:4;6116:9;6111:3;6107:19;6103:30;6100:50;;;6146:1;6143;6136:12;6100:50;6168:22;;:::i;:::-;6159:31;;6227:9;6214:23;6246:33;6271:7;6246:33;:::i;:::-;6288:22;;6361:2;6346:18;;6333:32;-1:-1:-1;;;;;6377:30:161;;6374:50;;;6420:1;6417;6410:12;6374:50;6456:45;6497:3;6488:6;6477:9;6473:22;6456:45;:::i;:::-;6451:2;6444:5;6440:14;6433:69;;6019:489;;;;:::o;6513:1021::-;6644:6;6652;6705:2;6693:9;6684:7;6680:23;6676:32;6673:52;;;6721:1;6718;6711:12;6673:52;6761:9;6748:23;-1:-1:-1;;;;;6831:2:161;6823:6;6820:14;6817:34;;;6847:1;6844;6837:12;6817:34;6870:22;;;;6926:2;6908:16;;;6904:25;6901:45;;;6942:1;6939;6932:12;6901:45;6968:22;;:::i;:::-;7028:2;7015:16;7056:2;7046:8;7043:16;7040:36;;;7072:1;7069;7062:12;7040:36;7099:44;7135:7;7124:8;7120:2;7116:17;7099:44;:::i;:::-;7092:5;7085:59;;7190:2;7186;7182:11;7169:25;7219:2;7209:8;7206:16;7203:36;;;7235:1;7232;7225:12;7203:36;7271:44;7307:7;7296:8;7292:2;7288:17;7271:44;:::i;:::-;7266:2;7259:5;7255:14;7248:68;;7335:5;7325:15;;;7393:2;7382:9;7378:18;7365:32;7349:48;;7422:2;7412:8;7409:16;7406:36;;;7438:1;7435;7428:12;7406:36;;7461:67;7520:7;7509:8;7498:9;7494:24;7461:67;:::i;7539:733::-;7620:5;7614:12;7653:2;7647:9;7642:3;7635:22;7703:4;7699:2;7695:13;7689:20;7682:4;7677:3;7673:14;7666:44;7756:4;7752:2;7748:13;7742:20;7735:4;7730:3;7726:14;7719:44;7809:4;7805:2;7801:13;7795:20;7788:4;7783:3;7779:14;7772:44;7862:4;7858:2;7854:13;7848:20;7841:4;7836:3;7832:14;7825:44;7915:4;7911:2;7907:13;7901:20;7894:4;7889:3;7885:14;7878:44;;7971:4;7964:5;7960:16;7954:23;7947:4;7942:3;7938:14;7931:47;8027:4;8020:5;8016:16;8010:23;8003:4;7998:3;7994:14;7987:47;8085:4;8078:5;8074:16;8068:23;8059:6;8054:3;8050:16;8043:49;8143:4;8136:5;8132:16;8126:23;8117:6;8112:3;8108:16;8101:49;8201:4;8194:5;8190:16;8184:23;8175:6;8170:3;8166:16;8159:49;8259:4;8252:5;8248:16;8242:23;8233:6;8228:3;8224:16;8217:49;7539:733;;:::o;8277:261::-;8471:3;8456:19;;8484:48;8460:9;8514:6;8484:48;:::i;8543:250::-;8628:1;8638:113;8652:6;8649:1;8646:13;8638:113;;;8728:11;;;8722:18;8709:11;;;8702:39;8674:2;8667:10;8638:113;;;-1:-1:-1;;8785:1:161;8767:16;;8760:27;8543:250::o;8798:270::-;8839:3;8877:5;8871:12;8904:6;8899:3;8892:19;8920:76;8989:6;8982:4;8977:3;8973:14;8966:4;8959:5;8955:16;8920:76;:::i;:::-;9050:2;9029:15;-1:-1:-1;;9025:29:161;9016:39;;;;9057:4;9012:50;;8798:270;-1:-1:-1;;8798:270:161:o;9073:283::-;9195:1;9191;9186:3;9182:11;9178:19;9170:5;9164:12;9160:38;9155:3;9148:51;9130:3;9245:4;9238:5;9234:16;9228:23;9283:4;9276;9271:3;9267:14;9260:28;9304:46;9344:4;9339:3;9335:14;9321:12;9304:46;:::i;:::-;9297:53;9073:283;-1:-1:-1;;;;9073:283:161:o;9361:449::-;9638:6;9627:9;9620:25;9681:6;9676:2;9665:9;9661:18;9654:34;9724:2;9719;9708:9;9704:18;9697:30;9601:4;9744:60;9800:2;9789:9;9785:18;9777:6;9744:60;:::i;:::-;9736:68;9361:449;-1:-1:-1;;;;;9361:449:161:o;9815:1094::-;9915:6;9959:9;9950:7;9946:23;9989:3;9985:2;9981:12;9978:32;;;10006:1;10003;9996:12;9978:32;10032:22;;:::i;:::-;10074:4;10070:2;10066:13;10063:33;;;10092:1;10089;10082:12;10063:33;10120:22;;:::i;:::-;10105:37;;10173:9;10167:16;10158:7;10151:33;10239:2;10228:9;10224:18;10218:25;10213:2;10204:7;10200:16;10193:51;10299:2;10288:9;10284:18;10278:25;10273:2;10264:7;10260:16;10253:51;10359:2;10348:9;10344:18;10338:25;10333:2;10324:7;10320:16;10313:51;10420:3;10409:9;10405:19;10399:26;10393:3;10384:7;10380:17;10373:53;10482:3;10471:9;10467:19;10461:26;10455:3;10446:7;10442:17;10435:53;10511:7;10504:5;10497:22;10572:4;10561:9;10557:20;10551:27;10546:2;10539:5;10535:14;10528:51;10632:4;10621:9;10617:20;10611:27;10606:2;10599:5;10595:14;10588:51;10692:3;10681:9;10677:19;10671:26;10666:2;10659:5;10655:14;10648:50;10752:3;10741:9;10737:19;10731:26;10725:3;10718:5;10714:15;10707:51;10812:3;10801:9;10797:19;10791:26;10785:3;10778:5;10774:15;10767:51;10873:3;10862:9;10858:19;10852:26;10845:4;10838:5;10834:16;10827:52;10898:5;10888:15;;;;9815:1094;;;;:::o;10914:183::-;10983:6;11036:2;11024:9;11015:7;11011:23;11007:32;11004:52;;;11052:1;11049;11042:12;11004:52;-1:-1:-1;11075:16:161;;10914:183;-1:-1:-1;10914:183:161:o;11102:233::-;11137:3;-1:-1:-1;;;11158:22:161;;11155:145;;11222:10;11217:3;11213:20;11210:1;11203:31;11257:4;11254:1;11247:15;11285:4;11282:1;11275:15;11155:145;-1:-1:-1;11320:1:161;11316:13;;11102:233::o;11700:138::-;11779:13;;11801:31;11779:13;11801:31;:::i;:::-;11700:138;;;:::o;11843:676::-;11910:5;11958:4;11946:9;11941:3;11937:19;11933:30;11930:50;;;11976:1;11973;11966:12;11930:50;11998:22;;:::i;:::-;11989:31;;12050:9;12044:16;12069:33;12094:7;12069:33;:::i;:::-;12111:22;;12178:2;12163:18;;12157:25;12191:33;12157:25;12191:33;:::i;:::-;12251:2;12240:14;;12233:31;12309:2;12294:18;;12288:25;12322:33;12288:25;12322:33;:::i;:::-;12387:7;12382:2;12375:5;12371:14;12364:31;;12448:2;12437:9;12433:18;12427:25;12422:2;12415:5;12411:14;12404:49;12507:3;12496:9;12492:19;12486:26;12480:3;12473:5;12469:15;12462:51;11843:676;;;;:::o;12524:175::-;12602:13;;-1:-1:-1;;;;;12644:30:161;;12634:41;;12624:69;;12689:1;12686;12679:12;12704:441;12757:5;12810:3;12803:4;12795:6;12791:17;12787:27;12777:55;;12828:1;12825;12818:12;12777:55;12857:6;12851:13;12888:48;12904:31;12932:2;12904:31;:::i;12888:48::-;12961:2;12952:7;12945:19;13007:3;13000:4;12995:2;12987:6;12983:15;12979:26;12976:35;12973:55;;;13024:1;13021;13014:12;12973:55;13037:77;13111:2;13104:4;13095:7;13091:18;13084:4;13076:6;13072:17;13037:77;:::i;13150:1184::-;13249:6;13302:2;13290:9;13281:7;13277:23;13273:32;13270:52;;;13318:1;13315;13308:12;13270:52;13351:9;13345:16;-1:-1:-1;;;;;13421:2:161;13413:6;13410:14;13407:34;;;13437:1;13434;13427:12;13407:34;13460:22;;;;13516:6;13498:16;;;13494:29;13491:49;;;13536:1;13533;13526:12;13491:49;13562:22;;:::i;:::-;13607:51;13650:7;13646:2;13607:51;:::i;:::-;13600:5;13593:66;13705:3;13701:2;13697:12;13691:19;13686:2;13679:5;13675:14;13668:43;13745:42;13782:3;13778:2;13774:12;13745:42;:::i;:::-;13738:4;13731:5;13727:16;13720:68;13822:43;13860:3;13856:2;13852:12;13822:43;:::i;:::-;13815:4;13808:5;13804:16;13797:69;13885:3;13936:2;13932;13928:11;13922:18;13915:4;13908:5;13904:16;13897:44;13988:6;13984:2;13980:15;13974:22;13968:3;13961:5;13957:15;13950:47;14044:3;14040:2;14036:12;14030:19;14024:3;14017:5;14013:15;14006:44;14083:43;14121:3;14117:2;14113:12;14083:43;:::i;:::-;14077:3;14070:5;14066:15;14059:68;14166:3;14162:2;14158:12;14152:19;14196:2;14186:8;14183:16;14180:36;;;14212:1;14209;14202:12;14180:36;14248:55;14295:7;14284:8;14280:2;14276:17;14248:55;:::i;:::-;14232:14;;;14225:79;;;;-1:-1:-1;14236:5:161;13150:1184;-1:-1:-1;;;;;13150:1184:161:o;14519:809::-;14802:2;14791:9;14784:21;14847:6;14841:13;14836:2;14825:9;14821:18;14814:41;14909:4;14901:6;14897:17;14891:24;14886:2;14875:9;14871:18;14864:52;14971:2;14963:6;14959:15;14953:22;14947:3;14936:9;14932:19;14925:51;15032:2;15024:6;15020:15;15014:22;15007:4;14996:9;14992:20;14985:52;14765:4;15084:3;15076:6;15072:16;15066:23;15126:4;15120:3;15109:9;15105:19;15098:33;15151:51;15197:3;15186:9;15182:19;15168:12;15151:51;:::i;:::-;15140:62;;15249:9;15244:3;15240:19;15233:4;15222:9;15218:20;15211:49;15277:45;15318:3;15310:6;15277:45;:::i;16107:1212::-;16374:3;16386:21;;;16444:13;;15729:12;;-1:-1:-1;;;;;15725:21:161;;;16459:18;;;15713:34;15800:4;15789:16;;;15783:23;15779:32;;15763:14;;;15756:56;15865:4;15854:16;;;15848:23;15844:32;;15828:14;;;15821:56;15926:4;15915:16;;;15909:23;15893:14;;;15886:47;15982:4;15971:16;;;15965:23;15949:14;;;15942:47;16521:17;;;16515:24;16509:3;16494:19;;16487:53;16575:17;;16569:24;-1:-1:-1;;;;;16065:30:161;16649:3;16634:19;;16053:43;16691:17;;16685:24;265:31;;16768:3;16753:19;;253:44;16816:17;;;16810:24;16804:3;16789:19;;16782:53;16890:4;16878:17;;16872:24;16866:3;16851:19;;16844:53;16952:4;16940:17;;16934:24;16928:3;16913:19;;16906:53;17008:4;16996:17;;16990:24;265:31;17073:3;17058:19;;253:44;17127:6;17115:19;;17109:26;17166:3;17151:19;;17144:31;;;-1:-1:-1;;16374:3:161;17192:53;17240:3;17225:19;;17109:26;17192:53;:::i;:::-;17184:61;;;;17254:59;17307:4;17296:9;17292:20;17284:6;17254:59;:::i;:::-;16107:1212;;;;;:::o;17506:589::-;17573:5;17621:4;17609:9;17604:3;17600:19;17596:30;17593:50;;;17639:1;17636;17629:12;17593:50;17672:2;17666:9;17714:4;17706:6;17702:17;17785:6;17773:10;17770:22;-1:-1:-1;;;;;17737:10:161;17734:34;17731:62;17728:88;;;17796:18;;:::i;:::-;17836:10;17832:2;17825:22;;17865:6;17856:15;;17901:9;17895:16;17887:6;17880:32;17966:2;17955:9;17951:18;17945:25;17940:2;17932:6;17928:15;17921:50;18025:2;18014:9;18010:18;18004:25;17999:2;17991:6;17987:15;17980:50;18084:2;18073:9;18069:18;18063:25;18058:2;18050:6;18046:15;18039:50;;17506:589;;;;:::o;18100:1173::-;18173:5;18212:9;18207:3;18203:19;18242:6;18238:2;18234:15;18231:35;;;18262:1;18259;18252:12;18231:35;18284:22;;:::i;:::-;18275:31;;18336:9;18330:16;18355:33;18380:7;18355:33;:::i;:::-;18397:22;;18464:2;18449:18;;18443:25;18477:33;18443:25;18477:33;:::i;:::-;18537:2;18526:14;;18519:31;18584:4;-1:-1:-1;;18566:16:161;;18562:27;18559:47;;;18602:1;18599;18592:12;18559:47;;18630:22;;:::i;:::-;18698:2;18687:9;18683:18;18677:25;18668:7;18661:42;18758:2;18747:9;18743:18;18737:25;18732:2;18723:7;18719:16;18712:51;18818:3;18807:9;18803:19;18797:26;18792:2;18783:7;18779:16;18772:52;18879:3;18868:9;18864:19;18858:26;18853:2;18844:7;18840:16;18833:52;18941:4;18930:9;18926:20;18920:27;18914:3;18905:7;18901:17;18894:54;19004:3;18993:9;18989:19;18983:26;18977:3;18968:7;18964:17;18957:53;19042:7;19037:2;19030:5;19026:14;19019:31;;19082:64;19142:3;19136;19125:9;19121:19;19082:64;:::i;:::-;19077:2;19070:5;19066:14;19059:88;19201:3;19190:9;19186:19;19180:26;19174:3;19167:5;19163:15;19156:51;19261:3;19250:9;19246:19;19240:26;19234:3;19227:5;19223:15;19216:51;18100:1173;;;;:::o;19278:164::-;19355:13;;19408:1;19397:20;;;19387:31;;19377:59;;19432:1;19429;19422:12;19447:580;19520:5;19568:4;19556:9;19551:3;19547:19;19543:30;19540:50;;;19586:1;19583;19576:12;19540:50;19619:2;19613:9;19661:4;19653:6;19649:17;19732:6;19720:10;19717:22;-1:-1:-1;;;;;19684:10:161;19681:34;19678:62;19675:88;;;19743:18;;:::i;:::-;19779:2;19772:22;19842:16;;19827:32;;19812:6;-1:-1:-1;19812:6:161;19892:47;19935:2;19920:18;;19892:47;:::i;:::-;19887:2;19879:6;19875:15;19868:72;19973:47;20016:2;20005:9;20001:18;19973:47;:::i;:::-;19968:2;19960:6;19956:15;19949:72;;19447:580;;;;:::o;20032:282::-;20100:5;20148:4;20136:9;20131:3;20127:19;20123:30;20120:50;;;20166:1;20163;20156:12;20120:50;20188:22;;:::i;:::-;20179:31;;20239:9;20233:16;20226:5;20219:31;20303:2;20292:9;20288:18;20282:25;20277:2;20270:5;20266:14;20259:49;20032:282;;;;:::o;20319:1507::-;20396:5;20444:6;20432:9;20427:3;20423:19;20419:32;20416:52;;;20464:1;20461;20454:12;20416:52;20486:22;;:::i;:::-;20477:31;;20531:40;20561:9;20531:40;:::i;:::-;20524:5;20517:55;20604:47;20647:2;20636:9;20632:18;20604:47;:::i;:::-;20599:2;20592:5;20588:14;20581:71;20684:47;20727:2;20716:9;20712:18;20684:47;:::i;:::-;20679:2;20672:5;20668:14;20661:71;20764:48;20808:2;20797:9;20793:18;20764:48;:::i;:::-;20759:2;20748:14;;20741:72;20867:3;20852:19;;;20846:26;20829:15;;;20822:51;20927:3;20912:19;;;20906:26;20889:15;;;20882:51;20987:3;20972:19;;;20966:26;20949:15;;;20942:51;21047:3;21032:19;;;21026:26;21009:15;;;21002:51;21072:3;21113:18;;;21107:25;21091:14;;;21084:49;21152:3;21193:18;;;21187:25;21171:14;;;21164:49;21232:3;21273:18;;;21267:25;21251:14;;;21244:49;21312:3;21353:18;;;21347:25;21331:14;;;21324:49;21392:3;21433:18;;;21427:25;21411:14;;;21404:49;21472:3;21507:64;21567:3;21547:18;;;21507:64;:::i;:::-;21491:14;;;21484:88;21591:3;21630:64;21690:3;21670:18;;;21630:64;:::i;:::-;21621:6;21610:18;;21603:92;21748:6;21733:22;;21727:29;21711:14;;;21704:53;21814:3;21799:19;;;21793:26;21784:6;21773:18;;21766:54;21614:5;20319:1507;-1:-1:-1;20319:1507:161:o;21831:164::-;21907:13;;21956;;21949:21;21939:32;;21929:60;;21985:1;21982;21975:12;22000:160;22077:13;;22130:4;22119:16;;22109:27;;22099:55;;22150:1;22147;22140:12;22165:1211;22264:6;22317:4;22305:9;22296:7;22292:23;22288:34;22285:54;;;22335:1;22332;22325:12;22285:54;22361:22;;:::i;:::-;22412:9;22406:16;22399:5;22392:31;22455:49;22500:2;22489:9;22485:18;22455:49;:::i;:::-;22450:2;22443:5;22439:14;22432:73;22537:49;22582:2;22571:9;22567:18;22537:49;:::i;:::-;22532:2;22525:5;22521:14;22514:73;22619;22684:7;22679:2;22668:9;22664:18;22619:73;:::i;:::-;22614:2;22607:5;22603:14;22596:97;22727:74;22793:7;22787:3;22776:9;22772:19;22727:74;:::i;:::-;22720:4;22713:5;22709:16;22702:100;22836:74;22902:7;22896:3;22885:9;22881:19;22836:74;:::i;:::-;22829:4;22822:5;22818:16;22811:100;22945:79;23016:7;23009:4;22998:9;22994:20;22945:79;:::i;:::-;22938:4;22931:5;22927:16;22920:105;23059:51;23104:4;23093:9;23089:20;23059:51;:::i;:::-;23052:4;23045:5;23041:16;23034:77;23147:48;23189:4;23178:9;23174:20;23147:48;:::i;:::-;23138:6;23131:5;23127:18;23120:76;23232:49;23275:4;23264:9;23260:20;23232:49;:::i;:::-;23223:6;23212:18;;23205:77;23339:4;23324:20;;;;23318:27;23309:6;23298:18;;23291:55;-1:-1:-1;23216:5:161;22165:1211;-1:-1:-1;22165:1211:161:o;23660:287::-;23789:3;23827:6;23821:13;23843:66;23902:6;23897:3;23890:4;23882:6;23878:17;23843:66;:::i;:::-;23925:16;;;;;23660:287;-1:-1:-1;;23660:287:161:o;23952:202::-;24019:6;24072:2;24060:9;24051:7;24047:23;24043:32;24040:52;;;24088:1;24085;24078:12;24040:52;24111:37;24138:9;24111:37;:::i;24489:1654::-;-1:-1:-1;;;25600:26:161;;-1:-1:-1;;;25651:2:161;25642:12;;25635:39;-1:-1:-1;;;25699:2:161;25690:12;;25683:43;-1:-1:-1;;;25751:2:161;25742:12;;25735:38;25803:28;25798:2;25789:12;;25782:50;-1:-1:-1;;;25857:2:161;25848:12;;25841:43;25915:25;25909:3;25900:13;;25893:48;-1:-1:-1;;;25966:3:161;25957:13;;25950:45;26026:26;26020:3;26011:13;;26004:49;-1:-1:-1;;;26078:3:161;26069:13;;26062:46;26133:3;26124:13;;24489:1654::o;26148:492::-;26323:3;26361:6;26355:13;26377:66;26436:6;26431:3;26424:4;26416:6;26412:17;26377:66;:::i;:::-;26506:13;;26465:16;;;;26528:70;26506:13;26465:16;26575:4;26563:17;;26528:70;:::i;:::-;26614:20;;26148:492;-1:-1:-1;;;;26148:492:161:o;26645:656::-;-1:-1:-1;;;26948:3:161;26941:34;26923:3;27004:6;26998:13;27020:75;27088:6;27083:2;27078:3;27074:12;27067:4;27059:6;27055:17;27020:75;:::i;:::-;27155:13;;27114:16;;;;27177:76;27155:13;27239:2;27231:11;;27224:4;27212:17;;27177:76;:::i;:::-;27273:17;27292:2;27269:26;;26645:656;-1:-1:-1;;;;26645:656:161:o;27494:1065::-;27924:4;27953:3;27965:60;28015:9;28006:6;28000:13;27392:12;;-1:-1:-1;;;;;27388:38:161;27376:51;;27476:4;27465:16;;;27459:23;27443:14;;27436:47;27306:183;27965:60;28081:4;28073:6;28069:17;28063:24;28056:4;28045:9;28041:20;28034:54;28144:4;28136:6;28132:17;28126:24;28119:4;28108:9;28104:20;28097:54;28160:63;28218:3;28207:9;28203:19;28195:6;27392:12;;-1:-1:-1;;;;;27388:38:161;27376:51;;27476:4;27465:16;;;27459:23;27443:14;;27436:47;27306:183;28160:63;-1:-1:-1;;;;;28260:32:161;;28254:3;28239:19;;28232:61;28324:3;28309:19;;28302:35;;;28368:3;28353:19;;28346:31;;;28400:44;28425:18;;;28417:6;28400:44;:::i;:::-;28386:58;;28493:9;28485:6;28481:22;28475:3;28464:9;28460:19;28453:51;28521:32;28546:6;28538;28521:32;:::i;:::-;28513:40;27494:1065;-1:-1:-1;;;;;;;;;27494:1065:161:o;28564:957::-;28918:4;28947:3;28977:6;28966:9;28959:25;29020:6;29015:2;29004:9;29000:18;28993:34;29063:6;29058:2;29047:9;29043:18;29036:34;-1:-1:-1;;;;;29110:6:161;29106:31;29101:2;29090:9;29086:18;29079:59;29174:1;29170;29165:3;29161:11;29157:19;29225:2;29217:6;29213:15;29207:3;29196:9;29192:19;29185:44;29266:6;29260:3;29249:9;29245:19;29238:35;29310:6;29304:3;29293:9;29289:19;29282:35;29354:6;29348:3;29337:9;29333:19;29326:35;29410:2;29402:6;29398:15;29392:3;29381:9;29377:19;29370:44;;29451:2;29445:3;29434:9;29430:19;29423:31;29471:44;29511:2;29500:9;29496:18;29488:6;29471:44;:::i;:::-;29463:52;28564:957;-1:-1:-1;;;;;;;;;;;;;28564:957:161:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execLiquidationCall(uint256,bytes)": "74304a79",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "updateQuoteTokenMap(uint256)": "e1c951ca",
    "userPositions(uint256)": "1e7f1370"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"settlementData\",\"type\":\"bytes\"}],\"name\":\"execLiquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"updateQuoteTokenMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"params\":{\"settlementData\":\"The route of settlement created by liquidator\",\"vaultId\":\"The id of the vault\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"details\":\"Fillers call this function\",\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"notice\":\"Executes liquidation call for the position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and executes trade\"}},\"notice\":\"Gamma trade market contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GammaTradeMarket.sol\":\"GammaTradeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/GammaTradeMarket.sol\":{\"keccak256\":\"0xcaea264ce3edab257ab5eedd7903f08ada86059277866382566eb12022fbbcfd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b57ac440bfc54c96f695dcaa99cb4ac44bd10cff3e320b4689d7ce0f5dd2170e\",\"dweb:/ipfs/QmWdzMDoNJUsutpYJZWAzkwgoSpSYKTGrubyBySQhmvccs\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d\",\"dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af\",\"dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d\",\"dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0xd7a2b8b3e38d353b76925acd0e3b1cfa43f8c52042b00e9e17068ee556615a16\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5daa3acc0f82d915c7c45b1a8ac6d3e238c03f41818c0cf771d955712811f53\",\"dweb:/ipfs/QmQaWGc1HL37g26wqDpGYJA1E6EooAPsW6n3pNnjN7NwLq\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7\",\"dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/GammaOrder.sol\":{\"keccak256\":\"0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa\",\"dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022\",\"dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/PerpOrder.sol\":{\"keccak256\":\"0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e\",\"dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotFiller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "settlementData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuoteTokenMap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "params": {
              "settlementData": "The route of settlement created by liquidator",
              "vaultId": "The id of the vault"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "details": "Fillers call this function",
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "notice": "Executes liquidation call for the position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and executes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GammaTradeMarket.sol": "GammaTradeMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/GammaTradeMarket.sol": {
        "keccak256": "0xcaea264ce3edab257ab5eedd7903f08ada86059277866382566eb12022fbbcfd",
        "urls": [
          "bzz-raw://b57ac440bfc54c96f695dcaa99cb4ac44bd10cff3e320b4689d7ce0f5dd2170e",
          "dweb:/ipfs/QmWdzMDoNJUsutpYJZWAzkwgoSpSYKTGrubyBySQhmvccs"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc",
        "urls": [
          "bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d",
          "dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec",
        "urls": [
          "bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af",
          "dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627",
        "urls": [
          "bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d",
          "dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0xd7a2b8b3e38d353b76925acd0e3b1cfa43f8c52042b00e9e17068ee556615a16",
        "urls": [
          "bzz-raw://c5daa3acc0f82d915c7c45b1a8ac6d3e238c03f41818c0cf771d955712811f53",
          "dweb:/ipfs/QmQaWGc1HL37g26wqDpGYJA1E6EooAPsW6n3pNnjN7NwLq"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a",
        "urls": [
          "bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7",
          "dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/GammaOrder.sol": {
        "keccak256": "0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f",
        "urls": [
          "bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa",
          "dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad",
        "urls": [
          "bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022",
          "dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/PerpOrder.sol": {
        "keccak256": "0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09",
        "urls": [
          "bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e",
          "dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GammaTradeMarket.sol",
    "id": 51446,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        69042
      ],
      "BaseHookCallback": [
        57100
      ],
      "Constants": [
        58043
      ],
      "DataType": [
        58066
      ],
      "FixedPoint96": [
        49710
      ],
      "FixedPointMathLib": [
        48392
      ],
      "FullMath": [
        49887
      ],
      "GammaOrder": [
        67238
      ],
      "GammaOrderLib": [
        67362
      ],
      "GammaTradeMarket": [
        51445
      ],
      "IERC20": [
        44717
      ],
      "IFillerMarket": [
        57112
      ],
      "IHooks": [
        57125
      ],
      "ILendingPool": [
        57137
      ],
      "IOrderValidator": [
        57155
      ],
      "IPermit2": [
        48097
      ],
      "IPerpOrderValidator": [
        57165
      ],
      "IPredyPool": [
        57335
      ],
      "ISettlement": [
        57350
      ],
      "ISignatureTransfer": [
        48233
      ],
      "ISwapRouter": [
        50549
      ],
      "IUniswapV3Pool": [
        49224
      ],
      "IUniswapV3PoolActions": [
        49348
      ],
      "IUniswapV3PoolDerivedState": [
        49379
      ],
      "IUniswapV3PoolErrors": [
        49407
      ],
      "IUniswapV3PoolEvents": [
        49526
      ],
      "IUniswapV3PoolImmutables": [
        49566
      ],
      "IUniswapV3PoolOracle": [
        69097
      ],
      "IUniswapV3PoolOwnerActions": [
        49592
      ],
      "IUniswapV3PoolState": [
        49700
      ],
      "InterestRateModel": [
        58141
      ],
      "LPMath": [
        66863
      ],
      "LiquidityAmounts": [
        50893
      ],
      "Math": [
        67004
      ],
      "OrderInfo": [
        67624
      ],
      "OrderInfoLib": [
        67659
      ],
      "PairLib": [
        58164
      ],
      "Permit2Lib": [
        67715
      ],
      "Perp": [
        60626
      ],
      "PerpFee": [
        61133
      ],
      "PerpOrder": [
        67893
      ],
      "PositionCalculator": [
        61854
      ],
      "PositionKey": [
        50918
      ],
      "PremiumCurveModel": [
        61896
      ],
      "PriceFeed": [
        55959
      ],
      "Reallocation": [
        62439
      ],
      "ResolvedOrder": [
        68030
      ],
      "ResolvedOrderLib": [
        68072
      ],
      "SafeCast": [
        47766
      ],
      "SafeCastLib": [
        49109
      ],
      "ScaledAsset": [
        63168
      ],
      "TickMath": [
        50433
      ],
      "TransferHelper": [
        51089
      ],
      "UniHelper": [
        64155
      ],
      "UnsafeMath": [
        50449
      ],
      "console": [
        22689
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4675:55",
    "nodes": [
      {
        "id": 51091,
        "nodeType": "PragmaDirective",
        "src": "39:24:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 51092,
        "nodeType": "ImportDirective",
        "src": "65:66:55",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 49225,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51094,
        "nodeType": "ImportDirective",
        "src": "132:92:55",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 51090,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51093,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51089,
              "src": "140:14:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51096,
        "nodeType": "ImportDirective",
        "src": "225:87:55",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 50550,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51095,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50549,
              "src": "233:11:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51098,
        "nodeType": "ImportDirective",
        "src": "313:70:55",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 48098,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51097,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48097,
              "src": "321:8:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51099,
        "nodeType": "ImportDirective",
        "src": "384:56:55",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 44718,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51100,
        "nodeType": "ImportDirective",
        "src": "441:37:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "./interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 57336,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51101,
        "nodeType": "ImportDirective",
        "src": "479:39:55",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPool.sol",
        "file": "./interfaces/ILendingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 57138,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51102,
        "nodeType": "ImportDirective",
        "src": "519:40:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "./interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 57113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51103,
        "nodeType": "ImportDirective",
        "src": "560:42:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "./interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 57166,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51104,
        "nodeType": "ImportDirective",
        "src": "603:37:55",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "./base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 57101,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51105,
        "nodeType": "ImportDirective",
        "src": "641:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "./libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 67716,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51106,
        "nodeType": "ImportDirective",
        "src": "685:46:55",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "./libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 68073,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51107,
        "nodeType": "ImportDirective",
        "src": "732:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/orders/GammaOrder.sol",
        "file": "./libraries/orders/GammaOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 67363,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51108,
        "nodeType": "ImportDirective",
        "src": "776:35:55",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "./libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51446,
        "sourceUnit": 67005,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51445,
        "nodeType": "ContractDefinition",
        "src": "860:3853:55",
        "nodes": [
          {
            "id": 51117,
            "nodeType": "UsingForDirective",
            "src": "927:41:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 51114,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "933:16:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68072,
              "src": "933:16:55"
            },
            "typeName": {
              "id": 51116,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51115,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "954:13:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68030,
                "src": "954:13:55"
              },
              "referencedDeclaration": 68030,
              "src": "954:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$68030_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 51121,
            "nodeType": "UsingForDirective",
            "src": "973:35:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 51118,
              "name": "GammaOrderLib",
              "nameLocations": [
                "979:13:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67362,
              "src": "979:13:55"
            },
            "typeName": {
              "id": 51120,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51119,
                "name": "GammaOrder",
                "nameLocations": [
                  "997:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67238,
                "src": "997:10:55"
              },
              "referencedDeclaration": 67238,
              "src": "997:10:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GammaOrder_$67238_storage_ptr",
                "typeString": "struct GammaOrder"
              }
            }
          },
          {
            "id": 51125,
            "nodeType": "UsingForDirective",
            "src": "1013:35:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 51122,
              "name": "Permit2Lib",
              "nameLocations": [
                "1019:10:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67715,
              "src": "1019:10:55"
            },
            "typeName": {
              "id": 51124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51123,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1034:13:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68030,
                "src": "1034:13:55"
              },
              "referencedDeclaration": 68030,
              "src": "1034:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$68030_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 51128,
            "nodeType": "UsingForDirective",
            "src": "1053:23:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 51126,
              "name": "Math",
              "nameLocations": [
                "1059:4:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67004,
              "src": "1059:4:55"
            },
            "typeName": {
              "id": 51127,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1068:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 51131,
            "nodeType": "VariableDeclaration",
            "src": "1082:17:55",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1091:8:55",
            "scope": 51445,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$48097",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 51130,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51129,
                "name": "IPermit2",
                "nameLocations": [
                  "1082:8:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48097,
                "src": "1082:8:55"
              },
              "referencedDeclaration": 48097,
              "src": "1082:8:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$48097",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51135,
            "nodeType": "VariableDeclaration",
            "src": "1106:56:55",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "1149:13:55",
            "scope": 51445,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 51134,
              "keyName": "vaultId",
              "keyNameLocation": "1122:7:55",
              "keyType": {
                "id": 51132,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1114:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1106:35:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 51133,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1133:7:55",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 51153,
            "nodeType": "FunctionDefinition",
            "src": "1169:140:55",
            "nodes": [],
            "body": {
              "id": 51152,
              "nodeType": "Block",
              "src": "1257:52:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 51150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51146,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51131,
                      "src": "1267:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$48097",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51148,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51140,
                          "src": "1287:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 51147,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48097,
                        "src": "1278:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$48097_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 51149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1278:24:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$48097",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "1267:35:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$48097",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 51151,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:35:55"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 51143,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51138,
                    "src": "1245:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$57335",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 51144,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51142,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1228:16:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57100,
                  "src": "1228:16:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1228:28:55"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51138,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "1192:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51153,
                  "src": "1181:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$57335",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 51137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51136,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "1181:10:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57335,
                      "src": "1181:10:55"
                    },
                    "referencedDeclaration": 57335,
                    "src": "1181:10:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$57335",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51140,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "1212:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51153,
                  "src": "1204:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:47:55"
            },
            "returnParameters": {
              "id": 51145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1257:0:55"
            },
            "scope": 51445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51224,
            "nodeType": "FunctionDefinition",
            "src": "1315:634:55",
            "nodes": [],
            "body": {
              "id": 51223,
              "nodeType": "Block",
              "src": "1500:449:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51167,
                      "mutability": "mutable",
                      "name": "marginAmountUpdate",
                      "nameLocation": "1517:18:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 51223,
                      "src": "1510:25:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 51166,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1510:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51176,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51170,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51156,
                          "src": "1549:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$57196_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 51171,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1561:9:55",
                        "memberName": "extraData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57195,
                        "src": "1549:21:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 51173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1573:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 51172,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1573:6:55",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 51174,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1572:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      ],
                      "expression": {
                        "id": 51168,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1538:3:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 51169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1542:6:55",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1538:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 51175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:43:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1510:71:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 51179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51177,
                      "name": "marginAmountUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51167,
                      "src": "1596:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1617:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1596:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 51200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51198,
                        "name": "marginAmountUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "1805:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 51199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1826:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1805:22:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 51221,
                    "nodeType": "IfStatement",
                    "src": "1801:142:55",
                    "trueBody": {
                      "id": 51220,
                      "nodeType": "Block",
                      "src": "1829:114:55",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 51208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1882:4:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 51211,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1896:4:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                      "typeString": "contract GammaTradeMarket"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                      "typeString": "contract GammaTradeMarket"
                                    }
                                  ],
                                  "id": 51210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1888:7:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 51209,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1888:7:55",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 51212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1888:13:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 51216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "1911:19:55",
                                    "subExpression": {
                                      "id": 51215,
                                      "name": "marginAmountUpdate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51167,
                                      "src": "1912:18:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 51214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1903:7:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 51213,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1903:7:55",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 51217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1903:28:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 51204,
                                        "name": "_predyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 57012,
                                        "src": "1864:10:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPredyPool_$57335",
                                          "typeString": "contract IPredyPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IPredyPool_$57335",
                                          "typeString": "contract IPredyPool"
                                        }
                                      ],
                                      "id": 51203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1856:7:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 51202,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1856:7:55",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 51205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1856:19:55",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 51201,
                                  "name": "ILendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57137,
                                  "src": "1843:12:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILendingPool_$57137_$",
                                    "typeString": "type(contract ILendingPool)"
                                  }
                                },
                                "id": 51206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1843:33:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingPool_$57137",
                                  "typeString": "contract ILendingPool"
                                }
                              },
                              "id": 51207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1877:4:55",
                              "memberName": "take",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57136,
                              "src": "1843:38:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (bool,address,uint256) external"
                              }
                            },
                            "id": 51218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1843:89:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 51219,
                          "nodeType": "ExpressionStatement",
                          "src": "1843:89:55"
                        }
                      ]
                    }
                  },
                  "id": 51222,
                  "nodeType": "IfStatement",
                  "src": "1592:351:55",
                  "trueBody": {
                    "id": 51197,
                    "nodeType": "Block",
                    "src": "1620:175:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 51184,
                                    "name": "tradeParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51156,
                                    "src": "1701:11:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParams_$57196_memory_ptr",
                                      "typeString": "struct IPredyPool.TradeParams memory"
                                    }
                                  },
                                  "id": 51185,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1713:6:55",
                                  "memberName": "pairId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 57187,
                                  "src": "1701:18:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 51183,
                                "name": "_getQuoteTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57099,
                                "src": "1679:21:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 51186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1679:41:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51189,
                                  "name": "_predyPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57012,
                                  "src": "1730:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPredyPool_$57335",
                                    "typeString": "contract IPredyPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPredyPool_$57335",
                                    "typeString": "contract IPredyPool"
                                  }
                                ],
                                "id": 51188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1722:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 51187,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1722:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1722:19:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51193,
                                  "name": "marginAmountUpdate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51167,
                                  "src": "1751:18:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 51192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1743:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 51191,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1743:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1743:27:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 51180,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51089,
                              "src": "1634:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$51089_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 51182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1649:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51016,
                            "src": "1634:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 51195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1634:150:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51196,
                        "nodeType": "ExpressionStatement",
                        "src": "1634:150:55"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              57053
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51163,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "1482:13:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57044,
                  "src": "1482:13:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "1482:13:55"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "1324:23:55",
            "overrides": {
              "id": 51162,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51161,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1456:16:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57100,
                  "src": "1456:16:55"
                }
              ],
              "src": "1447:26:55"
            },
            "parameters": {
              "id": 51160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51156,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "1378:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51224,
                  "src": "1348:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$57196_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 51155,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51154,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "1348:10:55",
                        "1359:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57196,
                      "src": "1348:22:55"
                    },
                    "referencedDeclaration": 57196,
                    "src": "1348:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$57196_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51159,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51224,
                  "src": "1391:29:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 51158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51157,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "1391:10:55",
                        "1402:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57212,
                      "src": "1391:22:55"
                    },
                    "referencedDeclaration": 57212,
                    "src": "1391:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$57212_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:74:55"
            },
            "returnParameters": {
              "id": 51165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1500:0:55"
            },
            "scope": 51445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51384,
            "nodeType": "FunctionDefinition",
            "src": "2194:1758:55",
            "nodes": [],
            "body": {
              "id": 51383,
              "nodeType": "Block",
              "src": "2373:1579:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51239,
                      "mutability": "mutable",
                      "name": "gammaOrder",
                      "nameLocation": "2401:10:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 51383,
                      "src": "2383:28:55",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                        "typeString": "struct GammaOrder"
                      },
                      "typeName": {
                        "id": 51238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51237,
                          "name": "GammaOrder",
                          "nameLocations": [
                            "2383:10:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67238,
                          "src": "2383:10:55"
                        },
                        "referencedDeclaration": 67238,
                        "src": "2383:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_storage_ptr",
                          "typeString": "struct GammaOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51247,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51242,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51228,
                          "src": "2425:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$57111_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 51243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2431:5:55",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57108,
                        "src": "2425:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 51244,
                            "name": "GammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67238,
                            "src": "2439:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GammaOrder_$67238_storage_ptr_$",
                              "typeString": "type(struct GammaOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 51245,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2438:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$67238_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$67238_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 51240,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2414:3:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 51241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2418:6:55",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2414:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 51246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2414:37:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                      "typeString": "struct GammaOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2383:68:55"
                },
                {
                  "assignments": [
                    51250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51250,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "2482:13:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 51383,
                      "src": "2461:34:55",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 51249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51248,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "2461:13:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 68030,
                          "src": "2461:13:55"
                        },
                        "referencedDeclaration": 68030,
                        "src": "2461:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$68030_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51257,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 51253,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51239,
                        "src": "2520:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 51254,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51228,
                          "src": "2532:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$57111_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 51255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2538:3:55",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57110,
                        "src": "2532:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 51251,
                        "name": "GammaOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67362,
                        "src": "2498:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$67362_$",
                          "typeString": "type(library GammaOrderLib)"
                        }
                      },
                      "id": 51252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2512:7:55",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67361,
                      "src": "2498:21:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_GammaOrder_$67238_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$68030_memory_ptr_$",
                        "typeString": "function (struct GammaOrder memory,bytes memory) pure returns (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 51256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2498:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2461:81:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 51259,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57016,
                            "src": "2561:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 51262,
                          "indexExpression": {
                            "expression": {
                              "id": 51260,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51239,
                              "src": "2576:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 51261,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2587:6:55",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67225,
                            "src": "2576:17:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2561:33:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2606:1:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2598:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 51263,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2598:7:55",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2598:10:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2561:47:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2553:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 51268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:56:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51269,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:56:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 51271,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51239,
                            "src": "2717:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 51272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2728:17:55",
                          "memberName": "entryTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67227,
                          "src": "2717:28:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 51273,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57016,
                            "src": "2749:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 51276,
                          "indexExpression": {
                            "expression": {
                              "id": 51274,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51239,
                              "src": "2764:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 51275,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2775:6:55",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67225,
                            "src": "2764:17:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2749:33:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2717:65:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2709:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 51278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2709:74:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51279,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:74:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51281,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51250,
                        "src": "2807:13:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 51280,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51444,
                      "src": "2794:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$68030_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 51282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:27:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51283,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:27:55"
                },
                {
                  "expression": {
                    "id": 51305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51284,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51235,
                      "src": "2832:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 51289,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "2916:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51290,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2927:6:55",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67225,
                              "src": "2916:17:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 51291,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "2951:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51292,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2962:10:55",
                              "memberName": "positionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67223,
                              "src": "2951:21:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 51293,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "2990:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51294,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3001:11:55",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67229,
                              "src": "2990:22:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 51295,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "3030:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51296,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3041:15:55",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67231,
                              "src": "3030:26:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 51299,
                                    "name": "gammaOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51239,
                                    "src": "3085:10:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                      "typeString": "struct GammaOrder memory"
                                    }
                                  },
                                  "id": 51300,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3096:12:55",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67233,
                                  "src": "3085:23:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 51297,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3074:3:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 51298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3078:6:55",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3074:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 51301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3074:35:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 51287,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57335,
                              "src": "2876:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$57335_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 51288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2887:11:55",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57196,
                            "src": "2876:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$57196_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 51302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2876:247:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$57196_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 51303,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51231,
                          "src": "3137:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$57196_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 51285,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57012,
                          "src": "2846:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$57335",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 51286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2857:5:55",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57244,
                        "src": "2846:16:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$57196_memory_ptr_$_t_struct$_SettlementData_$57342_memory_ptr_$returns$_t_struct$_TradeResult_$57212_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 51304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2846:315:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "2832:329:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 51306,
                  "nodeType": "ExpressionStatement",
                  "src": "2832:329:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51307,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51239,
                        "src": "3176:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 51308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3187:10:55",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67223,
                      "src": "3176:21:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3201:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3176:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 51346,
                    "nodeType": "Block",
                    "src": "3380:167:55",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 51338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 51331,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "3398:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51332,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3409:4:55",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67221,
                              "src": "3398:15:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$67624_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 51333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3414:6:55",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67617,
                            "src": "3398:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 51334,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51135,
                              "src": "3424:13:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 51337,
                            "indexExpression": {
                              "expression": {
                                "id": 51335,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51235,
                                "src": "3438:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 51336,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3450:7:55",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57201,
                              "src": "3438:19:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3424:34:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3398:60:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51345,
                        "nodeType": "IfStatement",
                        "src": "3394:143:55",
                        "trueBody": {
                          "id": 51344,
                          "nodeType": "Block",
                          "src": "3460:77:55",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 51339,
                                    "name": "IFillerMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57112,
                                    "src": "3485:13:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFillerMarket_$57112_$",
                                      "typeString": "type(contract IFillerMarket)"
                                    }
                                  },
                                  "id": 51341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3499:21:55",
                                  "memberName": "SignerIsNotVaultOwner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 57104,
                                  "src": "3485:35:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 51342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3485:37:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 51343,
                              "nodeType": "RevertStatement",
                              "src": "3478:44:55"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 51347,
                  "nodeType": "IfStatement",
                  "src": "3172:375:55",
                  "trueBody": {
                    "id": 51330,
                    "nodeType": "Block",
                    "src": "3204:170:55",
                    "statements": [
                      {
                        "expression": {
                          "id": 51318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 51311,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51135,
                              "src": "3218:13:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 51314,
                            "indexExpression": {
                              "expression": {
                                "id": 51312,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51235,
                                "src": "3232:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 51313,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3244:7:55",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57201,
                              "src": "3232:19:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3218:34:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 51315,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51239,
                                "src": "3255:10:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 51316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3266:4:55",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67221,
                              "src": "3255:15:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$67624_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 51317,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3271:6:55",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67617,
                            "src": "3255:22:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3218:59:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 51319,
                        "nodeType": "ExpressionStatement",
                        "src": "3218:59:55"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 51323,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51235,
                                "src": "3319:11:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 51324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3331:7:55",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57201,
                              "src": "3319:19:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 51325,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51239,
                                  "src": "3340:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 51326,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3351:4:55",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 67221,
                                "src": "3340:15:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$67624_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 51327,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3356:6:55",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67617,
                              "src": "3340:22:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 51320,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57012,
                              "src": "3292:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$57335",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 51322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3303:15:55",
                            "memberName": "updateRecepient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57264,
                            "src": "3292:26:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 51328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3292:71:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51329,
                        "nodeType": "ExpressionStatement",
                        "src": "3292:71:55"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51353,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51239,
                        "src": "3673:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "id": 51354,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51235,
                        "src": "3685:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 51349,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51239,
                              "src": "3635:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 51350,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3646:16:55",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67235,
                            "src": "3635:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 51348,
                          "name": "IOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57155,
                          "src": "3619:15:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOrderValidator_$57155_$",
                            "typeString": "type(contract IOrderValidator)"
                          }
                        },
                        "id": 51351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3619:44:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOrderValidator_$57155",
                          "typeString": "contract IOrderValidator"
                        }
                      },
                      "id": 51352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3664:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57154,
                      "src": "3619:53:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_GammaOrder_$67238_memory_ptr_$_t_struct$_TradeResult_$57212_memory_ptr_$returns$__$",
                        "typeString": "function (struct GammaOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 51355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:78:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51356,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:78:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 51360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51357,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51239,
                        "src": "3712:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 51358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3723:12:55",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67233,
                      "src": "3712:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3738:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3712:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51380,
                  "nodeType": "IfStatement",
                  "src": "3708:209:55",
                  "trueBody": {
                    "id": 51379,
                    "nodeType": "Block",
                    "src": "3741:176:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 51364,
                                "name": "_quoteTokenMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57016,
                                "src": "3800:14:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 51367,
                              "indexExpression": {
                                "expression": {
                                  "id": 51365,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51239,
                                  "src": "3815:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 51366,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3826:6:55",
                                "memberName": "pairId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 67225,
                                "src": "3815:17:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3800:33:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 51368,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51239,
                                  "src": "3835:10:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 51369,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3846:4:55",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 67221,
                                "src": "3835:15:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$67624_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 51370,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3851:6:55",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67617,
                              "src": "3835:22:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 51375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "3867:24:55",
                                  "subExpression": {
                                    "expression": {
                                      "id": 51373,
                                      "name": "gammaOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51239,
                                      "src": "3868:10:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_GammaOrder_$67238_memory_ptr",
                                        "typeString": "struct GammaOrder memory"
                                      }
                                    },
                                    "id": 51374,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3879:12:55",
                                    "memberName": "marginAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 67233,
                                    "src": "3868:23:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 51372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3859:7:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 51371,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3859:7:55",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3859:33:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 51361,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51089,
                              "src": "3755:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$51089_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 51363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3770:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51016,
                            "src": "3755:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 51377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3755:151:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51378,
                        "nodeType": "ExpressionStatement",
                        "src": "3755:151:55"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 51381,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51235,
                    "src": "3934:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 51236,
                  "id": 51382,
                  "nodeType": "Return",
                  "src": "3927:18:55"
                }
              ]
            },
            "documentation": {
              "id": 51225,
              "nodeType": "StructuredDocumentation",
              "src": "1955:234:55",
              "text": " @notice Verifies signature of the order and executes trade\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @dev Fillers call this function"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "2203:12:55",
            "parameters": {
              "id": 51232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51228,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2235:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51384,
                  "src": "2216:24:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$57111_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 51227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51226,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "2216:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57111,
                      "src": "2216:11:55"
                    },
                    "referencedDeclaration": 57111,
                    "src": "2216:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$57111_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51231,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "2276:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51384,
                  "src": "2242:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 51230,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51229,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "2242:11:55",
                        "2254:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57342,
                      "src": "2242:26:55"
                    },
                    "referencedDeclaration": 57342,
                    "src": "2242:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$57342_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2215:76:55"
            },
            "returnParameters": {
              "id": 51236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51235,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "2356:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51384,
                  "src": "2326:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 51234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51233,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "2326:10:55",
                        "2337:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57212,
                      "src": "2326:22:55"
                    },
                    "referencedDeclaration": 57212,
                    "src": "2326:22:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$57212_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:43:55"
            },
            "scope": 51445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51408,
            "nodeType": "FunctionDefinition",
            "src": "4149:205:55",
            "nodes": [],
            "body": {
              "id": 51407,
              "nodeType": "Block",
              "src": "4233:121:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51395,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51387,
                        "src": "4274:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 51396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4283:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51401,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4324:4:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 51400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4316:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51399,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4316:7:55",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4316:13:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 51403,
                            "name": "settlementData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51389,
                            "src": "4331:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 51397,
                            "name": "ISettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57350,
                            "src": "4289:11:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISettlement_$57350_$",
                              "typeString": "type(contract ISettlement)"
                            }
                          },
                          "id": 51398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4301:14:55",
                          "memberName": "SettlementData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57342,
                          "src": "4289:26:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SettlementData_$57342_storage_ptr_$",
                            "typeString": "type(struct ISettlement.SettlementData storage pointer)"
                          }
                        },
                        "id": 51404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:57:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 51392,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57012,
                        "src": "4243:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$57335",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 51394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4254:19:55",
                      "memberName": "execLiquidationCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57257,
                      "src": "4243:30:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_SettlementData_$57342_memory_ptr_$returns$_t_struct$_TradeResult_$57212_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 51405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:104:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$57212_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 51406,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:104:55"
                }
              ]
            },
            "documentation": {
              "id": 51385,
              "nodeType": "StructuredDocumentation",
              "src": "3958:186:55",
              "text": " @notice Executes liquidation call for the position\n @param vaultId The id of the vault\n @param settlementData The route of settlement created by liquidator"
            },
            "functionSelector": "74304a79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "4158:19:55",
            "parameters": {
              "id": 51390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51387,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4186:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51408,
                  "src": "4178:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4178:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51389,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "4208:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51408,
                  "src": "4195:27:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 51388,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4195:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4177:46:55"
            },
            "returnParameters": {
              "id": 51391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4233:0:55"
            },
            "scope": 51445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51444,
            "nodeType": "FunctionDefinition",
            "src": "4360:351:55",
            "nodes": [],
            "body": {
              "id": 51443,
              "nodeType": "Block",
              "src": "4419:292:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51414,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51411,
                        "src": "4429:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 51416,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4435:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68071,
                      "src": "4429:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$68030_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$68030_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 51417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4429:16:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51418,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:16:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 51422,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51411,
                            "src": "4504:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 51423,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4510:8:55",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67694,
                          "src": "4504:14:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$68030_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$48134_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$68030_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 51424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4504:16:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$48134_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 51429,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4564:4:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$51445",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 51428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4556:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51427,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4556:7:55",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4556:13:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 51425,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51411,
                            "src": "4534:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 51426,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4540:15:55",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67714,
                          "src": "4534:21:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$68030_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$48139_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$68030_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 51431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4534:36:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$48139_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 51432,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51411,
                            "src": "4584:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 51433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4590:4:55",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68021,
                          "src": "4584:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$67624_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 51434,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4595:6:55",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67617,
                        "src": "4584:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 51435,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51411,
                          "src": "4615:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 51436,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4621:4:55",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68027,
                        "src": "4615:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 51437,
                          "name": "GammaOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67362,
                          "src": "4639:13:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$67362_$",
                            "typeString": "type(library GammaOrderLib)"
                          }
                        },
                        "id": 51438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4653:18:55",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67286,
                        "src": "4639:32:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 51439,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51411,
                          "src": "4685:5:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 51440,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4691:3:55",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68029,
                        "src": "4685:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$48134_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$48139_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 51419,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51131,
                        "src": "4456:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$48097",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 51421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4465:25:55",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48190,
                      "src": "4456:34:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$48134_memory_ptr_$_t_struct$_SignatureTransferDetails_$48139_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 51441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4456:248:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51442,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:248:55"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "4369:12:55",
            "parameters": {
              "id": 51412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51411,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4403:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 51444,
                  "src": "4382:26:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$68030_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 51410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51409,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "4382:13:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68030,
                      "src": "4382:13:55"
                    },
                    "referencedDeclaration": 68030,
                    "src": "4382:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$68030_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4381:28:55"
            },
            "returnParameters": {
              "id": 51413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4419:0:55"
            },
            "scope": 51445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51110,
              "name": "IFillerMarket",
              "nameLocations": [
                "889:13:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57112,
              "src": "889:13:55"
            },
            "id": 51111,
            "nodeType": "InheritanceSpecifier",
            "src": "889:13:55"
          },
          {
            "baseName": {
              "id": 51112,
              "name": "BaseHookCallback",
              "nameLocations": [
                "904:16:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57100,
              "src": "904:16:55"
            },
            "id": 51113,
            "nodeType": "InheritanceSpecifier",
            "src": "904:16:55"
          }
        ],
        "canonicalName": "GammaTradeMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 51109,
          "nodeType": "StructuredDocumentation",
          "src": "813:46:55",
          "text": " @notice Gamma trade market contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51445,
          57100,
          57125,
          57112
        ],
        "name": "GammaTradeMarket",
        "nameLocation": "869:16:55",
        "scope": 51446,
        "usedErrors": [
          57018,
          57104,
          57106,
          68033,
          68036
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 55
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotFiller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfAcceptablePriceRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SlippageTooLarge",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "Traded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "close",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "filler",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "pairId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "entryTokenAddress",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "address",
              "name": "canceler",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "takeProfitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stopLossPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "slippageTolerance",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "validatorAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "validationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct GammaOrder",
          "name": "gammaOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        },
        {
          "internalType": "contract PredyPoolQuoter",
          "name": "quoter",
          "type": "address"
        }
      ],
      "name": "quoteExecuteOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "updateQuoteTokenMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "canceler",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "takeProfitPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stopLossPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "slippageTolerance",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1028:7445:91:-:0;;;1574:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:10:54;:22;;-1:-1:-1;;;;;381:22:54;;;-1:-1:-1;;;;;;381:22:54;;;;;;;1672:8:91::1;:35:::0;;;;;::::1;::::0;::::1;;::::0;;1028:7445;;14:143:117;-1:-1:-1;;;;;101:31:117;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:117;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;1028:7445:91;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1028:7445:91:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7319:568;;;;;;:::i;:::-;;:::i;:::-;;1454:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1454:61:91;;;;;;;;;;-1:-1:-1;;;;;1454:61:91;;;;;;;-1:-1:-1;;;;;7456:15:117;;;7438:34;;7508:15;;;;7503:2;7488:18;;7481:43;7540:18;;;7533:34;;;;7598:2;7583:18;;7576:34;-1:-1:-1;;;;;7647:31:117;7641:3;7626:19;;7619:60;7387:3;7372:19;1454:61:91;;;;;;;;5844:1057;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5275:302::-;;;;;;:::i;:::-;;:::i;1720:1341::-;;;;;;:::i;:::-;;:::i;3306:1963::-;;;;;;:::i;:::-;;:::i;707:191:54:-;;;;;;:::i;:::-;;:::i;7319:568:91:-;7644:157;;;;;;;;;7684:17;;;;-1:-1:-1;;;;;7644:157:91;;;;7703:21;;;;7644:157;;;;7726:22;;;;;7644:157;;;;7750:26;;;;7644:157;;;;7778:9;;;;;;;7569:41;7778:9;;;7644:157;;;;7613:226;;-1:-1:-1;;;7613:226:91;;-1:-1:-1;;;;;7613:17:91;;;;;:226;;7644:157;7815:14;;7613:226;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7569:270;;7850:30;7868:11;7850:17;:30::i;:::-;7489:398;7319:568;;;:::o;5844:1057::-;5963:41;;:::i;:::-;6020:33;6056:25;;;:13;:25;;;;;;6122:10;;:31;;-1:-1:-1;;;6122:31:91;;;;;14982:25:117;;;6056::91;;6020:33;-1:-1:-1;;;;;6122:10:91;;:19;;14955:18:117;;6122:31:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6164:17;6184:10;;6213:18;;;;:25;6184:55;;-1:-1:-1;;;6184:55:91;;;;;14982:25:117;;;;6213:18:91;;-1:-1:-1;6164:17:91;;-1:-1:-1;;;;;6184:10:91;;;;:28;;14955:18:117;;6184:55:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6286:18;;;;;:23;;;;;:30;6250:129;;;;;;;;;;-1:-1:-1;;;;;6250:129:91;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6250:129:91;;;;;;;-1:-1:-1;;;;;6250:129:91;;;;;;;;6164:75;;-1:-1:-1;6250:129:91;;6319:1;-1:-1:-1;6286:34:91;6164:75;6250:22;:129::i;:::-;6404:10;;6434:229;;;;;;;;;6474:18;;;;:25;6434:229;;;;;;;;6546:18;:23;;;:30;-1:-1:-1;;;;;6404:10:91;;;;:16;;6434:229;;;6545:31;;;:::i;:::-;6434:229;;;;6595:5;:18;;;:27;;;:34;;;6594:35;;;:::i;:::-;6434:229;;;;;;;;;;;;;;;;;;;6677:14;6404:297;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6801:30;;;;6845:18;;;;;:27;;:34;6390:311;;-1:-1:-1;6712:182:91;;6753:9;;6390:311;;-1:-1:-1;;;;;6801:30:91;;;;6845:39;;6712:27;:182::i;:::-;6010:891;;;5844:1057;;;;:::o;5275:302::-;5335:33;5371:25;;;:13;:25;;;;;5415:18;;-1:-1:-1;;;;;5415:18:91;5437:10;5415:32;;:71;;-1:-1:-1;5451:21:91;;;;-1:-1:-1;;;;;5451:21:91;5476:10;5451:35;5415:71;5407:80;;;;;;5529:1;5498:28;;;:32;;;5540:26;;;;:30;-1:-1:-1;5275:302:91:o;1720:1341::-;477:10:54;;-1:-1:-1;;;;;477:10:54;455;:33;451:68;;497:22;;-1:-1:-1;;;497:22:54;;;;;;;;;;;451:68;1925:11:91::1;:21;;;1950:1;1925:26:::0;1921:1134:::1;;1967:27;1997:10:::0;;2017:19:::1;::::0;::::1;::::0;1997:40:::1;::::0;-1:-1:-1;;;1997:40:91;;-1:-1:-1;;;;;1997:10:91;;::::1;::::0;:19:::1;::::0;:40:::1;::::0;::::1;;14982:25:117::0;;;14970:2;14955:18;;14836:177;1997:40:91::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2073:10;::::0;2120:12:::1;::::0;::::1;::::0;2052:82:::1;::::0;-1:-1:-1;;;2052:82:91;;2073:10;2052:82:::1;::::0;::::1;18605:41:117::0;2105:4:91::1;18662:18:117::0;;;18655:60;18731:18;;;18724:34;;;;2120:12:91;;-1:-1:-1;;;;;;2073:10:91::1;::::0;2052:38:::1;::::0;18578:18:117;;2052:82:91::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2149:165;2194:41;2216:11;:18;;;2194:21;:41::i;:::-;2251:19;::::0;;::::1;::::0;2237:34:::1;::::0;;;:13:::1;:34:::0;;;;;;:40;2287:12:::1;::::0;::::1;::::0;-1:-1:-1;;;;;2237:40:91;;::::1;::::0;2149:27:::1;:165::i;:::-;1953:372;1720:1341:::0;;:::o;1921:1134::-:1;2345:25;2384:11;:21;;;2373:43;;;;;;;;;;;;:::i;:::-;2345:71;;2456:1;2435:18;:22;2431:614;;;2477:158;2526:41;2548:11;:18;;;2526:21;:41::i;:::-;2577:10;::::0;-1:-1:-1;;;;;2577:10:91::1;2598:18:::0;2477:27:::1;:158::i;2431:614::-;2681:1;2660:18;:22;2656:389;;;2723:10;::::0;-1:-1:-1;;;;;2723:10:91::1;2702:38;2723:10:::0;2755:4:::1;2770:19;2771:18:::0;2770:19:::1;:::i;:::-;2702:89;::::0;-1:-1:-1;;;;;;2702:89:91::1;::::0;;;;;;18630:14:117;;18623:22;2702:89:91::1;::::0;::::1;18605:41:117::0;-1:-1:-1;;;;;18682:32:117;;;18662:18;;;18655:60;18731:18;;;18724:34;18578:18;;2702:89:91::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2810:220;2859:41;2881:11;:18;;;2859:21;:41::i;:::-;2936:19;::::0;;::::1;::::0;2922:34:::1;::::0;;;:13:::1;:34:::0;;;;;;:40;-1:-1:-1;;;;;2922:40:91::1;2992:19;2993:18:::0;2992:19:::1;:::i;:::-;2810:27;:220::i;3306:1963::-:0;3438:41;;:::i;:::-;3495:28;3537:5;:11;;;3526:37;;;;;;;;;;;;:::i;:::-;3495:68;;3573:34;3610:44;3632:10;3644:5;:9;;;3610:21;:44::i;:::-;3688:17;;;;;-1:-1:-1;;;;;3673:33:91;3718:1;3673:33;;;:14;:33;;;;3573:81;;-1:-1:-1;;;;;;3673:33:91;3665:56;;;;;;3876:17;;;;;-1:-1:-1;;;;;3861:33:91;;;;;:14;:33;;;;3829:28;;;;-1:-1:-1;;;;;3829:65:91;;;3861:33;;3829:65;3821:74;;;;;;3906:27;3919:13;3906:12;:27::i;:::-;3958:10;;3988:247;;;;;;;;;4028:17;;;;-1:-1:-1;;;;;3988:247:91;;;;4063:21;;;;3988:247;;;;4102:22;;;;;3988:247;;;;4142:26;;;;3988:247;;;;4197:23;;;;4186:35;;;;;14982:25:117;;;;4186:35:91;;;;;;;;;;14955:18:117;;4186:35:91;;3988:247;;;;3958:315;;-1:-1:-1;;;3958:315:91;;-1:-1:-1;;;;;3958:10:91;;;;:16;;:315;;4249:14;;3958:315;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3944:329;;4288:10;:21;;;4313:1;4288:26;4284:732;;4380:19;;;;;;4330:33;4366:34;;;:13;:34;;;;;;;4436:15;;:22;;;;4415:43;;-1:-1:-1;;;;;4415:43:91;;;-1:-1:-1;;;;;;4415:43:91;;;;;;4496:19;;;;4415:43;4472:21;;:43;;;;;;;;;;;;;4415;4560:26;;;4529:28;;;:57;4629:24;;;;4600:26;;;:53;;;;4700:28;;;;4667:30;;;;:61;;-1:-1:-1;;;;;4667:61:91;;;-1:-1:-1;;4667:61:91;;;;;;;;;;4755:10;;4782:19;;4755:71;;-1:-1:-1;;;4755:71:91;;:10;;;;;:26;;:71;;4436:22;4755:71;21966:25:117;;;-1:-1:-1;;;;;22027:32:117;22022:2;22007:18;;22000:60;21954:2;21939:18;;21792:274;4755:71:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4316:521;4284:732;;;4901:19;;;;;4887:34;;;;:13;:34;;;;;:40;4861:15;;:22;;;;-1:-1:-1;;;;;4861:66:91;;;4887:40;;4861:66;4857:149;;4954:37;;-1:-1:-1;;;4954:37:91;;;;;;;;;;;4857:149;5104:10;:27;;;-1:-1:-1;;;;;5088:53:91;;5142:10;5154:11;5088:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5189:15:91;;:22;;;;;5213:19;;;;5182:51;;;-1:-1:-1;;;;;24241:32:117;;;24223:51;;24290:18;;;24283:34;5182:51:91;;-1:-1:-1;24196:18:117;;-1:-1:-1;5182:51:91;;;;;;;5244:18;;3306:1963;;;;;:::o;707:191:54:-;809:1;775:22;;;:14;:22;;;;;;-1:-1:-1;;;;;775:22:54;771:121;;852:29;874:6;852:21;:29::i;:::-;827:22;;;;:14;:22;;;;;:54;;-1:-1:-1;;;;;;827:54:54;-1:-1:-1;;;;;827:54:54;;;;;;;;;;771:121;707:191;:::o;7893:221:91:-;7987:17;8018:11;8007:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;7987:43;;8092:4;8086:11;8079:4;8075:2;8071:13;8064:34;6907:406;7037:6;7034:273;;;7085:12;:26;;;7067:14;:44;;:94;;;;7147:14;7115:12;:28;;;:46;;7067:94;7059:103;;;;;7034:273;7219:12;:28;;;7201:14;:46;;:94;;;;7281:14;7251:12;:26;;;:44;;7193:103;;;;;5537:2533:79;5723:12;582:2:65;5739:19:79;5750:8;;5739:19;:::i;:::-;5738:45;;5723:60;;5825:1;5798:11;:24;;;:28;5794:424;;;5908:24;;;;5880:17;5867:10;:4;5874:3;5867:10;:::i;:::-;:30;;;;:::i;:::-;:66;5863:130;;;5960:18;;-1:-1:-1;;;5960:18:79;;;;;;;;;;;5863:130;5794:424;;;6040:1;6013:11;:24;;;:28;6009:209;;;6123:11;:24;;;6122:25;;;:::i;:::-;6108:3;6081:24;6088:17;6081:4;:24;:::i;:::-;:30;;;;:::i;:::-;:67;6077:131;;;6175:18;;-1:-1:-1;;;6175:18:79;;;;;;;;;;;6077:131;6245:9;:243;;;;-1:-1:-1;1097:9:79;6320:14;:8;6331:3;6320:14;:::i;:::-;:49;;;;:::i;:::-;6296:11;:21;;;:73;:174;;;-1:-1:-1;6449:21:79;;;;6443:3;6397:43;1097:9;6397:8;:43;:::i;:::-;:49;;;;:::i;:::-;:73;6296:174;6228:330;;;6520:27;;-1:-1:-1;;;6520:27:79;;;;;;;;;;;6228:330;5713:2357;5537:2533;;;;:::o;904:208:54:-;974:7;1029:10;;:32;;-1:-1:-1;;;1029:32:54;;;;;14982:25:117;;;974:7:54;;-1:-1:-1;;;;;1029:10:54;;:24;;14955:18:117;;1029:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1079:20;;;:26;;904:208;-1:-1:-1;;;904:208:54:o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;24241:32:117;;;1381:59:51;;;24223:51:117;24290:18;;;;24283:34;;;1381:59:51;;;;;;;;;;24196:18:117;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;31007:2:117;1451:72:51;;;30989:21:117;31046:1;31026:18;;;31019:29;-1:-1:-1;;;31064:18:117;;;31057:32;31106:18;;1451:72:51;;;;;;;2679:319:90;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2799:14:90;2842:1;2816:10;:23;;;:27;:66;;2881:1;2816:66;;;2854:10;:23;;;2816:66;2799:83;;2900:91;;;;;;;;2914:10;:15;;;2900:91;;;;2931:10;:28;;;-1:-1:-1;;;;;2900:91:90;;;;;2961:6;2900:91;;;;2969:16;2974:10;2969:4;:16::i;:::-;2900:91;;;;;;;2893:98;-1:-1:-1;;2679:319:90;;;;:::o;8120:351:91:-;8189:16;:5;:14;:16::i;:::-;8216:8;;-1:-1:-1;;;;;8216:8:91;:34;8264:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:88;;569:79;;;;;613:11;;;;-1:-1:-1;;;;;569:79:88;506:233;;;569:79;;;634:12;;;;569:79;;;;506:233;;669:10;;:16;;506:233;;;;;;;709:10;;:19;;506:233;;;;;346:400;8264:16:91;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:88;;;;;;;8324:4:91;998:84:88;;1068:12;;;;998:84;;;;8344:5:91;:10;;;:17;;;8375:5;:10;;;870:470:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;870:470:90;;;;;;1517:28;;;;;;;;;;870:470;;;1517:28;870:470;1517:28;;;1480:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1480:66:90;;;;;;1857:22;;;;;;;;;;1480:66;;;1857:22;1480:66;1857:22;;;1805:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1805:75:90;;;;;;;;;;8445:9:91;;;;-1:-1:-1;;;;;;8216:248:91;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2003:670:90;2065:7;870:470;;;;;;;:::i;:::-;;;;;;;;;;;;;1604:29;;;;;;2183:17;:5;:10;;;:15;:17::i;:::-;2218:5;:16;;;2252:5;:12;;;2282:5;:23;;;2323:5;:17;;;2358:5;:21;;;2397:5;:18;;;2433:5;:14;;;2465:5;:21;;;2504:5;:19;;;2541:5;:23;;;2582:5;:22;;;2622:5;:20;;;2114:542;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2091:575;;;;;;2084:582;;2003:670;;;:::o;549:297:89:-;656:18;;:25;-1:-1:-1;;;;;631:51:89;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:89;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:89;;;;;;;;;;;559:189:87;619:7;446:15;;;;;;;;;;;;;;;;;436:26;;;;;;;688:11;;701;;;;714:10;;;;726:13;;;;655:85;;;;;37676:25:117;;;-1:-1:-1;;;;;37775:15:117;;;37770:2;37755:18;;37748:43;37827:15;;;;37822:2;37807:18;;37800:43;37874:2;37859:18;;37852:34;;;;37917:3;37902:19;;37895:35;37663:3;37648:19;;37417:519;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:117:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:117;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;-1:-1:-1;;;;;540:34:117;;576:22;;;537:62;534:88;;;602:18;;:::i;666:255::-;738:2;732:9;780:6;768:19;;-1:-1:-1;;;;;802:34:117;;838:22;;;799:62;796:88;;;864:18;;:::i;926:253::-;998:2;992:9;1040:4;1028:17;;-1:-1:-1;;;;;1060:34:117;;1096:22;;;1057:62;1054:88;;;1122:18;;:::i;1184:253::-;1256:2;1250:9;1298:4;1286:17;;-1:-1:-1;;;;;1318:34:117;;1354:22;;;1315:62;1312:88;;;1380:18;;:::i;1442:255::-;1514:2;1508:9;1556:6;1544:19;;-1:-1:-1;;;;;1578:34:117;;1614:22;;;1575:62;1572:88;;;1640:18;;:::i;1702:255::-;1774:2;1768:9;1816:6;1804:19;;-1:-1:-1;;;;;1838:34:117;;1874:22;;;1835:62;1832:88;;;1900:18;;:::i;1962:255::-;2034:2;2028:9;2076:6;2064:19;;-1:-1:-1;;;;;2098:34:117;;2134:22;;;2095:62;2092:88;;;2160:18;;:::i;2222:275::-;2293:2;2287:9;2358:2;2339:13;;-1:-1:-1;;2335:27:117;2323:40;;-1:-1:-1;;;;;2378:34:117;;2414:22;;;2375:62;2372:88;;;2440:18;;:::i;:::-;2476:2;2469:22;2222:275;;-1:-1:-1;2222:275:117:o;2502:131::-;-1:-1:-1;;;;;2577:31:117;;2567:42;;2557:70;;2623:1;2620;2613:12;2638:134;2706:20;;2735:31;2706:20;2735:31;:::i;:::-;2638:134;;;:::o;2777:700::-;2833:5;2881:4;2869:9;2864:3;2860:19;2856:30;2853:50;;;2899:1;2896;2889:12;2853:50;2921:22;;:::i;:::-;2912:31;;2980:9;2967:23;2999:33;3024:7;2999:33;:::i;:::-;3041:22;;3115:2;3100:18;;3087:32;3128:33;3087:32;3128:33;:::i;:::-;3188:2;3177:14;;3170:31;3253:2;3238:18;;3225:32;3266:33;3225:32;3266:33;:::i;:::-;3331:7;3326:2;3319:5;3315:14;3308:31;;3399:2;3388:9;3384:18;3371:32;3366:2;3359:5;3355:14;3348:56;3465:3;3454:9;3450:19;3437:33;3431:3;3424:5;3420:15;3413:58;2777:700;;;;:::o;3482:129::-;-1:-1:-1;;;;;3560:5:117;3556:30;3549:5;3546:41;3536:69;;3601:1;3598;3591:12;3616:132;3683:20;;3712:30;3683:20;3712:30;:::i;3753:186::-;3801:4;-1:-1:-1;;;;;3826:6:117;3823:30;3820:56;;;3856:18;;:::i;:::-;-1:-1:-1;3922:2:117;3901:15;-1:-1:-1;;3897:29:117;3928:4;3893:40;;3753:186::o;3944:462::-;3986:5;4039:3;4032:4;4024:6;4020:17;4016:27;4006:55;;4057:1;4054;4047:12;4006:55;4093:6;4080:20;4124:48;4140:31;4168:2;4140:31;:::i;:::-;4124:48;:::i;:::-;4197:2;4188:7;4181:19;4243:3;4236:4;4231:2;4223:6;4219:15;4215:26;4212:35;4209:55;;;4260:1;4257;4250:12;4209:55;4325:2;4318:4;4310:6;4306:17;4299:4;4290:7;4286:18;4273:55;4373:1;4348:16;;;4366:4;4344:27;4337:38;;;;4352:7;3944:462;-1:-1:-1;;;3944:462:117:o;4411:489::-;4472:5;4520:4;4508:9;4503:3;4499:19;4495:30;4492:50;;;4538:1;4535;4528:12;4492:50;4560:22;;:::i;:::-;4551:31;;4619:9;4606:23;4638:33;4663:7;4638:33;:::i;:::-;4680:22;;4753:2;4738:18;;4725:32;-1:-1:-1;;;;;4769:30:117;;4766:50;;;4812:1;4809;4802:12;4766:50;4848:45;4889:3;4880:6;4869:9;4865:22;4848:45;:::i;:::-;4843:2;4836:5;4832:14;4825:69;;4411:489;;;;:::o;4905:1832::-;5069:6;5077;5085;5138:2;5126:9;5117:7;5113:23;5109:32;5106:52;;;5154:1;5151;5144:12;5106:52;5194:9;5181:23;-1:-1:-1;;;;;5264:2:117;5256:6;5253:14;5250:34;;;5280:1;5277;5270:12;5250:34;5303:22;;;;5359:6;5341:16;;;5337:29;5334:49;;;5379:1;5376;5369:12;5334:49;5405:22;;:::i;:::-;5450:40;5482:7;5478:2;5450:40;:::i;:::-;5443:5;5436:55;5546:3;5542:2;5538:12;5525:26;5518:4;5511:5;5507:16;5500:52;5586:31;5612:3;5608:2;5604:12;5586:31;:::i;:::-;5579:4;5572:5;5568:16;5561:57;5650:32;5677:3;5673:2;5669:12;5650:32;:::i;:::-;5645:2;5638:5;5634:14;5627:56;5702:3;5760:2;5756;5752:11;5739:25;5732:4;5725:5;5721:16;5714:51;5784:3;5841:2;5837;5833:11;5820:25;5814:3;5807:5;5803:15;5796:50;5865:3;5922:2;5918;5914:11;5901:25;5895:3;5888:5;5884:15;5877:50;5946:3;5982:31;6009:2;6005;6001:11;5982:31;:::i;:::-;5976:3;5969:5;5965:15;5958:56;6033:3;6089:2;6085;6081:11;6068:25;6063:2;6056:5;6052:14;6045:49;6147:6;6143:2;6139:15;6126:29;6121:2;6114:5;6110:14;6103:53;6188:31;6214:3;6210:2;6206:12;6188:31;:::i;:::-;6183:2;6176:5;6172:14;6165:55;6252:32;6279:3;6275:2;6271:12;6252:32;:::i;:::-;6247:2;6240:5;6236:14;6229:56;6331:3;6327:2;6323:12;6310:26;6294:42;;6361:2;6351:8;6348:16;6345:36;;;6377:1;6374;6367:12;6345:36;6413:44;6449:7;6438:8;6434:2;6430:17;6413:44;:::i;:::-;6397:14;;;6390:68;-1:-1:-1;6401:5:117;;-1:-1:-1;;;;6535:4:117;6520:20;;6507:34;;-1:-1:-1;6553:16:117;;;6550:36;;;6582:1;6579;6572:12;6550:36;;6605:67;6664:7;6653:8;6642:9;6638:24;6605:67;:::i;:::-;6595:77;;;6691:40;6725:4;6714:9;6710:20;6691:40;:::i;:::-;6681:50;;4905:1832;;;;;:::o;6742:180::-;6801:6;6854:2;6842:9;6833:7;6829:23;6825:32;6822:52;;;6870:1;6867;6860:12;6822:52;-1:-1:-1;6893:23:117;;6742:180;-1:-1:-1;6742:180:117:o;7690:428::-;7791:6;7799;7852:2;7840:9;7831:7;7827:23;7823:32;7820:52;;;7868:1;7865;7858:12;7820:52;7904:9;7891:23;7881:33;;7965:2;7954:9;7950:18;7937:32;-1:-1:-1;;;;;7984:6:117;7981:30;7978:50;;;8024:1;8021;8014:12;7978:50;8047:65;8104:7;8095:6;8084:9;8080:22;8047:65;:::i;:::-;8037:75;;;7690:428;;;;;:::o;8123:733::-;8204:5;8198:12;8237:2;8231:9;8226:3;8219:22;8287:4;8283:2;8279:13;8273:20;8266:4;8261:3;8257:14;8250:44;8340:4;8336:2;8332:13;8326:20;8319:4;8314:3;8310:14;8303:44;8393:4;8389:2;8385:13;8379:20;8372:4;8367:3;8363:14;8356:44;8446:4;8442:2;8438:13;8432:20;8425:4;8420:3;8416:14;8409:44;8499:4;8495:2;8491:13;8485:20;8478:4;8473:3;8469:14;8462:44;;8555:4;8548:5;8544:16;8538:23;8531:4;8526:3;8522:14;8515:47;8611:4;8604:5;8600:16;8594:23;8587:4;8582:3;8578:14;8571:47;8669:4;8662:5;8658:16;8652:23;8643:6;8638:3;8634:16;8627:49;8727:4;8720:5;8716:16;8710:23;8701:6;8696:3;8692:16;8685:49;8785:4;8778:5;8774:16;8768:23;8759:6;8754:3;8750:16;8743:49;8843:4;8836:5;8832:16;8826:23;8817:6;8812:3;8808:16;8801:49;8123:733;;:::o;8861:261::-;9055:3;9040:19;;9068:48;9044:9;9098:6;9068:48;:::i;9127:1106::-;9185:5;9224:9;9219:3;9215:19;9254:6;9250:2;9246:15;9243:35;;;9274:1;9271;9264:12;9243:35;9296:22;;:::i;:::-;9287:31;;9338:4;9334:2;9330:13;9327:33;;;9356:1;9353;9346:12;9327:33;;9384:22;;:::i;:::-;9444:9;9431:23;9422:7;9415:40;9517:2;9506:9;9502:18;9489:32;9484:2;9475:7;9471:16;9464:58;9584:2;9573:9;9569:18;9556:32;9551:2;9542:7;9538:16;9531:58;9651:2;9640:9;9636:18;9623:32;9618:2;9609:7;9605:16;9598:58;9719:3;9708:9;9704:19;9691:33;9685:3;9676:7;9672:17;9665:60;9788:3;9777:9;9773:19;9760:33;9754:3;9745:7;9741:17;9734:60;9817:7;9810:5;9803:22;;9885:4;9874:9;9870:20;9857:34;9852:2;9845:5;9841:14;9834:58;9952:4;9941:9;9937:20;9924:34;9919:2;9912:5;9908:14;9901:58;10019:3;10008:9;10004:19;9991:33;9986:2;9979:5;9975:14;9968:57;10086:3;10075:9;10071:19;10058:33;10052:3;10045:5;10041:15;10034:58;10153:3;10142:9;10138:19;10125:33;10119:3;10112:5;10108:15;10101:58;10221:3;10210:9;10206:19;10193:33;10186:4;10179:5;10175:16;10168:59;9127:1106;;;;:::o;10238:972::-;10366:6;10374;10427:3;10415:9;10406:7;10402:23;10398:33;10395:53;;;10444:1;10441;10434:12;10395:53;10484:9;10471:23;-1:-1:-1;;;;;10554:2:117;10546:6;10543:14;10540:34;;;10570:1;10567;10560:12;10540:34;10593:22;;;;10649:4;10631:16;;;10627:27;10624:47;;;10667:1;10664;10657:12;10624:47;10693:22;;:::i;:::-;10751:2;10738:16;10731:5;10724:31;10808:2;10804;10800:11;10787:25;10782:2;10775:5;10771:14;10764:49;10866:2;10862;10858:11;10845:25;10840:2;10833:5;10829:14;10822:49;10924:2;10920;10916:11;10903:25;10898:2;10891:5;10887:14;10880:49;10975:3;10971:2;10967:12;10954:26;11005:2;10995:8;10992:16;10989:36;;;11021:1;11018;11011:12;10989:36;11058:44;11094:7;11083:8;11079:2;11075:17;11058:44;:::i;:::-;11052:3;11045:5;11041:15;11034:69;;11122:5;11112:15;;;;;11146:58;11196:7;11191:2;11180:9;11176:18;11146:58;:::i;:::-;11136:68;;10238:972;;;;;:::o;11215:1021::-;11346:6;11354;11407:2;11395:9;11386:7;11382:23;11378:32;11375:52;;;11423:1;11420;11413:12;11375:52;11463:9;11450:23;-1:-1:-1;;;;;11533:2:117;11525:6;11522:14;11519:34;;;11549:1;11546;11539:12;11519:34;11572:22;;;;11628:2;11610:16;;;11606:25;11603:45;;;11644:1;11641;11634:12;11603:45;11670:22;;:::i;:::-;11730:2;11717:16;11758:2;11748:8;11745:16;11742:36;;;11774:1;11771;11764:12;11742:36;11801:44;11837:7;11826:8;11822:2;11818:17;11801:44;:::i;:::-;11794:5;11787:59;;11892:2;11888;11884:11;11871:25;11921:2;11911:8;11908:16;11905:36;;;11937:1;11934;11927:12;11905:36;11973:44;12009:7;11998:8;11994:2;11990:17;11973:44;:::i;:::-;11968:2;11961:5;11957:14;11950:68;;12037:5;12027:15;;;12095:2;12084:9;12080:18;12067:32;12051:48;;12124:2;12114:8;12111:16;12108:36;;;12140:1;12137;12130:12;12108:36;;12163:67;12222:7;12211:8;12200:9;12196:24;12163:67;:::i;12241:250::-;12326:1;12336:113;12350:6;12347:1;12344:13;12336:113;;;12426:11;;;12420:18;12407:11;;;12400:39;12372:2;12365:10;12336:113;;;-1:-1:-1;;12483:1:117;12465:16;;12458:27;12241:250::o;12496:270::-;12537:3;12575:5;12569:12;12602:6;12597:3;12590:19;12618:76;12687:6;12680:4;12675:3;12671:14;12664:4;12657:5;12653:16;12618:76;:::i;:::-;12748:2;12727:15;-1:-1:-1;;12723:29:117;12714:39;;;;12755:4;12710:50;;12496:270;-1:-1:-1;;12496:270:117:o;12771:961::-;13054:2;13043:9;13036:21;13099:6;13093:13;13088:2;13077:9;13073:18;13066:41;13161:4;13153:6;13149:17;13143:24;13138:2;13127:9;13123:18;13116:52;13223:2;13215:6;13211:15;13205:22;13199:3;13188:9;13184:19;13177:51;13284:2;13276:6;13272:15;13266:22;13259:4;13248:9;13244:20;13237:52;13017:4;13336:3;13328:6;13324:16;13318:23;13378:4;13372:3;13361:9;13357:19;13350:33;13403:51;13449:3;13438:9;13434:19;13420:12;13403:51;:::i;:::-;13392:62;;13501:9;13496:3;13492:19;13485:4;13474:9;13470:20;13463:49;13569:1;13565;13560:3;13556:11;13552:19;13543:6;13537:13;13533:39;13528:3;13521:52;13622:4;13614:6;13610:17;13604:24;13660:2;13653:4;13648:3;13644:14;13637:26;13680:46;13722:2;13717:3;13713:12;13697:14;13680:46;:::i;:::-;13672:54;12771:961;-1:-1:-1;;;;;;12771:961:117:o;13737:1094::-;13837:6;13881:9;13872:7;13868:23;13911:3;13907:2;13903:12;13900:32;;;13928:1;13925;13918:12;13900:32;13954:22;;:::i;:::-;13996:4;13992:2;13988:13;13985:33;;;14014:1;14011;14004:12;13985:33;14042:22;;:::i;:::-;14027:37;;14095:9;14089:16;14080:7;14073:33;14161:2;14150:9;14146:18;14140:25;14135:2;14126:7;14122:16;14115:51;14221:2;14210:9;14206:18;14200:25;14195:2;14186:7;14182:16;14175:51;14281:2;14270:9;14266:18;14260:25;14255:2;14246:7;14242:16;14235:51;14342:3;14331:9;14327:19;14321:26;14315:3;14306:7;14302:17;14295:53;14404:3;14393:9;14389:19;14383:26;14377:3;14368:7;14364:17;14357:53;14433:7;14426:5;14419:22;14494:4;14483:9;14479:20;14473:27;14468:2;14461:5;14457:14;14450:51;14554:4;14543:9;14539:20;14533:27;14528:2;14521:5;14517:14;14510:51;14614:3;14603:9;14599:19;14593:26;14588:2;14581:5;14577:14;14570:50;14674:3;14663:9;14659:19;14653:26;14647:3;14640:5;14636:15;14629:51;14734:3;14723:9;14719:19;14713:26;14707:3;14700:5;14696:15;14689:51;14795:3;14784:9;14780:19;14774:26;14767:4;14760:5;14756:16;14749:52;14820:5;14810:15;;;;13737:1094;;;;:::o;15018:138::-;15097:13;;15119:31;15097:13;15119:31;:::i;15161:164::-;15238:13;;15291:1;15280:20;;;15270:31;;15260:59;;15315:1;15312;15305:12;15330:136;15408:13;;15430:30;15408:13;15430:30;:::i;15471:286::-;15543:5;15591:4;15579:9;15574:3;15570:19;15566:30;15563:50;;;15609:1;15606;15599:12;15563:50;15631:22;;:::i;:::-;15622:31;;15682:9;15676:16;15669:5;15662:31;15746:2;15735:9;15731:18;15725:25;15720:2;15713:5;15709:14;15702:49;15471:286;;;;:::o;15762:526::-;15838:5;15886:4;15874:9;15869:3;15865:19;15861:30;15858:50;;;15904:1;15901;15894:12;15858:50;15926:22;;:::i;:::-;15917:31;;15977:9;15971:16;15964:5;15957:31;16041:2;16030:9;16026:18;16020:25;16015:2;16008:5;16004:14;15997:49;16099:2;16088:9;16084:18;16078:25;16073:2;16066:5;16062:14;16055:49;16157:2;16146:9;16142:18;16136:25;16131:2;16124:5;16120:14;16113:49;16216:3;16205:9;16201:19;16195:26;16189:3;16182:5;16178:15;16171:51;16276:3;16265:9;16261:19;16255:26;16249:3;16242:5;16238:15;16231:51;15762:526;;;;:::o;16293:1649::-;16387:6;16431:9;16422:7;16418:23;16461:3;16457:2;16453:12;16450:32;;;16478:1;16475;16468:12;16450:32;16504:22;;:::i;:::-;16555:9;16549:16;16542:5;16535:31;16611:2;16600:9;16596:18;16590:25;16624:33;16649:7;16624:33;:::i;:::-;16684:2;16673:14;;16666:31;16742:2;16727:18;;16721:25;16755:33;16721:25;16755:33;:::i;:::-;16815:2;16804:14;;16797:31;16873:2;16858:18;;16852:25;16886:33;16852:25;16886:33;:::i;:::-;16946:2;16935:14;;16928:31;17013:3;16998:19;;;16992:26;16975:15;;;16968:51;17054:6;-1:-1:-1;;17035:17:117;;17031:30;17028:50;;;17074:1;17071;17064:12;17028:50;17102:22;;:::i;:::-;17087:37;;17170:3;17159:9;17155:19;17149:26;17140:7;17133:43;17210:49;17253:4;17242:9;17238:20;17210:49;:::i;:::-;17205:2;17196:7;17192:16;17185:75;17294:48;17337:3;17326:9;17322:19;17294:48;:::i;:::-;17289:2;17280:7;17276:16;17269:74;17377:52;17421:6;17410:9;17406:22;17377:52;:::i;:::-;17372:2;17363:7;17359:16;17352:78;17465:73;17530:7;17524:3;17513:9;17509:19;17465:73;:::i;:::-;17459:3;17450:7;17446:17;17439:100;17574:77;17643:7;17637:3;17626:9;17622:19;17574:77;:::i;:::-;17568:3;17559:7;17555:17;17548:104;17688:73;17753:7;17747:3;17736:9;17732:19;17688:73;:::i;:::-;17681:4;17672:7;17668:18;17661:101;17797:73;17862:7;17856:3;17845:9;17841:19;17797:73;:::i;:::-;17791:3;17778:17;;17771:100;17898:3;17887:15;;17880:32;;;;17891:5;16293:1649;-1:-1:-1;;;16293:1649:117:o;17947:184::-;18017:6;18070:2;18058:9;18049:7;18045:23;18041:32;18038:52;;;18086:1;18083;18076:12;18038:52;-1:-1:-1;18109:16:117;;17947:184;-1:-1:-1;17947:184:117:o;18136:127::-;18197:10;18192:3;18188:20;18185:1;18178:31;18228:4;18225:1;18218:15;18252:4;18249:1;18242:15;18268:136;18303:3;-1:-1:-1;;;18324:22:117;;18321:48;;18349:18;;:::i;:::-;-1:-1:-1;18389:1:117;18385:13;;18268:136::o;18957:676::-;19024:5;19072:4;19060:9;19055:3;19051:19;19047:30;19044:50;;;19090:1;19087;19080:12;19044:50;19112:22;;:::i;:::-;19103:31;;19164:9;19158:16;19183:33;19208:7;19183:33;:::i;:::-;19225:22;;19292:2;19277:18;;19271:25;19305:33;19271:25;19305:33;:::i;:::-;19365:2;19354:14;;19347:31;19423:2;19408:18;;19402:25;19436:33;19402:25;19436:33;:::i;:::-;19501:7;19496:2;19489:5;19485:14;19478:31;;19562:2;19551:9;19547:18;19541:25;19536:2;19529:5;19525:14;19518:49;19621:3;19610:9;19606:19;19600:26;19594:3;19587:5;19583:15;19576:51;18957:676;;;;:::o;19638:441::-;19691:5;19744:3;19737:4;19729:6;19725:17;19721:27;19711:55;;19762:1;19759;19752:12;19711:55;19791:6;19785:13;19822:48;19838:31;19866:2;19838:31;:::i;19822:48::-;19895:2;19886:7;19879:19;19941:3;19934:4;19929:2;19921:6;19917:15;19913:26;19910:35;19907:55;;;19958:1;19955;19948:12;19907:55;19971:77;20045:2;20038:4;20029:7;20025:18;20018:4;20010:6;20006:17;19971:77;:::i;:::-;20066:7;19638:441;-1:-1:-1;;;;19638:441:117:o;20084:1523::-;20183:6;20236:2;20224:9;20215:7;20211:23;20207:32;20204:52;;;20252:1;20249;20242:12;20204:52;20285:9;20279:16;-1:-1:-1;;;;;20355:2:117;20347:6;20344:14;20341:34;;;20371:1;20368;20361:12;20341:34;20394:22;;;;20450:6;20432:16;;;20428:29;20425:49;;;20470:1;20467;20460:12;20425:49;20496:22;;:::i;:::-;20541:51;20584:7;20580:2;20541:51;:::i;:::-;20534:5;20527:66;20639:3;20635:2;20631:12;20625:19;20620:2;20613:5;20609:14;20602:43;20679:42;20716:3;20712:2;20708:12;20679:42;:::i;:::-;20672:4;20665:5;20661:16;20654:68;20756:43;20794:3;20790:2;20786:12;20756:43;:::i;:::-;20749:4;20742:5;20738:16;20731:69;20819:3;20870:2;20866;20862:11;20856:18;20849:4;20842:5;20838:16;20831:44;20894:3;20944:2;20940;20936:11;20930:18;20924:3;20917:5;20913:15;20906:43;20968:3;21018:2;21014;21010:11;21004:18;20998:3;20991:5;20987:15;20980:43;21042:3;21078:42;21116:2;21112;21108:11;21078:42;:::i;:::-;21072:3;21065:5;21061:15;21054:67;21140:3;21189:2;21185;21181:11;21175:18;21170:2;21163:5;21159:14;21152:42;21240:6;21236:2;21232:15;21226:22;21221:2;21214:5;21210:14;21203:46;21281:42;21318:3;21314:2;21310:12;21281:42;:::i;:::-;21276:2;21269:5;21265:14;21258:66;21356:43;21394:3;21390:2;21386:12;21356:43;:::i;:::-;21351:2;21344:5;21340:14;21333:67;21439:3;21435:2;21431:12;21425:19;21409:35;;21469:2;21459:8;21456:16;21453:36;;;21485:1;21482;21475:12;21453:36;21521:55;21568:7;21557:8;21553:2;21549:17;21521:55;:::i;:::-;21505:14;;;21498:79;-1:-1:-1;21509:5:117;;20084:1523;-1:-1:-1;;;;;;;;20084:1523:117:o;22459:1585::-;22726:3;22738:21;;;22796:13;;22188:12;;-1:-1:-1;;;;;22184:21:117;;;22811:18;;;22172:34;22259:4;22248:16;;22242:23;22238:32;;22222:14;;;22215:56;22324:4;22313:16;;22307:23;22303:32;22287:14;;;22280:56;22385:4;22374:16;;22368:23;22352:14;;;22345:47;22441:4;22430:16;22424:23;22408:14;;;22401:47;22697:4;;-1:-1:-1;22885:4:117;22873:17;;22867:24;22861:3;22846:19;;22839:53;22939:4;22927:17;;22921:24;-1:-1:-1;;;;;7101:30:117;;23001:3;22986:19;;7089:43;-1:-1:-1;23055:4:117;23043:17;;23037:24;-1:-1:-1;;;;;6993:31:117;;23120:3;23105:19;;6981:44;-1:-1:-1;23180:4:117;23168:17;;23162:24;23156:3;23141:19;;23134:53;23242:4;23230:17;;23224:24;23218:3;23203:19;;23196:53;23304:4;23292:17;;23286:24;23280:3;23265:19;;23258:53;23360:4;23348:17;;23342:24;-1:-1:-1;;;;;6993:31:117;;23425:3;23410:19;;6981:44;-1:-1:-1;23485:6:117;23473:19;;23467:26;23461:3;23446:19;;23439:55;23549:6;23537:19;;23531:26;23525:3;23510:19;;23503:55;23607:6;23595:19;;23589:26;-1:-1:-1;;;;;7101:30:117;;23673:3;23658:19;;7089:43;-1:-1:-1;23727:6:117;23715:19;;23709:26;-1:-1:-1;;;;;6993:31:117;;23794:3;23779:19;;6981:44;23744:55;23848:6;23840;23836:19;23830:26;23893:6;23887:3;23876:9;23872:19;23865:35;23917:53;23965:3;23954:9;23950:19;23934:14;23917:53;:::i;:::-;23909:61;;;23979:59;24032:4;24021:9;24017:20;24009:6;23979:59;:::i;:::-;22459:1585;;;;;:::o;24328:168::-;24401:9;;;24432;;24449:15;;;24443:22;;24429:37;24419:71;;24470:18;;:::i;24501:217::-;24541:1;24567;24557:132;;24611:10;24606:3;24602:20;24599:1;24592:31;24646:4;24643:1;24636:15;24674:4;24671:1;24664:15;24557:132;-1:-1:-1;24703:9:117;;24501:217::o;24723:589::-;24790:5;24838:4;24826:9;24821:3;24817:19;24813:30;24810:50;;;24856:1;24853;24846:12;24810:50;24889:2;24883:9;24931:4;24923:6;24919:17;25002:6;24990:10;24987:22;-1:-1:-1;;;;;24954:10:117;24951:34;24948:62;24945:88;;;25013:18;;:::i;:::-;25053:10;25049:2;25042:22;;25082:6;25073:15;;25118:9;25112:16;25104:6;25097:32;25183:2;25172:9;25168:18;25162:25;25157:2;25149:6;25145:15;25138:50;25242:2;25231:9;25227:18;25221:25;25216:2;25208:6;25204:15;25197:50;25301:2;25290:9;25286:18;25280:25;25275:2;25267:6;25263:15;25256:50;;24723:589;;;;:::o;25317:1173::-;25390:5;25429:9;25424:3;25420:19;25459:6;25455:2;25451:15;25448:35;;;25479:1;25476;25469:12;25448:35;25501:22;;:::i;:::-;25492:31;;25553:9;25547:16;25572:33;25597:7;25572:33;:::i;:::-;25614:22;;25681:2;25666:18;;25660:25;25694:33;25660:25;25694:33;:::i;:::-;25754:2;25743:14;;25736:31;25801:4;-1:-1:-1;;25783:16:117;;25779:27;25776:47;;;25819:1;25816;25809:12;25776:47;;25847:22;;:::i;:::-;25915:2;25904:9;25900:18;25894:25;25885:7;25878:42;25975:2;25964:9;25960:18;25954:25;25949:2;25940:7;25936:16;25929:51;26035:3;26024:9;26020:19;26014:26;26009:2;26000:7;25996:16;25989:52;26096:3;26085:9;26081:19;26075:26;26070:2;26061:7;26057:16;26050:52;26158:4;26147:9;26143:20;26137:27;26131:3;26122:7;26118:17;26111:54;26221:3;26210:9;26206:19;26200:26;26194:3;26185:7;26181:17;26174:53;26259:7;26254:2;26247:5;26243:14;26236:31;;26299:64;26359:3;26353;26342:9;26338:19;26299:64;:::i;:::-;26294:2;26287:5;26283:14;26276:88;26418:3;26407:9;26403:19;26397:26;26391:3;26384:5;26380:15;26373:51;26478:3;26467:9;26463:19;26457:26;26451:3;26444:5;26440:15;26433:51;25317:1173;;;;:::o;26495:651::-;26568:5;26616:4;26604:9;26599:3;26595:19;26591:30;26588:50;;;26634:1;26631;26624:12;26588:50;26656:22;;:::i;:::-;26647:31;;26707:9;26701:16;26694:5;26687:31;26750:47;26793:2;26782:9;26778:18;26750:47;:::i;:::-;26745:2;26738:5;26734:14;26727:71;26830:47;26873:2;26862:9;26858:18;26830:47;:::i;:::-;26825:2;26818:5;26814:14;26807:71;26923:2;26912:9;26908:18;26902:25;26936:32;26960:7;26936:32;:::i;:::-;26995:2;26984:14;;26977:31;27053:3;27038:19;;27032:26;27067:32;27032:26;27067:32;:::i;:::-;27126:3;27115:15;;27108:32;27119:5;26495:651;-1:-1:-1;;26495:651:117:o;27151:1515::-;27228:5;27276:6;27264:9;27259:3;27255:19;27251:32;27248:52;;;27296:1;27293;27286:12;27248:52;27318:22;;:::i;:::-;27309:31;;27363:40;27393:9;27363:40;:::i;:::-;27356:5;27349:55;27436:47;27479:2;27468:9;27464:18;27436:47;:::i;:::-;27431:2;27424:5;27420:14;27413:71;27516:47;27559:2;27548:9;27544:18;27516:47;:::i;:::-;27511:2;27504:5;27500:14;27493:71;27596:48;27640:2;27629:9;27625:18;27596:48;:::i;:::-;27591:2;27580:14;;27573:72;27699:3;27684:19;;;27678:26;27661:15;;;27654:51;27759:3;27744:19;;;27738:26;27721:15;;;27714:51;27819:3;27804:19;;;27798:26;27781:15;;;27774:51;27879:3;27864:19;;;27858:26;27841:15;;;27834:51;27904:3;27945:18;;;27939:25;27923:14;;;27916:49;27984:3;28025:18;;;28019:25;28003:14;;;27996:49;28064:3;28105:18;;;28099:25;28083:14;;;28076:49;28144:3;28185:18;;;28179:25;28163:14;;;28156:49;28224:3;28265:18;;;28259:25;28243:14;;;28236:49;28304:3;28339:68;28403:3;28383:18;;;28339:68;:::i;:::-;28323:14;;;28316:92;28427:3;28466:68;28530:3;28510:18;;;28466:68;:::i;:::-;28457:6;28446:18;;28439:96;28588:6;28573:22;;28567:29;28551:14;;;28544:53;28654:3;28639:19;;;28633:26;28624:6;28613:18;;28606:54;28450:5;27151:1515;-1:-1:-1;27151:1515:117:o;28671:164::-;28747:13;;28796;;28789:21;28779:32;;28769:60;;28825:1;28822;28815:12;28840:160;28917:13;;28970:4;28959:16;;28949:27;;28939:55;;28990:1;28987;28980:12;29005:1296;29104:6;29157:4;29145:9;29136:7;29132:23;29128:34;29125:54;;;29175:1;29172;29165:12;29125:54;29201:22;;:::i;:::-;29252:9;29246:16;29239:5;29232:31;29295:49;29340:2;29329:9;29325:18;29295:49;:::i;:::-;29290:2;29283:5;29279:14;29272:73;29377:49;29422:2;29411:9;29407:18;29377:49;:::i;:::-;29372:2;29365:5;29361:14;29354:73;29459;29524:7;29519:2;29508:9;29504:18;29459:73;:::i;:::-;29454:2;29447:5;29443:14;29436:97;29567:74;29633:7;29627:3;29616:9;29612:19;29567:74;:::i;:::-;29560:4;29553:5;29549:16;29542:100;29676:74;29742:7;29736:3;29725:9;29721:19;29676:74;:::i;:::-;29669:4;29662:5;29658:16;29651:100;29785:79;29856:7;29849:4;29838:9;29834:20;29785:79;:::i;:::-;29778:4;29771:5;29767:16;29760:105;29899:51;29944:4;29933:9;29929:20;29899:51;:::i;:::-;29892:4;29885:5;29881:16;29874:77;29987:48;30029:4;30018:9;30014:20;29987:48;:::i;:::-;29978:6;29971:5;29967:18;29960:76;30072:48;30114:4;30103:9;30099:20;30072:48;:::i;:::-;30063:6;30056:5;30052:18;30045:76;30157:49;30200:4;30189:9;30185:20;30157:49;:::i;:::-;30148:6;30137:18;;30130:77;30264:4;30249:20;;;;30243:27;30234:6;30223:18;;30216:55;-1:-1:-1;30141:5:117;29005:1296;-1:-1:-1;29005:1296:117:o;30306:287::-;30435:3;30473:6;30467:13;30489:66;30548:6;30543:3;30536:4;30528:6;30524:17;30489:66;:::i;:::-;30571:16;;;;;30306:287;-1:-1:-1;;30306:287:117:o;30598:202::-;30665:6;30718:2;30706:9;30697:7;30693:23;30689:32;30686:52;;;30734:1;30731;30724:12;30686:52;30757:37;30784:9;30757:37;:::i;31557:2198::-;-1:-1:-1;;;33072:26:117;;-1:-1:-1;;;33123:2:117;33114:12;;33107:39;-1:-1:-1;;;33171:2:117;33162:12;;33155:43;-1:-1:-1;;;33223:2:117;33214:12;;33207:38;33275:28;33270:2;33261:12;;33254:50;-1:-1:-1;;;33329:2:117;33320:12;;33313:43;33387:25;33381:3;33372:13;;33365:48;-1:-1:-1;;;33438:3:117;33429:13;;33422:45;-1:-1:-1;;;33492:3:117;33483:13;;33476:42;33549:26;33543:3;33534:13;;33527:49;-1:-1:-1;;;33601:3:117;33592:13;;33585:47;31212:27;33742:3;33733:13;;31200:40;31351:26;31256:12;;;31339:39;-1:-1:-1;;;31394:12:117;;;31482:36;-1:-1:-1;31534:12:117;;;33648:101;31417:135;33760:492;33935:3;33973:6;33967:13;33989:66;34048:6;34043:3;34036:4;34028:6;34024:17;33989:66;:::i;:::-;34118:13;;34077:16;;;;34140:70;34118:13;34077:16;34187:4;34175:17;;34140:70;:::i;:::-;34226:20;;33760:492;-1:-1:-1;;;;33760:492:117:o;34257:656::-;-1:-1:-1;;;34560:3:117;34553:34;34535:3;34616:6;34610:13;34632:75;34700:6;34695:2;34690:3;34686:12;34679:4;34671:6;34667:17;34632:75;:::i;:::-;34767:13;;34726:16;;;;34789:76;34767:13;34851:2;34843:11;;34836:4;34824:17;;34789:76;:::i;:::-;34885:17;34904:2;34881:26;;34257:656;-1:-1:-1;;;;34257:656:117:o;35106:1065::-;35536:4;35565:3;35577:60;35627:9;35618:6;35612:13;35004:12;;-1:-1:-1;;;;;35000:38:117;34988:51;;35088:4;35077:16;;;35071:23;35055:14;;35048:47;34918:183;35577:60;35693:4;35685:6;35681:17;35675:24;35668:4;35657:9;35653:20;35646:54;35756:4;35748:6;35744:17;35738:24;35731:4;35720:9;35716:20;35709:54;35772:63;35830:3;35819:9;35815:19;35807:6;35004:12;;-1:-1:-1;;;;;35000:38:117;34988:51;;35088:4;35077:16;;;35071:23;35055:14;;35048:47;34918:183;35772:63;-1:-1:-1;;;;;35872:32:117;;35866:3;35851:19;;35844:61;35936:3;35921:19;;35914:35;;;35980:3;35965:19;;35958:31;;;36012:44;36037:18;;;36029:6;36012:44;:::i;:::-;35998:58;;36105:9;36097:6;36093:22;36087:3;36076:9;36072:19;36065:51;36133:32;36158:6;36150;36133:32;:::i;:::-;36125:40;35106:1065;-1:-1:-1;;;;;;;;;35106:1065:117:o;36176:1236::-;36681:6;36670:9;36663:25;36724:6;36719:2;36708:9;36704:18;36697:34;36767:6;36762:2;36751:9;36747:18;36740:34;-1:-1:-1;;;;;36814:6:117;36810:31;36805:2;36794:9;36790:18;36783:59;36908:1;36904;36899:3;36895:11;36891:19;36883:6;36879:32;36873:3;36862:9;36858:19;36851:61;36949:6;36943:3;36932:9;36928:19;36921:35;36993:6;36987:3;36976:9;36972:19;36965:35;37037:6;37031:3;37020:9;37016:19;37009:35;37053:47;37095:3;37084:9;37080:19;37072:6;-1:-1:-1;;;;;6993:31:117;6981:44;;6927:104;37053:47;37137:6;37131:3;37120:9;37116:19;37109:35;37181:7;37175:3;37164:9;37160:19;37153:36;37198:47;37240:3;37229:9;37225:19;37216:7;-1:-1:-1;;;;;7101:30:117;7089:43;;7036:102;37198:47;-1:-1:-1;;;;;6993:31:117;;37297:3;37282:19;;6981:44;37339:3;37333;37322:9;37318:19;37311:32;36644:4;37360:46;37401:3;37390:9;37386:19;37377:7;37360:46;:::i;:::-;37352:54;;36176:1236;;;;;;;;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancelOrder(uint256)": "514fcac7",
    "close(uint256,(address,bytes))": "333c6a3d",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "quoteExecuteOrder(((address,address,address,uint256,uint256),uint256,uint64,address,int256,int256,int256,address,uint256,uint256,uint64,address,bytes),(address,bytes),address)": "1b17fb0f",
    "updateQuoteTokenMap(uint256)": "e1c951ca",
    "userPositions(uint256)": "1e7f1370"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfAcceptablePriceRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SlippageTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"Traded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"close\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"pairId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"entryTokenAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"canceler\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"slippageTolerance\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct GammaOrder\",\"name\":\"gammaOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"},{\"internalType\":\"contract PredyPoolQuoter\",\"name\":\"quoter\",\"type\":\"address\"}],\"name\":\"quoteExecuteOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"updateQuoteTokenMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"canceler\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"takeProfitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stopLossPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"slippageTolerance\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"close(uint256,(address,bytes))\":{\"details\":\"Anyone can call this function\",\"params\":{\"positionId\":\"The id of position\",\"settlementData\":\"The route of settlement created by filler\"},\"returns\":{\"tradeResult\":\"The result of trade\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"details\":\"Fillers call this function\",\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"close(uint256,(address,bytes))\":{\"notice\":\"Closes a predict position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and executes trade\"}},\"notice\":\"Gamma trade market contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/markets/gamma/GammaTradeMarket.sol\":\"GammaTradeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d\",\"dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af\",\"dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x1c5ef4d63293a6d4c038d9490767cb6ef8f80e48e3d9ff4808e763715c872d1f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4be086408ae63846b8b75df7a802648286b15a775e8f5b51d8e22ff0a55aedcc\",\"dweb:/ipfs/QmSwd94DYpJPALFNCwq7JTSC2PnszLJwybW3kXHfya2HU9\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c\",\"dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/lens/PredyPoolQuoter.sol\":{\"keccak256\":\"0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab\",\"dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6\"]},\"src/libraries/ApplyInterestLib.sol\":{\"keccak256\":\"0xfb7dc2ad1007cb3a9c252d644baf7312aac86ff22054142b6283f7eaa308a684\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://520bdee70178cb384c6b6bf1a21d0ef71e7dd7427db954ab1662a0e89257faaf\",\"dweb:/ipfs/QmQpYn25sdXD6YhrMTXTWxXcK8EeEUTGN7Cj3tjd9o4XoH\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77\",\"dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xa3b98f67634f9dc64fa137550252e907cf612141cc89df0801f033fe44a563cd\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c5543482b7ab9230c967c7879ec91793a189c2b70715c7f3290c2513b35c8a49\",\"dweb:/ipfs/QmREnuvdgx64dpMqaZ96nP5Y5ygpVv6Ue18NhX6xBdBLr3\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7\",\"dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae\",\"dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b\",\"dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm\"]},\"src/libraries/Trade.sol\":{\"keccak256\":\"0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330\",\"dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/logic/LiquidationLogic.sol\":{\"keccak256\":\"0x909a4e28dd6029f2cfbf284d24c68ee2e3c366a65f43e035da585574d5488f25\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e9da13d6a863b5b9aaae7423df60033aac597e89e571e1d0294704e01d13a807\",\"dweb:/ipfs/QmZ7AcCvQspCRz3rmSZasMW5urTJdFfjXkSwtLdEDShAJW\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022\",\"dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/markets/gamma/GammaOrder.sol\":{\"keccak256\":\"0xaa2aff8ee335223baa398f0527d837c1ef0f0e2235ccd6da455f0cf4e9509ba1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a3798ff1ec0f534c912f8ea83beb59e3fbfb993e590cd6bd22f4e944cb83cf6f\",\"dweb:/ipfs/Qmcu3MxUQBYPw5ne6AsZSaauaSGugsoQuwmf6ur1Gq9HZG\"]},\"src/markets/gamma/GammaTradeMarket.sol\":{\"keccak256\":\"0xa1b92813589b6c1c545ccf0ceece429c182c5047f568eb201e8639f8a61bc23d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6ca977dfddd92575c56b927c8a2630fc726b1fe79fe89eb49dedee345e4b0fcf\",\"dweb:/ipfs/QmWXgMQKBN4zwFyX67rCJn4Kjd7dPZLxUnMWsBtVeLgaKQ\"]},\"src/markets/predict/PredictOrder.sol\":{\"keccak256\":\"0xc8d822c1aae6d7ef3f563bcae13840c4a3b5e5f2fac6706a8b9276bf07828346\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3abc21f201b3926272fa345f20a4cb0b2b2c001b5e549026e9b745b865bb9bde\",\"dweb:/ipfs/QmXboEQjWNgP3LCW8sHwkzUWAfKyC3Hfenag3No8Jf4hpt\"]},\"src/types/GlobalData.sol\":{\"keccak256\":\"0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a\",\"dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC\"]},\"src/types/LockData.sol\":{\"keccak256\":\"0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418\",\"dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotFiller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfAcceptablePriceRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SlippageTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Traded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelOrder"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "close",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct GammaOrder",
              "name": "gammaOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "filler",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "positionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "pairId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "entryTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "marginAmount",
                  "type": "int256"
                },
                {
                  "internalType": "address",
                  "name": "canceler",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "takeProfitPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "stopLossPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "slippageTolerance",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "validatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract PredyPoolQuoter",
              "name": "quoter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExecuteOrder"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuoteTokenMap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "canceler",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "takeProfitPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stopLossPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "slippageTolerance",
              "type": "uint64"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "close(uint256,(address,bytes))": {
            "details": "Anyone can call this function",
            "params": {
              "positionId": "The id of position",
              "settlementData": "The route of settlement created by filler"
            },
            "returns": {
              "tradeResult": "The result of trade"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "details": "Fillers call this function",
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "close(uint256,(address,bytes))": {
            "notice": "Closes a predict position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and executes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/markets/gamma/GammaTradeMarket.sol": "GammaTradeMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc",
        "urls": [
          "bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d",
          "dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec",
        "urls": [
          "bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af",
          "dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x1c5ef4d63293a6d4c038d9490767cb6ef8f80e48e3d9ff4808e763715c872d1f",
        "urls": [
          "bzz-raw://4be086408ae63846b8b75df7a802648286b15a775e8f5b51d8e22ff0a55aedcc",
          "dweb:/ipfs/QmSwd94DYpJPALFNCwq7JTSC2PnszLJwybW3kXHfya2HU9"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a",
        "urls": [
          "bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c",
          "dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PredyPoolQuoter.sol": {
        "keccak256": "0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab",
        "urls": [
          "bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab",
          "dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/ApplyInterestLib.sol": {
        "keccak256": "0xfb7dc2ad1007cb3a9c252d644baf7312aac86ff22054142b6283f7eaa308a684",
        "urls": [
          "bzz-raw://520bdee70178cb384c6b6bf1a21d0ef71e7dd7427db954ab1662a0e89257faaf",
          "dweb:/ipfs/QmQpYn25sdXD6YhrMTXTWxXcK8EeEUTGN7Cj3tjd9o4XoH"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17",
        "urls": [
          "bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77",
          "dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xa3b98f67634f9dc64fa137550252e907cf612141cc89df0801f033fe44a563cd",
        "urls": [
          "bzz-raw://c5543482b7ab9230c967c7879ec91793a189c2b70715c7f3290c2513b35c8a49",
          "dweb:/ipfs/QmREnuvdgx64dpMqaZ96nP5Y5ygpVv6Ue18NhX6xBdBLr3"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a",
        "urls": [
          "bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7",
          "dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1",
        "urls": [
          "bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae",
          "dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e",
        "urls": [
          "bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b",
          "dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Trade.sol": {
        "keccak256": "0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf",
        "urls": [
          "bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330",
          "dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "keccak256": "0x909a4e28dd6029f2cfbf284d24c68ee2e3c366a65f43e035da585574d5488f25",
        "urls": [
          "bzz-raw://e9da13d6a863b5b9aaae7423df60033aac597e89e571e1d0294704e01d13a807",
          "dweb:/ipfs/QmZ7AcCvQspCRz3rmSZasMW5urTJdFfjXkSwtLdEDShAJW"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad",
        "urls": [
          "bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022",
          "dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/gamma/GammaOrder.sol": {
        "keccak256": "0xaa2aff8ee335223baa398f0527d837c1ef0f0e2235ccd6da455f0cf4e9509ba1",
        "urls": [
          "bzz-raw://a3798ff1ec0f534c912f8ea83beb59e3fbfb993e590cd6bd22f4e944cb83cf6f",
          "dweb:/ipfs/Qmcu3MxUQBYPw5ne6AsZSaauaSGugsoQuwmf6ur1Gq9HZG"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/gamma/GammaTradeMarket.sol": {
        "keccak256": "0xa1b92813589b6c1c545ccf0ceece429c182c5047f568eb201e8639f8a61bc23d",
        "urls": [
          "bzz-raw://6ca977dfddd92575c56b927c8a2630fc726b1fe79fe89eb49dedee345e4b0fcf",
          "dweb:/ipfs/QmWXgMQKBN4zwFyX67rCJn4Kjd7dPZLxUnMWsBtVeLgaKQ"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/predict/PredictOrder.sol": {
        "keccak256": "0xc8d822c1aae6d7ef3f563bcae13840c4a3b5e5f2fac6706a8b9276bf07828346",
        "urls": [
          "bzz-raw://3abc21f201b3926272fa345f20a4cb0b2b2c001b5e549026e9b745b865bb9bde",
          "dweb:/ipfs/QmXboEQjWNgP3LCW8sHwkzUWAfKyC3Hfenag3No8Jf4hpt"
        ],
        "license": "UNLICENSED"
      },
      "src/types/GlobalData.sol": {
        "keccak256": "0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c",
        "urls": [
          "bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a",
          "dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC"
        ],
        "license": "UNLICENSED"
      },
      "src/types/LockData.sol": {
        "keccak256": "0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4",
        "urls": [
          "bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418",
          "dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/markets/gamma/GammaTradeMarket.sol",
    "id": 61840,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        63151
      ],
      "ApplyInterestLib": [
        51688
      ],
      "BaseHookCallback": [
        50819
      ],
      "Constants": [
        51738
      ],
      "DataType": [
        51761
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GammaOrder": [
        61028
      ],
      "GammaOrderLib": [
        61164
      ],
      "GammaTradeMarket": [
        61839
      ],
      "GlobalDataLibrary": [
        63092
      ],
      "IERC20": [
        43517
      ],
      "IFillerMarket": [
        50831
      ],
      "IHooks": [
        50844
      ],
      "ILendingPool": [
        50856
      ],
      "IOrderValidator": [
        50874
      ],
      "IPermit2": [
        46897
      ],
      "IPredictOrderValidator": [
        50884
      ],
      "IPredyPool": [
        51071
      ],
      "ISettlement": [
        51086
      ],
      "ISignatureTransfer": [
        47033
      ],
      "ISwapRouter": [
        49349
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        63206
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        51836
      ],
      "LPMath": [
        60686
      ],
      "LiquidationLogic": [
        59148
      ],
      "LiquidityAmounts": [
        49693
      ],
      "Math": [
        60827
      ],
      "OrderInfo": [
        60840
      ],
      "OrderInfoLib": [
        60875
      ],
      "PairLib": [
        51859
      ],
      "Permit2Lib": [
        60931
      ],
      "Perp": [
        54327
      ],
      "PerpFee": [
        54834
      ],
      "PositionCalculator": [
        55543
      ],
      "PositionKey": [
        49718
      ],
      "PredictOrder": [
        62115
      ],
      "PredyPoolQuoter": [
        51460
      ],
      "PremiumCurveModel": [
        55585
      ],
      "PriceFeed": [
        50722
      ],
      "Reallocation": [
        56128
      ],
      "ResolvedOrder": [
        60947
      ],
      "ResolvedOrderLib": [
        60989
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        56849
      ],
      "TickMath": [
        49233
      ],
      "Trade": [
        57317
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        57836
      ],
      "UnsafeMath": [
        49249
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:8435:91",
    "nodes": [
      {
        "id": 61166,
        "nodeType": "PragmaDirective",
        "src": "39:24:91",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 61168,
        "nodeType": "ImportDirective",
        "src": "65:88:91",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 48025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61167,
              "name": "IUniswapV3Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48024,
              "src": "73:14:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61170,
        "nodeType": "ImportDirective",
        "src": "154:92:91",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61169,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "162:14:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61172,
        "nodeType": "ImportDirective",
        "src": "247:87:91",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 49350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61171,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49349,
              "src": "255:11:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61174,
        "nodeType": "ImportDirective",
        "src": "335:70:91",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 46898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61173,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46897,
              "src": "343:8:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61176,
        "nodeType": "ImportDirective",
        "src": "406:70:91",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 43518,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61175,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43517,
              "src": "414:6:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61177,
        "nodeType": "ImportDirective",
        "src": "477:41:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "../../interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 51072,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61178,
        "nodeType": "ImportDirective",
        "src": "519:43:91",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPool.sol",
        "file": "../../interfaces/ILendingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 50857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61179,
        "nodeType": "ImportDirective",
        "src": "563:44:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "../../interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 50832,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61180,
        "nodeType": "ImportDirective",
        "src": "608:46:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "../../interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 50885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61181,
        "nodeType": "ImportDirective",
        "src": "655:41:91",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "../../base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 50820,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61182,
        "nodeType": "ImportDirective",
        "src": "697:47:91",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "../../libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 60932,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61183,
        "nodeType": "ImportDirective",
        "src": "745:50:91",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "../../libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 60990,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61184,
        "nodeType": "ImportDirective",
        "src": "796:52:91",
        "nodes": [],
        "absolutePath": "src/libraries/logic/LiquidationLogic.sol",
        "file": "../../libraries/logic/LiquidationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 59149,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61185,
        "nodeType": "ImportDirective",
        "src": "849:26:91",
        "nodes": [],
        "absolutePath": "src/markets/gamma/GammaOrder.sol",
        "file": "./GammaOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 61165,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61186,
        "nodeType": "ImportDirective",
        "src": "876:39:91",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "../../libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 60828,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61188,
        "nodeType": "ImportDirective",
        "src": "916:63:91",
        "nodes": [],
        "absolutePath": "src/lens/PredyPoolQuoter.sol",
        "file": "../../lens/PredyPoolQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61840,
        "sourceUnit": 51461,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61187,
              "name": "PredyPoolQuoter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51460,
              "src": "924:15:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61839,
        "nodeType": "ContractDefinition",
        "src": "1028:7445:91",
        "nodes": [
          {
            "id": 61197,
            "nodeType": "UsingForDirective",
            "src": "1095:41:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61194,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "1101:16:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60989,
              "src": "1101:16:91"
            },
            "typeName": {
              "id": 61196,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61195,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1122:13:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60947,
                "src": "1122:13:91"
              },
              "referencedDeclaration": 60947,
              "src": "1122:13:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$60947_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 61201,
            "nodeType": "UsingForDirective",
            "src": "1141:35:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61198,
              "name": "GammaOrderLib",
              "nameLocations": [
                "1147:13:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61164,
              "src": "1147:13:91"
            },
            "typeName": {
              "id": 61200,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61199,
                "name": "GammaOrder",
                "nameLocations": [
                  "1165:10:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61028,
                "src": "1165:10:91"
              },
              "referencedDeclaration": 61028,
              "src": "1165:10:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GammaOrder_$61028_storage_ptr",
                "typeString": "struct GammaOrder"
              }
            }
          },
          {
            "id": 61205,
            "nodeType": "UsingForDirective",
            "src": "1181:35:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61202,
              "name": "Permit2Lib",
              "nameLocations": [
                "1187:10:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60931,
              "src": "1187:10:91"
            },
            "typeName": {
              "id": 61204,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61203,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1202:13:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60947,
                "src": "1202:13:91"
              },
              "referencedDeclaration": 60947,
              "src": "1202:13:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$60947_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 61208,
            "nodeType": "UsingForDirective",
            "src": "1221:23:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61206,
              "name": "Math",
              "nameLocations": [
                "1227:4:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60827,
              "src": "1227:4:91"
            },
            "typeName": {
              "id": 61207,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:91",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 61219,
            "nodeType": "StructDefinition",
            "src": "1250:174:91",
            "nodes": [],
            "canonicalName": "GammaTradeMarket.UserPosition",
            "members": [
              {
                "constant": false,
                "id": 61210,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1288:5:91",
                "nodeType": "VariableDeclaration",
                "scope": 61219,
                "src": "1280:13:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 61209,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:7:91",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61212,
                "mutability": "mutable",
                "name": "canceler",
                "nameLocation": "1311:8:91",
                "nodeType": "VariableDeclaration",
                "scope": 61219,
                "src": "1303:16:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 61211,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1303:7:91",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61214,
                "mutability": "mutable",
                "name": "takeProfitPrice",
                "nameLocation": "1337:15:91",
                "nodeType": "VariableDeclaration",
                "scope": 61219,
                "src": "1329:23:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 61213,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1329:7:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61216,
                "mutability": "mutable",
                "name": "stopLossPrice",
                "nameLocation": "1370:13:91",
                "nodeType": "VariableDeclaration",
                "scope": 61219,
                "src": "1362:21:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 61215,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1362:7:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61218,
                "mutability": "mutable",
                "name": "slippageTolerance",
                "nameLocation": "1400:17:91",
                "nodeType": "VariableDeclaration",
                "scope": 61219,
                "src": "1393:24:91",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 61217,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1393:6:91",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserPosition",
            "nameLocation": "1257:12:91",
            "scope": 61839,
            "visibility": "public"
          },
          {
            "id": 61222,
            "nodeType": "VariableDeclaration",
            "src": "1430:17:91",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1439:8:91",
            "scope": 61839,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$46897",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 61221,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61220,
                "name": "IPermit2",
                "nameLocations": [
                  "1430:8:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46897,
                "src": "1430:8:91"
              },
              "referencedDeclaration": 46897,
              "src": "1430:8:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46897",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 61227,
            "nodeType": "VariableDeclaration",
            "src": "1454:61:91",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "1502:13:91",
            "scope": 61839,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
              "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition)"
            },
            "typeName": {
              "id": 61226,
              "keyName": "vaultId",
              "keyNameLocation": "1470:7:91",
              "keyType": {
                "id": 61223,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1462:7:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1454:40:91",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 61225,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61224,
                  "name": "UserPosition",
                  "nameLocations": [
                    "1481:12:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61219,
                  "src": "1481:12:91"
                },
                "referencedDeclaration": 61219,
                "src": "1481:12:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                  "typeString": "struct GammaTradeMarket.UserPosition"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 61233,
            "nodeType": "EventDefinition",
            "src": "1522:46:91",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e39122fcaa92bc902344d31c0f322ba04506be819fd20dafb197b26bf2e9045d",
            "name": "Traded",
            "nameLocation": "1528:6:91",
            "parameters": {
              "id": 61232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61229,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1543:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61233,
                  "src": "1535:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61231,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "1559:7:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61233,
                  "src": "1551:15:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1534:33:91"
            }
          },
          {
            "id": 61251,
            "nodeType": "FunctionDefinition",
            "src": "1574:140:91",
            "nodes": [],
            "body": {
              "id": 61250,
              "nodeType": "Block",
              "src": "1662:52:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61244,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61222,
                      "src": "1672:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61246,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61238,
                          "src": "1692:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61245,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46897,
                        "src": "1683:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$46897_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 61247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1683:24:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "1672:35:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$46897",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 61249,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:35:91"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61241,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61236,
                    "src": "1650:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51071",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 61242,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 61240,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1633:16:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "1633:16:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "1633:28:91"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 61239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61236,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "1597:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61251,
                  "src": "1586:21:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$51071",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 61235,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61234,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "1586:10:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51071,
                      "src": "1586:10:91"
                    },
                    "referencedDeclaration": 51071,
                    "src": "1586:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51071",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61238,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "1617:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61251,
                  "src": "1609:22:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1585:47:91"
            },
            "returnParameters": {
              "id": 61243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1662:0:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61397,
            "nodeType": "FunctionDefinition",
            "src": "1720:1341:91",
            "nodes": [],
            "body": {
              "id": 61396,
              "nodeType": "Block",
              "src": "1911:1150:91",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 61267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61264,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61257,
                        "src": "1925:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      },
                      "id": 61265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1937:9:91",
                      "memberName": "minMargin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50926,
                      "src": "1925:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1950:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1925:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61394,
                    "nodeType": "Block",
                    "src": "2331:724:91",
                    "statements": [
                      {
                        "assignments": [
                          61319
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61319,
                            "mutability": "mutable",
                            "name": "marginAmountUpdate",
                            "nameLocation": "2352:18:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 61394,
                            "src": "2345:25:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 61318,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2345:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61328,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61322,
                                "name": "tradeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61254,
                                "src": "2384:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeParams memory"
                                }
                              },
                              "id": 61323,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2396:9:91",
                              "memberName": "extraData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50916,
                              "src": "2384:21:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 61325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2408:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 61324,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2408:6:91",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 61326,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2407:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            ],
                            "expression": {
                              "id": 61320,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2373:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 61321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2377:6:91",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2373:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 61327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2373:43:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2345:71:91"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 61331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61329,
                            "name": "marginAmountUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61319,
                            "src": "2435:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2456:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2435:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 61352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 61350,
                              "name": "marginAmountUpdate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61319,
                              "src": "2660:18:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 61351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2681:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2660:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 61392,
                          "nodeType": "IfStatement",
                          "src": "2656:389:91",
                          "trueBody": {
                            "id": 61391,
                            "nodeType": "Block",
                            "src": "2684:361:91",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "74727565",
                                      "id": 61360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2741:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61363,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "2755:4:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                            "typeString": "contract GammaTradeMarket"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                            "typeString": "contract GammaTradeMarket"
                                          }
                                        ],
                                        "id": 61362,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2747:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 61361,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2747:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61364,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2747:13:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61368,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "2770:19:91",
                                          "subExpression": {
                                            "id": 61367,
                                            "name": "marginAmountUpdate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61319,
                                            "src": "2771:18:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 61366,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2762:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 61365,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2762:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61369,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2762:28:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 61356,
                                              "name": "_predyPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 50731,
                                              "src": "2723:10:91",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                                "typeString": "contract IPredyPool"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                                "typeString": "contract IPredyPool"
                                              }
                                            ],
                                            "id": 61355,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2715:7:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 61354,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2715:7:91",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 61357,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2715:19:91",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 61353,
                                        "name": "ILendingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50856,
                                        "src": "2702:12:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ILendingPool_$50856_$",
                                          "typeString": "type(contract ILendingPool)"
                                        }
                                      },
                                      "id": 61358,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2702:33:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ILendingPool_$50856",
                                        "typeString": "contract ILendingPool"
                                      }
                                    },
                                    "id": 61359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2736:4:91",
                                    "memberName": "take",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50855,
                                    "src": "2702:38:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (bool,address,uint256) external"
                                    }
                                  },
                                  "id": 61370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2702:89:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61371,
                                "nodeType": "ExpressionStatement",
                                "src": "2702:89:91"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 61376,
                                            "name": "tradeParams",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61254,
                                            "src": "2881:11:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                              "typeString": "struct IPredyPool.TradeParams memory"
                                            }
                                          },
                                          "id": 61377,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2893:6:91",
                                          "memberName": "pairId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50908,
                                          "src": "2881:18:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 61375,
                                        "name": "_getQuoteTokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50818,
                                        "src": "2859:21:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                          "typeString": "function (uint256) view returns (address)"
                                        }
                                      },
                                      "id": 61378,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2859:41:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 61379,
                                          "name": "userPositions",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61227,
                                          "src": "2922:13:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                                            "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                                          }
                                        },
                                        "id": 61382,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 61380,
                                            "name": "tradeParams",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61254,
                                            "src": "2936:11:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                              "typeString": "struct IPredyPool.TradeParams memory"
                                            }
                                          },
                                          "id": 61381,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2948:7:91",
                                          "memberName": "vaultId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50910,
                                          "src": "2936:19:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2922:34:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                                          "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                                        }
                                      },
                                      "id": 61383,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2957:5:91",
                                      "memberName": "owner",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 61210,
                                      "src": "2922:40:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61387,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "2992:19:91",
                                          "subExpression": {
                                            "id": 61386,
                                            "name": "marginAmountUpdate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61319,
                                            "src": "2993:18:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 61385,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2984:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 61384,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2984:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61388,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2984:28:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 61372,
                                      "name": "TransferHelper",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49889,
                                      "src": "2810:14:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                        "typeString": "type(library TransferHelper)"
                                      }
                                    },
                                    "id": 61374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2825:12:91",
                                    "memberName": "safeTransfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49816,
                                    "src": "2810:27:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,uint256)"
                                    }
                                  },
                                  "id": 61389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2810:220:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61390,
                                "nodeType": "ExpressionStatement",
                                "src": "2810:220:91"
                              }
                            ]
                          }
                        },
                        "id": 61393,
                        "nodeType": "IfStatement",
                        "src": "2431:614:91",
                        "trueBody": {
                          "id": 61349,
                          "nodeType": "Block",
                          "src": "2459:191:91",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 61336,
                                          "name": "tradeParams",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61254,
                                          "src": "2548:11:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                            "typeString": "struct IPredyPool.TradeParams memory"
                                          }
                                        },
                                        "id": 61337,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2560:6:91",
                                        "memberName": "pairId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50908,
                                        "src": "2548:18:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 61335,
                                      "name": "_getQuoteTokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50818,
                                      "src": "2526:21:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view returns (address)"
                                      }
                                    },
                                    "id": 61338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2526:41:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 61341,
                                        "name": "_predyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50731,
                                        "src": "2577:10:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                          "typeString": "contract IPredyPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                          "typeString": "contract IPredyPool"
                                        }
                                      ],
                                      "id": 61340,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2569:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 61339,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2569:7:91",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2569:19:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 61345,
                                        "name": "marginAmountUpdate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61319,
                                        "src": "2598:18:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 61344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2590:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 61343,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2590:7:91",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2590:27:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61332,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49889,
                                    "src": "2477:14:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 61334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2492:12:91",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49816,
                                  "src": "2477:27:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 61347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2477:158:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61348,
                              "nodeType": "ExpressionStatement",
                              "src": "2477:158:91"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 61395,
                  "nodeType": "IfStatement",
                  "src": "1921:1134:91",
                  "trueBody": {
                    "id": 61317,
                    "nodeType": "Block",
                    "src": "1953:372:91",
                    "statements": [
                      {
                        "assignments": [
                          61272
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61272,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "1989:5:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 61317,
                            "src": "1967:27:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                              "typeString": "struct DataType.Vault"
                            },
                            "typeName": {
                              "id": 61271,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 61270,
                                "name": "DataType.Vault",
                                "nameLocations": [
                                  "1967:8:91",
                                  "1976:5:91"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51755,
                                "src": "1967:14:91"
                              },
                              "referencedDeclaration": 51755,
                              "src": "1967:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$51755_storage_ptr",
                                "typeString": "struct DataType.Vault"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61278,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61275,
                                "name": "tradeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61254,
                                "src": "2017:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeParams memory"
                                }
                              },
                              "id": 61276,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2029:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50910,
                              "src": "2017:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 61273,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50731,
                              "src": "1997:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 61274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2008:8:91",
                            "memberName": "getVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51044,
                            "src": "1997:19:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$51755_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                            }
                          },
                          "id": 61277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1997:40:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                            "typeString": "struct DataType.Vault memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1967:70:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 61286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2091:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 61289,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2105:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                    "typeString": "contract GammaTradeMarket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                    "typeString": "contract GammaTradeMarket"
                                  }
                                ],
                                "id": 61288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2097:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61287,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2097:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2097:13:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61293,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61272,
                                    "src": "2120:5:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                      "typeString": "struct DataType.Vault memory"
                                    }
                                  },
                                  "id": 61294,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2126:6:91",
                                  "memberName": "margin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51751,
                                  "src": "2120:12:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 61292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2112:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 61291,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2112:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2112:21:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 61282,
                                      "name": "_predyPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50731,
                                      "src": "2073:10:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                        "typeString": "contract IPredyPool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                        "typeString": "contract IPredyPool"
                                      }
                                    ],
                                    "id": 61281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2065:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 61280,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2065:7:91",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 61283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2065:19:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 61279,
                                "name": "ILendingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50856,
                                "src": "2052:12:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$50856_$",
                                  "typeString": "type(contract ILendingPool)"
                                }
                              },
                              "id": 61284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2052:33:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$50856",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 61285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2086:4:91",
                            "memberName": "take",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50855,
                            "src": "2052:38:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,address,uint256) external"
                            }
                          },
                          "id": 61296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:82:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61297,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:82:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61302,
                                    "name": "tradeParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61254,
                                    "src": "2216:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                      "typeString": "struct IPredyPool.TradeParams memory"
                                    }
                                  },
                                  "id": 61303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2228:6:91",
                                  "memberName": "pairId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50908,
                                  "src": "2216:18:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 61301,
                                "name": "_getQuoteTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50818,
                                "src": "2194:21:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 61304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2194:41:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 61305,
                                  "name": "userPositions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61227,
                                  "src": "2237:13:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                                    "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                                  }
                                },
                                "id": 61308,
                                "indexExpression": {
                                  "expression": {
                                    "id": 61306,
                                    "name": "tradeParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61254,
                                    "src": "2251:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                      "typeString": "struct IPredyPool.TradeParams memory"
                                    }
                                  },
                                  "id": 61307,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2263:7:91",
                                  "memberName": "vaultId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50910,
                                  "src": "2251:19:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2237:34:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                                  "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                                }
                              },
                              "id": 61309,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2272:5:91",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61210,
                              "src": "2237:40:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61312,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61272,
                                    "src": "2287:5:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                      "typeString": "struct DataType.Vault memory"
                                    }
                                  },
                                  "id": 61313,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2293:6:91",
                                  "memberName": "margin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51751,
                                  "src": "2287:12:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 61311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2279:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 61310,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2279:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2279:21:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 61298,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "2149:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 61300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2164:12:91",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "2149:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 61315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2149:165:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61316,
                        "nodeType": "ExpressionStatement",
                        "src": "2149:165:91"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              50772
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61262,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61261,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "1897:13:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50763,
                  "src": "1897:13:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "1897:13:91"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "1729:23:91",
            "overrides": {
              "id": 61260,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61259,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1879:16:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "1879:16:91"
                }
              ],
              "src": "1870:26:91"
            },
            "parameters": {
              "id": 61258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61254,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "1792:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61397,
                  "src": "1762:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 61253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61252,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "1762:10:91",
                        "1773:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50917,
                      "src": "1762:22:91"
                    },
                    "referencedDeclaration": 50917,
                    "src": "1762:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$50917_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61257,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "1843:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61397,
                  "src": "1813:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61255,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "1813:10:91",
                        "1824:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "1813:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "1813:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:108:91"
            },
            "returnParameters": {
              "id": 61263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:0:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61577,
            "nodeType": "FunctionDefinition",
            "src": "3306:1963:91",
            "nodes": [],
            "body": {
              "id": 61576,
              "nodeType": "Block",
              "src": "3485:1784:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61412,
                      "mutability": "mutable",
                      "name": "gammaOrder",
                      "nameLocation": "3513:10:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61576,
                      "src": "3495:28:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                        "typeString": "struct GammaOrder"
                      },
                      "typeName": {
                        "id": 61411,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61410,
                          "name": "GammaOrder",
                          "nameLocations": [
                            "3495:10:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61028,
                          "src": "3495:10:91"
                        },
                        "referencedDeclaration": 61028,
                        "src": "3495:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_storage_ptr",
                          "typeString": "struct GammaOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61420,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61415,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61401,
                          "src": "3537:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 61416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3543:5:91",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50827,
                        "src": "3537:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 61417,
                            "name": "GammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61028,
                            "src": "3551:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61028_storage_ptr_$",
                              "typeString": "type(struct GammaOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 61418,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3550:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61028_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61028_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 61413,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3526:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 61414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3530:6:91",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3526:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 61419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:37:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                      "typeString": "struct GammaOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3495:68:91"
                },
                {
                  "assignments": [
                    61423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61423,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "3594:13:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61576,
                      "src": "3573:34:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 61422,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61421,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "3573:13:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 60947,
                          "src": "3573:13:91"
                        },
                        "referencedDeclaration": 60947,
                        "src": "3573:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60947_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61426,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61412,
                        "src": "3632:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 61427,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61401,
                          "src": "3644:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 61428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3650:3:91",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50829,
                        "src": "3644:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61424,
                        "name": "GammaOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61164,
                        "src": "3610:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$61164_$",
                          "typeString": "type(library GammaOrderLib)"
                        }
                      },
                      "id": 61425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3624:7:91",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61163,
                      "src": "3610:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_GammaOrder_$61028_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$60947_memory_ptr_$",
                        "typeString": "function (struct GammaOrder memory,bytes memory) pure returns (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 61429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:44:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3573:81:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 61432,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3673:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 61435,
                          "indexExpression": {
                            "expression": {
                              "id": 61433,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "3688:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3699:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61007,
                            "src": "3688:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3673:33:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 61438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3718:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3710:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3710:7:91",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3710:10:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3673:47:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3665:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:56:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61442,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:56:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61444,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61412,
                            "src": "3829:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 61445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3840:17:91",
                          "memberName": "entryTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61009,
                          "src": "3829:28:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 61446,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3861:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 61449,
                          "indexExpression": {
                            "expression": {
                              "id": 61447,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "3876:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61448,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3887:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61007,
                            "src": "3876:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3861:33:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3829:65:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3821:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3821:74:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61452,
                  "nodeType": "ExpressionStatement",
                  "src": "3821:74:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61454,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61423,
                        "src": "3919:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 61453,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61838,
                      "src": "3906:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$60947_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 61455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61456,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:27:91"
                },
                {
                  "expression": {
                    "id": 61478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61457,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61408,
                      "src": "3944:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61462,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4028:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61463,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4039:6:91",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61007,
                              "src": "4028:17:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 61464,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4063:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61465,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4074:10:91",
                              "memberName": "positionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61005,
                              "src": "4063:21:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 61466,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4102:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4113:11:91",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61011,
                              "src": "4102:22:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 61468,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4142:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61469,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4153:15:91",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61013,
                              "src": "4142:26:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61472,
                                    "name": "gammaOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61412,
                                    "src": "4197:10:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                      "typeString": "struct GammaOrder memory"
                                    }
                                  },
                                  "id": 61473,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4208:12:91",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61015,
                                  "src": "4197:23:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 61470,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4186:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 61471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4190:6:91",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "4186:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 61474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4186:35:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 61460,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51071,
                              "src": "3988:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51071_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 61461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3999:11:91",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50917,
                            "src": "3988:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$50917_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 61475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3988:247:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 61476,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61404,
                          "src": "4249:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 61458,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50731,
                          "src": "3958:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$51071",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 61459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3969:5:91",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50965,
                        "src": "3958:16:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50917_memory_ptr_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 61477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3958:315:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "3944:329:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 61479,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:329:91"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61480,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61412,
                        "src": "4288:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 61481,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4299:10:91",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61005,
                      "src": "4288:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4313:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4288:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61555,
                    "nodeType": "Block",
                    "src": "4843:173:91",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 61547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 61539,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4861:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61540,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4872:4:91",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61003,
                              "src": "4861:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$60840_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 61541,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4877:6:91",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60833,
                            "src": "4861:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 61542,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61227,
                                "src": "4887:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                                  "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                                }
                              },
                              "id": 61545,
                              "indexExpression": {
                                "expression": {
                                  "id": 61543,
                                  "name": "tradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61408,
                                  "src": "4901:11:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeResult memory"
                                  }
                                },
                                "id": 61544,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4913:7:91",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50922,
                                "src": "4901:19:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4887:34:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                                "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                              }
                            },
                            "id": 61546,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4922:5:91",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61210,
                            "src": "4887:40:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4861:66:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61554,
                        "nodeType": "IfStatement",
                        "src": "4857:149:91",
                        "trueBody": {
                          "id": 61553,
                          "nodeType": "Block",
                          "src": "4929:77:91",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 61548,
                                    "name": "IFillerMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50831,
                                    "src": "4954:13:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFillerMarket_$50831_$",
                                      "typeString": "type(contract IFillerMarket)"
                                    }
                                  },
                                  "id": 61550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4968:21:91",
                                  "memberName": "SignerIsNotVaultOwner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50823,
                                  "src": "4954:35:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 61551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4954:37:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61552,
                              "nodeType": "RevertStatement",
                              "src": "4947:44:91"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 61556,
                  "nodeType": "IfStatement",
                  "src": "4284:732:91",
                  "trueBody": {
                    "id": 61538,
                    "nodeType": "Block",
                    "src": "4316:521:91",
                    "statements": [
                      {
                        "assignments": [
                          61486
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61486,
                            "mutability": "mutable",
                            "name": "userPosition",
                            "nameLocation": "4351:12:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 61538,
                            "src": "4330:33:91",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                              "typeString": "struct GammaTradeMarket.UserPosition"
                            },
                            "typeName": {
                              "id": 61485,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 61484,
                                "name": "UserPosition",
                                "nameLocations": [
                                  "4330:12:91"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 61219,
                                "src": "4330:12:91"
                              },
                              "referencedDeclaration": 61219,
                              "src": "4330:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61491,
                        "initialValue": {
                          "baseExpression": {
                            "id": 61487,
                            "name": "userPositions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61227,
                            "src": "4366:13:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                              "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                            }
                          },
                          "id": 61490,
                          "indexExpression": {
                            "expression": {
                              "id": 61488,
                              "name": "tradeResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61408,
                              "src": "4380:11:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                "typeString": "struct IPredyPool.TradeResult memory"
                              }
                            },
                            "id": 61489,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4392:7:91",
                            "memberName": "vaultId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50922,
                            "src": "4380:19:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4366:34:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                            "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4330:70:91"
                      },
                      {
                        "expression": {
                          "id": 61498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61492,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61486,
                              "src": "4415:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61494,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4428:5:91",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61210,
                            "src": "4415:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 61495,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61412,
                                "src": "4436:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61496,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4447:4:91",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61003,
                              "src": "4436:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$60840_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 61497,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4452:6:91",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60833,
                            "src": "4436:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4415:43:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61499,
                        "nodeType": "ExpressionStatement",
                        "src": "4415:43:91"
                      },
                      {
                        "expression": {
                          "id": 61505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61500,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61486,
                              "src": "4472:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4485:8:91",
                            "memberName": "canceler",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61212,
                            "src": "4472:21:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 61503,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "4496:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61504,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4507:8:91",
                            "memberName": "canceler",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61017,
                            "src": "4496:19:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4472:43:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61506,
                        "nodeType": "ExpressionStatement",
                        "src": "4472:43:91"
                      },
                      {
                        "expression": {
                          "id": 61512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61507,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61486,
                              "src": "4529:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61509,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4542:15:91",
                            "memberName": "takeProfitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61214,
                            "src": "4529:28:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 61510,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "4560:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4571:15:91",
                            "memberName": "takeProfitPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61019,
                            "src": "4560:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4529:57:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61513,
                        "nodeType": "ExpressionStatement",
                        "src": "4529:57:91"
                      },
                      {
                        "expression": {
                          "id": 61519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61514,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61486,
                              "src": "4600:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61516,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4613:13:91",
                            "memberName": "stopLossPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61216,
                            "src": "4600:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 61517,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "4629:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4640:13:91",
                            "memberName": "stopLossPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61021,
                            "src": "4629:24:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4600:53:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 61520,
                        "nodeType": "ExpressionStatement",
                        "src": "4600:53:91"
                      },
                      {
                        "expression": {
                          "id": 61526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 61521,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61486,
                              "src": "4667:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61523,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4680:17:91",
                            "memberName": "slippageTolerance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61218,
                            "src": "4667:30:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 61524,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "4700:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61525,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4711:17:91",
                            "memberName": "slippageTolerance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61023,
                            "src": "4700:28:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "4667:61:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 61527,
                        "nodeType": "ExpressionStatement",
                        "src": "4667:61:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61531,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61408,
                                "src": "4782:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 61532,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4794:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50922,
                              "src": "4782:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 61533,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61412,
                                  "src": "4803:10:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 61534,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4814:4:91",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61003,
                                "src": "4803:15:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$60840_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 61535,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4819:6:91",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60833,
                              "src": "4803:22:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 61528,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50731,
                              "src": "4755:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 61530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4766:15:91",
                            "memberName": "updateRecepient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51000,
                            "src": "4755:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 61536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4755:71:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61537,
                        "nodeType": "ExpressionStatement",
                        "src": "4755:71:91"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61562,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61412,
                        "src": "5142:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "id": 61563,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61408,
                        "src": "5154:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 61558,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61412,
                              "src": "5104:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61559,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5115:16:91",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61025,
                            "src": "5104:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61557,
                          "name": "IOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50874,
                          "src": "5088:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOrderValidator_$50874_$",
                            "typeString": "type(contract IOrderValidator)"
                          }
                        },
                        "id": 61560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5088:44:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOrderValidator_$50874",
                          "typeString": "contract IOrderValidator"
                        }
                      },
                      "id": 61561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5133:8:91",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50873,
                      "src": "5088:53:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_GammaOrder_$61028_memory_ptr_$_t_struct$_TradeResult_$50933_memory_ptr_$returns$__$",
                        "typeString": "function (struct GammaOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 61564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5088:78:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61565,
                  "nodeType": "ExpressionStatement",
                  "src": "5088:78:91"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61567,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61412,
                            "src": "5189:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 61568,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5200:4:91",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61003,
                          "src": "5189:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60840_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 61569,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5205:6:91",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60833,
                        "src": "5189:22:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61570,
                          "name": "tradeResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61408,
                          "src": "5213:11:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "id": 61571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5225:7:91",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50922,
                        "src": "5213:19:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61566,
                      "name": "Traded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61233,
                      "src": "5182:6:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5182:51:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61573,
                  "nodeType": "EmitStatement",
                  "src": "5177:56:91"
                },
                {
                  "expression": {
                    "id": 61574,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61408,
                    "src": "5251:11:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 61409,
                  "id": 61575,
                  "nodeType": "Return",
                  "src": "5244:18:91"
                }
              ]
            },
            "documentation": {
              "id": 61398,
              "nodeType": "StructuredDocumentation",
              "src": "3067:234:91",
              "text": " @notice Verifies signature of the order and executes trade\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @dev Fillers call this function"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "3315:12:91",
            "parameters": {
              "id": 61405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61401,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3347:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61577,
                  "src": "3328:24:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 61400,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61399,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "3328:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50830,
                      "src": "3328:11:91"
                    },
                    "referencedDeclaration": 50830,
                    "src": "3328:11:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$50830_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61404,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3388:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61577,
                  "src": "3354:48:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 61403,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61402,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3354:11:91",
                        "3366:14:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51078,
                      "src": "3354:26:91"
                    },
                    "referencedDeclaration": 51078,
                    "src": "3354:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51078_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3327:76:91"
            },
            "returnParameters": {
              "id": 61409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61408,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "3468:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61577,
                  "src": "3438:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61407,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61406,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "3438:10:91",
                        "3449:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "3438:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "3438:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:43:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61616,
            "nodeType": "FunctionDefinition",
            "src": "5275:302:91",
            "nodes": [],
            "body": {
              "id": 61615,
              "nodeType": "Block",
              "src": "5325:252:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61584,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "5356:12:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61615,
                      "src": "5335:33:91",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                        "typeString": "struct GammaTradeMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 61583,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61582,
                          "name": "UserPosition",
                          "nameLocations": [
                            "5335:12:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61219,
                          "src": "5335:12:91"
                        },
                        "referencedDeclaration": 61219,
                        "src": "5335:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61588,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61585,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61227,
                      "src": "5371:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                        "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 61587,
                    "indexExpression": {
                      "id": 61586,
                      "name": "positionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61579,
                      "src": "5385:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5371:25:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                      "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5335:61:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 61594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 61590,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61584,
                              "src": "5415:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61591,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5428:5:91",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61210,
                            "src": "5415:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 61592,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5437:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5441:6:91",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5437:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5415:32:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 61599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 61595,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61584,
                              "src": "5451:12:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                                "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 61596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5464:8:91",
                            "memberName": "canceler",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61212,
                            "src": "5451:21:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 61597,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5476:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 61598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5480:6:91",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5476:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5451:35:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5415:71:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5407:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5407:80:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61602,
                  "nodeType": "ExpressionStatement",
                  "src": "5407:80:91"
                },
                {
                  "expression": {
                    "id": 61607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61603,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61584,
                        "src": "5498:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 61605,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5511:15:91",
                      "memberName": "takeProfitPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61214,
                      "src": "5498:28:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 61606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5529:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5498:32:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61608,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:32:91"
                },
                {
                  "expression": {
                    "id": 61613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 61609,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61584,
                        "src": "5540:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 61611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5553:13:91",
                      "memberName": "stopLossPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61216,
                      "src": "5540:26:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 61612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5569:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5540:30:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 61614,
                  "nodeType": "ExpressionStatement",
                  "src": "5540:30:91"
                }
              ]
            },
            "functionSelector": "514fcac7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelOrder",
            "nameLocation": "5284:11:91",
            "parameters": {
              "id": 61580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61579,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "5304:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61616,
                  "src": "5296:18:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5296:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5295:20:91"
            },
            "returnParameters": {
              "id": 61581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5325:0:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61706,
            "nodeType": "FunctionDefinition",
            "src": "5844:1057:91",
            "nodes": [],
            "body": {
              "id": 61705,
              "nodeType": "Block",
              "src": "6010:891:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61630
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61630,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "6041:12:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61705,
                      "src": "6020:33:91",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                        "typeString": "struct GammaTradeMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 61629,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61628,
                          "name": "UserPosition",
                          "nameLocations": [
                            "6020:12:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61219,
                          "src": "6020:12:91"
                        },
                        "referencedDeclaration": 61219,
                        "src": "6020:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61634,
                  "initialValue": {
                    "baseExpression": {
                      "id": 61631,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61227,
                      "src": "6056:13:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$61219_storage_$",
                        "typeString": "mapping(uint256 => struct GammaTradeMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 61633,
                    "indexExpression": {
                      "id": 61632,
                      "name": "positionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61619,
                      "src": "6070:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6056:25:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$61219_storage",
                      "typeString": "struct GammaTradeMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6020:61:91"
                },
                {
                  "assignments": [
                    61639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61639,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "6114:5:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61705,
                      "src": "6092:27:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 61638,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61637,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "6092:8:91",
                            "6101:5:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51755,
                          "src": "6092:14:91"
                        },
                        "referencedDeclaration": 51755,
                        "src": "6092:14:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$51755_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61644,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61642,
                        "name": "positionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61619,
                        "src": "6142:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61640,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50731,
                        "src": "6122:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 61641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6133:8:91",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51044,
                      "src": "6122:19:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$51755_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                      }
                    },
                    "id": 61643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6122:31:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                      "typeString": "struct DataType.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6092:61:91"
                },
                {
                  "assignments": [
                    61646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61646,
                      "mutability": "mutable",
                      "name": "sqrtPrice",
                      "nameLocation": "6172:9:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61705,
                      "src": "6164:17:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 61645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6164:7:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61653,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61649,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61639,
                            "src": "6213:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                              "typeString": "struct DataType.Vault memory"
                            }
                          },
                          "id": 61650,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6219:12:91",
                          "memberName": "openPosition",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51754,
                          "src": "6213:18:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                            "typeString": "struct Perp.UserStatus memory"
                          }
                        },
                        "id": 61651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6232:6:91",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 52014,
                        "src": "6213:25:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 61647,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50731,
                        "src": "6184:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 61648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6195:17:91",
                      "memberName": "getSqrtIndexPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51028,
                      "src": "6184:28:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 61652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6184:55:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6164:75:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 61660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 61655,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61639,
                                "src": "6286:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                  "typeString": "struct DataType.Vault memory"
                                }
                              },
                              "id": 61656,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6292:12:91",
                              "memberName": "openPosition",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51754,
                              "src": "6286:18:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                                "typeString": "struct Perp.UserStatus memory"
                              }
                            },
                            "id": 61657,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6305:4:91",
                            "memberName": "perp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52023,
                            "src": "6286:23:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PositionStatus_$51952_memory_ptr",
                              "typeString": "struct Perp.PositionStatus memory"
                            }
                          },
                          "id": 61658,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6310:6:91",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51949,
                          "src": "6286:30:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 61659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6319:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6286:34:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 61661,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61630,
                        "src": "6334:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                        }
                      },
                      {
                        "id": 61662,
                        "name": "sqrtPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61646,
                        "src": "6360:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                          "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61654,
                      "name": "_validateTPSLCondition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61745,
                      "src": "6250:22:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_struct$_UserPosition_$61219_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,struct GammaTradeMarket.UserPosition memory,uint256) pure"
                      }
                    },
                    "id": 61663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6250:129:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61664,
                  "nodeType": "ExpressionStatement",
                  "src": "6250:129:91"
                },
                {
                  "expression": {
                    "id": 61688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61665,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61626,
                      "src": "6390:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 61670,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61639,
                                  "src": "6474:5:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                    "typeString": "struct DataType.Vault memory"
                                  }
                                },
                                "id": 61671,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6480:12:91",
                                "memberName": "openPosition",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51754,
                                "src": "6474:18:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                                  "typeString": "struct Perp.UserStatus memory"
                                }
                              },
                              "id": 61672,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6493:6:91",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52014,
                              "src": "6474:25:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61673,
                              "name": "positionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61619,
                              "src": "6517:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "6545:31:91",
                              "subExpression": {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 61674,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61639,
                                      "src": "6546:5:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                        "typeString": "struct DataType.Vault memory"
                                      }
                                    },
                                    "id": 61675,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6552:12:91",
                                    "memberName": "openPosition",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51754,
                                    "src": "6546:18:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                                      "typeString": "struct Perp.UserStatus memory"
                                    }
                                  },
                                  "id": 61676,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6565:4:91",
                                  "memberName": "perp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52023,
                                  "src": "6546:23:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PositionStatus_$51952_memory_ptr",
                                    "typeString": "struct Perp.PositionStatus memory"
                                  }
                                },
                                "id": 61677,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6570:6:91",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51949,
                                "src": "6546:30:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 61683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "6594:35:91",
                              "subExpression": {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 61679,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61639,
                                      "src": "6595:5:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                        "typeString": "struct DataType.Vault memory"
                                      }
                                    },
                                    "id": 61680,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6601:12:91",
                                    "memberName": "openPosition",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51754,
                                    "src": "6595:18:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                                      "typeString": "struct Perp.UserStatus memory"
                                    }
                                  },
                                  "id": 61681,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6614:8:91",
                                  "memberName": "sqrtPerp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52026,
                                  "src": "6595:27:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SqrtPositionStatus_$51965_memory_ptr",
                                    "typeString": "struct Perp.SqrtPositionStatus memory"
                                  }
                                },
                                "id": 61682,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6623:6:91",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51954,
                                "src": "6595:34:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 61684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6647:2:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 61668,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51071,
                              "src": "6434:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51071_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 61669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6445:11:91",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50917,
                            "src": "6434:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$50917_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 61685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6434:229:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 61686,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61622,
                          "src": "6677:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 61666,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50731,
                          "src": "6404:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$51071",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 61667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6415:5:91",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50965,
                        "src": "6404:16:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50917_memory_ptr_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 61687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6404:297:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "6390:311:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 61689,
                  "nodeType": "ExpressionStatement",
                  "src": "6390:311:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61693,
                        "name": "sqrtPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61646,
                        "src": "6753:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61694,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61626,
                        "src": "6776:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 61695,
                          "name": "userPosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61630,
                          "src": "6801:12:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                            "typeString": "struct GammaTradeMarket.UserPosition storage pointer"
                          }
                        },
                        "id": 61696,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6814:17:91",
                        "memberName": "slippageTolerance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61218,
                        "src": "6801:30:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 61702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 61697,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61639,
                                "src": "6845:5:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                  "typeString": "struct DataType.Vault memory"
                                }
                              },
                              "id": 61698,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6851:12:91",
                              "memberName": "openPosition",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51754,
                              "src": "6845:18:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStatus_$52033_memory_ptr",
                                "typeString": "struct Perp.UserStatus memory"
                              }
                            },
                            "id": 61699,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6864:8:91",
                            "memberName": "sqrtPerp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52026,
                            "src": "6845:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SqrtPositionStatus_$51965_memory_ptr",
                              "typeString": "struct Perp.SqrtPositionStatus memory"
                            }
                          },
                          "id": 61700,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6873:6:91",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51954,
                          "src": "6845:34:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 61701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6883:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6845:39:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 61690,
                        "name": "LiquidationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59148,
                        "src": "6712:16:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidationLogic_$59148_$",
                          "typeString": "type(library LiquidationLogic)"
                        }
                      },
                      "id": 61692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6729:10:91",
                      "memberName": "checkPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59147,
                      "src": "6712:27:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_struct$_TradeResult_$50933_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,struct IPredyPool.TradeResult memory,uint256,bool) pure"
                      }
                    },
                    "id": 61703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6712:182:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61704,
                  "nodeType": "ExpressionStatement",
                  "src": "6712:182:91"
                }
              ]
            },
            "documentation": {
              "id": 61617,
              "nodeType": "StructuredDocumentation",
              "src": "5583:256:91",
              "text": " @notice Closes a predict position\n @param positionId The id of position\n @param settlementData The route of settlement created by filler\n @return tradeResult The result of trade\n @dev Anyone can call this function"
            },
            "functionSelector": "333c6a3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "5853:5:91",
            "parameters": {
              "id": 61623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61619,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "5867:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61706,
                  "src": "5859:18:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5859:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61622,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "5913:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61706,
                  "src": "5879:48:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 61621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61620,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "5879:11:91",
                        "5891:14:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51078,
                      "src": "5879:26:91"
                    },
                    "referencedDeclaration": 51078,
                    "src": "5879:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51078_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5858:70:91"
            },
            "returnParameters": {
              "id": 61627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61626,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "5993:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61706,
                  "src": "5963:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61625,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61624,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "5963:10:91",
                        "5974:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "5963:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "5963:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5962:43:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61745,
            "nodeType": "FunctionDefinition",
            "src": "6907:406:91",
            "nodes": [],
            "body": {
              "id": 61744,
              "nodeType": "Block",
              "src": "7024:289:91",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 61716,
                    "name": "isLong",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61708,
                    "src": "7037:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61742,
                    "nodeType": "Block",
                    "src": "7179:128:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 61739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61731,
                                  "name": "sqrtIndexPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61713,
                                  "src": "7201:14:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 61732,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61711,
                                    "src": "7219:12:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$61219_memory_ptr",
                                      "typeString": "struct GammaTradeMarket.UserPosition memory"
                                    }
                                  },
                                  "id": 61733,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7232:15:91",
                                  "memberName": "takeProfitPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61214,
                                  "src": "7219:28:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7201:46:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 61735,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61711,
                                    "src": "7251:12:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$61219_memory_ptr",
                                      "typeString": "struct GammaTradeMarket.UserPosition memory"
                                    }
                                  },
                                  "id": 61736,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7264:13:91",
                                  "memberName": "stopLossPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61216,
                                  "src": "7251:26:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 61737,
                                  "name": "sqrtIndexPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61713,
                                  "src": "7281:14:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7251:44:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7201:94:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 61730,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7193:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 61740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7193:103:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61741,
                        "nodeType": "ExpressionStatement",
                        "src": "7193:103:91"
                      }
                    ]
                  },
                  "id": 61743,
                  "nodeType": "IfStatement",
                  "src": "7034:273:91",
                  "trueBody": {
                    "id": 61729,
                    "nodeType": "Block",
                    "src": "7045:128:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 61726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 61718,
                                  "name": "sqrtIndexPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61713,
                                  "src": "7067:14:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 61719,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61711,
                                    "src": "7085:12:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$61219_memory_ptr",
                                      "typeString": "struct GammaTradeMarket.UserPosition memory"
                                    }
                                  },
                                  "id": 61720,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7098:13:91",
                                  "memberName": "stopLossPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61216,
                                  "src": "7085:26:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7067:44:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 61725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 61722,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61711,
                                    "src": "7115:12:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$61219_memory_ptr",
                                      "typeString": "struct GammaTradeMarket.UserPosition memory"
                                    }
                                  },
                                  "id": 61723,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7128:15:91",
                                  "memberName": "takeProfitPrice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61214,
                                  "src": "7115:28:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 61724,
                                  "name": "sqrtIndexPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61713,
                                  "src": "7147:14:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7115:46:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7067:94:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 61717,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7059:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 61727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7059:103:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61728,
                        "nodeType": "ExpressionStatement",
                        "src": "7059:103:91"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateTPSLCondition",
            "nameLocation": "6916:22:91",
            "parameters": {
              "id": 61714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61708,
                  "mutability": "mutable",
                  "name": "isLong",
                  "nameLocation": "6944:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61745,
                  "src": "6939:11:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61707,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6939:4:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61711,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "6972:12:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61745,
                  "src": "6952:32:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$61219_memory_ptr",
                    "typeString": "struct GammaTradeMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 61710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61709,
                      "name": "UserPosition",
                      "nameLocations": [
                        "6952:12:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61219,
                      "src": "6952:12:91"
                    },
                    "referencedDeclaration": 61219,
                    "src": "6952:12:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$61219_storage_ptr",
                      "typeString": "struct GammaTradeMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61713,
                  "mutability": "mutable",
                  "name": "sqrtIndexPrice",
                  "nameLocation": "6994:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61745,
                  "src": "6986:22:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6986:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6938:71:91"
            },
            "returnParameters": {
              "id": 61715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7024:0:91"
            },
            "scope": 61839,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61787,
            "nodeType": "FunctionDefinition",
            "src": "7319:568:91",
            "nodes": [],
            "body": {
              "id": 61786,
              "nodeType": "Block",
              "src": "7489:398:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61761,
                      "mutability": "mutable",
                      "name": "tradeResult",
                      "nameLocation": "7599:11:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61786,
                      "src": "7569:41:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult"
                      },
                      "typeName": {
                        "id": 61760,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61759,
                          "name": "IPredyPool.TradeResult",
                          "nameLocations": [
                            "7569:10:91",
                            "7580:11:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50933,
                          "src": "7569:22:91"
                        },
                        "referencedDeclaration": 50933,
                        "src": "7569:22:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                          "typeString": "struct IPredyPool.TradeResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61781,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 61766,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61748,
                              "src": "7684:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61767,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7695:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61007,
                            "src": "7684:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 61768,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61748,
                              "src": "7703:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61769,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7714:10:91",
                            "memberName": "positionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61005,
                            "src": "7703:21:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 61770,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61748,
                              "src": "7726:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61771,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7737:11:91",
                            "memberName": "tradeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61011,
                            "src": "7726:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "expression": {
                              "id": 61772,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61748,
                              "src": "7750:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61773,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7761:15:91",
                            "memberName": "tradeAmountSqrt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61013,
                            "src": "7750:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 61776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7784:2:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 61775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7778:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 61774,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7778:5:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7778:9:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 61764,
                            "name": "IPredyPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51071,
                            "src": "7644:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51071_$",
                              "typeString": "type(contract IPredyPool)"
                            }
                          },
                          "id": 61765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7655:11:91",
                          "memberName": "TradeParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50917,
                          "src": "7644:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeParams_$50917_storage_ptr_$",
                            "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                          }
                        },
                        "id": 61778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7644:157:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 61779,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61751,
                        "src": "7815:14:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 61762,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61754,
                        "src": "7613:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                          "typeString": "contract PredyPoolQuoter"
                        }
                      },
                      "id": 61763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7620:10:91",
                      "memberName": "quoteTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51275,
                      "src": "7613:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50917_memory_ptr_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                        "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 61780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7613:226:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7569:270:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61783,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61761,
                        "src": "7868:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "id": 61782,
                      "name": "revertTradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61802,
                      "src": "7850:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_TradeResult_$50933_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPredyPool.TradeResult memory) pure"
                      }
                    },
                    "id": 61784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7850:30:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61785,
                  "nodeType": "ExpressionStatement",
                  "src": "7850:30:91"
                }
              ]
            },
            "functionSelector": "1b17fb0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExecuteOrder",
            "nameLocation": "7328:17:91",
            "parameters": {
              "id": 61755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61748,
                  "mutability": "mutable",
                  "name": "gammaOrder",
                  "nameLocation": "7373:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61787,
                  "src": "7355:28:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GammaOrder_$61028_memory_ptr",
                    "typeString": "struct GammaOrder"
                  },
                  "typeName": {
                    "id": 61747,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61746,
                      "name": "GammaOrder",
                      "nameLocations": [
                        "7355:10:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61028,
                      "src": "7355:10:91"
                    },
                    "referencedDeclaration": 61028,
                    "src": "7355:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$61028_storage_ptr",
                      "typeString": "struct GammaOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61751,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "7427:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61787,
                  "src": "7393:48:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 61750,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61749,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "7393:11:91",
                        "7405:14:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51078,
                      "src": "7393:26:91"
                    },
                    "referencedDeclaration": 51078,
                    "src": "7393:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51078_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61754,
                  "mutability": "mutable",
                  "name": "quoter",
                  "nameLocation": "7467:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61787,
                  "src": "7451:22:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                    "typeString": "contract PredyPoolQuoter"
                  },
                  "typeName": {
                    "id": 61753,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61752,
                      "name": "PredyPoolQuoter",
                      "nameLocations": [
                        "7451:15:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51460,
                      "src": "7451:15:91"
                    },
                    "referencedDeclaration": 51460,
                    "src": "7451:15:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                      "typeString": "contract PredyPoolQuoter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7345:134:91"
            },
            "returnParameters": {
              "id": 61756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7489:0:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61802,
            "nodeType": "FunctionDefinition",
            "src": "7893:221:91",
            "nodes": [],
            "body": {
              "id": 61801,
              "nodeType": "Block",
              "src": "7977:137:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61794,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "8000:4:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61801,
                      "src": "7987:17:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61793,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7987:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61799,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61797,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61790,
                        "src": "8018:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "id": 61795,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "8007:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 61796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8011:6:91",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "8007:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 61798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8007:23:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7987:43:91"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8050:58:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8075:2:91",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8079:4:91"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8071:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8071:13:91"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "8092:4:91"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "8086:5:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8086:11:91"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8064:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8064:34:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8064:34:91"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 61794,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8079:4:91",
                      "valueSize": 1
                    },
                    {
                      "declaration": 61794,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8092:4:91",
                      "valueSize": 1
                    }
                  ],
                  "id": 61800,
                  "nodeType": "InlineAssembly",
                  "src": "8041:67:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revertTradeResult",
            "nameLocation": "7902:17:91",
            "parameters": {
              "id": 61791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61790,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "7950:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61802,
                  "src": "7920:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61789,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61788,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "7920:10:91",
                        "7931:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "7920:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "7920:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7919:43:91"
            },
            "returnParameters": {
              "id": 61792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7977:0:91"
            },
            "scope": 61839,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61838,
            "nodeType": "FunctionDefinition",
            "src": "8120:351:91",
            "nodes": [],
            "body": {
              "id": 61837,
              "nodeType": "Block",
              "src": "8179:292:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61808,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61805,
                        "src": "8189:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 61810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8195:8:91",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60988,
                      "src": "8189:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$60947_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$60947_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 61811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8189:16:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61812,
                  "nodeType": "ExpressionStatement",
                  "src": "8189:16:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61816,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61805,
                            "src": "8264:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61817,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8270:8:91",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60910,
                          "src": "8264:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$60947_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$60947_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 61818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8264:16:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61823,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8324:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61839",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 61822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8316:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61821,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8316:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8316:13:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 61819,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61805,
                            "src": "8294:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8300:15:91",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60930,
                          "src": "8294:21:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$60947_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$60947_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 61825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8294:36:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 61826,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61805,
                            "src": "8344:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61827,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8350:4:91",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60938,
                          "src": "8344:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60840_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 61828,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8355:6:91",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60833,
                        "src": "8344:17:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61829,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61805,
                          "src": "8375:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 61830,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8381:4:91",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60944,
                        "src": "8375:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 61831,
                          "name": "GammaOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61164,
                          "src": "8399:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$61164_$",
                            "typeString": "type(library GammaOrderLib)"
                          }
                        },
                        "id": 61832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8413:18:91",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61080,
                        "src": "8399:32:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 61833,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61805,
                          "src": "8445:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 61834,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8451:3:91",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60946,
                        "src": "8445:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61813,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61222,
                        "src": "8216:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$46897",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 61815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8225:25:91",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46990,
                      "src": "8216:34:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 61835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8216:248:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61836,
                  "nodeType": "ExpressionStatement",
                  "src": "8216:248:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "8129:12:91",
            "parameters": {
              "id": 61806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61805,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "8163:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61838,
                  "src": "8142:26:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$60947_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 61804,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61803,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "8142:13:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60947,
                      "src": "8142:13:91"
                    },
                    "referencedDeclaration": 60947,
                    "src": "8142:13:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$60947_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8141:28:91"
            },
            "returnParameters": {
              "id": 61807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8179:0:91"
            },
            "scope": 61839,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 61190,
              "name": "IFillerMarket",
              "nameLocations": [
                "1057:13:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50831,
              "src": "1057:13:91"
            },
            "id": 61191,
            "nodeType": "InheritanceSpecifier",
            "src": "1057:13:91"
          },
          {
            "baseName": {
              "id": 61192,
              "name": "BaseHookCallback",
              "nameLocations": [
                "1072:16:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50819,
              "src": "1072:16:91"
            },
            "id": 61193,
            "nodeType": "InheritanceSpecifier",
            "src": "1072:16:91"
          }
        ],
        "canonicalName": "GammaTradeMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 61189,
          "nodeType": "StructuredDocumentation",
          "src": "981:46:91",
          "text": " @notice Gamma trade market contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61839,
          50819,
          50844,
          50831
        ],
        "name": "GammaTradeMarket",
        "nameLocation": "1037:16:91",
        "scope": 61840,
        "usedErrors": [
          50737,
          50823,
          50825,
          58665,
          58667,
          60950,
          60953
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 91
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "settlementData",
          "type": "bytes"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "820:3610:52:-:0;;;1161:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;298:10:57;:22;;-1:-1:-1;;;;;298:22:57;;;-1:-1:-1;;;;;;298:22:57;;;;;;;1298:18:52::1;:38:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;298:22:57;1346:35:52;;;;;::::1;::::0;::::1;;::::0;;820:3610;;14:143:124;-1:-1:-1;;;;;101:31:124;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:575::-;270:6;278;286;339:2;327:9;318:7;314:23;310:32;307:52;;;355:1;352;345:12;307:52;387:9;381:16;406:43;443:5;406:43;:::i;:::-;518:2;503:18;;497:25;468:5;;-1:-1:-1;531:45:124;497:25;531:45;:::i;:::-;647:2;632:18;;626:25;595:7;;-1:-1:-1;660:45:124;626:25;660:45;:::i;:::-;724:7;714:17;;;162:575;;;;;:::o;:::-;820:3610:52;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631e7f13701461005157806374304a7914610097578063944b560b146100ac578063a966d863146100bf575b600080fd5b61007a61005f366004610af7565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100aa6100a5366004610c84565b6100df565b005b6100aa6100ba366004610d7f565b610174565b6100d26100cd366004610e97565b610272565b60405161008e9190610fc1565b6000546040805180820182523081526020810184905290516391d0370f60e01b81526001600160a01b03909216916391d0370f9161012b918691670de0b6b3a76400009160040161104f565b610180604051808303816000875af115801561014b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016f9190611077565b505050565b6000546001600160a01b0316331461019f57604051637542ed5d60e11b815260040160405180910390fd5b600082608001518060200190518101906101b9919061112f565b905060008113156101e15760025460005461016f916001600160a01b0390811691168361051e565b600081121561016f576000546001600160a01b031663c6b6d34060013061020785611148565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b50505050505050565b61027a6109a4565b60025460009081906102969086906001600160a01b0316610622565b915091506102a3816106b2565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a0016040528085604001516001600160401b031681526020018560200151815260200185606001518152602001856080015181526020018560a0015160405160200161031891815260200190565b604051602081830303815290604052815250866040518363ffffffff1660e01b8152600401610348929190611172565b610180604051808303816000875af1158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190611077565b925081602001516000036104365781516020908101518482018051600090815260038452604080822080546001600160a01b0319166001600160a01b0395861617905590549151865190940151905163055a6d9b60e51b8152600481019490945282166024840152169063ab4db36090604401600060405180830381600087803b15801561041957600080fd5b505af115801561042d573d6000803e3d6000fd5b5050505061047b565b60208084015160009081526003825260409020548351909101516001600160a01b0390811691161461047b5760405163708c545360e01b815260040160405180910390fd5b8160e001516001600160a01b0316630e136af583856040518363ffffffff1660e01b81526004016104ad9291906111ca565b60006040518083038186803b1580156104c557600080fd5b505afa1580156104d9573d6000803e3d6000fd5b5050505060008260a0015112156105155760025482516020015160a0840151610515926001600160a01b0316919061051090611148565b61051e565b50505b92915050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161057a919061129f565b6000604051808303816000865af19150503d80600081146105b7576040519150601f19603f3d011682016040523d82523d6000602084013e6105bc565b606091505b50915091508180156105e65750805115806105e65750808060200190518101906105e691906112bb565b61061b5760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b61062a610a18565b610632610a7c565b836000015180602001905181019061064a91906113c2565b91506000808360a0015113610660576000610666565b8260a001515b9050826040518060a0016040528085600001518152602001866001600160a01b0316815260200183815260200161069c86610853565b8152602097880151970196909652959350505050565b6106bb816108e6565b6001546001600160a01b031663137c29fe610741836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b604080518082018252600080825260209182015281518083018352308152918601519082015284600001516020015185606001516040516020016107849061149c565b60408051601f1981840301815260808301909152604780835290919061176960208301396040516020016107b99291906115a9565b60408051601f1981840301815260608301909152602e80835290919061173b60208301396040516020016107ee9291906115d8565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526108259695949392600401611629565b600060405180830381600087803b15801561083f57600080fd5b505af115801561061b573d6000803e3d6000fd5b60006040516020016108649061149c565b60405160208183030381529060405280519060200120610887836000015161093a565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516040516020016108c99a999897969594939291906116cc565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b0316301461091157604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156109375760405163387b2e5560e11b815260040160405180910390fd5b50565b60006040518060800160405280604781526020016117696047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c0016108c9565b6040518060e001604052806109e86040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101200160405280610a2c610abd565b81526020016000815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001606081525090565b6040518060a00160405280610a8f610abd565b815260200160006001600160a01b031681526020016000815260200160008019168152602001606081525090565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b600060208284031215610b0957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610b4857610b48610b10565b60405290565b60405160c081016001600160401b0381118282101715610b4857610b48610b10565b60405160a081016001600160401b0381118282101715610b4857610b48610b10565b604080519081016001600160401b0381118282101715610b4857610b48610b10565b60405161012081016001600160401b0381118282101715610b4857610b48610b10565b604051601f8201601f191681016001600160401b0381118282101715610bff57610bff610b10565b604052919050565b60006001600160401b03821115610c2057610c20610b10565b50601f01601f191660200190565b600082601f830112610c3f57600080fd5b8135610c52610c4d82610c07565b610bd7565b818152846020838601011115610c6757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610c9757600080fd5b8235915060208301356001600160401b03811115610cb457600080fd5b610cc085828601610c2e565b9150509250929050565b6000818303610180811215610cde57600080fd5b610ce6610b26565b915060c0811215610cf657600080fd5b50610cff610b4e565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215610d9357600080fd5b82356001600160401b0380821115610daa57600080fd5b9084019060a08287031215610dbe57600080fd5b610dc6610b70565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115610dfa57600080fd5b610e0688828601610c2e565b608083015250809450505050610e1f8460208501610cca565b90509250929050565b6001600160a01b038116811461093757600080fd5b600060408284031215610e4f57600080fd5b610e57610b92565b90508135610e6481610e28565b815260208201356001600160401b03811115610e7f57600080fd5b610e8b84828501610c2e565b60208301525092915050565b60008060408385031215610eaa57600080fd5b82356001600160401b0380821115610ec157600080fd5b9084019060408287031215610ed557600080fd5b610edd610b92565b823582811115610eec57600080fd5b610ef888828601610c2e565b825250602083013582811115610f0d57600080fd5b610f1988828601610c2e565b602083015250809450506020850135915080821115610f3757600080fd5b50610cc085828601610e3d565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b61018081016105188284610f44565b60005b83811015610feb578181015183820152602001610fd3565b50506000910152565b6000815180845261100c816020860160208601610fd0565b601f01601f19169290920160200192915050565b60018060a01b03815116825260006020820151604060208501526110476040850182610ff4565b949350505050565b83815282602082015260606040820152600061106e6060830184611020565b95945050505050565b600081830361018081121561108b57600080fd5b611093610b26565b60c08212156110a157600080fd5b6110a9610b4e565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b60006020828403121561114157600080fd5b5051919050565b6000600160ff1b820161116b57634e487b7160e01b600052601160045260246000fd5b5060000390565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526111b660e0840182610ff4565b9050828103602084015261106e8185611020565b6101a0808252835180516001600160a01b03908116848401526020820151166101c084015260408101516101e08401526060015161020083015260009050602084015161022083015260408401516001600160401b038116610240840152506060840151610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e08401516001600160a01b0381166102e084015250610100840151610180610300840152611288610320840182610ff4565b9150506112986020830184610f44565b9392505050565b600082516112b1818460208701610fd0565b9190910192915050565b6000602082840312156112cd57600080fd5b8151801515811461129857600080fd5b80516112e881610e28565b919050565b6000608082840312156112ff57600080fd5b604051608081018181106001600160401b038211171561132157611321610b10565b8060405250809150825161133481610e28565b8152602083015161134481610e28565b8060208301525060408301516040820152606083015160608201525092915050565b80516001600160401b03811681146112e857600080fd5b600082601f83011261138e57600080fd5b815161139c610c4d82610c07565b8181528460208386010111156113b157600080fd5b611047826020830160208701610fd0565b6000602082840312156113d457600080fd5b81516001600160401b03808211156113eb57600080fd5b90830190610180828603121561140057600080fd5b611408610bb4565b61141286846112ed565b81526080830151602082015261142a60a08401611366565b604082015260c0830151606082015260e083015160808201526101008084015160a083015261012084015160c083015261146761014085016112dd565b60e08301526101608401518381111561147f57600080fd5b61148b8882870161137d565b918301919091525095945050505050565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b603b8201527f696e74323536207472616465416d6f756e74537172742c000000000000000000604e820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b60658201527f75696e74323536206d617267696e526174696f616464726573732076616c696460798201527f61746f724164647265737362797465732076616c69646174696f6e4461746129609982015260b90190565b600083516115bb818460208801610fd0565b8351908301906115cf818360208801610fd0565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351611606816013850160208801610fd0565b83519083019061161d816013840160208801610fd0565b01601301949350505050565b600061014061164c838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152611680608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e0830186905261010083018190526116aa81840186610ff4565b90508281036101208401526116bf8185610ff4565b9998505050505050505050565b60006101408c83528b60208401528a60408401526001600160401b038a1660608401528860808401528760a08401528660c08401528560e084015260018060a01b0385166101008401528061012084015261172981840185610ff4565b9d9c5050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122080c3b5b3364fe17aed5bfff3b3142fc5877bfca7ce12618a6f8b1dbff019cf8d64736f6c63430008130033",
    "sourceMap": "820:3610:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1098:56:52;;;;;;-1:-1:-1;;;;;472:32:124;;;454:51;;442:2;427:18;1098:56:52;;;;;;;;3866:205;;;;;;:::i;:::-;;:::i;:::-;;1394:558;;;;;;:::i;:::-;;:::i;2197:1472::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3866:205::-;3960:10;;4006:57;;;;;;;;4041:4;4006:57;;;;;;;;3960:104;;-1:-1:-1;;;3960:104:52;;-1:-1:-1;;;;;3960:10:52;;;;:30;;:104;;3991:7;;4000:4;;3960:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3866:205;;:::o;1394:558::-;394:10:57;;-1:-1:-1;;;;;394:10:57;372;:33;368:68;;414:22;;-1:-1:-1;;;414:22:57;;;;;;;;;;;368:68;1589:25:52::1;1628:11;:21;;;1617:43;;;;;;;;;;;;:::i;:::-;1589:71;;1696:1;1675:18;:22;1671:275;;;1741:18;::::0;::::1;1769:10:::0;1713:97:::1;::::0;-1:-1:-1;;;;;1741:18:52;;::::1;::::0;1769:10:::1;1790:18:::0;1713:27:::1;:97::i;1671:275::-;1852:1;1831:18;:22;1827:119;;;1869:10;::::0;-1:-1:-1;;;;;1869:10:52::1;:15;:10:::0;1899:4:::1;1914:19;1915:18:::0;1914:19:::1;:::i;:::-;1869:66;::::0;-1:-1:-1;;;;;;1869:66:52::1;::::0;;;;;;11041:14:124;;11034:22;1869:66:52::1;::::0;::::1;11016:41:124::0;-1:-1:-1;;;;;11093:32:124;;;11073:18;;;11066:60;11142:18;;;11135:34;10989:18;;1869:66:52::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1579:373;1394:558:::0;;:::o;2197:1472::-;2329:41;;:::i;:::-;2496:18;;2387:28;;;;2467:48;;2489:5;;-1:-1:-1;;;;;2496:18:52;2467:21;:48::i;:::-;2386:129;;;;2526:27;2539:13;2526:12;:27::i;:::-;2578:10;;;;;;;;-1:-1:-1;;;;;2578:10:52;-1:-1:-1;;;;;2578:16:52;;2608:247;;;;;;;;2648:10;:17;;;-1:-1:-1;;;;;2608:247:52;;;;;2683:10;:21;;;2608:247;;;;2722:10;:22;;;2608:247;;;;2762:10;:26;;;2608:247;;;;2817:10;:23;;;2806:35;;;;;;11324:25:124;;11312:2;11297:18;;11180:175;2806:35:52;;;;;;;;;;;;;2608:247;;;2869:14;2578:315;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2564:329;;2908:10;:21;;;2933:1;2908:26;2904:375;;2987:15;;:22;;;;;2964:19;;;;;2987:15;2950:34;;;:13;:34;;;;;;:59;;-1:-1:-1;;;;;;2950:59:52;-1:-1:-1;;;;;2950:59:52;;;;;;3024:10;;3051:19;;3072:15;;:22;;;;3024:71;;-1:-1:-1;;;3024:71:52;;;;;12348:25:124;;;;12409:32;;12389:18;;;12382:60;3024:10:52;;:26;;12321:18:124;;3024:71:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:375;;;3170:19;;;;;3156:34;;;;:13;:34;;;;;;3130:15;;:22;;;;-1:-1:-1;;;;;3130:60:52;;;3156:34;;3130:60;3126:143;;3217:37;;-1:-1:-1;;;3217:37:52;;;;;;;;;;;3126:143;3367:10;:27;;;-1:-1:-1;;;;;3351:53:52;;3405:10;3417:11;3351:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:1;3444:10;:23;;;:27;3440:194;;;3532:18;;3552:15;;:22;;;3585:23;;;;3487:136;;-1:-1:-1;;;;;3532:18:52;;3552:22;3584:24;;;:::i;:::-;3487:27;:136::i;:::-;3644:18;;2197:1472;;;;;:::o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;14239:32:124;;;1381:59:51;;;14221:51:124;14288:18;;;;14281:34;;;1381:59:51;;;;;;;;;;14194:18:124;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;15102:2:124;1451:72:51;;;15084:21:124;15141:1;15121:18;;;15114:29;-1:-1:-1;;;15159:18:124;;;15152:32;15201:18;;1451:72:51;;;;;;;;1324:206;;1221:309;;;:::o;2234:456:90:-;2353:30;;:::i;:::-;2385:20;;:::i;:::-;2447:5;:11;;;2436:37;;;;;;;;;;;;:::i;:::-;2421:52;;2484:14;2529:1;2501:12;:25;;;:29;:70;;2570:1;2501:70;;;2541:12;:25;;;2501:70;2484:87;;2590:12;2604:78;;;;;;;;2618:12;:17;;;2604:78;;;;2637:5;-1:-1:-1;;;;;2604:78:90;;;;;2644:6;2604:78;;;;2652:18;2657:12;2652:4;:18::i;:::-;2604:78;;;2672:9;;;;2604:78;;;;;;2582:101;2234:456;-1:-1:-1;;;;2234:456:90:o;4077:351:52:-;4146:16;:5;:14;:16::i;:::-;4173:8;;-1:-1:-1;;;;;4173:8:52;:34;4221:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:93;;;569:79;;;;;613:11;;;;;-1:-1:-1;;;;;569:79:93;506:233;;;;569:79;;;634:12;;;;569:79;;;;506:233;;;669:10;;:16;;;506:233;;;;;;;709:10;;:19;;;;506:233;;;;;346:400;4221:16:52;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:93;;;;;;;4281:4:52;998:84:93;;1068:12;;;;998:84;;;;4301:5:52;:10;;;:17;;;4332:5;:10;;;741:309:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;741:309:90;;;;;;1227:28;;;;;;;;;;741:309;;;1227:28;741:309;1227:28;;;1190:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1190:66:90;;;;;;1567:22;;;;;;;;;;1190:66;;;1567:22;1190:66;1567:22;;;1515:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1515:75:90;;;;;;;;;;4402:9:52;;;;-1:-1:-1;;;;;;4173:248:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:515:90;1775:7;741:309;;;;;;;:::i;:::-;;;;;;;;;;;;;1314:29;;;;;;1893:17;:5;:10;;;:15;:17::i;:::-;1928:5;:16;;;1962:5;:12;;;1992:5;:17;;;2027:5;:21;;;2066:5;:18;;;2102:5;:17;;;2137:5;:22;;;2177:5;:20;;;1824:387;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1801:420;;;;;;1794:427;;1713:515;;;:::o;549:297:96:-;656:18;;:25;-1:-1:-1;;;;;631:51:96;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:96;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:96;;;;;;;;;;;741:99;549:297;:::o;539:189:92:-;599:7;426:15;;;;;;;;;;;;;;;;;416:26;;;;;;;668:11;;681;;;;694:10;;;;;706:13;;;;;635:85;;;;;22926:25:124;;;;-1:-1:-1;;;;;23025:15:124;;;23005:18;;;22998:43;;;;23077:15;;;;23057:18;;;23050:43;23109:18;;;23102:34;23152:19;;;23145:35;22898:19;;635:85:92;22667:519:124;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:124:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;516:127::-;577:10;572:3;568:20;565:1;558:31;608:4;605:1;598:15;632:4;629:1;622:15;648:253;720:2;714:9;762:4;750:17;;-1:-1:-1;;;;;782:34:124;;818:22;;;779:62;776:88;;;844:18;;:::i;:::-;880:2;873:22;648:253;:::o;906:::-;978:2;972:9;1020:4;1008:17;;-1:-1:-1;;;;;1040:34:124;;1076:22;;;1037:62;1034:88;;;1102:18;;:::i;1164:253::-;1236:2;1230:9;1278:4;1266:17;;-1:-1:-1;;;;;1298:34:124;;1334:22;;;1295:62;1292:88;;;1360:18;;:::i;1422:257::-;1494:4;1488:11;;;1526:17;;-1:-1:-1;;;;;1558:34:124;;1594:22;;;1555:62;1552:88;;;1620:18;;:::i;1684:255::-;1756:2;1750:9;1798:6;1786:19;;-1:-1:-1;;;;;1820:34:124;;1856:22;;;1817:62;1814:88;;;1882:18;;:::i;1944:275::-;2015:2;2009:9;2080:2;2061:13;;-1:-1:-1;;2057:27:124;2045:40;;-1:-1:-1;;;;;2100:34:124;;2136:22;;;2097:62;2094:88;;;2162:18;;:::i;:::-;2198:2;2191:22;1944:275;;-1:-1:-1;1944:275:124:o;2224:186::-;2272:4;-1:-1:-1;;;;;2297:6:124;2294:30;2291:56;;;2327:18;;:::i;:::-;-1:-1:-1;2393:2:124;2372:15;-1:-1:-1;;2368:29:124;2399:4;2364:40;;2224:186::o;2415:462::-;2457:5;2510:3;2503:4;2495:6;2491:17;2487:27;2477:55;;2528:1;2525;2518:12;2477:55;2564:6;2551:20;2595:48;2611:31;2639:2;2611:31;:::i;:::-;2595:48;:::i;:::-;2668:2;2659:7;2652:19;2714:3;2707:4;2702:2;2694:6;2690:15;2686:26;2683:35;2680:55;;;2731:1;2728;2721:12;2680:55;2796:2;2789:4;2781:6;2777:17;2770:4;2761:7;2757:18;2744:55;2844:1;2819:16;;;2837:4;2815:27;2808:38;;;;2823:7;2415:462;-1:-1:-1;;;2415:462:124:o;2882:388::-;2959:6;2967;3020:2;3008:9;2999:7;2995:23;2991:32;2988:52;;;3036:1;3033;3026:12;2988:52;3072:9;3059:23;3049:33;;3133:2;3122:9;3118:18;3105:32;-1:-1:-1;;;;;3152:6:124;3149:30;3146:50;;;3192:1;3189;3182:12;3146:50;3215:49;3256:7;3247:6;3236:9;3232:22;3215:49;:::i;:::-;3205:59;;;2882:388;;;;;:::o;3275:1106::-;3333:5;3372:9;3367:3;3363:19;3402:6;3398:2;3394:15;3391:35;;;3422:1;3419;3412:12;3391:35;3444:22;;:::i;:::-;3435:31;;3486:4;3482:2;3478:13;3475:33;;;3504:1;3501;3494:12;3475:33;;3532:22;;:::i;:::-;3592:9;3579:23;3570:7;3563:40;3665:2;3654:9;3650:18;3637:32;3632:2;3623:7;3619:16;3612:58;3732:2;3721:9;3717:18;3704:32;3699:2;3690:7;3686:16;3679:58;3799:2;3788:9;3784:18;3771:32;3766:2;3757:7;3753:16;3746:58;3867:3;3856:9;3852:19;3839:33;3833:3;3824:7;3820:17;3813:60;3936:3;3925:9;3921:19;3908:33;3902:3;3893:7;3889:17;3882:60;3965:7;3958:5;3951:22;;4033:4;4022:9;4018:20;4005:34;4000:2;3993:5;3989:14;3982:58;4100:4;4089:9;4085:20;4072:34;4067:2;4060:5;4056:14;4049:58;4167:3;4156:9;4152:19;4139:33;4134:2;4127:5;4123:14;4116:57;4234:3;4223:9;4219:19;4206:33;4200:3;4193:5;4189:15;4182:58;4301:3;4290:9;4286:19;4273:33;4267:3;4260:5;4256:15;4249:58;4369:3;4358:9;4354:19;4341:33;4334:4;4327:5;4323:16;4316:59;3275:1106;;;;:::o;4386:972::-;4514:6;4522;4575:3;4563:9;4554:7;4550:23;4546:33;4543:53;;;4592:1;4589;4582:12;4543:53;4632:9;4619:23;-1:-1:-1;;;;;4702:2:124;4694:6;4691:14;4688:34;;;4718:1;4715;4708:12;4688:34;4741:22;;;;4797:4;4779:16;;;4775:27;4772:47;;;4815:1;4812;4805:12;4772:47;4841:22;;:::i;:::-;4899:2;4886:16;4879:5;4872:31;4956:2;4952;4948:11;4935:25;4930:2;4923:5;4919:14;4912:49;5014:2;5010;5006:11;4993:25;4988:2;4981:5;4977:14;4970:49;5072:2;5068;5064:11;5051:25;5046:2;5039:5;5035:14;5028:49;5123:3;5119:2;5115:12;5102:26;5153:2;5143:8;5140:16;5137:36;;;5169:1;5166;5159:12;5137:36;5206:44;5242:7;5231:8;5227:2;5223:17;5206:44;:::i;:::-;5200:3;5193:5;5189:15;5182:69;;5270:5;5260:15;;;;;5294:58;5344:7;5339:2;5328:9;5324:18;5294:58;:::i;:::-;5284:68;;4386:972;;;;;:::o;5363:131::-;-1:-1:-1;;;;;5438:31:124;;5428:42;;5418:70;;5484:1;5481;5474:12;5499:489;5560:5;5608:4;5596:9;5591:3;5587:19;5583:30;5580:50;;;5626:1;5623;5616:12;5580:50;5648:22;;:::i;:::-;5639:31;;5707:9;5694:23;5726:33;5751:7;5726:33;:::i;:::-;5768:22;;5841:2;5826:18;;5813:32;-1:-1:-1;;;;;5857:30:124;;5854:50;;;5900:1;5897;5890:12;5854:50;5936:45;5977:3;5968:6;5957:9;5953:22;5936:45;:::i;:::-;5931:2;5924:5;5920:14;5913:69;;5499:489;;;;:::o;5993:1021::-;6124:6;6132;6185:2;6173:9;6164:7;6160:23;6156:32;6153:52;;;6201:1;6198;6191:12;6153:52;6241:9;6228:23;-1:-1:-1;;;;;6311:2:124;6303:6;6300:14;6297:34;;;6327:1;6324;6317:12;6297:34;6350:22;;;;6406:2;6388:16;;;6384:25;6381:45;;;6422:1;6419;6412:12;6381:45;6448:22;;:::i;:::-;6508:2;6495:16;6536:2;6526:8;6523:16;6520:36;;;6552:1;6549;6542:12;6520:36;6579:44;6615:7;6604:8;6600:2;6596:17;6579:44;:::i;:::-;6572:5;6565:59;;6670:2;6666;6662:11;6649:25;6699:2;6689:8;6686:16;6683:36;;;6715:1;6712;6705:12;6683:36;6751:44;6787:7;6776:8;6772:2;6768:17;6751:44;:::i;:::-;6746:2;6739:5;6735:14;6728:68;;6815:5;6805:15;;;6873:2;6862:9;6858:18;6845:32;6829:48;;6902:2;6892:8;6889:16;6886:36;;;6918:1;6915;6908:12;6886:36;;6941:67;7000:7;6989:8;6978:9;6974:24;6941:67;:::i;7019:733::-;7100:5;7094:12;7133:2;7127:9;7122:3;7115:22;7183:4;7179:2;7175:13;7169:20;7162:4;7157:3;7153:14;7146:44;7236:4;7232:2;7228:13;7222:20;7215:4;7210:3;7206:14;7199:44;7289:4;7285:2;7281:13;7275:20;7268:4;7263:3;7259:14;7252:44;7342:4;7338:2;7334:13;7328:20;7321:4;7316:3;7312:14;7305:44;7395:4;7391:2;7387:13;7381:20;7374:4;7369:3;7365:14;7358:44;;7451:4;7444:5;7440:16;7434:23;7427:4;7422:3;7418:14;7411:47;7507:4;7500:5;7496:16;7490:23;7483:4;7478:3;7474:14;7467:47;7565:4;7558:5;7554:16;7548:23;7539:6;7534:3;7530:16;7523:49;7623:4;7616:5;7612:16;7606:23;7597:6;7592:3;7588:16;7581:49;7681:4;7674:5;7670:16;7664:23;7655:6;7650:3;7646:16;7639:49;7739:4;7732:5;7728:16;7722:23;7713:6;7708:3;7704:16;7697:49;7019:733;;:::o;7757:261::-;7951:3;7936:19;;7964:48;7940:9;7994:6;7964:48;:::i;8023:250::-;8108:1;8118:113;8132:6;8129:1;8126:13;8118:113;;;8208:11;;;8202:18;8189:11;;;8182:39;8154:2;8147:10;8118:113;;;-1:-1:-1;;8265:1:124;8247:16;;8240:27;8023:250::o;8278:270::-;8319:3;8357:5;8351:12;8384:6;8379:3;8372:19;8400:76;8469:6;8462:4;8457:3;8453:14;8446:4;8439:5;8435:16;8400:76;:::i;:::-;8530:2;8509:15;-1:-1:-1;;8505:29:124;8496:39;;;;8537:4;8492:50;;8278:270;-1:-1:-1;;8278:270:124:o;8553:283::-;8675:1;8671;8666:3;8662:11;8658:19;8650:5;8644:12;8640:38;8635:3;8628:51;8610:3;8725:4;8718:5;8714:16;8708:23;8763:4;8756;8751:3;8747:14;8740:28;8784:46;8824:4;8819:3;8815:14;8801:12;8784:46;:::i;:::-;8777:53;8553:283;-1:-1:-1;;;;8553:283:124:o;8841:449::-;9118:6;9107:9;9100:25;9161:6;9156:2;9145:9;9141:18;9134:34;9204:2;9199;9188:9;9184:18;9177:30;9081:4;9224:60;9280:2;9269:9;9265:18;9257:6;9224:60;:::i;:::-;9216:68;8841:449;-1:-1:-1;;;;;8841:449:124:o;9295:1094::-;9395:6;9439:9;9430:7;9426:23;9469:3;9465:2;9461:12;9458:32;;;9486:1;9483;9476:12;9458:32;9512:22;;:::i;:::-;9554:4;9550:2;9546:13;9543:33;;;9572:1;9569;9562:12;9543:33;9600:22;;:::i;:::-;9585:37;;9653:9;9647:16;9638:7;9631:33;9719:2;9708:9;9704:18;9698:25;9693:2;9684:7;9680:16;9673:51;9779:2;9768:9;9764:18;9758:25;9753:2;9744:7;9740:16;9733:51;9839:2;9828:9;9824:18;9818:25;9813:2;9804:7;9800:16;9793:51;9900:3;9889:9;9885:19;9879:26;9873:3;9864:7;9860:17;9853:53;9962:3;9951:9;9947:19;9941:26;9935:3;9926:7;9922:17;9915:53;9991:7;9984:5;9977:22;10052:4;10041:9;10037:20;10031:27;10026:2;10019:5;10015:14;10008:51;10112:4;10101:9;10097:20;10091:27;10086:2;10079:5;10075:14;10068:51;10172:3;10161:9;10157:19;10151:26;10146:2;10139:5;10135:14;10128:50;10232:3;10221:9;10217:19;10211:26;10205:3;10198:5;10194:15;10187:51;10292:3;10281:9;10277:19;10271:26;10265:3;10258:5;10254:15;10247:51;10353:3;10342:9;10338:19;10332:26;10325:4;10318:5;10314:16;10307:52;10378:5;10368:15;;;;9295:1094;;;;:::o;10394:183::-;10463:6;10516:2;10504:9;10495:7;10491:23;10487:32;10484:52;;;10532:1;10529;10522:12;10484:52;-1:-1:-1;10555:16:124;;10394:183;-1:-1:-1;10394:183:124:o;10582:233::-;10617:3;-1:-1:-1;;;10638:22:124;;10635:145;;10702:10;10697:3;10693:20;10690:1;10683:31;10737:4;10734:1;10727:15;10765:4;10762:1;10755:15;10635:145;-1:-1:-1;10800:1:124;10796:13;;10582:233::o;11360:809::-;11643:2;11632:9;11625:21;11688:6;11682:13;11677:2;11666:9;11662:18;11655:41;11750:4;11742:6;11738:17;11732:24;11727:2;11716:9;11712:18;11705:52;11812:2;11804:6;11800:15;11794:22;11788:3;11777:9;11773:19;11766:51;11873:2;11865:6;11861:15;11855:22;11848:4;11837:9;11833:20;11826:52;11606:4;11925:3;11917:6;11913:16;11907:23;11967:4;11961:3;11950:9;11946:19;11939:33;11992:51;12038:3;12027:9;12023:19;12009:12;11992:51;:::i;:::-;11981:62;;12090:9;12085:3;12081:19;12074:4;12063:9;12059:20;12052:49;12118:45;12159:3;12151:6;12118:45;:::i;12883:1159::-;13150:3;13162:21;;;13220:13;;12570:12;;-1:-1:-1;;;;;12566:21:124;;;13235:18;;;12554:34;12641:4;12630:16;;12624:23;12620:32;12604:14;;;12597:56;12702:4;12691:16;;12685:23;12669:14;;;12662:47;12758:4;12747:16;12741:23;12725:14;;;12718:47;13121:4;;-1:-1:-1;13309:4:124;13297:17;;13291:24;13285:3;13270:19;;13263:53;13363:4;13351:17;;13345:24;-1:-1:-1;;;;;12841:30:124;;13425:3;13410:19;;12829:43;-1:-1:-1;13485:4:124;13473:17;;13467:24;13461:3;13446:19;;13439:53;13547:4;13535:17;;13529:24;13523:3;13508:19;;13501:53;13609:4;13597:17;;13591:24;13585:3;13570:19;;13563:53;13671:4;13659:17;;13653:24;13647:3;13632:19;;13625:53;13727:4;13715:17;;13709:24;-1:-1:-1;;;;;265:31:124;;13792:3;13777:19;;253:44;13742:55;13846:6;13838;13834:19;13828:26;13891:6;13885:3;13874:9;13870:19;13863:35;13915:53;13963:3;13952:9;13948:19;13932:14;13915:53;:::i;:::-;13907:61;;;13977:59;14030:4;14019:9;14015:20;14007:6;13977:59;:::i;:::-;12883:1159;;;;;:::o;14326:287::-;14455:3;14493:6;14487:13;14509:66;14568:6;14563:3;14556:4;14548:6;14544:17;14509:66;:::i;:::-;14591:16;;;;;14326:287;-1:-1:-1;;14326:287:124:o;14618:277::-;14685:6;14738:2;14726:9;14717:7;14713:23;14709:32;14706:52;;;14754:1;14751;14744:12;14706:52;14786:9;14780:16;14839:5;14832:13;14825:21;14818:5;14815:32;14805:60;;14861:1;14858;14851:12;15230:138;15309:13;;15331:31;15309:13;15331:31;:::i;:::-;15230:138;;;:::o;15373:735::-;15440:5;15488:4;15476:9;15471:3;15467:19;15463:30;15460:50;;;15506:1;15503;15496:12;15460:50;15539:2;15533:9;15581:4;15573:6;15569:17;15652:6;15640:10;15637:22;-1:-1:-1;;;;;15604:10:124;15601:34;15598:62;15595:88;;;15663:18;;:::i;:::-;15703:10;15699:2;15692:22;;15732:6;15723:15;;15768:9;15762:16;15787:33;15812:7;15787:33;:::i;:::-;15829:23;;15897:2;15882:18;;15876:25;15910:33;15876:25;15910:33;:::i;:::-;15976:7;15971:2;15963:6;15959:15;15952:32;;16038:2;16027:9;16023:18;16017:25;16012:2;16004:6;16000:15;15993:50;16097:2;16086:9;16082:18;16076:25;16071:2;16063:6;16059:15;16052:50;;15373:735;;;;:::o;16113:175::-;16191:13;;-1:-1:-1;;;;;16233:30:124;;16223:41;;16213:69;;16278:1;16275;16268:12;16293:441;16346:5;16399:3;16392:4;16384:6;16380:17;16376:27;16366:55;;16417:1;16414;16407:12;16366:55;16446:6;16440:13;16477:48;16493:31;16521:2;16493:31;:::i;16477:48::-;16550:2;16541:7;16534:19;16596:3;16589:4;16584:2;16576:6;16572:15;16568:26;16565:35;16562:55;;;16613:1;16610;16603:12;16562:55;16626:77;16700:2;16693:4;16684:7;16680:18;16673:4;16665:6;16661:17;16626:77;:::i;16739:1159::-;16838:6;16891:2;16879:9;16870:7;16866:23;16862:32;16859:52;;;16907:1;16904;16897:12;16859:52;16940:9;16934:16;-1:-1:-1;;;;;17010:2:124;17002:6;16999:14;16996:34;;;17026:1;17023;17016:12;16996:34;17049:22;;;;17105:6;17087:16;;;17083:29;17080:49;;;17125:1;17122;17115:12;17080:49;17151:22;;:::i;:::-;17196:51;17239:7;17235:2;17196:51;:::i;:::-;17189:5;17182:66;17294:3;17290:2;17286:12;17280:19;17275:2;17268:5;17264:14;17257:43;17334:42;17371:3;17367:2;17363:12;17334:42;:::i;:::-;17327:4;17320:5;17316:16;17309:68;17425:3;17421:2;17417:12;17411:19;17404:4;17397:5;17393:16;17386:45;17478:3;17474:2;17470:12;17464:19;17458:3;17451:5;17447:15;17440:44;17503:3;17553:2;17549;17545:11;17539:18;17533:3;17526:5;17522:15;17515:43;17605:6;17601:2;17597:15;17591:22;17585:3;17578:5;17574:15;17567:47;17647:43;17685:3;17681:2;17677:12;17647:43;:::i;:::-;17641:3;17634:5;17630:15;17623:68;17730:3;17726:2;17722:12;17716:19;17760:2;17750:8;17747:16;17744:36;;;17776:1;17773;17766:12;17744:36;17812:55;17859:7;17848:8;17844:2;17840:17;17812:55;:::i;:::-;17796:14;;;17789:79;;;;-1:-1:-1;17800:5:124;16739:1159;-1:-1:-1;;;;;16739:1159:124:o;17903:1411::-;-1:-1:-1;;;18812:26:124;;-1:-1:-1;;;18863:2:124;18854:12;;18847:39;-1:-1:-1;;;18911:2:124;18902:12;;18895:43;-1:-1:-1;;;18963:2:124;18954:12;;18947:38;-1:-1:-1;;;19010:2:124;19001:12;;18994:43;19067:25;19062:2;19053:12;;19046:47;-1:-1:-1;;;19118:3:124;19109:13;;19102:45;19178:34;19172:3;19163:13;;19156:57;19244:34;19238:3;19229:13;;19222:57;19304:3;19295:13;;17903:1411::o;19319:492::-;19494:3;19532:6;19526:13;19548:66;19607:6;19602:3;19595:4;19587:6;19583:17;19548:66;:::i;:::-;19677:13;;19636:16;;;;19699:70;19677:13;19636:16;19746:4;19734:17;;19699:70;:::i;:::-;19785:20;;19319:492;-1:-1:-1;;;;19319:492:124:o;19816:656::-;-1:-1:-1;;;20119:3:124;20112:34;20094:3;20175:6;20169:13;20191:75;20259:6;20254:2;20249:3;20245:12;20238:4;20230:6;20226:17;20191:75;:::i;:::-;20326:13;;20285:16;;;;20348:76;20326:13;20410:2;20402:11;;20395:4;20383:17;;20348:76;:::i;:::-;20444:17;20463:2;20440:26;;19816:656;-1:-1:-1;;;;19816:656:124:o;20665:1065::-;21095:4;21124:3;21136:60;21186:9;21177:6;21171:13;20563:12;;-1:-1:-1;;;;;20559:38:124;20547:51;;20647:4;20636:16;;;20630:23;20614:14;;20607:47;20477:183;21136:60;21252:4;21244:6;21240:17;21234:24;21227:4;21216:9;21212:20;21205:54;21315:4;21307:6;21303:17;21297:24;21290:4;21279:9;21275:20;21268:54;21331:63;21389:3;21378:9;21374:19;21366:6;20563:12;;-1:-1:-1;;;;;20559:38:124;20547:51;;20647:4;20636:16;;;20630:23;20614:14;;20607:47;20477:183;21331:63;-1:-1:-1;;;;;21431:32:124;;21425:3;21410:19;;21403:61;21495:3;21480:19;;21473:35;;;21539:3;21524:19;;21517:31;;;21571:44;21596:18;;;21588:6;21571:44;:::i;:::-;21557:58;;21664:9;21656:6;21652:22;21646:3;21635:9;21631:19;21624:51;21692:32;21717:6;21709;21692:32;:::i;:::-;21684:40;20665:1065;-1:-1:-1;;;;;;;;;20665:1065:124:o;21735:927::-;22089:4;22118:3;22148:6;22137:9;22130:25;22191:6;22186:2;22175:9;22171:18;22164:34;22234:6;22229:2;22218:9;22214:18;22207:34;-1:-1:-1;;;;;22281:6:124;22277:31;22272:2;22261:9;22257:18;22250:59;22346:6;22340:3;22329:9;22325:19;22318:35;22390:6;22384:3;22373:9;22369:19;22362:35;22434:6;22428:3;22417:9;22413:19;22406:35;22478:6;22472:3;22461:9;22457:19;22450:35;22551:1;22547;22542:3;22538:11;22534:19;22526:6;22522:32;22516:3;22505:9;22501:19;22494:61;22592:2;22586:3;22575:9;22571:19;22564:31;22612:44;22652:2;22641:9;22637:18;22629:6;22612:44;:::i;:::-;22604:52;21735:927;-1:-1:-1;;;;;;;;;;;;;21735:927:124:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execLiquidationCall(uint256,bytes)": "74304a79",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "userPositions(uint256)": "1e7f1370"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"settlementData\",\"type\":\"bytes\"}],\"name\":\"execLiquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"params\":{\"settlementData\":\"The route of settlement created by liquidator\",\"vaultId\":\"The id of the vault\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"details\":\"Fillers call this function\",\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"notice\":\"Executes liquidation call for the position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and executes trade\"}},\"notice\":\"Gamma trade market contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GammaTradeMarket.sol\":\"GammaTradeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/GammaTradeMarket.sol\":{\"keccak256\":\"0xd19cf7d337c93e190aaa81fda2cc3a1c297842988047d2f9c734b378d0dfe2ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fa250e3a015023434aea3f628037ada45cf1a616ab081187914a099c642aa2be\",\"dweb:/ipfs/QmTn6U3hmXG8RGExF6xLe1iuBFWY7qqSqex2WHe1Newmh3\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2\",\"dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0x3f0457636c928df099087d919bbe9f352a0607eaf2ce8afa18eec0bc974e40f0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://238ab7485cf8f47e7ab5096165d410ce058610f1704ffeca0b095328e4d1bed1\",\"dweb:/ipfs/Qmc514M6AGu7p6cF28LSKLCQm4YbjW9VPYYCs5K8UGYNA9\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x7d9ef756ee70973ca84a61c4e2329b9a74d7ca15aa4043150cb2a15ef950d056\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38637e93f422e7c8793a10b19bbb30f1104b8fd4c5a961c7d872c24b6ba5b9b8\",\"dweb:/ipfs/QmWtcfYuYfYkkmjwYuNBzT92ZVXdzaMEcDHNcmkCa8kNoq\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d\",\"dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0\",\"dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2\",\"dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/GammaOrder.sol\":{\"keccak256\":\"0xcb594a9ac1f82efbda346bc1487f6cb020d248721242fe4075aeeebfd34f293d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1899556229dd7aa428265f90ab787f5c0781fd37a8e76702d2356a272fa338af\",\"dweb:/ipfs/QmcJkPBCGZiR9drG5ttePWnecu9rQQW1CtDdab6Bcj2yLz\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180\",\"dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/PerpOrder.sol\":{\"keccak256\":\"0x05ee00bcd568f91730a857bede47b78d4ed835989127b41e310694a0512c3f48\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1c9f26dcd4e617832c4017c275d57d1699cb78b5573517b2e7b0bfb4e9d546bb\",\"dweb:/ipfs/QmQCzefAXArhPPGJsGk4DLgy5zBMAjCXyu37kpS9XtSL1J\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteTokenAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "settlementData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "params": {
              "settlementData": "The route of settlement created by liquidator",
              "vaultId": "The id of the vault"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "details": "Fillers call this function",
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "notice": "Executes liquidation call for the position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and executes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GammaTradeMarket.sol": "GammaTradeMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/GammaTradeMarket.sol": {
        "keccak256": "0xd19cf7d337c93e190aaa81fda2cc3a1c297842988047d2f9c734b378d0dfe2ec",
        "urls": [
          "bzz-raw://fa250e3a015023434aea3f628037ada45cf1a616ab081187914a099c642aa2be",
          "dweb:/ipfs/QmTn6U3hmXG8RGExF6xLe1iuBFWY7qqSqex2WHe1Newmh3"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3",
        "urls": [
          "bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2",
          "dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0x3f0457636c928df099087d919bbe9f352a0607eaf2ce8afa18eec0bc974e40f0",
        "urls": [
          "bzz-raw://238ab7485cf8f47e7ab5096165d410ce058610f1704ffeca0b095328e4d1bed1",
          "dweb:/ipfs/Qmc514M6AGu7p6cF28LSKLCQm4YbjW9VPYYCs5K8UGYNA9"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x7d9ef756ee70973ca84a61c4e2329b9a74d7ca15aa4043150cb2a15ef950d056",
        "urls": [
          "bzz-raw://38637e93f422e7c8793a10b19bbb30f1104b8fd4c5a961c7d872c24b6ba5b9b8",
          "dweb:/ipfs/QmWtcfYuYfYkkmjwYuNBzT92ZVXdzaMEcDHNcmkCa8kNoq"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627",
        "urls": [
          "bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d",
          "dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648",
        "urls": [
          "bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0",
          "dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897",
        "urls": [
          "bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2",
          "dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/GammaOrder.sol": {
        "keccak256": "0xcb594a9ac1f82efbda346bc1487f6cb020d248721242fe4075aeeebfd34f293d",
        "urls": [
          "bzz-raw://1899556229dd7aa428265f90ab787f5c0781fd37a8e76702d2356a272fa338af",
          "dweb:/ipfs/QmcJkPBCGZiR9drG5ttePWnecu9rQQW1CtDdab6Bcj2yLz"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946",
        "urls": [
          "bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180",
          "dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/PerpOrder.sol": {
        "keccak256": "0x05ee00bcd568f91730a857bede47b78d4ed835989127b41e310694a0512c3f48",
        "urls": [
          "bzz-raw://1c9f26dcd4e617832c4017c275d57d1699cb78b5573517b2e7b0bfb4e9d546bb",
          "dweb:/ipfs/QmQCzefAXArhPPGJsGk4DLgy5zBMAjCXyu37kpS9XtSL1J"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GammaTradeMarket.sol",
    "id": 50212,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        66113
      ],
      "BaseHookCallback": [
        54218
      ],
      "Constants": [
        55156
      ],
      "DataType": [
        55179
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GammaOrder": [
        64333
      ],
      "GammaOrderLib": [
        64470
      ],
      "GammaTradeMarket": [
        50211
      ],
      "IERC20": [
        43517
      ],
      "IFillerMarket": [
        54228
      ],
      "IHooks": [
        54241
      ],
      "IOrderValidator": [
        54259
      ],
      "IPermit2": [
        46897
      ],
      "IPerpOrderValidator": [
        54269
      ],
      "IPredyPool": [
        54448
      ],
      "ISettlement": [
        54463
      ],
      "ISignatureTransfer": [
        47033
      ],
      "ISwapRouter": [
        49349
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        66168
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        55254
      ],
      "LPMath": [
        63958
      ],
      "LiquidityAmounts": [
        49693
      ],
      "Math": [
        64099
      ],
      "OrderInfo": [
        64730
      ],
      "OrderInfoLib": [
        64765
      ],
      "PairLib": [
        55277
      ],
      "Permit2Lib": [
        64821
      ],
      "Perp": [
        57739
      ],
      "PerpFee": [
        58241
      ],
      "PerpOrder": [
        64997
      ],
      "PositionCalculator": [
        58962
      ],
      "PositionKey": [
        49718
      ],
      "PremiumCurveModel": [
        59004
      ],
      "PriceFeed": [
        54171
      ],
      "Reallocation": [
        59547
      ],
      "ResolvedOrder": [
        65146
      ],
      "ResolvedOrderLib": [
        65188
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        60276
      ],
      "TickMath": [
        49233
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        61263
      ],
      "UnsafeMath": [
        49249
      ],
      "console": [
        21489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4392:52",
    "nodes": [
      {
        "id": 49891,
        "nodeType": "PragmaDirective",
        "src": "39:24:52",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 49892,
        "nodeType": "ImportDirective",
        "src": "65:66:52",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 48025,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49894,
        "nodeType": "ImportDirective",
        "src": "132:92:52",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49893,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "140:14:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49896,
        "nodeType": "ImportDirective",
        "src": "225:87:52",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 49350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49895,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49349,
              "src": "233:11:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49898,
        "nodeType": "ImportDirective",
        "src": "313:70:52",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 46898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49897,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46897,
              "src": "321:8:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49899,
        "nodeType": "ImportDirective",
        "src": "384:56:52",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 43518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49900,
        "nodeType": "ImportDirective",
        "src": "441:37:52",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "./interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 54449,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49901,
        "nodeType": "ImportDirective",
        "src": "479:40:52",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "./interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 54229,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49902,
        "nodeType": "ImportDirective",
        "src": "520:42:52",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "./interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 54270,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49903,
        "nodeType": "ImportDirective",
        "src": "563:37:52",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "./base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 54219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49904,
        "nodeType": "ImportDirective",
        "src": "601:43:52",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "./libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 64822,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49905,
        "nodeType": "ImportDirective",
        "src": "645:46:52",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "./libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 65189,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49906,
        "nodeType": "ImportDirective",
        "src": "692:43:52",
        "nodes": [],
        "absolutePath": "src/libraries/orders/GammaOrder.sol",
        "file": "./libraries/orders/GammaOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 64471,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49907,
        "nodeType": "ImportDirective",
        "src": "736:35:52",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "./libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50212,
        "sourceUnit": 64100,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 50211,
        "nodeType": "ContractDefinition",
        "src": "820:3610:52",
        "nodes": [
          {
            "id": 49916,
            "nodeType": "UsingForDirective",
            "src": "887:41:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49913,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "893:16:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65188,
              "src": "893:16:52"
            },
            "typeName": {
              "id": 49915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49914,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "914:13:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65146,
                "src": "914:13:52"
              },
              "referencedDeclaration": 65146,
              "src": "914:13:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$65146_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 49920,
            "nodeType": "UsingForDirective",
            "src": "933:35:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49917,
              "name": "GammaOrderLib",
              "nameLocations": [
                "939:13:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64470,
              "src": "939:13:52"
            },
            "typeName": {
              "id": 49919,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49918,
                "name": "GammaOrder",
                "nameLocations": [
                  "957:10:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64333,
                "src": "957:10:52"
              },
              "referencedDeclaration": 64333,
              "src": "957:10:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GammaOrder_$64333_storage_ptr",
                "typeString": "struct GammaOrder"
              }
            }
          },
          {
            "id": 49924,
            "nodeType": "UsingForDirective",
            "src": "973:35:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49921,
              "name": "Permit2Lib",
              "nameLocations": [
                "979:10:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64821,
              "src": "979:10:52"
            },
            "typeName": {
              "id": 49923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49922,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "994:13:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65146,
                "src": "994:13:52"
              },
              "referencedDeclaration": 65146,
              "src": "994:13:52",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$65146_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 49927,
            "nodeType": "UsingForDirective",
            "src": "1013:23:52",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49925,
              "name": "Math",
              "nameLocations": [
                "1019:4:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64099,
              "src": "1019:4:52"
            },
            "typeName": {
              "id": 49926,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:52",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 49930,
            "nodeType": "VariableDeclaration",
            "src": "1042:17:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1051:8:52",
            "scope": 50211,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$46897",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 49929,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49928,
                "name": "IPermit2",
                "nameLocations": [
                  "1042:8:52"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46897,
                "src": "1042:8:52"
              },
              "referencedDeclaration": 46897,
              "src": "1042:8:52",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46897",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49932,
            "nodeType": "VariableDeclaration",
            "src": "1065:26:52",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_quoteTokenAddress",
            "nameLocation": "1073:18:52",
            "scope": 50211,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49931,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1065:7:52",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 49936,
            "nodeType": "VariableDeclaration",
            "src": "1098:56:52",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "1141:13:52",
            "scope": 50211,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 49935,
              "keyName": "vaultId",
              "keyNameLocation": "1114:7:52",
              "keyType": {
                "id": 49933,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1106:7:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1098:35:52",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 49934,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1125:7:52",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 49960,
            "nodeType": "FunctionDefinition",
            "src": "1161:227:52",
            "nodes": [],
            "body": {
              "id": 49959,
              "nodeType": "Block",
              "src": "1288:100:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49949,
                      "name": "_quoteTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49932,
                      "src": "1298:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49950,
                      "name": "quoteTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49941,
                      "src": "1319:17:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1298:38:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49952,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:38:52"
                },
                {
                  "expression": {
                    "id": 49957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49953,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49930,
                      "src": "1346:8:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 49955,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49943,
                          "src": "1366:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49954,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46897,
                        "src": "1357:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$46897_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 49956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1357:24:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "1346:35:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$46897",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 49958,
                  "nodeType": "ExpressionStatement",
                  "src": "1346:35:52"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 49946,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49939,
                    "src": "1272:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$54448",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 49947,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 49945,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1255:16:52"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54218,
                  "src": "1255:16:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "1255:28:52"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49939,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "1184:10:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 49960,
                  "src": "1173:21:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$54448",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 49938,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49937,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "1173:10:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54448,
                      "src": "1173:10:52"
                    },
                    "referencedDeclaration": 54448,
                    "src": "1173:10:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$54448",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49941,
                  "mutability": "mutable",
                  "name": "quoteTokenAddress",
                  "nameLocation": "1204:17:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 49960,
                  "src": "1196:25:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49943,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "1231:14:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 49960,
                  "src": "1223:22:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:52",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1172:74:52"
            },
            "returnParameters": {
              "id": 49948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:52"
            },
            "scope": 50211,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50024,
            "nodeType": "FunctionDefinition",
            "src": "1394:558:52",
            "nodes": [],
            "body": {
              "id": 50023,
              "nodeType": "Block",
              "src": "1579:373:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49974,
                      "mutability": "mutable",
                      "name": "marginAmountUpdate",
                      "nameLocation": "1596:18:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 50023,
                      "src": "1589:25:52",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 49973,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1589:6:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49983,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49977,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49963,
                          "src": "1628:11:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$54300_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 49978,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1640:9:52",
                        "memberName": "extraData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54299,
                        "src": "1628:21:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 49980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1652:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 49979,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1652:6:52",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 49981,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1651:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      ],
                      "expression": {
                        "id": 49975,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1617:3:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 49976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1621:6:52",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1617:10:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 49982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:43:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1589:71:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 49986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49984,
                      "name": "marginAmountUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49974,
                      "src": "1675:18:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 49985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1696:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1675:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 50004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 50002,
                        "name": "marginAmountUpdate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49974,
                        "src": "1831:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 50003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1831:22:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 50021,
                    "nodeType": "IfStatement",
                    "src": "1827:119:52",
                    "trueBody": {
                      "id": 50020,
                      "nodeType": "Block",
                      "src": "1855:91:52",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 50008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1885:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 50011,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1899:4:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                      "typeString": "contract GammaTradeMarket"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                      "typeString": "contract GammaTradeMarket"
                                    }
                                  ],
                                  "id": 50010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1891:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 50009,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1891:7:52",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 50012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1891:13:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 50016,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "-",
                                    "prefix": true,
                                    "src": "1914:19:52",
                                    "subExpression": {
                                      "id": 50015,
                                      "name": "marginAmountUpdate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49974,
                                      "src": "1915:18:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 50014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1906:7:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 50013,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1906:7:52",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 50017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1906:28:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 50005,
                                "name": "_predyPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54180,
                                "src": "1869:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPredyPool_$54448",
                                  "typeString": "contract IPredyPool"
                                }
                              },
                              "id": 50007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1880:4:52",
                              "memberName": "take",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54377,
                              "src": "1869:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (bool,address,uint256) external"
                              }
                            },
                            "id": 50018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1869:66:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 50019,
                          "nodeType": "ExpressionStatement",
                          "src": "1869:66:52"
                        }
                      ]
                    }
                  },
                  "id": 50022,
                  "nodeType": "IfStatement",
                  "src": "1671:275:52",
                  "trueBody": {
                    "id": 50001,
                    "nodeType": "Block",
                    "src": "1699:122:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49990,
                              "name": "_quoteTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49932,
                              "src": "1741:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 49993,
                                  "name": "_predyPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54180,
                                  "src": "1769:10:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPredyPool_$54448",
                                    "typeString": "contract IPredyPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPredyPool_$54448",
                                    "typeString": "contract IPredyPool"
                                  }
                                ],
                                "id": 49992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1761:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49991,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1761:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1761:19:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 49997,
                                  "name": "marginAmountUpdate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49974,
                                  "src": "1790:18:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 49996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1782:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 49995,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1782:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1782:27:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49987,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "1713:14:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 49989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1728:12:52",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "1713:27:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 49999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1713:97:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50000,
                        "nodeType": "ExpressionStatement",
                        "src": "1713:97:52"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              54217
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49971,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49970,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "1561:13:52"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54208,
                  "src": "1561:13:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "1561:13:52"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "1403:23:52",
            "overrides": {
              "id": 49969,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 49968,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1535:16:52"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54218,
                  "src": "1535:16:52"
                }
              ],
              "src": "1526:26:52"
            },
            "parameters": {
              "id": 49967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49963,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "1457:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50024,
                  "src": "1427:41:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$54300_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 49962,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49961,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "1427:10:52",
                        "1438:11:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54300,
                      "src": "1427:22:52"
                    },
                    "referencedDeclaration": 54300,
                    "src": "1427:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$54300_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49966,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50024,
                  "src": "1470:29:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 49965,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 49964,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "1470:10:52",
                        "1481:11:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54316,
                      "src": "1470:22:52"
                    },
                    "referencedDeclaration": 54316,
                    "src": "1470:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54316_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:74:52"
            },
            "returnParameters": {
              "id": 49972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1579:0:52"
            },
            "scope": 50211,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50150,
            "nodeType": "FunctionDefinition",
            "src": "2197:1472:52",
            "nodes": [],
            "body": {
              "id": 50149,
              "nodeType": "Block",
              "src": "2376:1293:52",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50039,
                    50042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50039,
                      "mutability": "mutable",
                      "name": "gammaOrder",
                      "nameLocation": "2405:10:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 50149,
                      "src": "2387:28:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                        "typeString": "struct GammaOrder"
                      },
                      "typeName": {
                        "id": 50038,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50037,
                          "name": "GammaOrder",
                          "nameLocations": [
                            "2387:10:52"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64333,
                          "src": "2387:10:52"
                        },
                        "referencedDeclaration": 64333,
                        "src": "2387:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$64333_storage_ptr",
                          "typeString": "struct GammaOrder"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50042,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "2438:13:52",
                      "nodeType": "VariableDeclaration",
                      "scope": 50149,
                      "src": "2417:34:52",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 50041,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50040,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "2417:13:52"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65146,
                          "src": "2417:13:52"
                        },
                        "referencedDeclaration": 65146,
                        "src": "2417:13:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$65146_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50048,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50045,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50028,
                        "src": "2489:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignedOrder_$54227_memory_ptr",
                          "typeString": "struct IFillerMarket.SignedOrder memory"
                        }
                      },
                      {
                        "id": 50046,
                        "name": "_quoteTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49932,
                        "src": "2496:18:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SignedOrder_$54227_memory_ptr",
                          "typeString": "struct IFillerMarket.SignedOrder memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 50043,
                        "name": "GammaOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64470,
                        "src": "2467:13:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$64470_$",
                          "typeString": "type(library GammaOrderLib)"
                        }
                      },
                      "id": 50044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2481:7:52",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64469,
                      "src": "2467:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SignedOrder_$54227_memory_ptr_$_t_address_$returns$_t_struct$_GammaOrder_$64333_memory_ptr_$_t_struct$_ResolvedOrder_$65146_memory_ptr_$",
                        "typeString": "function (struct IFillerMarket.SignedOrder memory,address) pure returns (struct GammaOrder memory,struct ResolvedOrder memory)"
                      }
                    },
                    "id": 50047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:48:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_GammaOrder_$64333_memory_ptr_$_t_struct$_ResolvedOrder_$65146_memory_ptr_$",
                      "typeString": "tuple(struct GammaOrder memory,struct ResolvedOrder memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2386:129:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50050,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50042,
                        "src": "2539:13:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 50049,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50210,
                      "src": "2526:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$65146_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 50051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:27:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50052,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:27:52"
                },
                {
                  "expression": {
                    "id": 50074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50053,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50035,
                      "src": "2564:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 50058,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "2648:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50059,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2659:6:52",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64320,
                              "src": "2648:17:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 50060,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "2683:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50061,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2694:10:52",
                              "memberName": "positionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64318,
                              "src": "2683:21:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 50062,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "2722:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50063,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2733:11:52",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64322,
                              "src": "2722:22:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 50064,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "2762:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50065,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2773:15:52",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64324,
                              "src": "2762:26:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 50068,
                                    "name": "gammaOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50039,
                                    "src": "2817:10:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                      "typeString": "struct GammaOrder memory"
                                    }
                                  },
                                  "id": 50069,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2828:12:52",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64326,
                                  "src": "2817:23:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 50066,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2806:3:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 50067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2810:6:52",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2806:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 50070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2806:35:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 50056,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54448,
                              "src": "2608:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$54448_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 50057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2619:11:52",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54300,
                            "src": "2608:22:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$54300_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 50071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2608:247:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$54300_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 50072,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50031,
                          "src": "2869:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$54455_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$54300_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$54455_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 50054,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54180,
                          "src": "2578:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$54448",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 50055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2589:5:52",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54348,
                        "src": "2578:16:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$54300_memory_ptr_$_t_struct$_SettlementData_$54455_memory_ptr_$returns$_t_struct$_TradeResult_$54316_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 50073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2578:315:52",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "2564:329:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 50075,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:329:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50076,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50039,
                        "src": "2908:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 50077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2919:10:52",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64318,
                      "src": "2908:21:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2933:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2908:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 50115,
                    "nodeType": "Block",
                    "src": "3112:167:52",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 50107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 50100,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "3130:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50101,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3141:4:52",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64316,
                              "src": "3130:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$64730_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 50102,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3146:6:52",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64725,
                            "src": "3130:22:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 50103,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49936,
                              "src": "3156:13:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 50106,
                            "indexExpression": {
                              "expression": {
                                "id": 50104,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50035,
                                "src": "3170:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 50105,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3182:7:52",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54305,
                              "src": "3170:19:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3156:34:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3130:60:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50114,
                        "nodeType": "IfStatement",
                        "src": "3126:143:52",
                        "trueBody": {
                          "id": 50113,
                          "nodeType": "Block",
                          "src": "3192:77:52",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 50108,
                                    "name": "IFillerMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54228,
                                    "src": "3217:13:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFillerMarket_$54228_$",
                                      "typeString": "type(contract IFillerMarket)"
                                    }
                                  },
                                  "id": 50110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3231:21:52",
                                  "memberName": "SignerIsNotVaultOwner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54222,
                                  "src": "3217:35:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 50111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3217:37:52",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 50112,
                              "nodeType": "RevertStatement",
                              "src": "3210:44:52"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 50116,
                  "nodeType": "IfStatement",
                  "src": "2904:375:52",
                  "trueBody": {
                    "id": 50099,
                    "nodeType": "Block",
                    "src": "2936:170:52",
                    "statements": [
                      {
                        "expression": {
                          "id": 50087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 50080,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49936,
                              "src": "2950:13:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 50083,
                            "indexExpression": {
                              "expression": {
                                "id": 50081,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50035,
                                "src": "2964:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 50082,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2976:7:52",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54305,
                              "src": "2964:19:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2950:34:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 50084,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50039,
                                "src": "2987:10:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 50085,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2998:4:52",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64316,
                              "src": "2987:15:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$64730_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 50086,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3003:6:52",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64725,
                            "src": "2987:22:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2950:59:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50088,
                        "nodeType": "ExpressionStatement",
                        "src": "2950:59:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 50092,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50035,
                                "src": "3051:11:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 50093,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3063:7:52",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54305,
                              "src": "3051:19:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 50094,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50039,
                                  "src": "3072:10:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 50095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3083:4:52",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64316,
                                "src": "3072:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$64730_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 50096,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3088:6:52",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64725,
                              "src": "3072:22:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 50089,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54180,
                              "src": "3024:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$54448",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 50091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3035:15:52",
                            "memberName": "updateRecepient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54368,
                            "src": "3024:26:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 50097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:71:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50098,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:71:52"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50122,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50039,
                        "src": "3405:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "id": 50123,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50035,
                        "src": "3417:11:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 50118,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50039,
                              "src": "3367:10:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 50119,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3378:16:52",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64330,
                            "src": "3367:27:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50117,
                          "name": "IOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54259,
                          "src": "3351:15:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOrderValidator_$54259_$",
                            "typeString": "type(contract IOrderValidator)"
                          }
                        },
                        "id": 50120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3351:44:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOrderValidator_$54259",
                          "typeString": "contract IOrderValidator"
                        }
                      },
                      "id": 50121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3396:8:52",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54258,
                      "src": "3351:53:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_GammaOrder_$64333_memory_ptr_$_t_struct$_TradeResult_$54316_memory_ptr_$returns$__$",
                        "typeString": "function (struct GammaOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 50124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:78:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50125,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:78:52"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 50129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50126,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50039,
                        "src": "3444:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 50127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3455:12:52",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64326,
                      "src": "3444:23:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3470:1:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3444:27:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50146,
                  "nodeType": "IfStatement",
                  "src": "3440:194:52",
                  "trueBody": {
                    "id": 50145,
                    "nodeType": "Block",
                    "src": "3473:161:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50133,
                              "name": "_quoteTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49932,
                              "src": "3532:18:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 50134,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50039,
                                  "src": "3552:10:52",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 50135,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3563:4:52",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 64316,
                                "src": "3552:15:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$64730_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 50136,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3568:6:52",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64725,
                              "src": "3552:22:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 50141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "3584:24:52",
                                  "subExpression": {
                                    "expression": {
                                      "id": 50139,
                                      "name": "gammaOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50039,
                                      "src": "3585:10:52",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_GammaOrder_$64333_memory_ptr",
                                        "typeString": "struct GammaOrder memory"
                                      }
                                    },
                                    "id": 50140,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3596:12:52",
                                    "memberName": "marginAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 64326,
                                    "src": "3585:23:52",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 50138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3576:7:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 50137,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3576:7:52",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3576:33:52",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 50130,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "3487:14:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 50132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3502:12:52",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "3487:27:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 50143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3487:136:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50144,
                        "nodeType": "ExpressionStatement",
                        "src": "3487:136:52"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 50147,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50035,
                    "src": "3651:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 50036,
                  "id": 50148,
                  "nodeType": "Return",
                  "src": "3644:18:52"
                }
              ]
            },
            "documentation": {
              "id": 50025,
              "nodeType": "StructuredDocumentation",
              "src": "1958:234:52",
              "text": " @notice Verifies signature of the order and executes trade\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @dev Fillers call this function"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "2206:12:52",
            "parameters": {
              "id": 50032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50028,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "2238:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50150,
                  "src": "2219:24:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$54227_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 50027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50026,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "2219:11:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54227,
                      "src": "2219:11:52"
                    },
                    "referencedDeclaration": 54227,
                    "src": "2219:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$54227_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50031,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "2279:14:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50150,
                  "src": "2245:48:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$54455_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 50030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50029,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "2245:11:52",
                        "2257:14:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54455,
                      "src": "2245:26:52"
                    },
                    "referencedDeclaration": 54455,
                    "src": "2245:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$54455_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2218:76:52"
            },
            "returnParameters": {
              "id": 50036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50035,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "2359:11:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50150,
                  "src": "2329:41:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 50034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50033,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "2329:10:52",
                        "2340:11:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54316,
                      "src": "2329:22:52"
                    },
                    "referencedDeclaration": 54316,
                    "src": "2329:22:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54316_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:43:52"
            },
            "scope": 50211,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50174,
            "nodeType": "FunctionDefinition",
            "src": "3866:205:52",
            "nodes": [],
            "body": {
              "id": 50173,
              "nodeType": "Block",
              "src": "3950:121:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50161,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50153,
                        "src": "3991:7:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 50162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4000:4:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50167,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4041:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 50166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4033:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50165,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4033:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4033:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 50169,
                            "name": "settlementData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50155,
                            "src": "4048:14:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 50163,
                            "name": "ISettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54463,
                            "src": "4006:11:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISettlement_$54463_$",
                              "typeString": "type(contract ISettlement)"
                            }
                          },
                          "id": 50164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4018:14:52",
                          "memberName": "SettlementData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54455,
                          "src": "4006:26:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SettlementData_$54455_storage_ptr_$",
                            "typeString": "type(struct ISettlement.SettlementData storage pointer)"
                          }
                        },
                        "id": 50170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4006:57:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54455_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54455_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 50158,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54180,
                        "src": "3960:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$54448",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 50160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3971:19:52",
                      "memberName": "execLiquidationCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54361,
                      "src": "3960:30:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_SettlementData_$54455_memory_ptr_$returns$_t_struct$_TradeResult_$54316_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 50171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3960:104:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54316_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 50172,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:104:52"
                }
              ]
            },
            "documentation": {
              "id": 50151,
              "nodeType": "StructuredDocumentation",
              "src": "3675:186:52",
              "text": " @notice Executes liquidation call for the position\n @param vaultId The id of the vault\n @param settlementData The route of settlement created by liquidator"
            },
            "functionSelector": "74304a79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "3875:19:52",
            "parameters": {
              "id": 50156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50153,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "3903:7:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50174,
                  "src": "3895:15:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50155,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3925:14:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50174,
                  "src": "3912:27:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3912:5:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:46:52"
            },
            "returnParameters": {
              "id": 50157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:0:52"
            },
            "scope": 50211,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50210,
            "nodeType": "FunctionDefinition",
            "src": "4077:351:52",
            "nodes": [],
            "body": {
              "id": 50209,
              "nodeType": "Block",
              "src": "4136:292:52",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50180,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50177,
                        "src": "4146:5:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 50182,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4152:8:52",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65187,
                      "src": "4146:14:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$65146_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$65146_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 50183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4146:16:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50184,
                  "nodeType": "ExpressionStatement",
                  "src": "4146:16:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50188,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50177,
                            "src": "4221:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 50189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4227:8:52",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64800,
                          "src": "4221:14:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$65146_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$65146_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 50190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4221:16:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50195,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4281:4:52",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$50211",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 50194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4273:7:52",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50193,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4273:7:52",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4273:13:52",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 50191,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50177,
                            "src": "4251:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 50192,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4257:15:52",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64820,
                          "src": "4251:21:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$65146_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$65146_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 50197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4251:36:52",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 50198,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50177,
                            "src": "4301:5:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 50199,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4307:4:52",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65137,
                          "src": "4301:10:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$64730_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 50200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4312:6:52",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64725,
                        "src": "4301:17:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50201,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50177,
                          "src": "4332:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 50202,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4338:4:52",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65143,
                        "src": "4332:10:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 50203,
                          "name": "GammaOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64470,
                          "src": "4356:13:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$64470_$",
                            "typeString": "type(library GammaOrderLib)"
                          }
                        },
                        "id": 50204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4370:18:52",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64379,
                        "src": "4356:32:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 50205,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50177,
                          "src": "4402:5:52",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 50206,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4408:3:52",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65145,
                        "src": "4402:9:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50185,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49930,
                        "src": "4173:8:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$46897",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 50187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4182:25:52",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46990,
                      "src": "4173:34:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 50207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4173:248:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50208,
                  "nodeType": "ExpressionStatement",
                  "src": "4173:248:52"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "4086:12:52",
            "parameters": {
              "id": 50178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50177,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4120:5:52",
                  "nodeType": "VariableDeclaration",
                  "scope": 50210,
                  "src": "4099:26:52",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$65146_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 50176,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50175,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "4099:13:52"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65146,
                      "src": "4099:13:52"
                    },
                    "referencedDeclaration": 65146,
                    "src": "4099:13:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$65146_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4098:28:52"
            },
            "returnParameters": {
              "id": 50179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4136:0:52"
            },
            "scope": 50211,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49909,
              "name": "IFillerMarket",
              "nameLocations": [
                "849:13:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54228,
              "src": "849:13:52"
            },
            "id": 49910,
            "nodeType": "InheritanceSpecifier",
            "src": "849:13:52"
          },
          {
            "baseName": {
              "id": 49911,
              "name": "BaseHookCallback",
              "nameLocations": [
                "864:16:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54218,
              "src": "864:16:52"
            },
            "id": 49912,
            "nodeType": "InheritanceSpecifier",
            "src": "864:16:52"
          }
        ],
        "canonicalName": "GammaTradeMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49908,
          "nodeType": "StructuredDocumentation",
          "src": "773:46:52",
          "text": " @notice Gamma trade market contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50211,
          54218,
          54241,
          54228
        ],
        "name": "GammaTradeMarket",
        "nameLocation": "829:16:52",
        "scope": 50212,
        "usedErrors": [
          54182,
          54222,
          65149,
          65152
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 52
}
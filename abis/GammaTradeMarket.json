{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotFiller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "Traded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "settlementData",
          "type": "bytes"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "filler",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "pairId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "entryTokenAddress",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "address",
              "name": "validatorAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "validationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct GammaOrder",
          "name": "gammaOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        },
        {
          "internalType": "contract PredyPoolQuoter",
          "name": "quoter",
          "type": "address"
        }
      ],
      "name": "quoteExecuteOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "updateQuoteTokenMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620023373803806200233783398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b61226980620000ce6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631e7f13701461006757806374304a79146100ad578063944b560b146100c2578063a966d863146100d5578063e1c951ca146100f5578063efebe4da14610108575b600080fd5b610090610075366004610e0b565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c06100bb366004611001565b61011b565b005b6100c06100d03660046110fc565b6101b0565b6100e86100e3366004611224565b61041d565b6040516100a4919061134e565b6100c0610103366004610e0b565b610732565b6100c06101163660046113e8565b610787565b6000546040805180820182523081526020810184905290516391d0370f60e01b81526001600160a01b03909216916391d0370f91610167918691670de0b6b3a76400009160040161157e565b610180604051808303816000875af1158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906115a6565b505050565b6000546001600160a01b031633146101db57604051637542ed5d60e11b815260040160405180910390fd5b806060015160000361030e57600080546020840151604051632500ed8d60e21b81526001600160a01b0390921691639403b6349161021f9160040190815260200190565b6102a060405180830381865afa15801561023d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610261919061170e565b600054608082015160405163031adb4d60e61b81526001600482015230602482015260448101919091529192506001600160a01b03169063c6b6d34090606401600060405180830381600087803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b505050506101ab6102e3846000015161084f565b60208086015160009081526003909152604090205460808401516001600160a01b03909116906108ca565b600082608001518060200190518101906103289190611824565b90506000811315610355576101ab610343846000015161084f565b6000546001600160a01b0316836108ca565b60008112156101ab576000546001600160a01b031663c6b6d34060013061037b8561183d565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050506101ab6103f1846000015161084f565b6020808601516000908152600390915260409020546001600160a01b03166104188461183d565b6108ca565b610425610d97565b6000836000015180602001905181019061043f9190611917565b905060006104518286602001516109ce565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b031661048157600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b039081169116146104b857600080fd5b6104c181610a84565b6000546040805160a08082018352858301516001600160401b03168252602080870151818401526080808801518486015291870151606084015260c087015184518083019190915284518082039092018252840184529082015290516309b819b360e41b81526001600160a01b0390921691639b819b30916105479188906004016119f9565b610180604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b91906115a6565b925081602001516000036106355781516020908101518482018051600090815260038452604080822080546001600160a01b0319166001600160a01b0395861617905590549151865190940151905163055a6d9b60e51b8152600481019490945282166024840152169063ab4db36090604401600060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b5050505061067a565b60208084015160009081526003825260409020548351909101516001600160a01b0390811691161461067a5760405163708c545360e01b815260040160405180910390fd5b8160e001516001600160a01b031663799f5b1b83856040518363ffffffff1660e01b81526004016106ac929190611a51565b60006040518083038186803b1580156106c457600080fd5b505afa1580156106d8573d6000803e3d6000fd5b5050835160209081015186820151604080516001600160a01b039093168352928201527fe39122fcaa92bc902344d31c0f322ba04506be819fd20dafb197b26bf2e9045d935001905060405180910390a150505b92915050565b6000818152600160205260409020546001600160a01b0316610784576107578161084f565b600082815260016020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6040805160a08082018352858301516001600160401b031682526020808701518184015260808088015184860152918701516060840152835190810184526000808252918301529151630a20b62d60e21b81526001600160a01b03841691632882d8b4916107fa919087906004016119f9565b610180604051808303816000875af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e91906115a6565b905061084981610c1d565b50505050565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161074060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190611ddc565b60600151519392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916109269190611ec7565b6000604051808303816000865af19150503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b50915091508180156109925750805115806109925750808060200190518101906109929190611ee3565b6109c75760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b6040805161014081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905282526020820181905291810182905260608082019290925260808101919091526000808460c0015113610a34576000610a3a565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b03168152602001828152602001610a7386610c49565b815260200184905291505092915050565b610a8d81610cdc565b6002546001600160a01b031663137c29fe610b0b836040805160a0808201835260006060808401828152608080860184905290855260208086018490529486019290925284519283018552858401516001600160a01b0316838201908152868601518484015283528551015192820192909252925101519082015290565b60408051808201825260008082526020918201528151808301835230815291860151908201528460000151602001518560600151604051602001610b4e90611efe565b60408051601f198184030181526080830190915260478083529091906121ed6020830139604051602001610b83929190612029565b60408051601f1981840301815260608301909152602e8083529091906121bf6020830139604051602001610bb8929190612058565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b168352610bef96959493926004016120a9565b600060405180830381600087803b158015610c0957600080fd5b505af11580156109c7573d6000803e3d6000fd5b600081604051602001610c30919061134e565b6040516020818303038152906040529050805181602001fd5b6000604051602001610c5a90611efe565b60405160208183030381529060405280519060200120610c7d8360000151610d2d565b83602001518460400151856060015186608001518760a001518860c001518960e001518a6101000151604051602001610cbf9a9998979695949392919061214c565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b03163014610d0757604051639db8d5b160e01b815260040160405180910390fd5b8051608001514211156107845760405163387b2e5560e11b815260040160405180910390fd5b60006040518060800160405280604781526020016121ed60479139805160209182012083518483015160608601516080870151604051610cbf96019485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b6040518060e00160405280610ddb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610e1d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610e5c57610e5c610e24565b60405290565b60405160c081016001600160401b0381118282101715610e5c57610e5c610e24565b60405160a081016001600160401b0381118282101715610e5c57610e5c610e24565b604080519081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161012081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161010081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161022081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161018081016001600160401b0381118282101715610e5c57610e5c610e24565b604051601f8201601f191681016001600160401b0381118282101715610f7c57610f7c610e24565b604052919050565b60006001600160401b03821115610f9d57610f9d610e24565b50601f01601f191660200190565b600082601f830112610fbc57600080fd5b8135610fcf610fca82610f84565b610f54565b818152846020838601011115610fe457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561101457600080fd5b8235915060208301356001600160401b0381111561103157600080fd5b61103d85828601610fab565b9150509250929050565b600081830361018081121561105b57600080fd5b611063610e3a565b915060c081121561107357600080fd5b5061107c610e62565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a0838503121561111057600080fd5b82356001600160401b038082111561112757600080fd5b9084019060a0828703121561113b57600080fd5b611143610e84565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561117757600080fd5b61118388828601610fab565b60808301525080945050505061119c8460208501611047565b90509250929050565b6001600160a01b038116811461078457600080fd5b80356111c5816111a5565b919050565b6000604082840312156111dc57600080fd5b6111e4610ea6565b905081356111f1816111a5565b815260208201356001600160401b0381111561120c57600080fd5b61121884828501610fab565b60208301525092915050565b6000806040838503121561123757600080fd5b82356001600160401b038082111561124e57600080fd5b908401906040828703121561126257600080fd5b61126a610ea6565b82358281111561127957600080fd5b61128588828601610fab565b82525060208301358281111561129a57600080fd5b6112a688828601610fab565b6020830152508094505060208501359150808211156112c457600080fd5b5061103d858286016111ca565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b610180810161072c82846112d1565b600060a0828403121561136f57600080fd5b611377610e84565b90508135611384816111a5565b81526020820135611394816111a5565b602082015260408201356113a7816111a5565b80604083015250606082013560608201526080820135608082015292915050565b6001600160401b038116811461078457600080fd5b80356111c5816113c8565b6000806000606084860312156113fd57600080fd5b83356001600160401b038082111561141457600080fd5b908501906101a0828803121561142957600080fd5b611431610ec8565b61143b888461135d565b815260a0830135602082015261145360c084016113dd565b604082015261146460e084016111ba565b606082015261010080840135608083015261012084013560a083015261014084013560c083015261149861016085016111ba565b60e0830152610180840135838111156114b057600080fd5b6114bc8a828701610fab565b8284015250508095505060208601359150808211156114da57600080fd5b506114e7868287016111ca565b9250506114f6604085016111ba565b90509250925092565b60005b8381101561151a578181015183820152602001611502565b50506000910152565b6000815180845261153b8160208601602086016114ff565b601f01601f19169290920160200192915050565b60018060a01b03815116825260006020820151604060208501526115766040850182611523565b949350505050565b83815282602082015260606040820152600061159d606083018461154f565b95945050505050565b60008183036101808112156115ba57600080fd5b6115c2610e3a565b60c08212156115d057600080fd5b6115d8610e62565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b80516111c5816111a5565b8051600281900b81146111c557600080fd5b80516111c5816113c8565b60006040828403121561169857600080fd5b6116a0610ea6565b9050815181526020820151602082015292915050565b600060c082840312156116c857600080fd5b6116d0610e62565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a081121561172257600080fd5b61172a610e62565b83518152602084015161173c816111a5565b6020820152604084015161174f816111a5565b60408201526060840151611762816111a5565b606082015260808481015190820152610200609f198301121561178457600080fd5b61178c610eeb565b915060a084015182526117a160c08501611669565b60208301526117b260e08501611669565b60408301526117c4610100850161167b565b60608301526117d7856101208601611686565b60808301526117ea8561016086016116b6565b60a08301526117fd856102208601611686565b60c0830152611810856102608601611686565b60e083015260a08101919091529392505050565b60006020828403121561183657600080fd5b5051919050565b6000600160ff1b820161186057634e487b7160e01b600052601160045260246000fd5b5060000390565b600060a0828403121561187957600080fd5b611881610e84565b9050815161188e816111a5565b8152602082015161189e816111a5565b602082015260408201516118b1816111a5565b80604083015250606082015160608201526080820151608082015292915050565b600082601f8301126118e357600080fd5b81516118f1610fca82610f84565b81815284602083860101111561190657600080fd5b6115768260208301602087016114ff565b60006020828403121561192957600080fd5b81516001600160401b038082111561194057600080fd5b908301906101a0828603121561195557600080fd5b61195d610ec8565b6119678684611867565b815260a0830151602082015261197f60c0840161167b565b604082015261199060e0840161165e565b606082015261010080840151608083015261012084015160a083015261014084015160c08301526119c4610160850161165e565b60e0830152610180840151838111156119dc57600080fd5b6119e8888287016118d2565b918301919091525095945050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152611a3d60e0840182611523565b9050828103602084015261159d818561154f565b6101a0808252835180516001600160a01b039081168484015260208083015182166101c086015260408084015183166101e0870152606080850151610200880152608094850151610220880152918801516102408701528701516001600160401b03166102608601528601518116610280850152908501516102a084015260a08501516102c084015260c08501516102e084015260e085015116610300830152610100840151610320830182905260009190611b11610340850182611523565b92505050611b2260208301846112d1565b9392505050565b600060808284031215611b3b57600080fd5b604051608081018181106001600160401b0382111715611b5d57611b5d610e24565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008183036101c0811215611ba257600080fd5b611baa610e62565b91508251611bb7816111a5565b82526020830151611bc7816111a5565b602083015260c0603f1982011215611bde57600080fd5b50611be7610e62565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015280604083015250611c35836101008401611b29565b606082015261018082015160808201526101a082015160a082015292915050565b600060608284031215611c6857600080fd5b604051606081018181106001600160401b0382111715611c8a57611c8a610e24565b60405282518152905080611ca060208401611669565b6020820152611cb160408401611669565b60408201525092915050565b60006102608284031215611cd057600080fd5b611cd8610f0e565b9050611ce38261165e565b8152611cf160208301611669565b6020820152611d0260408301611669565b6040820152611d136060830161167b565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0611d8684828501611686565b908201526101e0611d9984848301611686565b6101c08301526102208301519082015261024090910151610200820152919050565b805180151581146111c557600080fd5b805160ff811681146111c557600080fd5b60006107408284031215611def57600080fd5b611df7610f31565b82518152611e076020840161165e565b6020820152611e186040840161165e565b6040820152611e2a8460608501611b8e565b6060820152611e3d846102208501611b8e565b6080820152611e50846103e08501611c56565b60a0820152611e63846104408501611cbd565b60c0820152611e756106a0840161165e565b60e0820152611e876106c08401611dbb565b610100820152611e9a6106e08401611dbb565b610120820152611ead6107008401611dcb565b610140820152610720929092015161016083015250919050565b60008251611ed98184602087016114ff565b9190910192915050565b600060208284031215611ef557600080fd5b611b2282611dbb565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b6000835161203b8184602088016114ff565b83519083019061204f8183602088016114ff565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b8152600083516120868160138501602088016114ff565b83519083019061209d8160138401602088016114ff565b01601301949350505050565b60006101406120cc838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152612100608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261212a81840186611523565b905082810361012084015261213f8185611523565b9998505050505050505050565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e085015280861661010085015250806101208401526121ad81840185611523565b9d9c5050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122045f2bc5e3333606547f02b1ec035ffd26d169ed5eab5b18b0f6d2d53028beaf264736f6c63430008130033",
    "sourceMap": "975:5287:91:-:0;;;1336:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:10:54;:22;;-1:-1:-1;;;;;381:22:54;;;-1:-1:-1;;;;;;381:22:54;;;;;;;1434:8:91::1;:35:::0;;;;;::::1;::::0;::::1;;::::0;;975:5287;;14:143:117;-1:-1:-1;;;;;101:31:117;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:117;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;975:5287:91;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631e7f13701461006757806374304a79146100ad578063944b560b146100c2578063a966d863146100d5578063e1c951ca146100f5578063efebe4da14610108575b600080fd5b610090610075366004610e0b565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c06100bb366004611001565b61011b565b005b6100c06100d03660046110fc565b6101b0565b6100e86100e3366004611224565b61041d565b6040516100a4919061134e565b6100c0610103366004610e0b565b610732565b6100c06101163660046113e8565b610787565b6000546040805180820182523081526020810184905290516391d0370f60e01b81526001600160a01b03909216916391d0370f91610167918691670de0b6b3a76400009160040161157e565b610180604051808303816000875af1158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906115a6565b505050565b6000546001600160a01b031633146101db57604051637542ed5d60e11b815260040160405180910390fd5b806060015160000361030e57600080546020840151604051632500ed8d60e21b81526001600160a01b0390921691639403b6349161021f9160040190815260200190565b6102a060405180830381865afa15801561023d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610261919061170e565b600054608082015160405163031adb4d60e61b81526001600482015230602482015260448101919091529192506001600160a01b03169063c6b6d34090606401600060405180830381600087803b1580156102bb57600080fd5b505af11580156102cf573d6000803e3d6000fd5b505050506101ab6102e3846000015161084f565b60208086015160009081526003909152604090205460808401516001600160a01b03909116906108ca565b600082608001518060200190518101906103289190611824565b90506000811315610355576101ab610343846000015161084f565b6000546001600160a01b0316836108ca565b60008112156101ab576000546001600160a01b031663c6b6d34060013061037b8561183d565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050506101ab6103f1846000015161084f565b6020808601516000908152600390915260409020546001600160a01b03166104188461183d565b6108ca565b610425610d97565b6000836000015180602001905181019061043f9190611917565b905060006104518286602001516109ce565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b031661048157600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b039081169116146104b857600080fd5b6104c181610a84565b6000546040805160a08082018352858301516001600160401b03168252602080870151818401526080808801518486015291870151606084015260c087015184518083019190915284518082039092018252840184529082015290516309b819b360e41b81526001600160a01b0390921691639b819b30916105479188906004016119f9565b610180604051808303816000875af1158015610567573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058b91906115a6565b925081602001516000036106355781516020908101518482018051600090815260038452604080822080546001600160a01b0319166001600160a01b0395861617905590549151865190940151905163055a6d9b60e51b8152600481019490945282166024840152169063ab4db36090604401600060405180830381600087803b15801561061857600080fd5b505af115801561062c573d6000803e3d6000fd5b5050505061067a565b60208084015160009081526003825260409020548351909101516001600160a01b0390811691161461067a5760405163708c545360e01b815260040160405180910390fd5b8160e001516001600160a01b031663799f5b1b83856040518363ffffffff1660e01b81526004016106ac929190611a51565b60006040518083038186803b1580156106c457600080fd5b505afa1580156106d8573d6000803e3d6000fd5b5050835160209081015186820151604080516001600160a01b039093168352928201527fe39122fcaa92bc902344d31c0f322ba04506be819fd20dafb197b26bf2e9045d935001905060405180910390a150505b92915050565b6000818152600160205260409020546001600160a01b0316610784576107578161084f565b600082815260016020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6040805160a08082018352858301516001600160401b031682526020808701518184015260808088015184860152918701516060840152835190810184526000808252918301529151630a20b62d60e21b81526001600160a01b03841691632882d8b4916107fa919087906004016119f9565b610180604051808303816000875af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e91906115a6565b905061084981610c1d565b50505050565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161074060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190611ddc565b60600151519392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916109269190611ec7565b6000604051808303816000865af19150503d8060008114610963576040519150601f19603f3d011682016040523d82523d6000602084013e610968565b606091505b50915091508180156109925750805115806109925750808060200190518101906109929190611ee3565b6109c75760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b6040805161014081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905282526020820181905291810182905260608082019290925260808101919091526000808460c0015113610a34576000610a3a565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b03168152602001828152602001610a7386610c49565b815260200184905291505092915050565b610a8d81610cdc565b6002546001600160a01b031663137c29fe610b0b836040805160a0808201835260006060808401828152608080860184905290855260208086018490529486019290925284519283018552858401516001600160a01b0316838201908152868601518484015283528551015192820192909252925101519082015290565b60408051808201825260008082526020918201528151808301835230815291860151908201528460000151602001518560600151604051602001610b4e90611efe565b60408051601f198184030181526080830190915260478083529091906121ed6020830139604051602001610b83929190612029565b60408051601f1981840301815260608301909152602e8083529091906121bf6020830139604051602001610bb8929190612058565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b168352610bef96959493926004016120a9565b600060405180830381600087803b158015610c0957600080fd5b505af11580156109c7573d6000803e3d6000fd5b600081604051602001610c30919061134e565b6040516020818303038152906040529050805181602001fd5b6000604051602001610c5a90611efe565b60405160208183030381529060405280519060200120610c7d8360000151610d2d565b83602001518460400151856060015186608001518760a001518860c001518960e001518a6101000151604051602001610cbf9a9998979695949392919061214c565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b03163014610d0757604051639db8d5b160e01b815260040160405180910390fd5b8051608001514211156107845760405163387b2e5560e11b815260040160405180910390fd5b60006040518060800160405280604781526020016121ed60479139805160209182012083518483015160608601516080870151604051610cbf96019485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b6040518060e00160405280610ddb6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215610e1d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610e5c57610e5c610e24565b60405290565b60405160c081016001600160401b0381118282101715610e5c57610e5c610e24565b60405160a081016001600160401b0381118282101715610e5c57610e5c610e24565b604080519081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161012081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161010081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161022081016001600160401b0381118282101715610e5c57610e5c610e24565b60405161018081016001600160401b0381118282101715610e5c57610e5c610e24565b604051601f8201601f191681016001600160401b0381118282101715610f7c57610f7c610e24565b604052919050565b60006001600160401b03821115610f9d57610f9d610e24565b50601f01601f191660200190565b600082601f830112610fbc57600080fd5b8135610fcf610fca82610f84565b610f54565b818152846020838601011115610fe457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561101457600080fd5b8235915060208301356001600160401b0381111561103157600080fd5b61103d85828601610fab565b9150509250929050565b600081830361018081121561105b57600080fd5b611063610e3a565b915060c081121561107357600080fd5b5061107c610e62565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a0838503121561111057600080fd5b82356001600160401b038082111561112757600080fd5b9084019060a0828703121561113b57600080fd5b611143610e84565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561117757600080fd5b61118388828601610fab565b60808301525080945050505061119c8460208501611047565b90509250929050565b6001600160a01b038116811461078457600080fd5b80356111c5816111a5565b919050565b6000604082840312156111dc57600080fd5b6111e4610ea6565b905081356111f1816111a5565b815260208201356001600160401b0381111561120c57600080fd5b61121884828501610fab565b60208301525092915050565b6000806040838503121561123757600080fd5b82356001600160401b038082111561124e57600080fd5b908401906040828703121561126257600080fd5b61126a610ea6565b82358281111561127957600080fd5b61128588828601610fab565b82525060208301358281111561129a57600080fd5b6112a688828601610fab565b6020830152508094505060208501359150808211156112c457600080fd5b5061103d858286016111ca565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b610180810161072c82846112d1565b600060a0828403121561136f57600080fd5b611377610e84565b90508135611384816111a5565b81526020820135611394816111a5565b602082015260408201356113a7816111a5565b80604083015250606082013560608201526080820135608082015292915050565b6001600160401b038116811461078457600080fd5b80356111c5816113c8565b6000806000606084860312156113fd57600080fd5b83356001600160401b038082111561141457600080fd5b908501906101a0828803121561142957600080fd5b611431610ec8565b61143b888461135d565b815260a0830135602082015261145360c084016113dd565b604082015261146460e084016111ba565b606082015261010080840135608083015261012084013560a083015261014084013560c083015261149861016085016111ba565b60e0830152610180840135838111156114b057600080fd5b6114bc8a828701610fab565b8284015250508095505060208601359150808211156114da57600080fd5b506114e7868287016111ca565b9250506114f6604085016111ba565b90509250925092565b60005b8381101561151a578181015183820152602001611502565b50506000910152565b6000815180845261153b8160208601602086016114ff565b601f01601f19169290920160200192915050565b60018060a01b03815116825260006020820151604060208501526115766040850182611523565b949350505050565b83815282602082015260606040820152600061159d606083018461154f565b95945050505050565b60008183036101808112156115ba57600080fd5b6115c2610e3a565b60c08212156115d057600080fd5b6115d8610e62565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b80516111c5816111a5565b8051600281900b81146111c557600080fd5b80516111c5816113c8565b60006040828403121561169857600080fd5b6116a0610ea6565b9050815181526020820151602082015292915050565b600060c082840312156116c857600080fd5b6116d0610e62565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a081121561172257600080fd5b61172a610e62565b83518152602084015161173c816111a5565b6020820152604084015161174f816111a5565b60408201526060840151611762816111a5565b606082015260808481015190820152610200609f198301121561178457600080fd5b61178c610eeb565b915060a084015182526117a160c08501611669565b60208301526117b260e08501611669565b60408301526117c4610100850161167b565b60608301526117d7856101208601611686565b60808301526117ea8561016086016116b6565b60a08301526117fd856102208601611686565b60c0830152611810856102608601611686565b60e083015260a08101919091529392505050565b60006020828403121561183657600080fd5b5051919050565b6000600160ff1b820161186057634e487b7160e01b600052601160045260246000fd5b5060000390565b600060a0828403121561187957600080fd5b611881610e84565b9050815161188e816111a5565b8152602082015161189e816111a5565b602082015260408201516118b1816111a5565b80604083015250606082015160608201526080820151608082015292915050565b600082601f8301126118e357600080fd5b81516118f1610fca82610f84565b81815284602083860101111561190657600080fd5b6115768260208301602087016114ff565b60006020828403121561192957600080fd5b81516001600160401b038082111561194057600080fd5b908301906101a0828603121561195557600080fd5b61195d610ec8565b6119678684611867565b815260a0830151602082015261197f60c0840161167b565b604082015261199060e0840161165e565b606082015261010080840151608083015261012084015160a083015261014084015160c08301526119c4610160850161165e565b60e0830152610180840151838111156119dc57600080fd5b6119e8888287016118d2565b918301919091525095945050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152611a3d60e0840182611523565b9050828103602084015261159d818561154f565b6101a0808252835180516001600160a01b039081168484015260208083015182166101c086015260408084015183166101e0870152606080850151610200880152608094850151610220880152918801516102408701528701516001600160401b03166102608601528601518116610280850152908501516102a084015260a08501516102c084015260c08501516102e084015260e085015116610300830152610100840151610320830182905260009190611b11610340850182611523565b92505050611b2260208301846112d1565b9392505050565b600060808284031215611b3b57600080fd5b604051608081018181106001600160401b0382111715611b5d57611b5d610e24565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60008183036101c0811215611ba257600080fd5b611baa610e62565b91508251611bb7816111a5565b82526020830151611bc7816111a5565b602083015260c0603f1982011215611bde57600080fd5b50611be7610e62565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015280604083015250611c35836101008401611b29565b606082015261018082015160808201526101a082015160a082015292915050565b600060608284031215611c6857600080fd5b604051606081018181106001600160401b0382111715611c8a57611c8a610e24565b60405282518152905080611ca060208401611669565b6020820152611cb160408401611669565b60408201525092915050565b60006102608284031215611cd057600080fd5b611cd8610f0e565b9050611ce38261165e565b8152611cf160208301611669565b6020820152611d0260408301611669565b6040820152611d136060830161167b565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0611d8684828501611686565b908201526101e0611d9984848301611686565b6101c08301526102208301519082015261024090910151610200820152919050565b805180151581146111c557600080fd5b805160ff811681146111c557600080fd5b60006107408284031215611def57600080fd5b611df7610f31565b82518152611e076020840161165e565b6020820152611e186040840161165e565b6040820152611e2a8460608501611b8e565b6060820152611e3d846102208501611b8e565b6080820152611e50846103e08501611c56565b60a0820152611e63846104408501611cbd565b60c0820152611e756106a0840161165e565b60e0820152611e876106c08401611dbb565b610100820152611e9a6106e08401611dbb565b610120820152611ead6107008401611dcb565b610140820152610720929092015161016083015250919050565b60008251611ed98184602087016114ff565b9190910192915050565b600060208284031215611ef557600080fd5b611b2282611dbb565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b6000835161203b8184602088016114ff565b83519083019061204f8183602088016114ff565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b8152600083516120868160138501602088016114ff565b83519083019061209d8160138401602088016114ff565b01601301949350505050565b60006101406120cc838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152612100608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261212a81840186611523565b905082810361012084015261213f8185611523565b9998505050505050505050565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e085015280861661010085015250806101208401526121ad81840185611523565b9d9c5050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122045f2bc5e3333606547f02b1ec035ffd26d169ed5eab5b18b0f6d2d53028beaf264736f6c63430008130033",
    "sourceMap": "975:5287:91:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1221:56:91;;;;;;-1:-1:-1;;;;;472:32:117;;;454:51;;442:2;427:18;1221:56:91;;;;;;;;4897:205;;;;;;:::i;:::-;;:::i;:::-;;1482:1367;;;;;;:::i;:::-;;:::i;3094:1606::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;707:191:54:-;;;;;;:::i;:::-;;:::i;5108:568:91:-;;;;;;:::i;:::-;;:::i;4897:205::-;4991:10;;5037:57;;;;;;;;5072:4;5037:57;;;;;;;;4991:104;;-1:-1:-1;;;4991:104:91;;-1:-1:-1;;;;;4991:10:91;;;;:30;;:104;;5022:7;;5031:4;;4991:104;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4897:205;;:::o;1482:1367::-;477:10:54;;-1:-1:-1;;;;;477:10:54;455;:33;451:68;;497:22;;-1:-1:-1;;;497:22:54;;;;;;;;;;;451:68;1692:11:91::1;:21;;;1717:1;1692:26:::0;1689:1154:::1;;1734:27;1764:10:::0;;1784:19:::1;::::0;::::1;::::0;1764:40:::1;::::0;-1:-1:-1;;;1764:40:91;;-1:-1:-1;;;;;1764:10:91;;::::1;::::0;:19:::1;::::0;:40:::1;::::0;::::1;;13941:25:117::0;;;13929:2;13914:18;;13795:177;1764:40:91::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1840:10;::::0;1887:12:::1;::::0;::::1;::::0;1819:82:::1;::::0;-1:-1:-1;;;1819:82:91;;1840:10;1819:82:::1;::::0;::::1;17102:41:117::0;1872:4:91::1;17159:18:117::0;;;17152:60;17228:18;;;17221:34;;;;1887:12:91;;-1:-1:-1;;;;;;1840:10:91::1;::::0;1819:38:::1;::::0;17075:18:117;;1819:82:91::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1916:191;1961:41;1983:11;:18;;;1961:21;:41::i;:::-;2034:19;::::0;;::::1;::::0;2020:34:::1;::::0;;;:13:::1;:34:::0;;;;;;;2080:12:::1;::::0;::::1;::::0;-1:-1:-1;;;;;2020:34:91;;::::1;::::0;1916:27:::1;:191::i;1689:1154::-;2138:25;2177:11;:21;;;2166:43;;;;;;;;;;;;:::i;:::-;2138:71;;2249:1;2228:18;:22;2224:609;;;2270:158;2319:41;2341:11;:18;;;2319:21;:41::i;:::-;2370:10;::::0;-1:-1:-1;;;;;2370:10:91::1;2391:18:::0;2270:27:::1;:158::i;2224:609::-;2474:1;2453:18;:22;2449:384;;;2516:10;::::0;-1:-1:-1;;;;;2516:10:91::1;2495:38;2516:10:::0;2548:4:::1;2563:19;2564:18:::0;2563:19:::1;:::i;:::-;2495:89;::::0;-1:-1:-1;;;;;;2495:89:91::1;::::0;;;;;;17127:14:117;;17120:22;2495:89:91::1;::::0;::::1;17102:41:117::0;-1:-1:-1;;;;;17179:32:117;;;17159:18;;;17152:60;17228:18;;;17221:34;17075:18;;2495:89:91::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2603:214;2652:41;2674:11;:18;;;2652:21;:41::i;:::-;2729:19;::::0;;::::1;::::0;2715:34:::1;::::0;;;:13:::1;:34:::0;;;;;;;-1:-1:-1;;;;;2715:34:91::1;2779:19;2780:18:::0;2779:19:::1;:::i;:::-;2603:27;:214::i;3094:1606::-:0;3226:41;;:::i;:::-;3283:28;3325:5;:11;;;3314:37;;;;;;;;;;;;:::i;:::-;3283:68;;3361:34;3398:44;3420:10;3432:5;:9;;;3398:21;:44::i;:::-;3476:17;;;;;-1:-1:-1;;;;;3461:33:91;3506:1;3461:33;;;:14;:33;;;;3361:81;;-1:-1:-1;;;;;;3461:33:91;3453:56;;;;;;3664:17;;;;;-1:-1:-1;;;;;3649:33:91;;;;;:14;:33;;;;3617:28;;;;-1:-1:-1;;;;;3617:65:91;;;3649:33;;3617:65;3609:74;;;;;;3694:27;3707:13;3694:12;:27::i;:::-;3746:10;;3776:247;;;;;;;;;3816:17;;;;-1:-1:-1;;;;;3776:247:91;;;;3851:21;;;;3776:247;;;;3890:22;;;;;3776:247;;;;3930:26;;;;3776:247;;;;3985:23;;;;3974:35;;;;;13941:25:117;;;;3974:35:91;;;;;;;;;;13914:18:117;;3974:35:91;;3776:247;;;;3746:315;;-1:-1:-1;;;3746:315:91;;-1:-1:-1;;;;;3746:10:91;;;;:16;;:315;;4037:14;;3746:315;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3732:329;;4076:10;:21;;;4101:1;4076:26;4072:375;;4155:15;;:22;;;;;4132:19;;;;;4155:15;4118:34;;;:13;:34;;;;;;:59;;-1:-1:-1;;;;;;4118:59:91;-1:-1:-1;;;;;4118:59:91;;;;;;4192:10;;4219:19;;4240:15;;:22;;;;4192:71;;-1:-1:-1;;;4192:71:91;;;;;21176:25:117;;;;21237:32;;21217:18;;;21210:60;4192:10:91;;:26;;21149:18:117;;4192:71:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:375;;;4338:19;;;;;4324:34;;;;:13;:34;;;;;;4298:15;;:22;;;;-1:-1:-1;;;;;4298:60:91;;;4324:34;;4298:60;4294:143;;4385:37;;-1:-1:-1;;;4385:37:91;;;;;;;;;;;4294:143;4535:10;:27;;;-1:-1:-1;;;;;4519:53:91;;4573:10;4585:11;4519:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4620:15:91;;:22;;;;;4644:19;;;;4613:51;;;-1:-1:-1;;;;;23185:32:117;;;23167:51;;23234:18;;;23227:34;4613:51:91;;-1:-1:-1;23140:18:117;;-1:-1:-1;4613:51:91;;;;;;;4675:18;;3094:1606;;;;;:::o;707:191:54:-;809:1;775:22;;;:14;:22;;;;;;-1:-1:-1;;;;;775:22:54;771:121;;852:29;874:6;852:21;:29::i;:::-;827:22;;;;:14;:22;;;;;:54;;-1:-1:-1;;;;;;827:54:54;-1:-1:-1;;;;;827:54:54;;;;;;;;;;771:121;707:191;:::o;5108:568:91:-;5433:157;;;;;;;;;5473:17;;;;-1:-1:-1;;;;;5433:157:91;;;;5492:21;;;;5433:157;;;;5515:22;;;;;5433:157;;;;5539:26;;;;5433:157;;;;5567:9;;;;;;;5358:41;5567:9;;;5433:157;;;;5402:226;;-1:-1:-1;;;5402:226:91;;-1:-1:-1;;;;;5402:17:91;;;;;:226;;5433:157;5604:14;;5402:226;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5358:270;;5639:30;5657:11;5639:17;:30::i;:::-;5278:398;5108:568;;;:::o;904:208:54:-;974:7;1029:10;;:32;;-1:-1:-1;;;1029:32:54;;;;;13941:25:117;;;974:7:54;;-1:-1:-1;;;;;1029:10:54;;:24;;13914:18:117;;1029:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1079:20;;;:26;;904:208;-1:-1:-1;;;904:208:54:o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;23185:32:117;;;1381:59:51;;;23167:51:117;23234:18;;;;23227:34;;;1381:59:51;;;;;;;;;;23140:18:117;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;29485:2:117;1451:72:51;;;29467:21:117;29524:1;29504:18;;;29497:29;-1:-1:-1;;;29542:18:117;;;29535:32;29584:18;;1451:72:51;;;;;;;;1324:206;;1221:309;;;:::o;2286:385:90:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:14:90;2515:1;2489:10;:23;;;:27;:66;;2554:1;2489:66;;;2527:10;:23;;;2489:66;2472:83;;2573:91;;;;;;;;2587:10;:15;;;2573:91;;;;2604:10;:28;;;-1:-1:-1;;;;;2573:91:90;;;;;2634:6;2573:91;;;;2642:16;2647:10;2642:4;:16::i;:::-;2573:91;;;;;;;2566:98;-1:-1:-1;;2286:385:90;;;;:::o;5909:351:91:-;5978:16;:5;:14;:16::i;:::-;6005:8;;-1:-1:-1;;;;;6005:8:91;:34;6053:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:88;;569:79;;;;;613:11;;;;-1:-1:-1;;;;;569:79:88;506:233;;;569:79;;;634:12;;;;569:79;;;;506:233;;669:10;;:16;;506:233;;;;;;;709:10;;:19;;506:233;;;;;346:400;6053:16:91;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:88;;;;;;;6113:4:91;998:84:88;;1068:12;;;;998:84;;;;6133:5:91;:10;;;:17;;;6164:5;:10;;;762:334:90;;;;;;;:::i;:::-;;;;-1:-1:-1;;762:334:90;;;;;;1273:28;;;;;;;;;;762:334;;;1273:28;762:334;1273:28;;;1236:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1236:66:90;;;;;;1613:22;;;;;;;;;;1236:66;;;1613:22;1236:66;1613:22;;;1561:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1561:75:90;;;;;;;;;;6234:9:91;;;;-1:-1:-1;;;;;;6005:248:91;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5682:221;5776:17;5807:11;5796:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;5776:43;;5881:4;5875:11;5868:4;5864:2;5860:13;5853:34;1759:521:90;1821:7;762:334;;;;;;;:::i;:::-;;;;;;;;;;;;;1360:29;;;;;;1939:17;:5;:10;;;:15;:17::i;:::-;1974:5;:16;;;2008:5;:12;;;2038:5;:23;;;2079:5;:17;;;2114:5;:21;;;2153:5;:18;;;2189:5;:22;;;2229:5;:20;;;1870:393;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1847:426;;;;;;1840:433;;1759:521;;;:::o;549:297:89:-;656:18;;:25;-1:-1:-1;;;;;631:51:89;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:89;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:89;;;;;;;;;;;559:189:87;619:7;446:15;;;;;;;;;;;;;;;;;436:26;;;;;;;688:11;;701;;;;714:10;;;;726:13;;;;655:85;;;;;34909:25:117;;;-1:-1:-1;;;;;35008:15:117;;;35003:2;34988:18;;34981:43;35060:15;;;;35055:2;35040:18;;35033:43;35107:2;35092:18;;35085:34;;;;35150:3;35135:19;;35128:35;34896:3;34881:19;;34650:519;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:117:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:117;;14:180;-1:-1:-1;14:180:117:o;516:127::-;577:10;572:3;568:20;565:1;558:31;608:4;605:1;598:15;632:4;629:1;622:15;648:253;720:2;714:9;762:4;750:17;;-1:-1:-1;;;;;782:34:117;;818:22;;;779:62;776:88;;;844:18;;:::i;:::-;880:2;873:22;648:253;:::o;906:::-;978:2;972:9;1020:4;1008:17;;-1:-1:-1;;;;;1040:34:117;;1076:22;;;1037:62;1034:88;;;1102:18;;:::i;1164:253::-;1236:2;1230:9;1278:4;1266:17;;-1:-1:-1;;;;;1298:34:117;;1334:22;;;1295:62;1292:88;;;1360:18;;:::i;1422:257::-;1494:4;1488:11;;;1526:17;;-1:-1:-1;;;;;1558:34:117;;1594:22;;;1555:62;1552:88;;;1620:18;;:::i;1684:255::-;1756:2;1750:9;1798:6;1786:19;;-1:-1:-1;;;;;1820:34:117;;1856:22;;;1817:62;1814:88;;;1882:18;;:::i;1944:255::-;2016:2;2010:9;2058:6;2046:19;;-1:-1:-1;;;;;2080:34:117;;2116:22;;;2077:62;2074:88;;;2142:18;;:::i;2204:255::-;2276:2;2270:9;2318:6;2306:19;;-1:-1:-1;;;;;2340:34:117;;2376:22;;;2337:62;2334:88;;;2402:18;;:::i;2464:255::-;2536:2;2530:9;2578:6;2566:19;;-1:-1:-1;;;;;2600:34:117;;2636:22;;;2597:62;2594:88;;;2662:18;;:::i;2724:275::-;2795:2;2789:9;2860:2;2841:13;;-1:-1:-1;;2837:27:117;2825:40;;-1:-1:-1;;;;;2880:34:117;;2916:22;;;2877:62;2874:88;;;2942:18;;:::i;:::-;2978:2;2971:22;2724:275;;-1:-1:-1;2724:275:117:o;3004:186::-;3052:4;-1:-1:-1;;;;;3077:6:117;3074:30;3071:56;;;3107:18;;:::i;:::-;-1:-1:-1;3173:2:117;3152:15;-1:-1:-1;;3148:29:117;3179:4;3144:40;;3004:186::o;3195:462::-;3237:5;3290:3;3283:4;3275:6;3271:17;3267:27;3257:55;;3308:1;3305;3298:12;3257:55;3344:6;3331:20;3375:48;3391:31;3419:2;3391:31;:::i;:::-;3375:48;:::i;:::-;3448:2;3439:7;3432:19;3494:3;3487:4;3482:2;3474:6;3470:15;3466:26;3463:35;3460:55;;;3511:1;3508;3501:12;3460:55;3576:2;3569:4;3561:6;3557:17;3550:4;3541:7;3537:18;3524:55;3624:1;3599:16;;;3617:4;3595:27;3588:38;;;;3603:7;3195:462;-1:-1:-1;;;3195:462:117:o;3662:388::-;3739:6;3747;3800:2;3788:9;3779:7;3775:23;3771:32;3768:52;;;3816:1;3813;3806:12;3768:52;3852:9;3839:23;3829:33;;3913:2;3902:9;3898:18;3885:32;-1:-1:-1;;;;;3932:6:117;3929:30;3926:50;;;3972:1;3969;3962:12;3926:50;3995:49;4036:7;4027:6;4016:9;4012:22;3995:49;:::i;:::-;3985:59;;;3662:388;;;;;:::o;4055:1106::-;4113:5;4152:9;4147:3;4143:19;4182:6;4178:2;4174:15;4171:35;;;4202:1;4199;4192:12;4171:35;4224:22;;:::i;:::-;4215:31;;4266:4;4262:2;4258:13;4255:33;;;4284:1;4281;4274:12;4255:33;;4312:22;;:::i;:::-;4372:9;4359:23;4350:7;4343:40;4445:2;4434:9;4430:18;4417:32;4412:2;4403:7;4399:16;4392:58;4512:2;4501:9;4497:18;4484:32;4479:2;4470:7;4466:16;4459:58;4579:2;4568:9;4564:18;4551:32;4546:2;4537:7;4533:16;4526:58;4647:3;4636:9;4632:19;4619:33;4613:3;4604:7;4600:17;4593:60;4716:3;4705:9;4701:19;4688:33;4682:3;4673:7;4669:17;4662:60;4745:7;4738:5;4731:22;;4813:4;4802:9;4798:20;4785:34;4780:2;4773:5;4769:14;4762:58;4880:4;4869:9;4865:20;4852:34;4847:2;4840:5;4836:14;4829:58;4947:3;4936:9;4932:19;4919:33;4914:2;4907:5;4903:14;4896:57;5014:3;5003:9;4999:19;4986:33;4980:3;4973:5;4969:15;4962:58;5081:3;5070:9;5066:19;5053:33;5047:3;5040:5;5036:15;5029:58;5149:3;5138:9;5134:19;5121:33;5114:4;5107:5;5103:16;5096:59;4055:1106;;;;:::o;5166:972::-;5294:6;5302;5355:3;5343:9;5334:7;5330:23;5326:33;5323:53;;;5372:1;5369;5362:12;5323:53;5412:9;5399:23;-1:-1:-1;;;;;5482:2:117;5474:6;5471:14;5468:34;;;5498:1;5495;5488:12;5468:34;5521:22;;;;5577:4;5559:16;;;5555:27;5552:47;;;5595:1;5592;5585:12;5552:47;5621:22;;:::i;:::-;5679:2;5666:16;5659:5;5652:31;5736:2;5732;5728:11;5715:25;5710:2;5703:5;5699:14;5692:49;5794:2;5790;5786:11;5773:25;5768:2;5761:5;5757:14;5750:49;5852:2;5848;5844:11;5831:25;5826:2;5819:5;5815:14;5808:49;5903:3;5899:2;5895:12;5882:26;5933:2;5923:8;5920:16;5917:36;;;5949:1;5946;5939:12;5917:36;5986:44;6022:7;6011:8;6007:2;6003:17;5986:44;:::i;:::-;5980:3;5973:5;5969:15;5962:69;;6050:5;6040:15;;;;;6074:58;6124:7;6119:2;6108:9;6104:18;6074:58;:::i;:::-;6064:68;;5166:972;;;;;:::o;6143:131::-;-1:-1:-1;;;;;6218:31:117;;6208:42;;6198:70;;6264:1;6261;6254:12;6279:134;6347:20;;6376:31;6347:20;6376:31;:::i;:::-;6279:134;;;:::o;6418:489::-;6479:5;6527:4;6515:9;6510:3;6506:19;6502:30;6499:50;;;6545:1;6542;6535:12;6499:50;6567:22;;:::i;:::-;6558:31;;6626:9;6613:23;6645:33;6670:7;6645:33;:::i;:::-;6687:22;;6760:2;6745:18;;6732:32;-1:-1:-1;;;;;6776:30:117;;6773:50;;;6819:1;6816;6809:12;6773:50;6855:45;6896:3;6887:6;6876:9;6872:22;6855:45;:::i;:::-;6850:2;6843:5;6839:14;6832:69;;6418:489;;;;:::o;6912:1021::-;7043:6;7051;7104:2;7092:9;7083:7;7079:23;7075:32;7072:52;;;7120:1;7117;7110:12;7072:52;7160:9;7147:23;-1:-1:-1;;;;;7230:2:117;7222:6;7219:14;7216:34;;;7246:1;7243;7236:12;7216:34;7269:22;;;;7325:2;7307:16;;;7303:25;7300:45;;;7341:1;7338;7331:12;7300:45;7367:22;;:::i;:::-;7427:2;7414:16;7455:2;7445:8;7442:16;7439:36;;;7471:1;7468;7461:12;7439:36;7498:44;7534:7;7523:8;7519:2;7515:17;7498:44;:::i;:::-;7491:5;7484:59;;7589:2;7585;7581:11;7568:25;7618:2;7608:8;7605:16;7602:36;;;7634:1;7631;7624:12;7602:36;7670:44;7706:7;7695:8;7691:2;7687:17;7670:44;:::i;:::-;7665:2;7658:5;7654:14;7647:68;;7734:5;7724:15;;;7792:2;7781:9;7777:18;7764:32;7748:48;;7821:2;7811:8;7808:16;7805:36;;;7837:1;7834;7827:12;7805:36;;7860:67;7919:7;7908:8;7897:9;7893:24;7860:67;:::i;7938:733::-;8019:5;8013:12;8052:2;8046:9;8041:3;8034:22;8102:4;8098:2;8094:13;8088:20;8081:4;8076:3;8072:14;8065:44;8155:4;8151:2;8147:13;8141:20;8134:4;8129:3;8125:14;8118:44;8208:4;8204:2;8200:13;8194:20;8187:4;8182:3;8178:14;8171:44;8261:4;8257:2;8253:13;8247:20;8240:4;8235:3;8231:14;8224:44;8314:4;8310:2;8306:13;8300:20;8293:4;8288:3;8284:14;8277:44;;8370:4;8363:5;8359:16;8353:23;8346:4;8341:3;8337:14;8330:47;8426:4;8419:5;8415:16;8409:23;8402:4;8397:3;8393:14;8386:47;8484:4;8477:5;8473:16;8467:23;8458:6;8453:3;8449:16;8442:49;8542:4;8535:5;8531:16;8525:23;8516:6;8511:3;8507:16;8500:49;8600:4;8593:5;8589:16;8583:23;8574:6;8569:3;8565:16;8558:49;8658:4;8651:5;8647:16;8641:23;8632:6;8627:3;8623:16;8616:49;7938:733;;:::o;8676:261::-;8870:3;8855:19;;8883:48;8859:9;8913:6;8883:48;:::i;8942:700::-;8998:5;9046:4;9034:9;9029:3;9025:19;9021:30;9018:50;;;9064:1;9061;9054:12;9018:50;9086:22;;:::i;:::-;9077:31;;9145:9;9132:23;9164:33;9189:7;9164:33;:::i;:::-;9206:22;;9280:2;9265:18;;9252:32;9293:33;9252:32;9293:33;:::i;:::-;9353:2;9342:14;;9335:31;9418:2;9403:18;;9390:32;9431:33;9390:32;9431:33;:::i;:::-;9496:7;9491:2;9484:5;9480:14;9473:31;;9564:2;9553:9;9549:18;9536:32;9531:2;9524:5;9520:14;9513:56;9630:3;9619:9;9615:19;9602:33;9596:3;9589:5;9585:15;9578:58;8942:700;;;;:::o;9647:129::-;-1:-1:-1;;;;;9725:5:117;9721:30;9714:5;9711:41;9701:69;;9766:1;9763;9756:12;9781:132;9848:20;;9877:30;9848:20;9877:30;:::i;9918:1501::-;10082:6;10090;10098;10151:2;10139:9;10130:7;10126:23;10122:32;10119:52;;;10167:1;10164;10157:12;10119:52;10207:9;10194:23;-1:-1:-1;;;;;10277:2:117;10269:6;10266:14;10263:34;;;10293:1;10290;10283:12;10263:34;10316:22;;;;10372:6;10354:16;;;10350:29;10347:49;;;10392:1;10389;10382:12;10347:49;10418:22;;:::i;:::-;10463:40;10495:7;10491:2;10463:40;:::i;:::-;10456:5;10449:55;10559:3;10555:2;10551:12;10538:26;10531:4;10524:5;10520:16;10513:52;10599:31;10625:3;10621:2;10617:12;10599:31;:::i;:::-;10592:4;10585:5;10581:16;10574:57;10663:32;10690:3;10686:2;10682:12;10663:32;:::i;:::-;10658:2;10651:5;10647:14;10640:56;10715:3;10773:2;10769;10765:11;10752:25;10745:4;10738:5;10734:16;10727:51;10832:6;10828:2;10824:15;10811:29;10805:3;10798:5;10794:15;10787:54;10895:3;10891:2;10887:12;10874:26;10868:3;10861:5;10857:15;10850:51;10934:32;10961:3;10957:2;10953:12;10934:32;:::i;:::-;10928:3;10921:5;10917:15;10910:57;11013:3;11009:2;11005:12;10992:26;11043:2;11033:8;11030:16;11027:36;;;11059:1;11056;11049:12;11027:36;11095:44;11131:7;11120:8;11116:2;11112:17;11095:44;:::i;:::-;11090:2;11083:5;11079:14;11072:68;;;11159:5;11149:15;;;11217:4;11206:9;11202:20;11189:34;11173:50;;11248:2;11238:8;11235:16;11232:36;;;11264:1;11261;11254:12;11232:36;;11287:67;11346:7;11335:8;11324:9;11320:24;11287:67;:::i;:::-;11277:77;;;11373:40;11407:4;11396:9;11392:20;11373:40;:::i;:::-;11363:50;;9918:1501;;;;;:::o;11424:250::-;11509:1;11519:113;11533:6;11530:1;11527:13;11519:113;;;11609:11;;;11603:18;11590:11;;;11583:39;11555:2;11548:10;11519:113;;;-1:-1:-1;;11666:1:117;11648:16;;11641:27;11424:250::o;11679:270::-;11720:3;11758:5;11752:12;11785:6;11780:3;11773:19;11801:76;11870:6;11863:4;11858:3;11854:14;11847:4;11840:5;11836:16;11801:76;:::i;:::-;11931:2;11910:15;-1:-1:-1;;11906:29:117;11897:39;;;;11938:4;11893:50;;11679:270;-1:-1:-1;;11679:270:117:o;11954:283::-;12076:1;12072;12067:3;12063:11;12059:19;12051:5;12045:12;12041:38;12036:3;12029:51;12011:3;12126:4;12119:5;12115:16;12109:23;12164:4;12157;12152:3;12148:14;12141:28;12185:46;12225:4;12220:3;12216:14;12202:12;12185:46;:::i;:::-;12178:53;11954:283;-1:-1:-1;;;;11954:283:117:o;12242:449::-;12519:6;12508:9;12501:25;12562:6;12557:2;12546:9;12542:18;12535:34;12605:2;12600;12589:9;12585:18;12578:30;12482:4;12625:60;12681:2;12670:9;12666:18;12658:6;12625:60;:::i;:::-;12617:68;12242:449;-1:-1:-1;;;;;12242:449:117:o;12696:1094::-;12796:6;12840:9;12831:7;12827:23;12870:3;12866:2;12862:12;12859:32;;;12887:1;12884;12877:12;12859:32;12913:22;;:::i;:::-;12955:4;12951:2;12947:13;12944:33;;;12973:1;12970;12963:12;12944:33;13001:22;;:::i;:::-;12986:37;;13054:9;13048:16;13039:7;13032:33;13120:2;13109:9;13105:18;13099:25;13094:2;13085:7;13081:16;13074:51;13180:2;13169:9;13165:18;13159:25;13154:2;13145:7;13141:16;13134:51;13240:2;13229:9;13225:18;13219:25;13214:2;13205:7;13201:16;13194:51;13301:3;13290:9;13286:19;13280:26;13274:3;13265:7;13261:17;13254:53;13363:3;13352:9;13348:19;13342:26;13336:3;13327:7;13323:17;13316:53;13392:7;13385:5;13378:22;13453:4;13442:9;13438:20;13432:27;13427:2;13420:5;13416:14;13409:51;13513:4;13502:9;13498:20;13492:27;13487:2;13480:5;13476:14;13469:51;13573:3;13562:9;13558:19;13552:26;13547:2;13540:5;13536:14;13529:50;13633:3;13622:9;13618:19;13612:26;13606:3;13599:5;13595:15;13588:51;13693:3;13682:9;13678:19;13672:26;13666:3;13659:5;13655:15;13648:51;13754:3;13743:9;13739:19;13733:26;13726:4;13719:5;13715:16;13708:52;13779:5;13769:15;;;;12696:1094;;;;:::o;13977:138::-;14056:13;;14078:31;14056:13;14078:31;:::i;14120:164::-;14197:13;;14250:1;14239:20;;;14229:31;;14219:59;;14274:1;14271;14264:12;14289:136;14367:13;;14389:30;14367:13;14389:30;:::i;14430:286::-;14502:5;14550:4;14538:9;14533:3;14529:19;14525:30;14522:50;;;14568:1;14565;14558:12;14522:50;14590:22;;:::i;:::-;14581:31;;14641:9;14635:16;14628:5;14621:31;14705:2;14694:9;14690:18;14684:25;14679:2;14672:5;14668:14;14661:49;14430:286;;;;:::o;14721:526::-;14797:5;14845:4;14833:9;14828:3;14824:19;14820:30;14817:50;;;14863:1;14860;14853:12;14817:50;14885:22;;:::i;:::-;14876:31;;14936:9;14930:16;14923:5;14916:31;15000:2;14989:9;14985:18;14979:25;14974:2;14967:5;14963:14;14956:49;15058:2;15047:9;15043:18;15037:25;15032:2;15025:5;15021:14;15014:49;15116:2;15105:9;15101:18;15095:25;15090:2;15083:5;15079:14;15072:49;15175:3;15164:9;15160:19;15154:26;15148:3;15141:5;15137:15;15130:51;15235:3;15224:9;15220:19;15214:26;15208:3;15201:5;15197:15;15190:51;14721:526;;;;:::o;15252:1649::-;15346:6;15390:9;15381:7;15377:23;15420:3;15416:2;15412:12;15409:32;;;15437:1;15434;15427:12;15409:32;15463:22;;:::i;:::-;15514:9;15508:16;15501:5;15494:31;15570:2;15559:9;15555:18;15549:25;15583:33;15608:7;15583:33;:::i;:::-;15643:2;15632:14;;15625:31;15701:2;15686:18;;15680:25;15714:33;15680:25;15714:33;:::i;:::-;15774:2;15763:14;;15756:31;15832:2;15817:18;;15811:25;15845:33;15811:25;15845:33;:::i;:::-;15905:2;15894:14;;15887:31;15972:3;15957:19;;;15951:26;15934:15;;;15927:51;16013:6;-1:-1:-1;;15994:17:117;;15990:30;15987:50;;;16033:1;16030;16023:12;15987:50;16061:22;;:::i;:::-;16046:37;;16129:3;16118:9;16114:19;16108:26;16099:7;16092:43;16169:49;16212:4;16201:9;16197:20;16169:49;:::i;:::-;16164:2;16155:7;16151:16;16144:75;16253:48;16296:3;16285:9;16281:19;16253:48;:::i;:::-;16248:2;16239:7;16235:16;16228:74;16336:52;16380:6;16369:9;16365:22;16336:52;:::i;:::-;16331:2;16322:7;16318:16;16311:78;16424:73;16489:7;16483:3;16472:9;16468:19;16424:73;:::i;:::-;16418:3;16409:7;16405:17;16398:100;16533:77;16602:7;16596:3;16585:9;16581:19;16533:77;:::i;:::-;16527:3;16518:7;16514:17;16507:104;16647:73;16712:7;16706:3;16695:9;16691:19;16647:73;:::i;:::-;16640:4;16631:7;16627:18;16620:101;16756:73;16821:7;16815:3;16804:9;16800:19;16756:73;:::i;:::-;16750:3;16737:17;;16730:100;16857:3;16846:15;;16839:32;;;;16850:5;15252:1649;-1:-1:-1;;;15252:1649:117:o;17266:183::-;17335:6;17388:2;17376:9;17367:7;17363:23;17359:32;17356:52;;;17404:1;17401;17394:12;17356:52;-1:-1:-1;17427:16:117;;17266:183;-1:-1:-1;17266:183:117:o;17454:233::-;17489:3;-1:-1:-1;;;17510:22:117;;17507:145;;17574:10;17569:3;17565:20;17562:1;17555:31;17609:4;17606:1;17599:15;17637:4;17634:1;17627:15;17507:145;-1:-1:-1;17672:1:117;17668:13;;17454:233::o;17692:676::-;17759:5;17807:4;17795:9;17790:3;17786:19;17782:30;17779:50;;;17825:1;17822;17815:12;17779:50;17847:22;;:::i;:::-;17838:31;;17899:9;17893:16;17918:33;17943:7;17918:33;:::i;:::-;17960:22;;18027:2;18012:18;;18006:25;18040:33;18006:25;18040:33;:::i;:::-;18100:2;18089:14;;18082:31;18158:2;18143:18;;18137:25;18171:33;18137:25;18171:33;:::i;:::-;18236:7;18231:2;18224:5;18220:14;18213:31;;18297:2;18286:9;18282:18;18276:25;18271:2;18264:5;18260:14;18253:49;18356:3;18345:9;18341:19;18335:26;18329:3;18322:5;18318:15;18311:51;17692:676;;;;:::o;18373:441::-;18426:5;18479:3;18472:4;18464:6;18460:17;18456:27;18446:55;;18497:1;18494;18487:12;18446:55;18526:6;18520:13;18557:48;18573:31;18601:2;18573:31;:::i;18557:48::-;18630:2;18621:7;18614:19;18676:3;18669:4;18664:2;18656:6;18652:15;18648:26;18645:35;18642:55;;;18693:1;18690;18683:12;18642:55;18706:77;18780:2;18773:4;18764:7;18760:18;18753:4;18745:6;18741:17;18706:77;:::i;18819:1184::-;18918:6;18971:2;18959:9;18950:7;18946:23;18942:32;18939:52;;;18987:1;18984;18977:12;18939:52;19020:9;19014:16;-1:-1:-1;;;;;19090:2:117;19082:6;19079:14;19076:34;;;19106:1;19103;19096:12;19076:34;19129:22;;;;19185:6;19167:16;;;19163:29;19160:49;;;19205:1;19202;19195:12;19160:49;19231:22;;:::i;:::-;19276:51;19319:7;19315:2;19276:51;:::i;:::-;19269:5;19262:66;19374:3;19370:2;19366:12;19360:19;19355:2;19348:5;19344:14;19337:43;19414:42;19451:3;19447:2;19443:12;19414:42;:::i;:::-;19407:4;19400:5;19396:16;19389:68;19491:43;19529:3;19525:2;19521:12;19491:43;:::i;:::-;19484:4;19477:5;19473:16;19466:69;19554:3;19605:2;19601;19597:11;19591:18;19584:4;19577:5;19573:16;19566:44;19657:6;19653:2;19649:15;19643:22;19637:3;19630:5;19626:15;19619:47;19713:3;19709:2;19705:12;19699:19;19693:3;19686:5;19682:15;19675:44;19752:43;19790:3;19786:2;19782:12;19752:43;:::i;:::-;19746:3;19739:5;19735:15;19728:68;19835:3;19831:2;19827:12;19821:19;19865:2;19855:8;19852:16;19849:36;;;19881:1;19878;19871:12;19849:36;19917:55;19964:7;19953:8;19949:2;19945:17;19917:55;:::i;:::-;19901:14;;;19894:79;;;;-1:-1:-1;19905:5:117;18819:1184;-1:-1:-1;;;;;18819:1184:117:o;20188:809::-;20471:2;20460:9;20453:21;20516:6;20510:13;20505:2;20494:9;20490:18;20483:41;20578:4;20570:6;20566:17;20560:24;20555:2;20544:9;20540:18;20533:52;20640:2;20632:6;20628:15;20622:22;20616:3;20605:9;20601:19;20594:51;20701:2;20693:6;20689:15;20683:22;20676:4;20665:9;20661:20;20654:52;20434:4;20753:3;20745:6;20741:16;20735:23;20795:4;20789:3;20778:9;20774:19;20767:33;20820:51;20866:3;20855:9;20851:19;20837:12;20820:51;:::i;:::-;20809:62;;20918:9;20913:3;20909:19;20902:4;20891:9;20887:20;20880:49;20946:45;20987:3;20979:6;20946:45;:::i;21776:1212::-;22043:3;22055:21;;;22113:13;;21398:12;;-1:-1:-1;;;;;21394:21:117;;;22128:18;;;21382:34;21469:4;21458:16;;;21452:23;21448:32;;21432:14;;;21425:56;21534:4;21523:16;;;21517:23;21513:32;;21497:14;;;21490:56;21595:4;21584:16;;;21578:23;21562:14;;;21555:47;21651:4;21640:16;;;21634:23;21618:14;;;21611:47;22190:17;;;22184:24;22178:3;22163:19;;22156:53;22244:17;;22238:24;-1:-1:-1;;;;;21734:30:117;22318:3;22303:19;;21722:43;22360:17;;22354:24;265:31;;22437:3;22422:19;;253:44;22485:17;;;22479:24;22473:3;22458:19;;22451:53;22559:4;22547:17;;22541:24;22535:3;22520:19;;22513:53;22621:4;22609:17;;22603:24;22597:3;22582:19;;22575:53;22677:4;22665:17;;22659:24;265:31;22742:3;22727:19;;253:44;22796:6;22784:19;;22778:26;22835:3;22820:19;;22813:31;;;-1:-1:-1;;22043:3:117;22861:53;22909:3;22894:19;;22778:26;22861:53;:::i;:::-;22853:61;;;;22923:59;22976:4;22965:9;22961:20;22953:6;22923:59;:::i;:::-;21776:1212;;;;;:::o;23272:589::-;23339:5;23387:4;23375:9;23370:3;23366:19;23362:30;23359:50;;;23405:1;23402;23395:12;23359:50;23438:2;23432:9;23480:4;23472:6;23468:17;23551:6;23539:10;23536:22;-1:-1:-1;;;;;23503:10:117;23500:34;23497:62;23494:88;;;23562:18;;:::i;:::-;23602:10;23598:2;23591:22;;23631:6;23622:15;;23667:9;23661:16;23653:6;23646:32;23732:2;23721:9;23717:18;23711:25;23706:2;23698:6;23694:15;23687:50;23791:2;23780:9;23776:18;23770:25;23765:2;23757:6;23753:15;23746:50;23850:2;23839:9;23835:18;23829:25;23824:2;23816:6;23812:15;23805:50;;23272:589;;;;:::o;23866:1173::-;23939:5;23978:9;23973:3;23969:19;24008:6;24004:2;24000:15;23997:35;;;24028:1;24025;24018:12;23997:35;24050:22;;:::i;:::-;24041:31;;24102:9;24096:16;24121:33;24146:7;24121:33;:::i;:::-;24163:22;;24230:2;24215:18;;24209:25;24243:33;24209:25;24243:33;:::i;:::-;24303:2;24292:14;;24285:31;24350:4;-1:-1:-1;;24332:16:117;;24328:27;24325:47;;;24368:1;24365;24358:12;24325:47;;24396:22;;:::i;:::-;24464:2;24453:9;24449:18;24443:25;24434:7;24427:42;24524:2;24513:9;24509:18;24503:25;24498:2;24489:7;24485:16;24478:51;24584:3;24573:9;24569:19;24563:26;24558:2;24549:7;24545:16;24538:52;24645:3;24634:9;24630:19;24624:26;24619:2;24610:7;24606:16;24599:52;24707:4;24696:9;24692:20;24686:27;24680:3;24671:7;24667:17;24660:54;24770:3;24759:9;24755:19;24749:26;24743:3;24734:7;24730:17;24723:53;24808:7;24803:2;24796:5;24792:14;24785:31;;24848:64;24908:3;24902;24891:9;24887:19;24848:64;:::i;:::-;24843:2;24836:5;24832:14;24825:88;24967:3;24956:9;24952:19;24946:26;24940:3;24933:5;24929:15;24922:51;25027:3;25016:9;25012:19;25006:26;25000:3;24993:5;24989:15;24982:51;23866:1173;;;;:::o;25044:580::-;25117:5;25165:4;25153:9;25148:3;25144:19;25140:30;25137:50;;;25183:1;25180;25173:12;25137:50;25216:2;25210:9;25258:4;25250:6;25246:17;25329:6;25317:10;25314:22;-1:-1:-1;;;;;25281:10:117;25278:34;25275:62;25272:88;;;25340:18;;:::i;:::-;25376:2;25369:22;25439:16;;25424:32;;25409:6;-1:-1:-1;25409:6:117;25489:47;25532:2;25517:18;;25489:47;:::i;:::-;25484:2;25476:6;25472:15;25465:72;25570:47;25613:2;25602:9;25598:18;25570:47;:::i;:::-;25565:2;25557:6;25553:15;25546:72;;25044:580;;;;:::o;25629:1515::-;25706:5;25754:6;25742:9;25737:3;25733:19;25729:32;25726:52;;;25774:1;25771;25764:12;25726:52;25796:22;;:::i;:::-;25787:31;;25841:40;25871:9;25841:40;:::i;:::-;25834:5;25827:55;25914:47;25957:2;25946:9;25942:18;25914:47;:::i;:::-;25909:2;25902:5;25898:14;25891:71;25994:47;26037:2;26026:9;26022:18;25994:47;:::i;:::-;25989:2;25982:5;25978:14;25971:71;26074:48;26118:2;26107:9;26103:18;26074:48;:::i;:::-;26069:2;26058:14;;26051:72;26177:3;26162:19;;;26156:26;26139:15;;;26132:51;26237:3;26222:19;;;26216:26;26199:15;;;26192:51;26297:3;26282:19;;;26276:26;26259:15;;;26252:51;26357:3;26342:19;;;26336:26;26319:15;;;26312:51;26382:3;26423:18;;;26417:25;26401:14;;;26394:49;26462:3;26503:18;;;26497:25;26481:14;;;26474:49;26542:3;26583:18;;;26577:25;26561:14;;;26554:49;26622:3;26663:18;;;26657:25;26641:14;;;26634:49;26702:3;26743:18;;;26737:25;26721:14;;;26714:49;26782:3;26817:68;26881:3;26861:18;;;26817:68;:::i;:::-;26801:14;;;26794:92;26905:3;26944:68;27008:3;26988:18;;;26944:68;:::i;:::-;26935:6;26924:18;;26917:96;27066:6;27051:22;;27045:29;27029:14;;;27022:53;27132:3;27117:19;;;27111:26;27102:6;27091:18;;27084:54;26928:5;25629:1515;-1:-1:-1;25629:1515:117:o;27149:164::-;27225:13;;27274;;27267:21;27257:32;;27247:60;;27303:1;27300;27293:12;27318:160;27395:13;;27448:4;27437:16;;27427:27;;27417:55;;27468:1;27465;27458:12;27483:1296;27582:6;27635:4;27623:9;27614:7;27610:23;27606:34;27603:54;;;27653:1;27650;27643:12;27603:54;27679:22;;:::i;:::-;27730:9;27724:16;27717:5;27710:31;27773:49;27818:2;27807:9;27803:18;27773:49;:::i;:::-;27768:2;27761:5;27757:14;27750:73;27855:49;27900:2;27889:9;27885:18;27855:49;:::i;:::-;27850:2;27843:5;27839:14;27832:73;27937;28002:7;27997:2;27986:9;27982:18;27937:73;:::i;:::-;27932:2;27925:5;27921:14;27914:97;28045:74;28111:7;28105:3;28094:9;28090:19;28045:74;:::i;:::-;28038:4;28031:5;28027:16;28020:100;28154:74;28220:7;28214:3;28203:9;28199:19;28154:74;:::i;:::-;28147:4;28140:5;28136:16;28129:100;28263:79;28334:7;28327:4;28316:9;28312:20;28263:79;:::i;:::-;28256:4;28249:5;28245:16;28238:105;28377:51;28422:4;28411:9;28407:20;28377:51;:::i;:::-;28370:4;28363:5;28359:16;28352:77;28465:48;28507:4;28496:9;28492:20;28465:48;:::i;:::-;28456:6;28449:5;28445:18;28438:76;28550:48;28592:4;28581:9;28577:20;28550:48;:::i;:::-;28541:6;28534:5;28530:18;28523:76;28635:49;28678:4;28667:9;28663:20;28635:49;:::i;:::-;28626:6;28615:18;;28608:77;28742:4;28727:20;;;;28721:27;28712:6;28701:18;;28694:55;-1:-1:-1;28619:5:117;27483:1296;-1:-1:-1;27483:1296:117:o;28784:287::-;28913:3;28951:6;28945:13;28967:66;29026:6;29021:3;29014:4;29006:6;29002:17;28967:66;:::i;:::-;29049:16;;;;;28784:287;-1:-1:-1;;28784:287:117:o;29076:202::-;29143:6;29196:2;29184:9;29175:7;29171:23;29167:32;29164:52;;;29212:1;29209;29202:12;29164:52;29235:37;29262:9;29235:37;:::i;29613:1654::-;-1:-1:-1;;;30724:26:117;;-1:-1:-1;;;30775:2:117;30766:12;;30759:39;-1:-1:-1;;;30823:2:117;30814:12;;30807:43;-1:-1:-1;;;30875:2:117;30866:12;;30859:38;30927:28;30922:2;30913:12;;30906:50;-1:-1:-1;;;30981:2:117;30972:12;;30965:43;31039:25;31033:3;31024:13;;31017:48;-1:-1:-1;;;31090:3:117;31081:13;;31074:45;31150:26;31144:3;31135:13;;31128:49;-1:-1:-1;;;31202:3:117;31193:13;;31186:46;31257:3;31248:13;;29613:1654::o;31272:492::-;31447:3;31485:6;31479:13;31501:66;31560:6;31555:3;31548:4;31540:6;31536:17;31501:66;:::i;:::-;31630:13;;31589:16;;;;31652:70;31630:13;31589:16;31699:4;31687:17;;31652:70;:::i;:::-;31738:20;;31272:492;-1:-1:-1;;;;31272:492:117:o;31769:656::-;-1:-1:-1;;;32072:3:117;32065:34;32047:3;32128:6;32122:13;32144:75;32212:6;32207:2;32202:3;32198:12;32191:4;32183:6;32179:17;32144:75;:::i;:::-;32279:13;;32238:16;;;;32301:76;32279:13;32363:2;32355:11;;32348:4;32336:17;;32301:76;:::i;:::-;32397:17;32416:2;32393:26;;31769:656;-1:-1:-1;;;;31769:656:117:o;32618:1065::-;33048:4;33077:3;33089:60;33139:9;33130:6;33124:13;32516:12;;-1:-1:-1;;;;;32512:38:117;32500:51;;32600:4;32589:16;;;32583:23;32567:14;;32560:47;32430:183;33089:60;33205:4;33197:6;33193:17;33187:24;33180:4;33169:9;33165:20;33158:54;33268:4;33260:6;33256:17;33250:24;33243:4;33232:9;33228:20;33221:54;33284:63;33342:3;33331:9;33327:19;33319:6;32516:12;;-1:-1:-1;;;;;32512:38:117;32500:51;;32600:4;32589:16;;;32583:23;32567:14;;32560:47;32430:183;33284:63;-1:-1:-1;;;;;33384:32:117;;33378:3;33363:19;;33356:61;33448:3;33433:19;;33426:35;;;33492:3;33477:19;;33470:31;;;33524:44;33549:18;;;33541:6;33524:44;:::i;:::-;33510:58;;33617:9;33609:6;33605:22;33599:3;33588:9;33584:19;33577:51;33645:32;33670:6;33662;33645:32;:::i;:::-;33637:40;32618:1065;-1:-1:-1;;;;;;;;;32618:1065:117:o;33688:957::-;34042:4;34071:3;34101:6;34090:9;34083:25;34144:6;34139:2;34128:9;34124:18;34117:34;34187:6;34182:2;34171:9;34167:18;34160:34;-1:-1:-1;;;;;34234:6:117;34230:31;34225:2;34214:9;34210:18;34203:59;34298:1;34294;34289:3;34285:11;34281:19;34349:2;34341:6;34337:15;34331:3;34320:9;34316:19;34309:44;34390:6;34384:3;34373:9;34369:19;34362:35;34434:6;34428:3;34417:9;34413:19;34406:35;34478:6;34472:3;34461:9;34457:19;34450:35;34534:2;34526:6;34522:15;34516:3;34505:9;34501:19;34494:44;;34575:2;34569:3;34558:9;34554:19;34547:31;34595:44;34635:2;34624:9;34620:18;34612:6;34595:44;:::i;:::-;34587:52;33688:957;-1:-1:-1;;;;;;;;;;;;;33688:957:117:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execLiquidationCall(uint256,bytes)": "74304a79",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "quoteExecuteOrder(((address,address,address,uint256,uint256),uint256,uint64,address,int256,int256,int256,address,bytes),(address,bytes),address)": "efebe4da",
    "updateQuoteTokenMap(uint256)": "e1c951ca",
    "userPositions(uint256)": "1e7f1370"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"Traded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"settlementData\",\"type\":\"bytes\"}],\"name\":\"execLiquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"pairId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"entryTokenAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct GammaOrder\",\"name\":\"gammaOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"},{\"internalType\":\"contract PredyPoolQuoter\",\"name\":\"quoter\",\"type\":\"address\"}],\"name\":\"quoteExecuteOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"updateQuoteTokenMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"params\":{\"settlementData\":\"The route of settlement created by liquidator\",\"vaultId\":\"The id of the vault\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"details\":\"Fillers call this function\",\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint256,bytes)\":{\"notice\":\"Executes liquidation call for the position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and executes trade\"}},\"notice\":\"Gamma trade market contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/markets/gamma/GammaTradeMarket.sol\":\"GammaTradeMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d\",\"dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af\",\"dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x1c5ef4d63293a6d4c038d9490767cb6ef8f80e48e3d9ff4808e763715c872d1f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4be086408ae63846b8b75df7a802648286b15a775e8f5b51d8e22ff0a55aedcc\",\"dweb:/ipfs/QmSwd94DYpJPALFNCwq7JTSC2PnszLJwybW3kXHfya2HU9\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c\",\"dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/lens/PredyPoolQuoter.sol\":{\"keccak256\":\"0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab\",\"dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77\",\"dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0x9051a8021204fdcfcebf4ed7b1c5ccb154a6980e2330d820a37d182a8a32bfd1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f950583394f62d2e7b828b3878119d66e669436eb2cc4efa9e6a71b5f4547c80\",\"dweb:/ipfs/QmQL14omYcsPRzRXhgr7RrHt8ZZJwAJyAKY3JNZoTQPZPp\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7\",\"dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae\",\"dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b\",\"dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022\",\"dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/markets/gamma/GammaOrder.sol\":{\"keccak256\":\"0xc94942df19e3d2bcd64ee2005285998670cd019a29e8bb4b1665ba023931a1f4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0ee6c457c1e06cc81fa12fee25923fc4325bd143676a9456d48d23c18e8c8b3c\",\"dweb:/ipfs/QmfV2jKPYRqxFVSD4ZiBZozbSMeNjagaZ1RBRUx3LMiDHT\"]},\"src/markets/gamma/GammaTradeMarket.sol\":{\"keccak256\":\"0xe5935029ee3ef45305e81f9bd80d1ef5d7b718128767cfe4e85b196520e50c4c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4a07890c6a5a492d12631cebe40f33458a0b6081fc106270efdd18756ae1341\",\"dweb:/ipfs/Qmbi4K4TDh5ub37mw9397ig1aH6MKDPJ6y2DeTCgt5bEiu\"]},\"src/markets/predict/PredictOrder.sol\":{\"keccak256\":\"0x5bd1648cc7da67b8be65b8705691982dbf79eecf8ada46ecb8508b2328e39e5f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da45d05b9f68e323081d34fbbdf6bc2eed74e987d35748ce3b27138b69dedfdd\",\"dweb:/ipfs/QmTi2HS8DbmknfjrELpeTHVtCx8c9cVkbKrqfwNJfEN88u\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotFiller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Traded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "settlementData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct GammaOrder",
              "name": "gammaOrder",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "filler",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "positionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "pairId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "entryTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "marginAmount",
                  "type": "int256"
                },
                {
                  "internalType": "address",
                  "name": "validatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "contract PredyPoolQuoter",
              "name": "quoter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExecuteOrder"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuoteTokenMap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "params": {
              "settlementData": "The route of settlement created by liquidator",
              "vaultId": "The id of the vault"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "details": "Fillers call this function",
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint256,bytes)": {
            "notice": "Executes liquidation call for the position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and executes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/markets/gamma/GammaTradeMarket.sol": "GammaTradeMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc",
        "urls": [
          "bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d",
          "dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec",
        "urls": [
          "bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af",
          "dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x1c5ef4d63293a6d4c038d9490767cb6ef8f80e48e3d9ff4808e763715c872d1f",
        "urls": [
          "bzz-raw://4be086408ae63846b8b75df7a802648286b15a775e8f5b51d8e22ff0a55aedcc",
          "dweb:/ipfs/QmSwd94DYpJPALFNCwq7JTSC2PnszLJwybW3kXHfya2HU9"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a",
        "urls": [
          "bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c",
          "dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PredyPoolQuoter.sol": {
        "keccak256": "0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab",
        "urls": [
          "bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab",
          "dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17",
        "urls": [
          "bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77",
          "dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0x9051a8021204fdcfcebf4ed7b1c5ccb154a6980e2330d820a37d182a8a32bfd1",
        "urls": [
          "bzz-raw://f950583394f62d2e7b828b3878119d66e669436eb2cc4efa9e6a71b5f4547c80",
          "dweb:/ipfs/QmQL14omYcsPRzRXhgr7RrHt8ZZJwAJyAKY3JNZoTQPZPp"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a",
        "urls": [
          "bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7",
          "dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1",
        "urls": [
          "bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae",
          "dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e",
        "urls": [
          "bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b",
          "dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad",
        "urls": [
          "bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022",
          "dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/gamma/GammaOrder.sol": {
        "keccak256": "0xc94942df19e3d2bcd64ee2005285998670cd019a29e8bb4b1665ba023931a1f4",
        "urls": [
          "bzz-raw://0ee6c457c1e06cc81fa12fee25923fc4325bd143676a9456d48d23c18e8c8b3c",
          "dweb:/ipfs/QmfV2jKPYRqxFVSD4ZiBZozbSMeNjagaZ1RBRUx3LMiDHT"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/gamma/GammaTradeMarket.sol": {
        "keccak256": "0xe5935029ee3ef45305e81f9bd80d1ef5d7b718128767cfe4e85b196520e50c4c",
        "urls": [
          "bzz-raw://a4a07890c6a5a492d12631cebe40f33458a0b6081fc106270efdd18756ae1341",
          "dweb:/ipfs/Qmbi4K4TDh5ub37mw9397ig1aH6MKDPJ6y2DeTCgt5bEiu"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/predict/PredictOrder.sol": {
        "keccak256": "0x5bd1648cc7da67b8be65b8705691982dbf79eecf8ada46ecb8508b2328e39e5f",
        "urls": [
          "bzz-raw://da45d05b9f68e323081d34fbbdf6bc2eed74e987d35748ce3b27138b69dedfdd",
          "dweb:/ipfs/QmTi2HS8DbmknfjrELpeTHVtCx8c9cVkbKrqfwNJfEN88u"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/markets/gamma/GammaTradeMarket.sol",
    "id": 61631,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        63564
      ],
      "BaseHookCallback": [
        50819
      ],
      "Constants": [
        51738
      ],
      "DataType": [
        51761
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GammaOrder": [
        61026
      ],
      "GammaOrderLib": [
        61150
      ],
      "GammaTradeMarket": [
        61630
      ],
      "IERC20": [
        43517
      ],
      "IFillerMarket": [
        50831
      ],
      "IHooks": [
        50844
      ],
      "ILendingPool": [
        50856
      ],
      "IOrderValidator": [
        50874
      ],
      "IPermit2": [
        46897
      ],
      "IPredictOrderValidator": [
        50884
      ],
      "IPredyPool": [
        51071
      ],
      "ISettlement": [
        51086
      ],
      "ISignatureTransfer": [
        47033
      ],
      "ISwapRouter": [
        49349
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        63619
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        51836
      ],
      "LPMath": [
        60692
      ],
      "LiquidityAmounts": [
        49693
      ],
      "Math": [
        60833
      ],
      "OrderInfo": [
        60846
      ],
      "OrderInfoLib": [
        60881
      ],
      "PairLib": [
        51859
      ],
      "Permit2Lib": [
        60937
      ],
      "Perp": [
        54323
      ],
      "PerpFee": [
        54830
      ],
      "PositionCalculator": [
        55539
      ],
      "PositionKey": [
        49718
      ],
      "PredictOrder": [
        62525
      ],
      "PredyPoolQuoter": [
        51460
      ],
      "PremiumCurveModel": [
        55581
      ],
      "PriceFeed": [
        50722
      ],
      "Reallocation": [
        56124
      ],
      "ResolvedOrder": [
        60953
      ],
      "ResolvedOrderLib": [
        60995
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        56845
      ],
      "TickMath": [
        49233
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        57832
      ],
      "UnsafeMath": [
        49249
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6224:91",
    "nodes": [
      {
        "id": 61152,
        "nodeType": "PragmaDirective",
        "src": "39:24:91",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 61154,
        "nodeType": "ImportDirective",
        "src": "65:88:91",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 48025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61153,
              "name": "IUniswapV3Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48024,
              "src": "73:14:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61156,
        "nodeType": "ImportDirective",
        "src": "154:92:91",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61155,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "162:14:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61158,
        "nodeType": "ImportDirective",
        "src": "247:87:91",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 49350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61157,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49349,
              "src": "255:11:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61160,
        "nodeType": "ImportDirective",
        "src": "335:70:91",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 46898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61159,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46897,
              "src": "343:8:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61162,
        "nodeType": "ImportDirective",
        "src": "406:70:91",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 43518,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61161,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43517,
              "src": "414:6:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61163,
        "nodeType": "ImportDirective",
        "src": "477:41:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "../../interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 51072,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61164,
        "nodeType": "ImportDirective",
        "src": "519:43:91",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPool.sol",
        "file": "../../interfaces/ILendingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 50857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61165,
        "nodeType": "ImportDirective",
        "src": "563:44:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "../../interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 50832,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61166,
        "nodeType": "ImportDirective",
        "src": "608:46:91",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "../../interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 50885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61167,
        "nodeType": "ImportDirective",
        "src": "655:41:91",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "../../base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 50820,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61168,
        "nodeType": "ImportDirective",
        "src": "697:47:91",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "../../libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 60938,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61169,
        "nodeType": "ImportDirective",
        "src": "745:50:91",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "../../libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 60996,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61170,
        "nodeType": "ImportDirective",
        "src": "796:26:91",
        "nodes": [],
        "absolutePath": "src/markets/gamma/GammaOrder.sol",
        "file": "./GammaOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 61151,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61171,
        "nodeType": "ImportDirective",
        "src": "823:39:91",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "../../libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 60834,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 61173,
        "nodeType": "ImportDirective",
        "src": "863:63:91",
        "nodes": [],
        "absolutePath": "src/lens/PredyPoolQuoter.sol",
        "file": "../../lens/PredyPoolQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61631,
        "sourceUnit": 51461,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61172,
              "name": "PredyPoolQuoter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51460,
              "src": "871:15:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61630,
        "nodeType": "ContractDefinition",
        "src": "975:5287:91",
        "nodes": [
          {
            "id": 61182,
            "nodeType": "UsingForDirective",
            "src": "1042:41:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61179,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "1048:16:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60995,
              "src": "1048:16:91"
            },
            "typeName": {
              "id": 61181,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61180,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1069:13:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60953,
                "src": "1069:13:91"
              },
              "referencedDeclaration": 60953,
              "src": "1069:13:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$60953_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 61186,
            "nodeType": "UsingForDirective",
            "src": "1088:35:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61183,
              "name": "GammaOrderLib",
              "nameLocations": [
                "1094:13:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61150,
              "src": "1094:13:91"
            },
            "typeName": {
              "id": 61185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61184,
                "name": "GammaOrder",
                "nameLocations": [
                  "1112:10:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61026,
                "src": "1112:10:91"
              },
              "referencedDeclaration": 61026,
              "src": "1112:10:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GammaOrder_$61026_storage_ptr",
                "typeString": "struct GammaOrder"
              }
            }
          },
          {
            "id": 61190,
            "nodeType": "UsingForDirective",
            "src": "1128:35:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61187,
              "name": "Permit2Lib",
              "nameLocations": [
                "1134:10:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60937,
              "src": "1134:10:91"
            },
            "typeName": {
              "id": 61189,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61188,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1149:13:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60953,
                "src": "1149:13:91"
              },
              "referencedDeclaration": 60953,
              "src": "1149:13:91",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$60953_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 61193,
            "nodeType": "UsingForDirective",
            "src": "1168:23:91",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 61191,
              "name": "Math",
              "nameLocations": [
                "1174:4:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60833,
              "src": "1174:4:91"
            },
            "typeName": {
              "id": 61192,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1183:7:91",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 61196,
            "nodeType": "VariableDeclaration",
            "src": "1197:17:91",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1206:8:91",
            "scope": 61630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$46897",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 61195,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61194,
                "name": "IPermit2",
                "nameLocations": [
                  "1197:8:91"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46897,
                "src": "1197:8:91"
              },
              "referencedDeclaration": 46897,
              "src": "1197:8:91",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46897",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 61200,
            "nodeType": "VariableDeclaration",
            "src": "1221:56:91",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "1264:13:91",
            "scope": 61630,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 61199,
              "keyName": "vaultId",
              "keyNameLocation": "1237:7:91",
              "keyType": {
                "id": 61197,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:91",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1221:35:91",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 61198,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1248:7:91",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 61206,
            "nodeType": "EventDefinition",
            "src": "1284:46:91",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e39122fcaa92bc902344d31c0f322ba04506be819fd20dafb197b26bf2e9045d",
            "name": "Traded",
            "nameLocation": "1290:6:91",
            "parameters": {
              "id": 61205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61202,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1305:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61206,
                  "src": "1297:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61204,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "1321:7:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61206,
                  "src": "1313:15:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1296:33:91"
            }
          },
          {
            "id": 61224,
            "nodeType": "FunctionDefinition",
            "src": "1336:140:91",
            "nodes": [],
            "body": {
              "id": 61223,
              "nodeType": "Block",
              "src": "1424:52:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61217,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61196,
                      "src": "1434:8:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 61219,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61211,
                          "src": "1454:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61218,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46897,
                        "src": "1445:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$46897_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 61220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1445:24:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "1434:35:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$46897",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 61222,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:35:91"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61214,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61209,
                    "src": "1412:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51071",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 61215,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 61213,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1395:16:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "1395:16:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "1395:28:91"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 61212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61209,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "1359:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61224,
                  "src": "1348:21:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$51071",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 61208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61207,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "1348:10:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51071,
                      "src": "1348:10:91"
                    },
                    "referencedDeclaration": 51071,
                    "src": "1348:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51071",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61211,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "1379:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61224,
                  "src": "1371:22:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1371:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:47:91"
            },
            "returnParameters": {
              "id": 61216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61368,
            "nodeType": "FunctionDefinition",
            "src": "1482:1367:91",
            "nodes": [],
            "body": {
              "id": 61367,
              "nodeType": "Block",
              "src": "1679:1170:91",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 61240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61237,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61230,
                        "src": "1692:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      },
                      "id": 61238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1704:9:91",
                      "memberName": "minMargin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50926,
                      "src": "1692:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1717:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1692:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61365,
                    "nodeType": "Block",
                    "src": "2124:719:91",
                    "statements": [
                      {
                        "assignments": [
                          61291
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61291,
                            "mutability": "mutable",
                            "name": "marginAmountUpdate",
                            "nameLocation": "2145:18:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 61365,
                            "src": "2138:25:91",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 61290,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2138:6:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61300,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61294,
                                "name": "tradeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61227,
                                "src": "2177:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeParams memory"
                                }
                              },
                              "id": 61295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2189:9:91",
                              "memberName": "extraData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50916,
                              "src": "2177:21:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 61297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2201:6:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 61296,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2201:6:91",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 61298,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2200:8:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            ],
                            "expression": {
                              "id": 61292,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2166:3:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 61293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2170:6:91",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2166:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 61299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:43:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2138:71:91"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 61303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61301,
                            "name": "marginAmountUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61291,
                            "src": "2228:18:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 61302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2249:1:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2228:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 61324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 61322,
                              "name": "marginAmountUpdate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61291,
                              "src": "2453:18:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 61323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2474:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2453:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 61363,
                          "nodeType": "IfStatement",
                          "src": "2449:384:91",
                          "trueBody": {
                            "id": 61362,
                            "nodeType": "Block",
                            "src": "2477:356:91",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "74727565",
                                      "id": 61332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2534:4:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61335,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "2548:4:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                            "typeString": "contract GammaTradeMarket"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                            "typeString": "contract GammaTradeMarket"
                                          }
                                        ],
                                        "id": 61334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2540:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 61333,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2540:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61336,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2540:13:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61340,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "2563:19:91",
                                          "subExpression": {
                                            "id": 61339,
                                            "name": "marginAmountUpdate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61291,
                                            "src": "2564:18:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 61338,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2555:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 61337,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2555:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61341,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2555:28:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 61328,
                                              "name": "_predyPool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 50731,
                                              "src": "2516:10:91",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                                "typeString": "contract IPredyPool"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                                "typeString": "contract IPredyPool"
                                              }
                                            ],
                                            "id": 61327,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "2508:7:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 61326,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "2508:7:91",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 61329,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2508:19:91",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 61325,
                                        "name": "ILendingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50856,
                                        "src": "2495:12:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ILendingPool_$50856_$",
                                          "typeString": "type(contract ILendingPool)"
                                        }
                                      },
                                      "id": 61330,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2495:33:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ILendingPool_$50856",
                                        "typeString": "contract ILendingPool"
                                      }
                                    },
                                    "id": 61331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2529:4:91",
                                    "memberName": "take",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50855,
                                    "src": "2495:38:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (bool,address,uint256) external"
                                    }
                                  },
                                  "id": 61342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2495:89:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61343,
                                "nodeType": "ExpressionStatement",
                                "src": "2495:89:91"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 61348,
                                            "name": "tradeParams",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61227,
                                            "src": "2674:11:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                              "typeString": "struct IPredyPool.TradeParams memory"
                                            }
                                          },
                                          "id": 61349,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2686:6:91",
                                          "memberName": "pairId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 50908,
                                          "src": "2674:18:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 61347,
                                        "name": "_getQuoteTokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50818,
                                        "src": "2652:21:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                          "typeString": "function (uint256) view returns (address)"
                                        }
                                      },
                                      "id": 61350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2652:41:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 61351,
                                        "name": "userPositions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61200,
                                        "src": "2715:13:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                          "typeString": "mapping(uint256 => address)"
                                        }
                                      },
                                      "id": 61354,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 61352,
                                          "name": "tradeParams",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61227,
                                          "src": "2729:11:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                            "typeString": "struct IPredyPool.TradeParams memory"
                                          }
                                        },
                                        "id": 61353,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2741:7:91",
                                        "memberName": "vaultId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50910,
                                        "src": "2729:19:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2715:34:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 61358,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "2779:19:91",
                                          "subExpression": {
                                            "id": 61357,
                                            "name": "marginAmountUpdate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 61291,
                                            "src": "2780:18:91",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 61356,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2771:7:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 61355,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2771:7:91",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 61359,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2771:28:91",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 61344,
                                      "name": "TransferHelper",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49889,
                                      "src": "2603:14:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                        "typeString": "type(library TransferHelper)"
                                      }
                                    },
                                    "id": 61346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2618:12:91",
                                    "memberName": "safeTransfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 49816,
                                    "src": "2603:27:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,uint256)"
                                    }
                                  },
                                  "id": 61360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2603:214:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 61361,
                                "nodeType": "ExpressionStatement",
                                "src": "2603:214:91"
                              }
                            ]
                          }
                        },
                        "id": 61364,
                        "nodeType": "IfStatement",
                        "src": "2224:609:91",
                        "trueBody": {
                          "id": 61321,
                          "nodeType": "Block",
                          "src": "2252:191:91",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 61308,
                                          "name": "tradeParams",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 61227,
                                          "src": "2341:11:91",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                            "typeString": "struct IPredyPool.TradeParams memory"
                                          }
                                        },
                                        "id": 61309,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2353:6:91",
                                        "memberName": "pairId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50908,
                                        "src": "2341:18:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 61307,
                                      "name": "_getQuoteTokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50818,
                                      "src": "2319:21:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view returns (address)"
                                      }
                                    },
                                    "id": 61310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2319:41:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 61313,
                                        "name": "_predyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50731,
                                        "src": "2370:10:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                          "typeString": "contract IPredyPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                          "typeString": "contract IPredyPool"
                                        }
                                      ],
                                      "id": 61312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2362:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 61311,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2362:7:91",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2362:19:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 61317,
                                        "name": "marginAmountUpdate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 61291,
                                        "src": "2391:18:91",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 61316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2383:7:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 61315,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2383:7:91",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 61318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2383:27:91",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 61304,
                                    "name": "TransferHelper",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49889,
                                    "src": "2270:14:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                      "typeString": "type(library TransferHelper)"
                                    }
                                  },
                                  "id": 61306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2285:12:91",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 49816,
                                  "src": "2270:27:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 61319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2270:158:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61320,
                              "nodeType": "ExpressionStatement",
                              "src": "2270:158:91"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 61366,
                  "nodeType": "IfStatement",
                  "src": "1689:1154:91",
                  "trueBody": {
                    "id": 61289,
                    "nodeType": "Block",
                    "src": "1720:398:91",
                    "statements": [
                      {
                        "assignments": [
                          61245
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61245,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "1756:5:91",
                            "nodeType": "VariableDeclaration",
                            "scope": 61289,
                            "src": "1734:27:91",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                              "typeString": "struct DataType.Vault"
                            },
                            "typeName": {
                              "id": 61244,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 61243,
                                "name": "DataType.Vault",
                                "nameLocations": [
                                  "1734:8:91",
                                  "1743:5:91"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51755,
                                "src": "1734:14:91"
                              },
                              "referencedDeclaration": 51755,
                              "src": "1734:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$51755_storage_ptr",
                                "typeString": "struct DataType.Vault"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61251,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61248,
                                "name": "tradeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61227,
                                "src": "1784:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeParams memory"
                                }
                              },
                              "id": 61249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1796:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50910,
                              "src": "1784:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 61246,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50731,
                              "src": "1764:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 61247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1775:8:91",
                            "memberName": "getVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51044,
                            "src": "1764:19:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$51755_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                            }
                          },
                          "id": 61250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1764:40:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                            "typeString": "struct DataType.Vault memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1734:70:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 61259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1858:4:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 61262,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1872:4:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                    "typeString": "contract GammaTradeMarket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                    "typeString": "contract GammaTradeMarket"
                                  }
                                ],
                                "id": 61261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1864:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61260,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1864:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1864:13:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61266,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61245,
                                    "src": "1887:5:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                      "typeString": "struct DataType.Vault memory"
                                    }
                                  },
                                  "id": 61267,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1893:6:91",
                                  "memberName": "margin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51751,
                                  "src": "1887:12:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 61265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1879:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 61264,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1879:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1879:21:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 61255,
                                      "name": "_predyPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50731,
                                      "src": "1840:10:91",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                        "typeString": "contract IPredyPool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                        "typeString": "contract IPredyPool"
                                      }
                                    ],
                                    "id": 61254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1832:7:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 61253,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1832:7:91",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 61256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1832:19:91",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 61252,
                                "name": "ILendingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50856,
                                "src": "1819:12:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILendingPool_$50856_$",
                                  "typeString": "type(contract ILendingPool)"
                                }
                              },
                              "id": 61257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1819:33:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILendingPool_$50856",
                                "typeString": "contract ILendingPool"
                              }
                            },
                            "id": 61258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1853:4:91",
                            "memberName": "take",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50855,
                            "src": "1819:38:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (bool,address,uint256) external"
                            }
                          },
                          "id": 61269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1819:82:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61270,
                        "nodeType": "ExpressionStatement",
                        "src": "1819:82:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61275,
                                    "name": "tradeParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61227,
                                    "src": "1983:11:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                      "typeString": "struct IPredyPool.TradeParams memory"
                                    }
                                  },
                                  "id": 61276,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1995:6:91",
                                  "memberName": "pairId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50908,
                                  "src": "1983:18:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 61274,
                                "name": "_getQuoteTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50818,
                                "src": "1961:21:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 61277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1961:41:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 61278,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61200,
                                "src": "2020:13:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 61281,
                              "indexExpression": {
                                "expression": {
                                  "id": 61279,
                                  "name": "tradeParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61227,
                                  "src": "2034:11:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeParams memory"
                                  }
                                },
                                "id": 61280,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2046:7:91",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50910,
                                "src": "2034:19:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2020:34:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61284,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61245,
                                    "src": "2080:5:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Vault_$51755_memory_ptr",
                                      "typeString": "struct DataType.Vault memory"
                                    }
                                  },
                                  "id": 61285,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2086:6:91",
                                  "memberName": "margin",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51751,
                                  "src": "2080:12:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 61283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2072:7:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 61282,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2072:7:91",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 61286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2072:21:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 61271,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "1916:14:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 61273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1931:12:91",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "1916:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 61287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1916:191:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61288,
                        "nodeType": "ExpressionStatement",
                        "src": "1916:191:91"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              50772
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 61235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61234,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "1661:13:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50763,
                  "src": "1661:13:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "1661:13:91"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "1491:23:91",
            "overrides": {
              "id": 61233,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 61232,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "1635:16:91"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "1635:16:91"
                }
              ],
              "src": "1626:26:91"
            },
            "parameters": {
              "id": 61231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61227,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "1545:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61368,
                  "src": "1515:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 61226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61225,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "1515:10:91",
                        "1526:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50917,
                      "src": "1515:22:91"
                    },
                    "referencedDeclaration": 50917,
                    "src": "1515:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$50917_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61230,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "1588:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61368,
                  "src": "1558:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61228,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "1558:10:91",
                        "1569:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "1558:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "1558:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:86:91"
            },
            "returnParameters": {
              "id": 61236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61512,
            "nodeType": "FunctionDefinition",
            "src": "3094:1606:91",
            "nodes": [],
            "body": {
              "id": 61511,
              "nodeType": "Block",
              "src": "3273:1427:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61383,
                      "mutability": "mutable",
                      "name": "gammaOrder",
                      "nameLocation": "3301:10:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61511,
                      "src": "3283:28:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                        "typeString": "struct GammaOrder"
                      },
                      "typeName": {
                        "id": 61382,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61381,
                          "name": "GammaOrder",
                          "nameLocations": [
                            "3283:10:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61026,
                          "src": "3283:10:91"
                        },
                        "referencedDeclaration": 61026,
                        "src": "3283:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_storage_ptr",
                          "typeString": "struct GammaOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61391,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 61386,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61372,
                          "src": "3325:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 61387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3331:5:91",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50827,
                        "src": "3325:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 61388,
                            "name": "GammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61026,
                            "src": "3339:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61026_storage_ptr_$",
                              "typeString": "type(struct GammaOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 61389,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3338:12:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61026_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$61026_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 61384,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3314:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 61385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3318:6:91",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3314:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 61390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3314:37:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                      "typeString": "struct GammaOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3283:68:91"
                },
                {
                  "assignments": [
                    61394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61394,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "3382:13:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61511,
                      "src": "3361:34:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 61393,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61392,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "3361:13:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 60953,
                          "src": "3361:13:91"
                        },
                        "referencedDeclaration": 60953,
                        "src": "3361:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60953_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61401,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61397,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61383,
                        "src": "3420:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 61398,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61372,
                          "src": "3432:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 61399,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3438:3:91",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50829,
                        "src": "3432:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61395,
                        "name": "GammaOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61150,
                        "src": "3398:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$61150_$",
                          "typeString": "type(library GammaOrderLib)"
                        }
                      },
                      "id": 61396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3412:7:91",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61149,
                      "src": "3398:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_GammaOrder_$61026_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$60953_memory_ptr_$",
                        "typeString": "function (struct GammaOrder memory,bytes memory) pure returns (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 61400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:44:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3361:81:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 61403,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3461:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 61406,
                          "indexExpression": {
                            "expression": {
                              "id": 61404,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61383,
                              "src": "3476:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61405,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3487:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61013,
                            "src": "3476:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3461:33:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 61409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3506:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3498:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3498:7:91",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 61410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3498:10:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3461:47:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3453:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:56:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61413,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:56:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61415,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61383,
                            "src": "3617:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 61416,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3628:17:91",
                          "memberName": "entryTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61015,
                          "src": "3617:28:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 61417,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3649:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 61420,
                          "indexExpression": {
                            "expression": {
                              "id": 61418,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61383,
                              "src": "3664:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61419,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3675:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61013,
                            "src": "3664:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3649:33:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3617:65:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3609:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 61422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:74:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61423,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:74:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61425,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61394,
                        "src": "3707:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 61424,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61629,
                      "src": "3694:12:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$60953_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 61426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3694:27:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61427,
                  "nodeType": "ExpressionStatement",
                  "src": "3694:27:91"
                },
                {
                  "expression": {
                    "id": 61449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61428,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61379,
                      "src": "3732:11:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61433,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "3816:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61434,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3827:6:91",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61013,
                              "src": "3816:17:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 61435,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "3851:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61436,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3862:10:91",
                              "memberName": "positionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61011,
                              "src": "3851:21:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 61437,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "3890:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61438,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3901:11:91",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61017,
                              "src": "3890:22:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 61439,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "3930:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61440,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3941:15:91",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61019,
                              "src": "3930:26:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 61443,
                                    "name": "gammaOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 61383,
                                    "src": "3985:10:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                      "typeString": "struct GammaOrder memory"
                                    }
                                  },
                                  "id": 61444,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3996:12:91",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61021,
                                  "src": "3985:23:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "expression": {
                                  "id": 61441,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3974:3:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 61442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3978:6:91",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "3974:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 61445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3974:35:91",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 61431,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51071,
                              "src": "3776:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51071_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 61432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3787:11:91",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50917,
                            "src": "3776:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$50917_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 61446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3776:247:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 61447,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61375,
                          "src": "4037:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 61429,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50731,
                          "src": "3746:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$51071",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 61430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3757:5:91",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50965,
                        "src": "3746:16:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50917_memory_ptr_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 61448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3746:315:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "3732:329:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 61450,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:329:91"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 61454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 61451,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61383,
                        "src": "4076:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 61452,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4087:10:91",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61011,
                      "src": "4076:21:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 61453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4101:1:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4076:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61490,
                    "nodeType": "Block",
                    "src": "4280:167:91",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 61482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 61475,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "4298:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61476,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4309:4:91",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61009,
                              "src": "4298:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$60846_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 61477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4314:6:91",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60839,
                            "src": "4298:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 61478,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61200,
                              "src": "4324:13:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 61481,
                            "indexExpression": {
                              "expression": {
                                "id": 61479,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61379,
                                "src": "4338:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 61480,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4350:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50922,
                              "src": "4338:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4324:34:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4298:60:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 61489,
                        "nodeType": "IfStatement",
                        "src": "4294:143:91",
                        "trueBody": {
                          "id": 61488,
                          "nodeType": "Block",
                          "src": "4360:77:91",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 61483,
                                    "name": "IFillerMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50831,
                                    "src": "4385:13:91",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFillerMarket_$50831_$",
                                      "typeString": "type(contract IFillerMarket)"
                                    }
                                  },
                                  "id": 61485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4399:21:91",
                                  "memberName": "SignerIsNotVaultOwner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50823,
                                  "src": "4385:35:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 61486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4385:37:91",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 61487,
                              "nodeType": "RevertStatement",
                              "src": "4378:44:91"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 61491,
                  "nodeType": "IfStatement",
                  "src": "4072:375:91",
                  "trueBody": {
                    "id": 61474,
                    "nodeType": "Block",
                    "src": "4104:170:91",
                    "statements": [
                      {
                        "expression": {
                          "id": 61462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 61455,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61200,
                              "src": "4118:13:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 61458,
                            "indexExpression": {
                              "expression": {
                                "id": 61456,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61379,
                                "src": "4132:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 61457,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4144:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50922,
                              "src": "4132:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4118:34:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 61459,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61383,
                                "src": "4155:10:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 61460,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4166:4:91",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61009,
                              "src": "4155:15:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$60846_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 61461,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4171:6:91",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60839,
                            "src": "4155:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4118:59:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 61463,
                        "nodeType": "ExpressionStatement",
                        "src": "4118:59:91"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 61467,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61379,
                                "src": "4219:11:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 61468,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4231:7:91",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50922,
                              "src": "4219:19:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 61469,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61383,
                                  "src": "4240:10:91",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 61470,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4251:4:91",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 61009,
                                "src": "4240:15:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$60846_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 61471,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4256:6:91",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60839,
                              "src": "4240:22:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 61464,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50731,
                              "src": "4192:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$51071",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 61466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4203:15:91",
                            "memberName": "updateRecepient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51000,
                            "src": "4192:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 61472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4192:71:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61473,
                        "nodeType": "ExpressionStatement",
                        "src": "4192:71:91"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61497,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61383,
                        "src": "4573:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "id": 61498,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61379,
                        "src": "4585:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 61493,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61383,
                              "src": "4535:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61494,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4546:16:91",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61023,
                            "src": "4535:27:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 61492,
                          "name": "IOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50874,
                          "src": "4519:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOrderValidator_$50874_$",
                            "typeString": "type(contract IOrderValidator)"
                          }
                        },
                        "id": 61495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4519:44:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOrderValidator_$50874",
                          "typeString": "contract IOrderValidator"
                        }
                      },
                      "id": 61496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4564:8:91",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50873,
                      "src": "4519:53:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_GammaOrder_$61026_memory_ptr_$_t_struct$_TradeResult_$50933_memory_ptr_$returns$__$",
                        "typeString": "function (struct GammaOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 61499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4519:78:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61500,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:78:91"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 61502,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61383,
                            "src": "4620:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 61503,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4631:4:91",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61009,
                          "src": "4620:15:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60846_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 61504,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4636:6:91",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60839,
                        "src": "4620:22:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61505,
                          "name": "tradeResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61379,
                          "src": "4644:11:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "id": 61506,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4656:7:91",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50922,
                        "src": "4644:19:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 61501,
                      "name": "Traded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61206,
                      "src": "4613:6:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4613:51:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61508,
                  "nodeType": "EmitStatement",
                  "src": "4608:56:91"
                },
                {
                  "expression": {
                    "id": 61509,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61379,
                    "src": "4682:11:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 61380,
                  "id": 61510,
                  "nodeType": "Return",
                  "src": "4675:18:91"
                }
              ]
            },
            "documentation": {
              "id": 61369,
              "nodeType": "StructuredDocumentation",
              "src": "2855:234:91",
              "text": " @notice Verifies signature of the order and executes trade\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @dev Fillers call this function"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "3103:12:91",
            "parameters": {
              "id": 61376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61372,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3135:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61512,
                  "src": "3116:24:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 61371,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61370,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "3116:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50830,
                      "src": "3116:11:91"
                    },
                    "referencedDeclaration": 50830,
                    "src": "3116:11:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$50830_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61375,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3176:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61512,
                  "src": "3142:48:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 61374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61373,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3142:11:91",
                        "3154:14:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51078,
                      "src": "3142:26:91"
                    },
                    "referencedDeclaration": 51078,
                    "src": "3142:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51078_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3115:76:91"
            },
            "returnParameters": {
              "id": 61380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61379,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "3256:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61512,
                  "src": "3226:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61377,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "3226:10:91",
                        "3237:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "3226:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "3226:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3225:43:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61536,
            "nodeType": "FunctionDefinition",
            "src": "4897:205:91",
            "nodes": [],
            "body": {
              "id": 61535,
              "nodeType": "Block",
              "src": "4981:121:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61523,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61515,
                        "src": "5022:7:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 61524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5031:4:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61529,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5072:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 61528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5064:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61527,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5064:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5064:13:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 61531,
                            "name": "settlementData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61517,
                            "src": "5079:14:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 61525,
                            "name": "ISettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51086,
                            "src": "5037:11:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISettlement_$51086_$",
                              "typeString": "type(contract ISettlement)"
                            }
                          },
                          "id": 61526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5049:14:91",
                          "memberName": "SettlementData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51078,
                          "src": "5037:26:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SettlementData_$51078_storage_ptr_$",
                            "typeString": "type(struct ISettlement.SettlementData storage pointer)"
                          }
                        },
                        "id": 61532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5037:57:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 61520,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50731,
                        "src": "4991:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$51071",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 61522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5002:19:91",
                      "memberName": "execLiquidationCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50993,
                      "src": "4991:30:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 61533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:104:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 61534,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:104:91"
                }
              ]
            },
            "documentation": {
              "id": 61513,
              "nodeType": "StructuredDocumentation",
              "src": "4706:186:91",
              "text": " @notice Executes liquidation call for the position\n @param vaultId The id of the vault\n @param settlementData The route of settlement created by liquidator"
            },
            "functionSelector": "74304a79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "4906:19:91",
            "parameters": {
              "id": 61518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61515,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4934:7:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61536,
                  "src": "4926:15:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61517,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "4956:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61536,
                  "src": "4943:27:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61516,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4943:5:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4925:46:91"
            },
            "returnParameters": {
              "id": 61519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4981:0:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61578,
            "nodeType": "FunctionDefinition",
            "src": "5108:568:91",
            "nodes": [],
            "body": {
              "id": 61577,
              "nodeType": "Block",
              "src": "5278:398:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61552,
                      "mutability": "mutable",
                      "name": "tradeResult",
                      "nameLocation": "5388:11:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61577,
                      "src": "5358:41:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult"
                      },
                      "typeName": {
                        "id": 61551,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 61550,
                          "name": "IPredyPool.TradeResult",
                          "nameLocations": [
                            "5358:10:91",
                            "5369:11:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50933,
                          "src": "5358:22:91"
                        },
                        "referencedDeclaration": 50933,
                        "src": "5358:22:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                          "typeString": "struct IPredyPool.TradeResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61572,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 61557,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61539,
                              "src": "5473:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61558,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5484:6:91",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61013,
                            "src": "5473:17:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 61559,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61539,
                              "src": "5492:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61560,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5503:10:91",
                            "memberName": "positionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61011,
                            "src": "5492:21:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 61561,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61539,
                              "src": "5515:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61562,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5526:11:91",
                            "memberName": "tradeAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61017,
                            "src": "5515:22:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "expression": {
                              "id": 61563,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61539,
                              "src": "5539:10:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 61564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5550:15:91",
                            "memberName": "tradeAmountSqrt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61019,
                            "src": "5539:26:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 61567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5573:2:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 61566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5567:5:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 61565,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "5567:5:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5567:9:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 61555,
                            "name": "IPredyPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51071,
                            "src": "5433:10:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51071_$",
                              "typeString": "type(contract IPredyPool)"
                            }
                          },
                          "id": 61556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5444:11:91",
                          "memberName": "TradeParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50917,
                          "src": "5433:22:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeParams_$50917_storage_ptr_$",
                            "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                          }
                        },
                        "id": 61569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5433:157:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 61570,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61542,
                        "src": "5604:14:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$50917_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 61553,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61545,
                        "src": "5402:6:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                          "typeString": "contract PredyPoolQuoter"
                        }
                      },
                      "id": 61554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5409:10:91",
                      "memberName": "quoteTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51275,
                      "src": "5402:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50917_memory_ptr_$_t_struct$_SettlementData_$51078_memory_ptr_$returns$_t_struct$_TradeResult_$50933_memory_ptr_$",
                        "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 61571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:226:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5358:270:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61574,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61552,
                        "src": "5657:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "id": 61573,
                      "name": "revertTradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61593,
                      "src": "5639:17:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_TradeResult_$50933_memory_ptr_$returns$__$",
                        "typeString": "function (struct IPredyPool.TradeResult memory) pure"
                      }
                    },
                    "id": 61575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5639:30:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61576,
                  "nodeType": "ExpressionStatement",
                  "src": "5639:30:91"
                }
              ]
            },
            "functionSelector": "efebe4da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExecuteOrder",
            "nameLocation": "5117:17:91",
            "parameters": {
              "id": 61546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61539,
                  "mutability": "mutable",
                  "name": "gammaOrder",
                  "nameLocation": "5162:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61578,
                  "src": "5144:28:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GammaOrder_$61026_memory_ptr",
                    "typeString": "struct GammaOrder"
                  },
                  "typeName": {
                    "id": 61538,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61537,
                      "name": "GammaOrder",
                      "nameLocations": [
                        "5144:10:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61026,
                      "src": "5144:10:91"
                    },
                    "referencedDeclaration": 61026,
                    "src": "5144:10:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$61026_storage_ptr",
                      "typeString": "struct GammaOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61542,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "5216:14:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61578,
                  "src": "5182:48:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51078_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 61541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61540,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "5182:11:91",
                        "5194:14:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51078,
                      "src": "5182:26:91"
                    },
                    "referencedDeclaration": 51078,
                    "src": "5182:26:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51078_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61545,
                  "mutability": "mutable",
                  "name": "quoter",
                  "nameLocation": "5256:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61578,
                  "src": "5240:22:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                    "typeString": "contract PredyPoolQuoter"
                  },
                  "typeName": {
                    "id": 61544,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61543,
                      "name": "PredyPoolQuoter",
                      "nameLocations": [
                        "5240:15:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51460,
                      "src": "5240:15:91"
                    },
                    "referencedDeclaration": 51460,
                    "src": "5240:15:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredyPoolQuoter_$51460",
                      "typeString": "contract PredyPoolQuoter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5134:134:91"
            },
            "returnParameters": {
              "id": 61547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5278:0:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61593,
            "nodeType": "FunctionDefinition",
            "src": "5682:221:91",
            "nodes": [],
            "body": {
              "id": 61592,
              "nodeType": "Block",
              "src": "5766:137:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    61585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61585,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5789:4:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 61592,
                      "src": "5776:17:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61584,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5776:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 61590,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 61588,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61581,
                        "src": "5807:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "id": 61586,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5796:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 61587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5800:6:91",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "5796:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 61589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5796:23:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5776:43:91"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5839:58:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5864:2:91",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "5868:4:91"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5860:3:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5860:13:91"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:4:91"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5875:5:91"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5875:11:91"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5853:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5853:34:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5853:34:91"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 61585,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5868:4:91",
                      "valueSize": 1
                    },
                    {
                      "declaration": 61585,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5881:4:91",
                      "valueSize": 1
                    }
                  ],
                  "id": 61591,
                  "nodeType": "InlineAssembly",
                  "src": "5830:67:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revertTradeResult",
            "nameLocation": "5691:17:91",
            "parameters": {
              "id": 61582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61581,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "5739:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61593,
                  "src": "5709:41:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50933_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 61580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61579,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "5709:10:91",
                        "5720:11:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50933,
                      "src": "5709:22:91"
                    },
                    "referencedDeclaration": 50933,
                    "src": "5709:22:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50933_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5708:43:91"
            },
            "returnParameters": {
              "id": 61583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5766:0:91"
            },
            "scope": 61630,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61629,
            "nodeType": "FunctionDefinition",
            "src": "5909:351:91",
            "nodes": [],
            "body": {
              "id": 61628,
              "nodeType": "Block",
              "src": "5968:292:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 61599,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61596,
                        "src": "5978:5:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 61601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5984:8:91",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60994,
                      "src": "5978:14:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$60953_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$60953_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 61602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5978:16:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61603,
                  "nodeType": "ExpressionStatement",
                  "src": "5978:16:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 61607,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61596,
                            "src": "6053:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61608,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6059:8:91",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60916,
                          "src": "6053:14:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$60953_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$60953_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 61609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6053:16:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 61614,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6113:4:91",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GammaTradeMarket_$61630",
                                  "typeString": "contract GammaTradeMarket"
                                }
                              ],
                              "id": 61613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6105:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61612,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6105:7:91",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 61615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6105:13:91",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 61610,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61596,
                            "src": "6083:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61611,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6089:15:91",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60936,
                          "src": "6083:21:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$60953_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$60953_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 61616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6083:36:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 61617,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61596,
                            "src": "6133:5:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 61618,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6139:4:91",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60944,
                          "src": "6133:10:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60846_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 61619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6144:6:91",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60839,
                        "src": "6133:17:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61620,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61596,
                          "src": "6164:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 61621,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6170:4:91",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60950,
                        "src": "6164:10:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 61622,
                          "name": "GammaOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61150,
                          "src": "6188:13:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$61150_$",
                            "typeString": "type(library GammaOrderLib)"
                          }
                        },
                        "id": 61623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6202:18:91",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61074,
                        "src": "6188:32:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 61624,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61596,
                          "src": "6234:5:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 61625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6240:3:91",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60952,
                        "src": "6234:9:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61604,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61196,
                        "src": "6005:8:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$46897",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 61606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6014:25:91",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46990,
                      "src": "6005:34:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 61626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:248:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61627,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:248:91"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "5918:12:91",
            "parameters": {
              "id": 61597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61596,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5952:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 61629,
                  "src": "5931:26:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$60953_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 61595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61594,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "5931:13:91"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60953,
                      "src": "5931:13:91"
                    },
                    "referencedDeclaration": 60953,
                    "src": "5931:13:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$60953_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5930:28:91"
            },
            "returnParameters": {
              "id": 61598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5968:0:91"
            },
            "scope": 61630,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 61175,
              "name": "IFillerMarket",
              "nameLocations": [
                "1004:13:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50831,
              "src": "1004:13:91"
            },
            "id": 61176,
            "nodeType": "InheritanceSpecifier",
            "src": "1004:13:91"
          },
          {
            "baseName": {
              "id": 61177,
              "name": "BaseHookCallback",
              "nameLocations": [
                "1019:16:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50819,
              "src": "1019:16:91"
            },
            "id": 61178,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:16:91"
          }
        ],
        "canonicalName": "GammaTradeMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 61174,
          "nodeType": "StructuredDocumentation",
          "src": "928:46:91",
          "text": " @notice Gamma trade market contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61630,
          50819,
          50844,
          50831
        ],
        "name": "GammaTradeMarket",
        "nameLocation": "984:16:91",
        "scope": 61631,
        "usedErrors": [
          50737,
          50823,
          50825,
          60956,
          60959
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 91
}
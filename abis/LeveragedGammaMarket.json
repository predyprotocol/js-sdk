{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotFiller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BORROW_FEE_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "confirmLiquidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        }
      ],
      "name": "depositMargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "depositToInsurancePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "positionId",
          "type": "uint64"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "insurancePools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "fillerAddress",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "marginAmount",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "fillercumulativeFundingRates",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "fundingRateGrobalGrowth",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastFundingRateCalculationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "updateQuoteTokenMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "positionAmount",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "positionAmountSqrt",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "assuranceMargin",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "marginAmount",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "lastBorrowFeeCalculationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFromInsurancePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marginAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawMargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620031193803806200311983398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b61304b80620000ce6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636eec1330116100715780636eec1330146101b0578063944b560b146101c7578063a966d863146101da578063c2a063e9146101fa578063e1c951ca1461020d578063e2a2796b1461022057600080fd5b80630cea7534146100b957806319bd1776146100b95780631e7f1370146100cc57806337ec56ea146101775780633cb4560c1461018a578063649f3ce51461019d575b600080fd5b6100ca6100c7366004611bfe565b50565b005b61012b6100da366004611bfe565b60036020819052600091825260409091208054600182015460028301549383015460048401546005850154600686015460079096015494966001600160a01b03948516969416949293919290919088565b604080519889526001600160a01b0397881660208a015295909616948701949094526060860192909252608085015260a084015260c083015260e0820152610100015b60405180910390f35b6100ca610185366004611bfe565b6102a2565b6100ca610198366004611bfe565b610481565b6100ca6101ab366004611bfe565b610578565b6101b96104b081565b60405190815260200161016e565b6100ca6101d5366004611eed565b610669565b6101ed6101e8366004612005565b6106f4565b60405161016e9190612139565b6100ca61020836600461215d565b610c22565b6100ca61021b366004611bfe565b610e09565b61026d61022e3660046121a2565b600460208190526000918252604090912080546001820154600283015460038401549484015460059094015492946001600160a01b0390921693909286565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161016e565b600081815260036020526040808220825491516349ebb77d60e01b8152600481018590529092916001600160a01b0316906349ebb77d90602401606060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906121c6565b905080604001516000148015610343575060038201541515806103435750600482015415155b61034c57600080fd5b60008054604051632500ed8d60e21b8152600481018690526001600160a01b0390911690639403b634906024016102a060405180830381865afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906122b7565b60005460808201519192506001600160a01b031690635393e7809086906103e1906123e3565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b505060006003860181905560018601546001600160a01b03168152600460205260408120608085015160028201805492955090935091906104759084906123ff565b90915550505050505050565b336000818152600460205260409020600101546001600160a01b0316146104bb57604051638173c76360e01b815260040160405180910390fd5b336000908152600460205260409020546104d490610e5d565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d919061242f565b5033600090815260046020526040812060020180548392906105709084906123ff565b909155505050565b336000818152600460205260409020600101546001600160a01b0316146105b257604051638173c76360e01b815260040160405180910390fd5b33600090815260046020526040812060020180548392906105d490849061244a565b9091555050336000908152600460205260409020546105f290610e5d565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061242f565b5050565b6000546001600160a01b0316331461069457604051637542ed5d60e11b815260040160405180910390fd5b602080830151600090815260038252604080822060018101546001600160a01b03168352600484529082206080860151805192949193926106db9290820181019101612471565b90506106ed8284838760600151610ed8565b5050505050565b6106fc611b8a565b600083600001518060200190518101906107169190612570565b905060006107288286602001516111bb565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b031661075857600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b0390811691161461078f57600080fd5b61079881611269565b6020820151156107c1576107c1600360008460200151815260200190815260200160002061140a565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a0016040528085604001516001600160401b0316815260200185602001518152602001856080015181526020018560a00151815260200160405180604001604052806000600181111561083d5761083d612651565b815260c0880151602091820152604051610858929101612667565b604051602081830303815290604052815250866040518363ffffffff1660e01b81526004016108889291906126cc565b610180604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190612749565b9250816020015160000361098857602082810151848201805160009081526003845260408082209390935585518401518251825283822060020180546001600160a01b0319166001600160a01b0392831617905590549151865190940151925163055a6d9b60e51b815260048101949094529182166024840152169063ab4db36090604401600060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506109d0565b60208084015160009081526003825260409020600201548351909101516001600160a01b039081169116146109d05760405163708c545360e01b815260040160405180910390fd5b8160800151600360008560200151815260200190815260200160002060030160008282546109fe91906123ff565b909155505060a082015160208085015160009081526003909152604081206004018054909190610a2f9084906123ff565b9091555050602080840151600090815260038083526040918290208251610100810184528154815260018201546001600160a01b0390811695820195909552600282015490941692840192909252810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015460e0820152610ab5906114b0565b610af35760405162461bcd60e51b8152600401610aea906020808252600490820152635341464560e01b604082015260600190565b60405180910390fd5b8160e001516001600160a01b031663156b582a83856040518363ffffffff1660e01b8152600401610b25929190612801565b60006040518083038186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b5050505060008260c001511215610c19576040808301516001600160401b03166000908152600160209081529190205483519091015160c08401516001600160a01b039092169163a9059cbb9190610ba8906123e3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c17919061242f565b505b50505b92915050565b6001600160401b038216600090815260036020818152604080842060018101546001600160a01b039081168087526004808652968490208451610100810186528454815295860191909152600283015490911692840192909252928301546060830152928201546080820152600582015460a0820152600682015460c0820152600782015460e0820152909190610cb8906114b0565b15610cf05760405162461bcd60e51b81526020600482015260086024820152674e4f54205341464560c01b6044820152606401610aea565b6000546040805160a081018252835481526001600160401b038716602082015260038501546001600160a01b0390931692639b819b3092820190610d33906123e3565b81526020018560040154610d46906123e3565b81526020016040518060400160405280600180811115610d6857610d68612651565b81526000602091820152604051610d80929101612667565b604051602081830303815290604052815250856040518363ffffffff1660e01b8152600401610db09291906126cc565b610180604051808303816000875af1158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190612749565b50610e038482600001546114c9565b50505050565b6000818152600160205260409020546001600160a01b03166100c757610e2e81610e5d565b60009182526001602052604090912080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc9190612b2a565b60600151519392505050565b600080548454604051632500ed8d60e21b81526001600160a01b0390921691639403b63491610f0d9160040190815260200190565b6102a060405180830381865afa158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f91906122b7565b608001516005850154909150600084516001811115610f7057610f70612651565b0361112d576000610f81828461244a565b90506000856020015182610f9591906123ff565b1215610fa057600080fd5b60058601849055600082610fb486846123ff565b610fbe919061244a565b90508560200151876006016000828254610fd891906123ff565b9250508190555080886002016000828254610ff391906123ff565b9091555050602086015161100790826123ff565b9050600081131561109957875461101d90610e5d565b60005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561106f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611093919061242f565b50611126565b6000811215611126576000546001600160a01b031663c6b6d3406001306110bf856123e3565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050505b50506111b3565b60018451600181111561114257611142612651565b036111b35760005460405163031adb4d60e61b815260016004820152306024820152604481018490526001600160a01b039091169063c6b6d34090606401600060405180830381600087803b15801561119a57600080fd5b505af11580156111ae573d6000803e3d6000fd5b505050505b505050505050565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000808460c001511361121957600061121f565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b03168152602001828152602001611258866115e2565b815260200184905291505092915050565b61127281611675565b6002546001600160a01b031663137c29fe6112f8836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830183523081529186015190820152846000015160200151856060015160405160200161133b90612c02565b60408051601f19818403018152608083019091526047808352909190612fcf6020830139604051602001611370929190612d2d565b60408051601f1981840301815260608301909152602e808352909190612fa160208301396040516020016113a5929190612d5c565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526113dc9695949392600401612dad565b600060405180830381600087803b1580156113f657600080fd5b505af11580156106ed573d6000803e3d6000fd5b60018101546001600160a01b0316600090815260046020526040812060078301549091906114389042612e50565b90506000660b342eb7c38000826104b086600501546114579190612e63565b6114619190612e63565b61146b9190612e90565b905080846006016000828254611481919061244a565b925050819055508083600201600082825461149c91906123ff565b909155505042600790940193909355505050565b60008060006114be846116c6565b501215949350505050565b6001600160401b03821660009081526003602081905260408220908101549091036115dd576003810154158015611504575060008160060154135b1561159c576006810180546000918290558382526001602052604091829020546002840154925163a9059cbb60e01b81526001600160a01b039384166004820152602481018390529192169063a9059cbb906044016020604051808303816000875af1158015611578573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed919061242f565b600681015460018201546001600160a01b0316600090815260046020526040812060020180549091906115d09084906123ff565b9091555050600060068201555b505050565b60006040516020016115f390612c02565b60405160208183030381529060405280519060200120611616836000015161184b565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516040516020016116589a99989796959493929190612ea4565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146116a057604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156100c75760405163387b2e5560e11b815260040160405180910390fd5b600080548251604051639174e1a160e01b815260048101919091528291829182916001600160a01b031690639174e1a190602401606060405180830381865afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b91906121c6565b600080546020888101516001600160a01b039081168452600491829052604080852054905163acfcd9fd60e01b815292830152939450919283928392919091169063acfcd9fd90602401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c69190612f16565b90506117dc8860c0015185836305fd7d446118b5565b9198509096509093509150600061180b620f42406117fc856103e8612e63565b6118069190612e90565b611933565b905080611818858961244a565b61182291906123ff565b97508580156118335750620f424088125b1561183f57620f424097505b50505050509193909250565b6000604051806080016040528060478152602001612fcf6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c001611658565b6000806000806118c68688876119a1565b6118d090856123ff565b93506118dc8688611aa0565b6118e690846123ff565b92506118f28688611b2a565b6118fc9083612f2f565b9150808061190e575061190e87611b6f565b905061191a88856123ff565b935061192688846123ff565b9250945094509450949050565b60006001600160ff1b0382111561199d5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610aea565b5090565b6001600160ff1b0360006305f5e1006119ba8487612e63565b6119c49190612e90565b90506000836119d76305f5e10088612e63565b6119e19190612e90565b905060006119ef8387611aa0565b9050838112156119fd578093505b506000611a0a8287611aa0565b905083811215611a18578093505b5060008560200151128015611a31575060008560400151135b15611a975760008560400151600160601b8760200151611a50906123e3565b611a5a9190612e63565b611a649190612e90565b90508082108015611a7457508281105b15611a95576000611a858288611aa0565b905084811215611a93578094505b505b505b50509392505050565b6000806060611aaf8580612e63565b8451911c9150600160601b611ac386611933565b8560200151611ad29190612f42565b611add906002612f42565b611ae79190612f72565b600160601b611af584611933565b8660400151611b049190612f42565b611b0e9190612f72565b611b1891906123ff565b611b2291906123ff565b949350505050565b602081015160009081811315611b44576000915050610c1c565b606084611b50836123e3565b611b5a9190612e63565b611b65906002612e63565b901c949350505050565b600081602001516000141580610c1c57505060400151151590565b6040518060e00160405280611bce6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611c1057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611c4f57611c4f611c17565b60405290565b60405160c081016001600160401b0381118282101715611c4f57611c4f611c17565b60405160a081016001600160401b0381118282101715611c4f57611c4f611c17565b604080519081016001600160401b0381118282101715611c4f57611c4f611c17565b604051606081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161010081016001600160401b0381118282101715611c4f57611c4f611c17565b604051608081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161012081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161022081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161016081016001600160401b0381118282101715611c4f57611c4f611c17565b604051601f8201601f191681016001600160401b0381118282101715611db357611db3611c17565b604052919050565b60006001600160401b03821115611dd457611dd4611c17565b50601f01601f191660200190565b600082601f830112611df357600080fd5b8135611e06611e0182611dbb565b611d8b565b818152846020838601011115611e1b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000818303610180811215611e4c57600080fd5b611e54611c2d565b915060c0811215611e6457600080fd5b50611e6d611c55565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215611f0157600080fd5b82356001600160401b0380821115611f1857600080fd5b9084019060a08287031215611f2c57600080fd5b611f34611c77565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115611f6857600080fd5b611f7488828601611de2565b608083015250809450505050611f8d8460208501611e38565b90509250929050565b6001600160a01b03811681146100c757600080fd5b600060408284031215611fbd57600080fd5b611fc5611c99565b90508135611fd281611f96565b815260208201356001600160401b03811115611fed57600080fd5b611ff984828501611de2565b60208301525092915050565b6000806040838503121561201857600080fd5b82356001600160401b038082111561202f57600080fd5b908401906040828703121561204357600080fd5b61204b611c99565b82358281111561205a57600080fd5b61206688828601611de2565b82525060208301358281111561207b57600080fd5b61208788828601611de2565b6020830152508094505060208501359150808211156120a557600080fd5b506120b285828601611fab565b9150509250929050565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b6101808101610c1c82846120bc565b6001600160401b03811681146100c757600080fd5b6000806040838503121561217057600080fd5b823561217b81612148565b915060208301356001600160401b0381111561219657600080fd5b6120b285828601611fab565b6000602082840312156121b457600080fd5b81356121bf81611f96565b9392505050565b6000606082840312156121d857600080fd5b6121e0611cbb565b8251815260208301516020820152604083015160408201528091505092915050565b805161220d81611f96565b919050565b8051600281900b811461220d57600080fd5b805161220d81612148565b60006040828403121561224157600080fd5b612249611c99565b9050815181526020820151602082015292915050565b600060c0828403121561227157600080fd5b612279611c55565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a08112156122cb57600080fd5b6122d3611c55565b8351815260208401516122e581611f96565b602082015260408401516122f881611f96565b6040820152606084015161230b81611f96565b606082015260808481015190820152610200609f198301121561232d57600080fd5b612335611cdd565b915060a0840151825261234a60c08501612212565b602083015261235b60e08501612212565b604083015261236d6101008501612224565b606083015261238085610120860161222f565b608083015261239385610160860161225f565b60a08301526123a685610220860161222f565b60c08301526123b985610260860161222f565b60e083015260a08101919091529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016123f8576123f86123cd565b5060000390565b8082018281126000831280158216821582161715610c1957610c196123cd565b8051801515811461220d57600080fd5b60006020828403121561244157600080fd5b6121bf8261241f565b818103600083128015838313168383128216171561246a5761246a6123cd565b5092915050565b60006040828403121561248357600080fd5b61248b611c99565b82516002811061249a57600080fd5b81526020928301519281019290925250919050565b6000608082840312156124c157600080fd5b6124c9611d00565b905081516124d681611f96565b815260208201516124e681611f96565b80602083015250604082015160408201526060820151606082015292915050565b60005b8381101561252257818101518382015260200161250a565b50506000910152565b600082601f83011261253c57600080fd5b815161254a611e0182611dbb565b81815284602083860101111561255f57600080fd5b611b22826020830160208701612507565b60006020828403121561258257600080fd5b81516001600160401b038082111561259957600080fd5b9083019061018082860312156125ae57600080fd5b6125b6611d22565b6125c086846124af565b8152608083015160208201526125d860a08401612224565b60408201526125e960c08401612202565b606082015260e083015160808201526101008084015160a083015261012084015160c083015261261c6101408501612202565b60e08301526101608401518381111561263457600080fd5b6126408882870161252b565b918301919091525095945050505050565b634e487b7160e01b600052602160045260246000fd5b815160408201906002811061268c57634e487b7160e01b600052602160045260246000fd5b808352506020830151602083015292915050565b600081518084526126b8816020860160208601612507565b601f01601f19169290920160200192915050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261271060e08401826126a0565b9050828103602084015260018060a01b03845116815260208401516040602083015261273f60408301826126a0565b9695505050505050565b600081830361018081121561275d57600080fd5b612765611c2d565b60c082121561277357600080fd5b61277b611c55565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6101a0808252835180516001600160a01b039081169284019290925260208082015183166101c08501526040808301516101e0860152606092830151610200860152908601516102208501528501516001600160401b03166102408401528401518116610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e0840151166102e08201526101008301516101806103008301526000906128b76103208401826126a0565b9150506121bf60208301846120bc565b6000608082840312156128d957600080fd5b6128e1611d00565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561291f57600080fd5b612927611c55565b9150825161293481611f96565b8252602083015161294481611f96565b602083015260c0603f198201121561295b57600080fd5b50612964611c55565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a0820152806040830152506129b28361010084016128c7565b606082015261018082015160808201526101a082015160a082015292915050565b6000606082840312156129e557600080fd5b6129ed611cbb565b9050815181526129ff60208301612212565b6020820152612a1060408301612212565b604082015292915050565b60006102608284031215612a2e57600080fd5b612a36611d45565b9050612a4182612202565b8152612a4f60208301612212565b6020820152612a6060408301612212565b6040820152612a7160608301612224565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0612ae48482850161222f565b908201526101e0612af78484830161222f565b6101c08301526102208301519082015261024090910151610200820152919050565b805160ff8116811461220d57600080fd5b60006107208284031215612b3d57600080fd5b612b45611d68565b82518152612b5560208401612202565b6020820152612b6660408401612202565b6040820152612b78846060850161290b565b6060820152612b8b84610220850161290b565b6080820152612b9e846103e085016129d3565b60a0820152612bb1846104408501612a1b565b60c0820152612bc36106a08401612202565b60e0820152612bd56106c0840161241f565b610100820152612be86106e08401612b19565b610120820152610700929092015161014083015250919050565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b60008351612d3f818460208801612507565b835190830190612d53818360208801612507565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351612d8a816013850160208801612507565b835190830190612da1816013840160208801612507565b01601301949350505050565b6000610140612dd0838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152612e04608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e083018690526101008301819052612e2e818401866126a0565b9050828103610120840152612e4381856126a0565b9998505050505050505050565b81810381811115610c1c57610c1c6123cd565b8082028115828204841417610c1c57610c1c6123cd565b634e487b7160e01b600052601260045260246000fd5b600082612e9f57612e9f612e7a565b500490565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e08501528086166101008501525080610120840152612f05818401856126a0565b9d9c50505050505050505050505050565b600060208284031215612f2857600080fd5b5051919050565b80820180821115610c1c57610c1c6123cd565b80820260008212600160ff1b84141615612f5e57612f5e6123cd565b8181058314821517610c1c57610c1c6123cd565b600082612f8157612f81612e7a565b600160ff1b821460001984141615612f9b57612f9b6123cd565b50059056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122076977e13c655feaf8e0a8d9ae3396968cb0d371f2004d462749fa42da9d7aa4664736f6c63430008130033",
    "sourceMap": "937:12523:26:-:0;;;2451:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:10:28;:22;;-1:-1:-1;;;;;381:22:28;;;-1:-1:-1;;;;;;381:22:28;;;;;;;2561:8:26::1;:35:::0;;;;;::::1;::::0;::::1;;::::0;;937:12523;;14:143:54;-1:-1:-1;;;;;101:31:54;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:54;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;937:12523:26;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80636eec1330116100715780636eec1330146101b0578063944b560b146101c7578063a966d863146101da578063c2a063e9146101fa578063e1c951ca1461020d578063e2a2796b1461022057600080fd5b80630cea7534146100b957806319bd1776146100b95780631e7f1370146100cc57806337ec56ea146101775780633cb4560c1461018a578063649f3ce51461019d575b600080fd5b6100ca6100c7366004611bfe565b50565b005b61012b6100da366004611bfe565b60036020819052600091825260409091208054600182015460028301549383015460048401546005850154600686015460079096015494966001600160a01b03948516969416949293919290919088565b604080519889526001600160a01b0397881660208a015295909616948701949094526060860192909252608085015260a084015260c083015260e0820152610100015b60405180910390f35b6100ca610185366004611bfe565b6102a2565b6100ca610198366004611bfe565b610481565b6100ca6101ab366004611bfe565b610578565b6101b96104b081565b60405190815260200161016e565b6100ca6101d5366004611eed565b610669565b6101ed6101e8366004612005565b6106f4565b60405161016e9190612139565b6100ca61020836600461215d565b610c22565b6100ca61021b366004611bfe565b610e09565b61026d61022e3660046121a2565b600460208190526000918252604090912080546001820154600283015460038401549484015460059094015492946001600160a01b0390921693909286565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161016e565b600081815260036020526040808220825491516349ebb77d60e01b8152600481018590529092916001600160a01b0316906349ebb77d90602401606060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906121c6565b905080604001516000148015610343575060038201541515806103435750600482015415155b61034c57600080fd5b60008054604051632500ed8d60e21b8152600481018690526001600160a01b0390911690639403b634906024016102a060405180830381865afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906122b7565b60005460808201519192506001600160a01b031690635393e7809086906103e1906123e3565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b505060006003860181905560018601546001600160a01b03168152600460205260408120608085015160028201805492955090935091906104759084906123ff565b90915550505050505050565b336000818152600460205260409020600101546001600160a01b0316146104bb57604051638173c76360e01b815260040160405180910390fd5b336000908152600460205260409020546104d490610e5d565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d919061242f565b5033600090815260046020526040812060020180548392906105709084906123ff565b909155505050565b336000818152600460205260409020600101546001600160a01b0316146105b257604051638173c76360e01b815260040160405180910390fd5b33600090815260046020526040812060020180548392906105d490849061244a565b9091555050336000908152600460205260409020546105f290610e5d565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061242f565b5050565b6000546001600160a01b0316331461069457604051637542ed5d60e11b815260040160405180910390fd5b602080830151600090815260038252604080822060018101546001600160a01b03168352600484529082206080860151805192949193926106db9290820181019101612471565b90506106ed8284838760600151610ed8565b5050505050565b6106fc611b8a565b600083600001518060200190518101906107169190612570565b905060006107288286602001516111bb565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b031661075857600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b0390811691161461078f57600080fd5b61079881611269565b6020820151156107c1576107c1600360008460200151815260200190815260200160002061140a565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a0016040528085604001516001600160401b0316815260200185602001518152602001856080015181526020018560a00151815260200160405180604001604052806000600181111561083d5761083d612651565b815260c0880151602091820152604051610858929101612667565b604051602081830303815290604052815250866040518363ffffffff1660e01b81526004016108889291906126cc565b610180604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190612749565b9250816020015160000361098857602082810151848201805160009081526003845260408082209390935585518401518251825283822060020180546001600160a01b0319166001600160a01b0392831617905590549151865190940151925163055a6d9b60e51b815260048101949094529182166024840152169063ab4db36090604401600060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506109d0565b60208084015160009081526003825260409020600201548351909101516001600160a01b039081169116146109d05760405163708c545360e01b815260040160405180910390fd5b8160800151600360008560200151815260200190815260200160002060030160008282546109fe91906123ff565b909155505060a082015160208085015160009081526003909152604081206004018054909190610a2f9084906123ff565b9091555050602080840151600090815260038083526040918290208251610100810184528154815260018201546001600160a01b0390811695820195909552600282015490941692840192909252810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015460e0820152610ab5906114b0565b610af35760405162461bcd60e51b8152600401610aea906020808252600490820152635341464560e01b604082015260600190565b60405180910390fd5b8160e001516001600160a01b031663156b582a83856040518363ffffffff1660e01b8152600401610b25929190612801565b60006040518083038186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b5050505060008260c001511215610c19576040808301516001600160401b03166000908152600160209081529190205483519091015160c08401516001600160a01b039092169163a9059cbb9190610ba8906123e3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c17919061242f565b505b50505b92915050565b6001600160401b038216600090815260036020818152604080842060018101546001600160a01b039081168087526004808652968490208451610100810186528454815295860191909152600283015490911692840192909252928301546060830152928201546080820152600582015460a0820152600682015460c0820152600782015460e0820152909190610cb8906114b0565b15610cf05760405162461bcd60e51b81526020600482015260086024820152674e4f54205341464560c01b6044820152606401610aea565b6000546040805160a081018252835481526001600160401b038716602082015260038501546001600160a01b0390931692639b819b3092820190610d33906123e3565b81526020018560040154610d46906123e3565b81526020016040518060400160405280600180811115610d6857610d68612651565b81526000602091820152604051610d80929101612667565b604051602081830303815290604052815250856040518363ffffffff1660e01b8152600401610db09291906126cc565b610180604051808303816000875af1158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190612749565b50610e038482600001546114c9565b50505050565b6000818152600160205260409020546001600160a01b03166100c757610e2e81610e5d565b60009182526001602052604090912080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc9190612b2a565b60600151519392505050565b600080548454604051632500ed8d60e21b81526001600160a01b0390921691639403b63491610f0d9160040190815260200190565b6102a060405180830381865afa158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f91906122b7565b608001516005850154909150600084516001811115610f7057610f70612651565b0361112d576000610f81828461244a565b90506000856020015182610f9591906123ff565b1215610fa057600080fd5b60058601849055600082610fb486846123ff565b610fbe919061244a565b90508560200151876006016000828254610fd891906123ff565b9250508190555080886002016000828254610ff391906123ff565b9091555050602086015161100790826123ff565b9050600081131561109957875461101d90610e5d565b60005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561106f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611093919061242f565b50611126565b6000811215611126576000546001600160a01b031663c6b6d3406001306110bf856123e3565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050505b50506111b3565b60018451600181111561114257611142612651565b036111b35760005460405163031adb4d60e61b815260016004820152306024820152604481018490526001600160a01b039091169063c6b6d34090606401600060405180830381600087803b15801561119a57600080fd5b505af11580156111ae573d6000803e3d6000fd5b505050505b505050505050565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000808460c001511361121957600061121f565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b03168152602001828152602001611258866115e2565b815260200184905291505092915050565b61127281611675565b6002546001600160a01b031663137c29fe6112f8836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830183523081529186015190820152846000015160200151856060015160405160200161133b90612c02565b60408051601f19818403018152608083019091526047808352909190612fcf6020830139604051602001611370929190612d2d565b60408051601f1981840301815260608301909152602e808352909190612fa160208301396040516020016113a5929190612d5c565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526113dc9695949392600401612dad565b600060405180830381600087803b1580156113f657600080fd5b505af11580156106ed573d6000803e3d6000fd5b60018101546001600160a01b0316600090815260046020526040812060078301549091906114389042612e50565b90506000660b342eb7c38000826104b086600501546114579190612e63565b6114619190612e63565b61146b9190612e90565b905080846006016000828254611481919061244a565b925050819055508083600201600082825461149c91906123ff565b909155505042600790940193909355505050565b60008060006114be846116c6565b501215949350505050565b6001600160401b03821660009081526003602081905260408220908101549091036115dd576003810154158015611504575060008160060154135b1561159c576006810180546000918290558382526001602052604091829020546002840154925163a9059cbb60e01b81526001600160a01b039384166004820152602481018390529192169063a9059cbb906044016020604051808303816000875af1158015611578573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed919061242f565b600681015460018201546001600160a01b0316600090815260046020526040812060020180549091906115d09084906123ff565b9091555050600060068201555b505050565b60006040516020016115f390612c02565b60405160208183030381529060405280519060200120611616836000015161184b565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516040516020016116589a99989796959493929190612ea4565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146116a057604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156100c75760405163387b2e5560e11b815260040160405180910390fd5b600080548251604051639174e1a160e01b815260048101919091528291829182916001600160a01b031690639174e1a190602401606060405180830381865afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b91906121c6565b600080546020888101516001600160a01b039081168452600491829052604080852054905163acfcd9fd60e01b815292830152939450919283928392919091169063acfcd9fd90602401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c69190612f16565b90506117dc8860c0015185836305fd7d446118b5565b9198509096509093509150600061180b620f42406117fc856103e8612e63565b6118069190612e90565b611933565b905080611818858961244a565b61182291906123ff565b97508580156118335750620f424088125b1561183f57620f424097505b50505050509193909250565b6000604051806080016040528060478152602001612fcf6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c001611658565b6000806000806118c68688876119a1565b6118d090856123ff565b93506118dc8688611aa0565b6118e690846123ff565b92506118f28688611b2a565b6118fc9083612f2f565b9150808061190e575061190e87611b6f565b905061191a88856123ff565b935061192688846123ff565b9250945094509450949050565b60006001600160ff1b0382111561199d5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610aea565b5090565b6001600160ff1b0360006305f5e1006119ba8487612e63565b6119c49190612e90565b90506000836119d76305f5e10088612e63565b6119e19190612e90565b905060006119ef8387611aa0565b9050838112156119fd578093505b506000611a0a8287611aa0565b905083811215611a18578093505b5060008560200151128015611a31575060008560400151135b15611a975760008560400151600160601b8760200151611a50906123e3565b611a5a9190612e63565b611a649190612e90565b90508082108015611a7457508281105b15611a95576000611a858288611aa0565b905084811215611a93578094505b505b505b50509392505050565b6000806060611aaf8580612e63565b8451911c9150600160601b611ac386611933565b8560200151611ad29190612f42565b611add906002612f42565b611ae79190612f72565b600160601b611af584611933565b8660400151611b049190612f42565b611b0e9190612f72565b611b1891906123ff565b611b2291906123ff565b949350505050565b602081015160009081811315611b44576000915050610c1c565b606084611b50836123e3565b611b5a9190612e63565b611b65906002612e63565b901c949350505050565b600081602001516000141580610c1c57505060400151151590565b6040518060e00160405280611bce6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611c1057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611c4f57611c4f611c17565b60405290565b60405160c081016001600160401b0381118282101715611c4f57611c4f611c17565b60405160a081016001600160401b0381118282101715611c4f57611c4f611c17565b604080519081016001600160401b0381118282101715611c4f57611c4f611c17565b604051606081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161010081016001600160401b0381118282101715611c4f57611c4f611c17565b604051608081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161012081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161022081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161016081016001600160401b0381118282101715611c4f57611c4f611c17565b604051601f8201601f191681016001600160401b0381118282101715611db357611db3611c17565b604052919050565b60006001600160401b03821115611dd457611dd4611c17565b50601f01601f191660200190565b600082601f830112611df357600080fd5b8135611e06611e0182611dbb565b611d8b565b818152846020838601011115611e1b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000818303610180811215611e4c57600080fd5b611e54611c2d565b915060c0811215611e6457600080fd5b50611e6d611c55565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215611f0157600080fd5b82356001600160401b0380821115611f1857600080fd5b9084019060a08287031215611f2c57600080fd5b611f34611c77565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115611f6857600080fd5b611f7488828601611de2565b608083015250809450505050611f8d8460208501611e38565b90509250929050565b6001600160a01b03811681146100c757600080fd5b600060408284031215611fbd57600080fd5b611fc5611c99565b90508135611fd281611f96565b815260208201356001600160401b03811115611fed57600080fd5b611ff984828501611de2565b60208301525092915050565b6000806040838503121561201857600080fd5b82356001600160401b038082111561202f57600080fd5b908401906040828703121561204357600080fd5b61204b611c99565b82358281111561205a57600080fd5b61206688828601611de2565b82525060208301358281111561207b57600080fd5b61208788828601611de2565b6020830152508094505060208501359150808211156120a557600080fd5b506120b285828601611fab565b9150509250929050565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b6101808101610c1c82846120bc565b6001600160401b03811681146100c757600080fd5b6000806040838503121561217057600080fd5b823561217b81612148565b915060208301356001600160401b0381111561219657600080fd5b6120b285828601611fab565b6000602082840312156121b457600080fd5b81356121bf81611f96565b9392505050565b6000606082840312156121d857600080fd5b6121e0611cbb565b8251815260208301516020820152604083015160408201528091505092915050565b805161220d81611f96565b919050565b8051600281900b811461220d57600080fd5b805161220d81612148565b60006040828403121561224157600080fd5b612249611c99565b9050815181526020820151602082015292915050565b600060c0828403121561227157600080fd5b612279611c55565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a08112156122cb57600080fd5b6122d3611c55565b8351815260208401516122e581611f96565b602082015260408401516122f881611f96565b6040820152606084015161230b81611f96565b606082015260808481015190820152610200609f198301121561232d57600080fd5b612335611cdd565b915060a0840151825261234a60c08501612212565b602083015261235b60e08501612212565b604083015261236d6101008501612224565b606083015261238085610120860161222f565b608083015261239385610160860161225f565b60a08301526123a685610220860161222f565b60c08301526123b985610260860161222f565b60e083015260a08101919091529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016123f8576123f86123cd565b5060000390565b8082018281126000831280158216821582161715610c1957610c196123cd565b8051801515811461220d57600080fd5b60006020828403121561244157600080fd5b6121bf8261241f565b818103600083128015838313168383128216171561246a5761246a6123cd565b5092915050565b60006040828403121561248357600080fd5b61248b611c99565b82516002811061249a57600080fd5b81526020928301519281019290925250919050565b6000608082840312156124c157600080fd5b6124c9611d00565b905081516124d681611f96565b815260208201516124e681611f96565b80602083015250604082015160408201526060820151606082015292915050565b60005b8381101561252257818101518382015260200161250a565b50506000910152565b600082601f83011261253c57600080fd5b815161254a611e0182611dbb565b81815284602083860101111561255f57600080fd5b611b22826020830160208701612507565b60006020828403121561258257600080fd5b81516001600160401b038082111561259957600080fd5b9083019061018082860312156125ae57600080fd5b6125b6611d22565b6125c086846124af565b8152608083015160208201526125d860a08401612224565b60408201526125e960c08401612202565b606082015260e083015160808201526101008084015160a083015261012084015160c083015261261c6101408501612202565b60e08301526101608401518381111561263457600080fd5b6126408882870161252b565b918301919091525095945050505050565b634e487b7160e01b600052602160045260246000fd5b815160408201906002811061268c57634e487b7160e01b600052602160045260246000fd5b808352506020830151602083015292915050565b600081518084526126b8816020860160208601612507565b601f01601f19169290920160200192915050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261271060e08401826126a0565b9050828103602084015260018060a01b03845116815260208401516040602083015261273f60408301826126a0565b9695505050505050565b600081830361018081121561275d57600080fd5b612765611c2d565b60c082121561277357600080fd5b61277b611c55565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6101a0808252835180516001600160a01b039081169284019290925260208082015183166101c08501526040808301516101e0860152606092830151610200860152908601516102208501528501516001600160401b03166102408401528401518116610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e0840151166102e08201526101008301516101806103008301526000906128b76103208401826126a0565b9150506121bf60208301846120bc565b6000608082840312156128d957600080fd5b6128e1611d00565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561291f57600080fd5b612927611c55565b9150825161293481611f96565b8252602083015161294481611f96565b602083015260c0603f198201121561295b57600080fd5b50612964611c55565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a0820152806040830152506129b28361010084016128c7565b606082015261018082015160808201526101a082015160a082015292915050565b6000606082840312156129e557600080fd5b6129ed611cbb565b9050815181526129ff60208301612212565b6020820152612a1060408301612212565b604082015292915050565b60006102608284031215612a2e57600080fd5b612a36611d45565b9050612a4182612202565b8152612a4f60208301612212565b6020820152612a6060408301612212565b6040820152612a7160608301612224565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0612ae48482850161222f565b908201526101e0612af78484830161222f565b6101c08301526102208301519082015261024090910151610200820152919050565b805160ff8116811461220d57600080fd5b60006107208284031215612b3d57600080fd5b612b45611d68565b82518152612b5560208401612202565b6020820152612b6660408401612202565b6040820152612b78846060850161290b565b6060820152612b8b84610220850161290b565b6080820152612b9e846103e085016129d3565b60a0820152612bb1846104408501612a1b565b60c0820152612bc36106a08401612202565b60e0820152612bd56106c0840161241f565b610100820152612be86106e08401612b19565b610120820152610700929092015161014083015250919050565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b60008351612d3f818460208801612507565b835190830190612d53818360208801612507565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351612d8a816013850160208801612507565b835190830190612da1816013840160208801612507565b01601301949350505050565b6000610140612dd0838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152612e04608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e083018690526101008301819052612e2e818401866126a0565b9050828103610120840152612e4381856126a0565b9998505050505050505050565b81810381811115610c1c57610c1c6123cd565b8082028115828204841417610c1c57610c1c6123cd565b634e487b7160e01b600052601260045260246000fd5b600082612e9f57612e9f612e7a565b500490565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e08501528086166101008501525080610120840152612f05818401856126a0565b9d9c50505050505050505050505050565b600060208284031215612f2857600080fd5b5051919050565b80820180821115610c1c57610c1c6123cd565b80820260008212600160ff1b84141615612f5e57612f5e6123cd565b8181058314821517610c1c57610c1c6123cd565b600082612f8157612f81612e7a565b600160ff1b821460001984141615612f9b57612f9b6123cd565b50059056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122076977e13c655feaf8e0a8d9ae3396968cb0d371f2004d462749fa42da9d7aa4664736f6c63430008130033",
    "sourceMap": "937:12523:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7482:57;;;;;;:::i;:::-;;;;;2179:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2179:61:26;;;;;;;;;;;;;;;;;;;;643:25:54;;;-1:-1:-1;;;;;742:15:54;;;737:2;722:18;;715:43;794:15;;;;774:18;;;767:43;;;;841:2;826:18;;819:34;;;;884:3;869:19;;862:35;695:3;913:19;;906:35;972:3;957:19;;950:35;1016:3;1001:19;;994:35;630:3;615:19;2179:61:26;;;;;;;;8574:784;;;;;;:::i;:::-;;:::i;4426:308::-;;;;;;:::i;:::-;;:::i;4740:273::-;;;;;;:::i;:::-;;:::i;1230:46::-;;1272:4;1230:46;;;;;1186:25:54;;;1174:2;1159:18;1230:46:26;1040:177:54;2609:532:26;;;;;;:::i;:::-;;:::i;5258:2156::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7738:830::-;;;;;;:::i;:::-;;:::i;707:191:28:-;;;;;;:::i;:::-;;:::i;2247:55:26:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2247:55:26;;;;;;;;;;;;10795:25:54;;;-1:-1:-1;;;;;10856:32:54;;;10851:2;10836:18;;10829:60;10905:18;;;10898:34;;;;10963:2;10948:18;;10941:34;11006:3;10991:19;;10984:35;10876:3;11035:19;;11028:35;10782:3;10767:19;2247:55:26;10514:555:54;8574:784:26;8638:33;8674:22;;;:13;:22;;;;;;8785:10;;:34;;-1:-1:-1;;;8785:34:26;;;;;1186:25:54;;;8674:22:26;;8638:33;-1:-1:-1;;;;;8785:10:26;;:25;;1159:18:54;;8785:34:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8741:78;;8909:11;:21;;;8934:1;8909:26;:104;;;;-1:-1:-1;8940:27:26;;;;:32;;;:72;;-1:-1:-1;8976:31:26;;;;:36;;8940:72;8888:135;;;;;;9034:27;9064:10;;:28;;-1:-1:-1;;;9064:28:26;;;;;1186:25:54;;;-1:-1:-1;;;;;9064:10:26;;;;:19;;1159:18:54;;9064:28:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9103:10;;9137:12;;;;9034:58;;-1:-1:-1;;;;;;9103:10:26;;:23;;9127:7;;9136:13;;;:::i;:::-;9103:47;;-1:-1:-1;;;;;;9103:47:26;;;;;;;;;;14856:25:54;;;;14897:18;;;14890:34;14829:18;;9103:47:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9191:1:26;9161:27;;;:31;;;9285:19;;;;-1:-1:-1;;;;;9285:19:26;9270:35;;:14;:35;;;;;9339:12;;;;9316:19;;;:35;;9270;;-1:-1:-1;9339:12:26;;-1:-1:-1;9316:19:26;9191:1;9316:35;;9339:12;;9316:35;:::i;:::-;;;;-1:-1:-1;;;;;;;8574:784:26:o;4426:308::-;2389:10;2345:26;;;;:14;:26;;;;;:40;;;-1:-1:-1;;;;;2345:40:26;:54;2341:86;;2408:19;;-1:-1:-1;;;2408:19:26;;;;;;;;;;;2341:86;4555:10:::1;4540:26;::::0;;;:14:::1;:26;::::0;;;;:33;4518:56:::1;::::0;:21:::1;:56::i;:::-;4511:141;::::0;-1:-1:-1;;;4511:141:26;;4602:10:::1;4511:141;::::0;::::1;15396:34:54::0;4622:4:26::1;15446:18:54::0;;;15439:43;15498:18;;;15491:34;;;-1:-1:-1;;;;;4511:77:26;;;::::1;::::0;::::1;::::0;15331:18:54;;4511:141:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4678:10:26::1;4663:26;::::0;;;:14:::1;:26;::::0;;;;:39:::1;;:64:::0;;4713:13;;4663:26;:64:::1;::::0;4713:13;;4663:64:::1;:::i;:::-;::::0;;;-1:-1:-1;;;4426:308:26:o;4740:273::-;2389:10;2345:26;;;;:14;:26;;;;;:40;;;-1:-1:-1;;;;;2345:40:26;:54;2341:86;;2408:19;;-1:-1:-1;;;2408:19:26;;;;;;;;;;;2341:86;4844:10:::1;4829:26;::::0;;;:14:::1;:26;::::0;;;;:39:::1;;:65:::0;;4879:14;;4829:26;:65:::1;::::0;4879:14;;4829:65:::1;:::i;:::-;::::0;;;-1:-1:-1;;4949:10:26::1;4934:26;::::0;;;:14:::1;:26;::::0;;;;:33;4912:56:::1;::::0;:21:::1;:56::i;:::-;4905:101;::::0;-1:-1:-1;;;4905:101:26;;4979:10:::1;4905:101;::::0;::::1;16291:51:54::0;16358:18;;;16351:34;;;-1:-1:-1;;;;;4905:73:26;;;::::1;::::0;::::1;::::0;16264:18:54;;4905:101:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4740:273:::0;:::o;2609:532::-;477:10:28;;-1:-1:-1;;;;;477:10:28;455;:33;451:68;;497:22;;-1:-1:-1;;;497:22:28;;;;;;;;;;;451:68;2860:19:26::1;::::0;;::::1;::::0;2810:33:::1;2846:34:::0;;;:13:::1;:34:::0;;;;;;2936:19:::1;::::0;::::1;::::0;-1:-1:-1;;;;;2936:19:26::1;2921:35:::0;;:14:::1;:35:::0;;;;;3013:21:::1;::::0;::::1;::::0;3002:49;;2846:34;;2921:35;;2810:33;3002:49:::1;::::0;;;;;;;::::1;;:::i;:::-;2967:84;;3062:72;3076:6;3084:12;3098;3112:11;:21;;;3062:13;:72::i;:::-;2800:341;;;2609:532:::0;;:::o;5258:2156::-;5390:41;;:::i;:::-;5447:28;5489:5;:11;;;5478:37;;;;;;;;;;;;:::i;:::-;5447:68;;5525:34;5562:44;5584:10;5596:5;:9;;;5562:21;:44::i;:::-;5640:17;;;;;-1:-1:-1;;;;;5625:33:26;5670:1;5625:33;;;:14;:33;;;;5525:81;;-1:-1:-1;;;;;;5625:33:26;5617:56;;;;;;5738:17;;;;;-1:-1:-1;;;;;5723:33:26;;;;;:14;:33;;;;5691:28;;;;-1:-1:-1;;;;;5691:65:26;;;5723:33;;5691:65;5683:74;;;;;;5768:27;5781:13;5768:12;:27::i;:::-;5810:21;;;;:25;5806:110;;5851:54;5868:13;:36;5882:10;:21;;;5868:36;;;;;;;;;;;5851:16;:54::i;:::-;5940:10;;;;;;;;-1:-1:-1;;;;;5940:10:26;-1:-1:-1;;;;;5940:16:26;;5970:283;;;;;;;;6010:10;:17;;;-1:-1:-1;;;;;5970:283:26;;;;;6045:10;:21;;;5970:283;;;;6084:10;:22;;;5970:283;;;;6124:10;:26;;;5970:283;;;;6179:59;;;;;;;;6192:20;6179:59;;;;;;;;:::i;:::-;;;6214:23;;;;6179:59;;;;;6168:71;;;;;;;:::i;:::-;;;;;;;;;;;;;5970:283;;;6267:14;5940:351;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5926:365;;6306:10;:21;;;6331:1;6306:26;6302:462;;6388:21;;;;;6362:19;;;;;6348:34;;;;:13;:34;;;;;;:61;;;;6466:15;;:22;;;6437:19;;6423:34;;;;;:40;;:65;;-1:-1:-1;;;;;;6423:65:26;-1:-1:-1;;;;;6423:65:26;;;;;;6503:10;;6530:19;;6551:15;;:22;;;;6503:71;;-1:-1:-1;;;6503:71:26;;;;;22396:25:54;;;;22457:32;;;22437:18;;;22430:60;6503:10:26;;:26;;22369:18:54;;6503:71:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6302:462;;;6649:19;;;;;6635:34;;;;:13;:34;;;;;:40;;;6609:15;;:22;;;;-1:-1:-1;;;;;6609:66:26;;;6635:40;;6609:66;6605:149;;6702:37;;-1:-1:-1;;;6702:37:26;;;;;;;;;;;6605:149;6827:10;:22;;;6774:13;:34;6788:11;:19;;;6774:34;;;;;;;;;;;:49;;;:75;;;;;;;:::i;:::-;;;;-1:-1:-1;;6916:26:26;;;;6873:19;;;;;6859:34;;;;:13;:34;;;;;;:53;;:83;;:53;;:34;:83;;6916:26;;6859:83;:::i;:::-;;;;-1:-1:-1;;6990:19:26;;;;;6976:34;;;;:13;:34;;;;;;;;6961:50;;;;;;;;;;;;;;;-1:-1:-1;;;;;6961:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:50::i;:::-;6953:67;;;;-1:-1:-1;;;6953:67:26;;;;;;22703:2:54;22685:21;;;22742:1;22722:18;;;22715:29;-1:-1:-1;;;22775:2:54;22760:18;;22753:34;22819:2;22804:18;;22501:327;6953:67:26;;;;;;;;;7109:10;:27;;;-1:-1:-1;;;;;7093:53:26;;7147:10;7159:11;7093:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7212:1;7186:10;:23;;;:27;7182:197;;;7251:17;;;;;-1:-1:-1;;;;;7236:33:26;;;;;:14;:33;;;;;;;;7297:15;;:22;;;;7330:23;;;;-1:-1:-1;;;;;7236:33:26;;;;7229:50;;7297:22;7329:24;;;:::i;:::-;7229:139;;-1:-1:-1;;;;;;7229:139:26;;;;;;;-1:-1:-1;;;;;16309:32:54;;;7229:139:26;;;16291:51:54;16358:18;;;16351:34;16264:18;;7229:139:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7182:197;7389:18;;5258:2156;;;;;:::o;7738:830::-;-1:-1:-1;;;;;7891:25:26;;7855:33;7891:25;;;:13;:25;;;;;;;;7976:19;;;;-1:-1:-1;;;;;7976:19:26;;;7961:35;;;:14;:35;;;;;;;8049:28;;7976:19;8049:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7891:25;;7961:35;8049:28;;:14;:28::i;:::-;8048:29;8040:50;;;;-1:-1:-1;;;8040:50:26;;24686:2:54;8040:50:26;;;24668:21:54;24725:1;24705:18;;;24698:29;-1:-1:-1;;;24743:18:54;;;24736:38;24791:18;;8040:50:26;24484:331:54;8040:50:26;8133:10;;8163:268;;;;;;;;8203:17;;8163:268;;-1:-1:-1;;;;;8163:268:26;;;;;;8267:27;;;;-1:-1:-1;;;;;8133:10:26;;;;:16;;8163:268;;;8266:28;;;:::i;:::-;8163:268;;;;8313:12;:31;;;8312:32;;;:::i;:::-;8163:268;;;;8373:43;;;;;;;;8386:26;8373:43;;;;;;;;:::i;:::-;;;8414:1;8373:43;;;;;8362:55;;;;;;;:::i;:::-;;;;;;;;;;;;;8163:268;;;8445:14;8133:336;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8514:47;8531:10;8543;:17;;;8514:16;:47::i;:::-;7845:723;;7738:830;;:::o;707:191:28:-;809:1;775:22;;;:14;:22;;;;;;-1:-1:-1;;;;;775:22:28;771:121;;852:29;874:6;852:21;:29::i;:::-;827:22;;;;:14;:22;;;;;;:54;;-1:-1:-1;;;;;;827:54:28;-1:-1:-1;;;;;827:54:28;;;;;;;;;;707:191::o;904:208::-;974:7;1029:10;;:32;;-1:-1:-1;;;1029:32:28;;;;;1186:25:54;;;974:7:28;;-1:-1:-1;;;;;1029:10:28;;:24;;1159:18:54;;1029:32:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1079:20;;;:26;;904:208;-1:-1:-1;;;904:208:28:o;3147:1273:26:-;3351:13;3367:10;;3387:15;;3367:36;;-1:-1:-1;;;3367:36:26;;-1:-1:-1;;;;;3367:10:26;;;;:19;;:36;;;;1186:25:54;;;1174:2;1159:18;;1040:177;3367:36:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;3452:28;;;;3367:43;;-1:-1:-1;3420:29:26;3495:27;;:51;;;;;;;;:::i;:::-;;3491:923;;3562:17;3582:31;3591:22;3582:6;:31;:::i;:::-;3562:51;;3684:1;3649:12;:31;;;3636:10;:44;;;;:::i;:::-;:49;;3628:58;;;;;;3701:28;;;:47;;;3763:11;3809:22;3777:29;3732:16;3777:10;:29;:::i;:::-;:54;;;;:::i;:::-;3763:68;;3875:12;:31;;;3846:12;:25;;;:60;;;;;;;:::i;:::-;;;;;;;;3943:4;3920:6;:19;;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;3970:31:26;;;;3962:39;;;;:::i;:::-;;;4027:1;4020:4;:8;4016:241;;;4077:13;;4055:36;;:21;:36::i;:::-;4110:10;;4048:89;;-1:-1:-1;;;4048:89:26;;-1:-1:-1;;;;;4110:10:26;;;4048:89;;;16291:51:54;16358:18;;;16351:34;;;4048:53:26;;;;;16264:18:54;;4048:89:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4016:241;;;4169:1;4162:4;:8;4158:99;;;4190:10;;-1:-1:-1;;;;;4190:10:26;:15;:10;4220:4;4235:5;4236:4;4235:5;:::i;:::-;4190:52;;-1:-1:-1;;;;;;4190:52:26;;;;;;;29916:14:54;;29909:22;4190:52:26;;;29891:41:54;-1:-1:-1;;;;;29968:32:54;;;29948:18;;;29941:60;30017:18;;;30010:34;29864:18;;4190:52:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4158:99;3548:719;;3491:923;;;4308:26;4277:27;;:57;;;;;;;;:::i;:::-;;4273:141;;4350:10;;:53;;-1:-1:-1;;;4350:53:26;;:10;:53;;;29891:41:54;4380:4:26;29948:18:54;;;29941:60;30017:18;;;30010:34;;;-1:-1:-1;;;;;4350:10:26;;;;:15;;29864:18:54;;4350:53:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4273:141;3341:1079;;3147:1273;;;;:::o;2271:385:47:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:14:47;2500:1;2474:10;:23;;;:27;:66;;2539:1;2474:66;;;2512:10;:23;;;2474:66;2457:83;;2558:91;;;;;;;;2572:10;:15;;;2558:91;;;;2589:10;:28;;;-1:-1:-1;;;;;2558:91:47;;;;;2619:6;2558:91;;;;2627:16;2632:10;2627:4;:16::i;:::-;2558:91;;;;;;;2551:98;-1:-1:-1;;2271:385:47;;;;:::o;10553:351:26:-;10622:16;:5;:14;:16::i;:::-;10649:8;;-1:-1:-1;;;;;10649:8:26;:34;10697:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:49;;;569:79;;;;;613:11;;;;;-1:-1:-1;;;;;569:79:49;506:233;;;;569:79;;;634:12;;;;569:79;;;;506:233;;;669:10;;:16;;;506:233;;;;;;;709:10;;:19;;;;506:233;;;;;346:400;10697:16:26;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:49;;;;;;;10757:4:26;998:84:49;;1068:12;;;;998:84;;;;10777:5:26;:10;;;:17;;;10808:5;:10;;;747:334:47;;;;;;;:::i;:::-;;;;-1:-1:-1;;747:334:47;;;;;;1258:28;;;;;;;;;;747:334;;;1258:28;747:334;1258:28;;;1221:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1221:66:47;;;;;;1598:22;;;;;;;;;;1221:66;;;1598:22;1221:66;1598:22;;;1546:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1546:75:47;;;;;;;;;;10878:9:26;;;;-1:-1:-1;;;;;;10649:248:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10910:541;11036:19;;;;-1:-1:-1;;;;;11036:19:26;10990:28;11021:35;;;:14;:35;;;;;11107:41;;;;11021:35;;10990:28;11089:59;;:15;:59;:::i;:::-;11067:81;;11159:17;11252:14;11237:11;1272:4;11187:12;:28;;;11179:55;;;;:::i;:::-;:69;;;;:::i;:::-;:88;;;;:::i;:::-;11159:108;;11314:9;11278:12;:25;;;:46;;;;;;;:::i;:::-;;;;;;;;11364:9;11334:6;:19;;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;11429:15:26;11385:41;;;;:59;;;;-1:-1:-1;;;10910:541:26:o;11457:219::-;11538:4;11555:16;11573:17;11595:33;11615:12;11595:19;:33::i;:::-;-1:-1:-1;11646:23:26;;;11457:219;-1:-1:-1;;;;11457:219:26:o;9807:740::-;-1:-1:-1;;;;;9923:25:26;;9887:33;9923:25;;;:13;:25;;;;;;;9963:27;;;;9923:25;;9963:32;9959:582;;10015:27;;;;:32;:65;;;;;10079:1;10051:12;:25;;;:29;10015:65;10011:520;;;10131:25;;;;;10100:20;10176:29;;;;10231:22;;;-1:-1:-1;10231:22:26;;;;;;;;10264:18;;;;10224:73;;-1:-1:-1;;;10224:73:26;;-1:-1:-1;;;;;10264:18:26;;;10224:73;;;16291:51:54;16358:18;;;16351:34;;;10131:25:26;;10231:22;;10224:39;;16264:18:54;;10224:73:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10011:520::-;10443:25;;;;10406:19;;;;-1:-1:-1;;;;;10406:19:26;10391:35;;;;:14;:35;;;;;:48;;:77;;:48;;:35;:77;;10443:25;;10391:77;:::i;:::-;;;;-1:-1:-1;;10515:1:26;10487:25;;;:29;10011:520;9877:670;9807:740;;:::o;1744:521:47:-;1806:7;747:334;;;;;;;:::i;:::-;;;;;;;;;;;;;1345:29;;;;;;1924:17;:5;:10;;;:15;:17::i;:::-;1959:5;:16;;;1993:5;:12;;;2023:5;:23;;;2064:5;:17;;;2099:5;:21;;;2138:5;:18;;;2174:5;:22;;;2214:5;:20;;;1855:393;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1832:426;;;;;;1825:433;;1744:521;;;:::o;549:297:51:-;656:18;;:25;-1:-1:-1;;;;;631:51:51;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:51;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:51;;;;;;;;;;;11682:1015:26;11792:16;11931:10;;11971:15;;11931:56;;-1:-1:-1;;;11931:56:26;;;;;1186:25:54;;;;11792:16:26;;;;;;-1:-1:-1;;;;;11931:10:26;;:39;;1159:18:54;;11931:56:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11998:15;12072:10;;12116:19;;;;;-1:-1:-1;;;;;12101:35:26;;;;;:14;:35;;;;;;;;:42;12072:72;;-1:-1:-1;;;12072:72:26;;;;;1186:25:54;11861:126:26;;-1:-1:-1;11998:15:26;;;;;;12072:10;;;;;:28;;1159:18:54;;12072:72:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12051:93;;12204:195;12254:12;:25;;;12293:14;12321:10;1432:9;12204:36;:195::i;:::-;12155:244;;-1:-1:-1;12155:244:26;;-1:-1:-1;12155:244:26;;-1:-1:-1;12155:244:26;-1:-1:-1;12410:18:26;12431:67;12494:3;12449:42;12155:244;1353:4;12449:42;:::i;:::-;:48;;;;:::i;:::-;12431:17;:67::i;:::-;12410:88;-1:-1:-1;12410:88:26;12521:21;12534:8;12521:10;:21;:::i;:::-;:35;;;;:::i;:::-;12509:47;;12571:11;:54;;;;;326:3:34;12586:9:26;:39;12571:54;12567:124;;;326:3:34;12641:39:26;;12567:124;11851:846;;;;;11682:1015;;;;;:::o;539:189:48:-;599:7;426:15;;;;;;;;;;;;;;;;;416:26;;;;;;;668:11;;681;;;;694:10;;;;;706:13;;;;;635:85;;;;;36510:25:54;;;;-1:-1:-1;;;;;36609:15:54;;;36589:18;;;36582:43;;;;36661:15;;;;36641:18;;;36634:43;36693:18;;;36686:34;36736:19;;;36729:35;36482:19;;635:85:48;36251:519:54;3743:628:40;3928:15;3945:17;3964;3983:16;4023:55;4041:9;4052:14;4068:9;4023:17;:55::i;:::-;4011:67;;;;:::i;:::-;;;4103:41;4118:9;4129:14;4103;:41::i;:::-;4089:55;;;;:::i;:::-;;;4168:51;4193:9;4204:14;4168:24;:51::i;:::-;4155:64;;;;:::i;:::-;;;4244:11;:49;;;;4259:34;4278:14;4259:18;:34::i;:::-;4230:63;-1:-1:-1;4304:24:40;4316:12;4304:24;;:::i;:::-;;-1:-1:-1;4338:26:40;4352:12;4338:26;;:::i;:::-;;;3743:628;;;;;;;;;:::o;34781:297:2:-;34837:6;-1:-1:-1;;;;;34962:5:2;:34;;34954:87;;;;-1:-1:-1;;;34954:87:2;;37107:2:54;34954:87:2;;;37089:21:54;37146:2;37126:18;;;37119:30;37185:34;37165:18;;;37158:62;-1:-1:-1;;;37236:18:54;;;37229:38;37284:19;;34954:87:2;36905:404:54;34954:87:2;-1:-1:-1;35065:5:2;34781:297::o;6633:1191:40:-;-1:-1:-1;;;;;6786:15:40;578:3;6876:23;6889:10;6876;:23;:::i;:::-;:40;;;;:::i;:::-;6855:61;-1:-1:-1;6926:18:40;6977:10;6947:27;578:3;6947:10;:27;:::i;:::-;:40;;;;:::i;:::-;6926:61;;7012:8;7023:43;7038:10;7050:15;7023:14;:43::i;:::-;7012:54;;7088:8;7084:1;:12;7080:63;;;7127:1;7116:12;;7080:63;6998:155;7177:8;7188:43;7203:10;7215:15;7188:14;:43::i;:::-;7177:54;;7253:8;7249:1;:12;7245:63;;;7292:1;7281:12;;7245:63;7163:155;7361:1;7332:15;:26;;;:30;:70;;;;;7401:1;7366:15;:32;;;:36;7332:70;7328:490;;;7418:20;7522:15;:32;;;-1:-1:-1;;;7467:15:40;:26;;;7466:27;;;:::i;:::-;7458:52;;;;:::i;:::-;7457:98;;;;:::i;:::-;7418:137;;7587:12;7574:10;:25;:54;;;;;7618:10;7603:12;:25;7574:54;7570:238;;;7648:8;7659:45;7674:12;7688:15;7659:14;:45::i;:::-;7648:56;;7731:8;7727:1;:12;7723:71;;;7774:1;7763:12;;7723:71;7630:178;7570:238;7404:414;7328:490;6807:1017;;6633:1191;;;;;:::o;8064:433::-;8170:6;;582:2:34;8205:23:40;8218:10;;8205:23;:::i;:::-;8462:28;;8204:49;;;-1:-1:-1;;;;8400:21:40;:10;:19;:21::i;:::-;8371:15;:26;;;:50;;;;:::i;:::-;8366:56;;:1;:56;:::i;:::-;:80;;;;:::i;:::-;-1:-1:-1;;;8308:16:40;:5;:14;:16::i;:::-;8273:15;:32;;;:51;;;;:::i;:::-;8272:77;;;;:::i;:::-;8271:176;;;;:::i;:::-;:219;;;;:::i;:::-;8264:226;8064:433;-1:-1:-1;;;;8064:433:40:o;8503:372::-;8689:25;;;;8642:7;;8729:18;;;8725:57;;;8770:1;8763:8;;;;;8725:57;582:2:34;8832:10:40;8813:15;8814:14;8813:15;:::i;:::-;8805:37;;;;:::i;:::-;8800:43;;:1;:43;:::i;:::-;:67;;;8503:372;-1:-1:-1;;;;8503:372:40:o;6160:192::-;6250:4;6273:15;:26;;;6303:1;6273:31;;:72;;;-1:-1:-1;;6308:32:40;;;:37;;;6160:192::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:54:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:54;;14:180;-1:-1:-1;14:180:54:o;1222:127::-;1283:10;1278:3;1274:20;1271:1;1264:31;1314:4;1311:1;1304:15;1338:4;1335:1;1328:15;1354:253;1426:2;1420:9;1468:4;1456:17;;-1:-1:-1;;;;;1488:34:54;;1524:22;;;1485:62;1482:88;;;1550:18;;:::i;:::-;1586:2;1579:22;1354:253;:::o;1612:::-;1684:2;1678:9;1726:4;1714:17;;-1:-1:-1;;;;;1746:34:54;;1782:22;;;1743:62;1740:88;;;1808:18;;:::i;1870:253::-;1942:2;1936:9;1984:4;1972:17;;-1:-1:-1;;;;;2004:34:54;;2040:22;;;2001:62;1998:88;;;2066:18;;:::i;2128:257::-;2200:4;2194:11;;;2232:17;;-1:-1:-1;;;;;2264:34:54;;2300:22;;;2261:62;2258:88;;;2326:18;;:::i;2390:251::-;2462:2;2456:9;2504:2;2492:15;;-1:-1:-1;;;;;2522:34:54;;2558:22;;;2519:62;2516:88;;;2584:18;;:::i;2646:255::-;2718:2;2712:9;2760:6;2748:19;;-1:-1:-1;;;;;2782:34:54;;2818:22;;;2779:62;2776:88;;;2844:18;;:::i;2906:253::-;2978:2;2972:9;3020:4;3008:17;;-1:-1:-1;;;;;3040:34:54;;3076:22;;;3037:62;3034:88;;;3102:18;;:::i;3164:255::-;3236:2;3230:9;3278:6;3266:19;;-1:-1:-1;;;;;3300:34:54;;3336:22;;;3297:62;3294:88;;;3362:18;;:::i;3424:255::-;3496:2;3490:9;3538:6;3526:19;;-1:-1:-1;;;;;3560:34:54;;3596:22;;;3557:62;3554:88;;;3622:18;;:::i;3684:255::-;3756:2;3750:9;3798:6;3786:19;;-1:-1:-1;;;;;3820:34:54;;3856:22;;;3817:62;3814:88;;;3882:18;;:::i;3944:275::-;4015:2;4009:9;4080:2;4061:13;;-1:-1:-1;;4057:27:54;4045:40;;-1:-1:-1;;;;;4100:34:54;;4136:22;;;4097:62;4094:88;;;4162:18;;:::i;:::-;4198:2;4191:22;3944:275;;-1:-1:-1;3944:275:54:o;4224:186::-;4272:4;-1:-1:-1;;;;;4297:6:54;4294:30;4291:56;;;4327:18;;:::i;:::-;-1:-1:-1;4393:2:54;4372:15;-1:-1:-1;;4368:29:54;4399:4;4364:40;;4224:186::o;4415:462::-;4457:5;4510:3;4503:4;4495:6;4491:17;4487:27;4477:55;;4528:1;4525;4518:12;4477:55;4564:6;4551:20;4595:48;4611:31;4639:2;4611:31;:::i;:::-;4595:48;:::i;:::-;4668:2;4659:7;4652:19;4714:3;4707:4;4702:2;4694:6;4690:15;4686:26;4683:35;4680:55;;;4731:1;4728;4721:12;4680:55;4796:2;4789:4;4781:6;4777:17;4770:4;4761:7;4757:18;4744:55;4844:1;4819:16;;;4837:4;4815:27;4808:38;;;;4823:7;4415:462;-1:-1:-1;;;4415:462:54:o;4882:1106::-;4940:5;4979:9;4974:3;4970:19;5009:6;5005:2;5001:15;4998:35;;;5029:1;5026;5019:12;4998:35;5051:22;;:::i;:::-;5042:31;;5093:4;5089:2;5085:13;5082:33;;;5111:1;5108;5101:12;5082:33;;5139:22;;:::i;:::-;5199:9;5186:23;5177:7;5170:40;5272:2;5261:9;5257:18;5244:32;5239:2;5230:7;5226:16;5219:58;5339:2;5328:9;5324:18;5311:32;5306:2;5297:7;5293:16;5286:58;5406:2;5395:9;5391:18;5378:32;5373:2;5364:7;5360:16;5353:58;5474:3;5463:9;5459:19;5446:33;5440:3;5431:7;5427:17;5420:60;5543:3;5532:9;5528:19;5515:33;5509:3;5500:7;5496:17;5489:60;5572:7;5565:5;5558:22;;5640:4;5629:9;5625:20;5612:34;5607:2;5600:5;5596:14;5589:58;5707:4;5696:9;5692:20;5679:34;5674:2;5667:5;5663:14;5656:58;5774:3;5763:9;5759:19;5746:33;5741:2;5734:5;5730:14;5723:57;5841:3;5830:9;5826:19;5813:33;5807:3;5800:5;5796:15;5789:58;5908:3;5897:9;5893:19;5880:33;5874:3;5867:5;5863:15;5856:58;5976:3;5965:9;5961:19;5948:33;5941:4;5934:5;5930:16;5923:59;4882:1106;;;;:::o;5993:972::-;6121:6;6129;6182:3;6170:9;6161:7;6157:23;6153:33;6150:53;;;6199:1;6196;6189:12;6150:53;6239:9;6226:23;-1:-1:-1;;;;;6309:2:54;6301:6;6298:14;6295:34;;;6325:1;6322;6315:12;6295:34;6348:22;;;;6404:4;6386:16;;;6382:27;6379:47;;;6422:1;6419;6412:12;6379:47;6448:22;;:::i;:::-;6506:2;6493:16;6486:5;6479:31;6563:2;6559;6555:11;6542:25;6537:2;6530:5;6526:14;6519:49;6621:2;6617;6613:11;6600:25;6595:2;6588:5;6584:14;6577:49;6679:2;6675;6671:11;6658:25;6653:2;6646:5;6642:14;6635:49;6730:3;6726:2;6722:12;6709:26;6760:2;6750:8;6747:16;6744:36;;;6776:1;6773;6766:12;6744:36;6813:44;6849:7;6838:8;6834:2;6830:17;6813:44;:::i;:::-;6807:3;6800:5;6796:15;6789:69;;6877:5;6867:15;;;;;6901:58;6951:7;6946:2;6935:9;6931:18;6901:58;:::i;:::-;6891:68;;5993:972;;;;;:::o;6970:131::-;-1:-1:-1;;;;;7045:31:54;;7035:42;;7025:70;;7091:1;7088;7081:12;7106:489;7167:5;7215:4;7203:9;7198:3;7194:19;7190:30;7187:50;;;7233:1;7230;7223:12;7187:50;7255:22;;:::i;:::-;7246:31;;7314:9;7301:23;7333:33;7358:7;7333:33;:::i;:::-;7375:22;;7448:2;7433:18;;7420:32;-1:-1:-1;;;;;7464:30:54;;7461:50;;;7507:1;7504;7497:12;7461:50;7543:45;7584:3;7575:6;7564:9;7560:22;7543:45;:::i;:::-;7538:2;7531:5;7527:14;7520:69;;7106:489;;;;:::o;7600:1021::-;7731:6;7739;7792:2;7780:9;7771:7;7767:23;7763:32;7760:52;;;7808:1;7805;7798:12;7760:52;7848:9;7835:23;-1:-1:-1;;;;;7918:2:54;7910:6;7907:14;7904:34;;;7934:1;7931;7924:12;7904:34;7957:22;;;;8013:2;7995:16;;;7991:25;7988:45;;;8029:1;8026;8019:12;7988:45;8055:22;;:::i;:::-;8115:2;8102:16;8143:2;8133:8;8130:16;8127:36;;;8159:1;8156;8149:12;8127:36;8186:44;8222:7;8211:8;8207:2;8203:17;8186:44;:::i;:::-;8179:5;8172:59;;8277:2;8273;8269:11;8256:25;8306:2;8296:8;8293:16;8290:36;;;8322:1;8319;8312:12;8290:36;8358:44;8394:7;8383:8;8379:2;8375:17;8358:44;:::i;:::-;8353:2;8346:5;8342:14;8335:68;;8422:5;8412:15;;;8480:2;8469:9;8465:18;8452:32;8436:48;;8509:2;8499:8;8496:16;8493:36;;;8525:1;8522;8515:12;8493:36;;8548:67;8607:7;8596:8;8585:9;8581:24;8548:67;:::i;:::-;8538:77;;;7600:1021;;;;;:::o;8626:733::-;8707:5;8701:12;8740:2;8734:9;8729:3;8722:22;8790:4;8786:2;8782:13;8776:20;8769:4;8764:3;8760:14;8753:44;8843:4;8839:2;8835:13;8829:20;8822:4;8817:3;8813:14;8806:44;8896:4;8892:2;8888:13;8882:20;8875:4;8870:3;8866:14;8859:44;8949:4;8945:2;8941:13;8935:20;8928:4;8923:3;8919:14;8912:44;9002:4;8998:2;8994:13;8988:20;8981:4;8976:3;8972:14;8965:44;;9058:4;9051:5;9047:16;9041:23;9034:4;9029:3;9025:14;9018:47;9114:4;9107:5;9103:16;9097:23;9090:4;9085:3;9081:14;9074:47;9172:4;9165:5;9161:16;9155:23;9146:6;9141:3;9137:16;9130:49;9230:4;9223:5;9219:16;9213:23;9204:6;9199:3;9195:16;9188:49;9288:4;9281:5;9277:16;9271:23;9262:6;9257:3;9253:16;9246:49;9346:4;9339:5;9335:16;9329:23;9320:6;9315:3;9311:16;9304:49;8626:733;;:::o;9364:261::-;9558:3;9543:19;;9571:48;9547:9;9601:6;9571:48;:::i;9630:129::-;-1:-1:-1;;;;;9708:5:54;9704:30;9697:5;9694:41;9684:69;;9749:1;9746;9739:12;9764:493;9864:6;9872;9925:2;9913:9;9904:7;9900:23;9896:32;9893:52;;;9941:1;9938;9931:12;9893:52;9980:9;9967:23;9999:30;10023:5;9999:30;:::i;:::-;10048:5;-1:-1:-1;10104:2:54;10089:18;;10076:32;-1:-1:-1;;;;;10120:30:54;;10117:50;;;10163:1;10160;10153:12;10117:50;10186:65;10243:7;10234:6;10223:9;10219:22;10186:65;:::i;10262:247::-;10321:6;10374:2;10362:9;10353:7;10349:23;10345:32;10342:52;;;10390:1;10387;10380:12;10342:52;10429:9;10416:23;10448:31;10473:5;10448:31;:::i;:::-;10498:5;10262:247;-1:-1:-1;;;10262:247:54:o;11074:403::-;11174:6;11227:2;11215:9;11206:7;11202:23;11198:32;11195:52;;;11243:1;11240;11233:12;11195:52;11269:22;;:::i;:::-;11320:9;11314:16;11307:5;11300:31;11384:2;11373:9;11369:18;11363:25;11358:2;11351:5;11347:14;11340:49;11442:2;11431:9;11427:18;11421:25;11416:2;11409:5;11405:14;11398:49;11466:5;11456:15;;;11074:403;;;;:::o;11482:138::-;11561:13;;11583:31;11561:13;11583:31;:::i;:::-;11482:138;;;:::o;11625:164::-;11702:13;;11755:1;11744:20;;;11734:31;;11724:59;;11779:1;11776;11769:12;11794:136;11872:13;;11894:30;11872:13;11894:30;:::i;11935:286::-;12007:5;12055:4;12043:9;12038:3;12034:19;12030:30;12027:50;;;12073:1;12070;12063:12;12027:50;12095:22;;:::i;:::-;12086:31;;12146:9;12140:16;12133:5;12126:31;12210:2;12199:9;12195:18;12189:25;12184:2;12177:5;12173:14;12166:49;11935:286;;;;:::o;12226:526::-;12302:5;12350:4;12338:9;12333:3;12329:19;12325:30;12322:50;;;12368:1;12365;12358:12;12322:50;12390:22;;:::i;:::-;12381:31;;12441:9;12435:16;12428:5;12421:31;12505:2;12494:9;12490:18;12484:25;12479:2;12472:5;12468:14;12461:49;12563:2;12552:9;12548:18;12542:25;12537:2;12530:5;12526:14;12519:49;12621:2;12610:9;12606:18;12600:25;12595:2;12588:5;12584:14;12577:49;12680:3;12669:9;12665:19;12659:26;12653:3;12646:5;12642:15;12635:51;12740:3;12729:9;12725:19;12719:26;12713:3;12706:5;12702:15;12695:51;12226:526;;;;:::o;12757:1649::-;12851:6;12895:9;12886:7;12882:23;12925:3;12921:2;12917:12;12914:32;;;12942:1;12939;12932:12;12914:32;12968:22;;:::i;:::-;13019:9;13013:16;13006:5;12999:31;13075:2;13064:9;13060:18;13054:25;13088:33;13113:7;13088:33;:::i;:::-;13148:2;13137:14;;13130:31;13206:2;13191:18;;13185:25;13219:33;13185:25;13219:33;:::i;:::-;13279:2;13268:14;;13261:31;13337:2;13322:18;;13316:25;13350:33;13316:25;13350:33;:::i;:::-;13410:2;13399:14;;13392:31;13477:3;13462:19;;;13456:26;13439:15;;;13432:51;13518:6;-1:-1:-1;;13499:17:54;;13495:30;13492:50;;;13538:1;13535;13528:12;13492:50;13566:22;;:::i;:::-;13551:37;;13634:3;13623:9;13619:19;13613:26;13604:7;13597:43;13674:49;13717:4;13706:9;13702:20;13674:49;:::i;:::-;13669:2;13660:7;13656:16;13649:75;13758:48;13801:3;13790:9;13786:19;13758:48;:::i;:::-;13753:2;13744:7;13740:16;13733:74;13841:52;13885:6;13874:9;13870:22;13841:52;:::i;:::-;13836:2;13827:7;13823:16;13816:78;13929:73;13994:7;13988:3;13977:9;13973:19;13929:73;:::i;:::-;13923:3;13914:7;13910:17;13903:100;14038:77;14107:7;14101:3;14090:9;14086:19;14038:77;:::i;:::-;14032:3;14023:7;14019:17;14012:104;14152:73;14217:7;14211:3;14200:9;14196:19;14152:73;:::i;:::-;14145:4;14136:7;14132:18;14125:101;14261:73;14326:7;14320:3;14309:9;14305:19;14261:73;:::i;:::-;14255:3;14242:17;;14235:100;14362:3;14351:15;;14344:32;;;;14355:5;12757:1649;-1:-1:-1;;;12757:1649:54:o;14411:127::-;14472:10;14467:3;14463:20;14460:1;14453:31;14503:4;14500:1;14493:15;14527:4;14524:1;14517:15;14543:136;14578:3;-1:-1:-1;;;14599:22:54;;14596:48;;14624:18;;:::i;:::-;-1:-1:-1;14664:1:54;14660:13;;14543:136::o;14935:216::-;14999:9;;;15027:11;;;14974:3;15057:9;;15085:10;;15081:19;;15110:10;;15102:19;;15078:44;15075:70;;;15125:18;;:::i;15536:164::-;15612:13;;15661;;15654:21;15644:32;;15634:60;;15690:1;15687;15680:12;15705:202;15772:6;15825:2;15813:9;15804:7;15800:23;15796:32;15793:52;;;15841:1;15838;15831:12;15793:52;15864:37;15891:9;15864:37;:::i;15912:200::-;15978:9;;;15951:4;16006:9;;16034:10;;16046:12;;;16030:29;16069:12;;;16061:21;;16027:56;16024:82;;;16086:18;;:::i;:::-;16024:82;15912:200;;;;:::o;16396:428::-;16497:6;16550:2;16538:9;16529:7;16525:23;16521:32;16518:52;;;16566:1;16563;16556:12;16518:52;16592:22;;:::i;:::-;16644:9;16638:16;16685:1;16676:7;16673:14;16663:42;;16701:1;16698;16691:12;16663:42;16714:22;;16789:2;16774:18;;;16768:25;16752:14;;;16745:49;;;;-1:-1:-1;16721:5:54;16396:428;-1:-1:-1;16396:428:54:o;16829:543::-;16896:5;16944:4;16932:9;16927:3;16923:19;16919:30;16916:50;;;16962:1;16959;16952:12;16916:50;16984:22;;:::i;:::-;16975:31;;17036:9;17030:16;17055:33;17080:7;17055:33;:::i;:::-;17097:22;;17164:2;17149:18;;17143:25;17177:33;17143:25;17177:33;:::i;:::-;17242:7;17237:2;17230:5;17226:14;17219:31;;17303:2;17292:9;17288:18;17282:25;17277:2;17270:5;17266:14;17259:49;17361:2;17350:9;17346:18;17340:25;17335:2;17328:5;17324:14;17317:49;16829:543;;;;:::o;17377:250::-;17462:1;17472:113;17486:6;17483:1;17480:13;17472:113;;;17562:11;;;17556:18;17543:11;;;17536:39;17508:2;17501:10;17472:113;;;-1:-1:-1;;17619:1:54;17601:16;;17594:27;17377:250::o;17632:441::-;17685:5;17738:3;17731:4;17723:6;17719:17;17715:27;17705:55;;17756:1;17753;17746:12;17705:55;17785:6;17779:13;17816:48;17832:31;17860:2;17832:31;:::i;17816:48::-;17889:2;17880:7;17873:19;17935:3;17928:4;17923:2;17915:6;17911:15;17907:26;17904:35;17901:55;;;17952:1;17949;17942:12;17901:55;17965:77;18039:2;18032:4;18023:7;18019:18;18012:4;18004:6;18000:17;17965:77;:::i;18078:1183::-;18177:6;18230:2;18218:9;18209:7;18205:23;18201:32;18198:52;;;18246:1;18243;18236:12;18198:52;18279:9;18273:16;-1:-1:-1;;;;;18349:2:54;18341:6;18338:14;18335:34;;;18365:1;18362;18355:12;18335:34;18388:22;;;;18444:6;18426:16;;;18422:29;18419:49;;;18464:1;18461;18454:12;18419:49;18490:22;;:::i;:::-;18535:51;18578:7;18574:2;18535:51;:::i;:::-;18528:5;18521:66;18633:3;18629:2;18625:12;18619:19;18614:2;18607:5;18603:14;18596:43;18673:42;18710:3;18706:2;18702:12;18673:42;:::i;:::-;18666:4;18659:5;18655:16;18648:68;18750:43;18788:3;18784:2;18780:12;18750:43;:::i;:::-;18743:4;18736:5;18732:16;18725:69;18841:3;18837:2;18833:12;18827:19;18821:3;18814:5;18810:15;18803:44;18866:3;18916:2;18912;18908:11;18902:18;18896:3;18889:5;18885:15;18878:43;18968:6;18964:2;18960:15;18954:22;18948:3;18941:5;18937:15;18930:47;19010:43;19048:3;19044:2;19040:12;19010:43;:::i;:::-;19004:3;18997:5;18993:15;18986:68;19093:3;19089:2;19085:12;19079:19;19123:2;19113:8;19110:16;19107:36;;;19139:1;19136;19129:12;19107:36;19175:55;19222:7;19211:8;19207:2;19203:17;19175:55;:::i;:::-;19159:14;;;19152:79;;;;-1:-1:-1;19163:5:54;18078:1183;-1:-1:-1;;;;;18078:1183:54:o;19266:127::-;19327:10;19322:3;19318:20;19315:1;19308:31;19358:4;19355:1;19348:15;19382:4;19379:1;19372:15;19398:479;19616:13;;19594:2;19579:18;;;19655:1;19648:9;;19638:140;;19700:10;19695:3;19691:20;19688:1;19681:31;19735:4;19732:1;19725:15;19763:4;19760:1;19753:15;19638:140;19805:2;19794:9;19787:21;;19864:4;19856:6;19852:17;19846:24;19839:4;19828:9;19824:20;19817:54;19398:479;;;;:::o;19882:270::-;19923:3;19961:5;19955:12;19988:6;19983:3;19976:19;20004:76;20073:6;20066:4;20061:3;20057:14;20050:4;20043:5;20039:16;20004:76;:::i;:::-;20134:2;20113:15;-1:-1:-1;;20109:29:54;20100:39;;;;20141:4;20096:50;;19882:270;-1:-1:-1;;19882:270:54:o;20157:961::-;20440:2;20429:9;20422:21;20485:6;20479:13;20474:2;20463:9;20459:18;20452:41;20547:4;20539:6;20535:17;20529:24;20524:2;20513:9;20509:18;20502:52;20609:2;20601:6;20597:15;20591:22;20585:3;20574:9;20570:19;20563:51;20670:2;20662:6;20658:15;20652:22;20645:4;20634:9;20630:20;20623:52;20403:4;20722:3;20714:6;20710:16;20704:23;20764:4;20758:3;20747:9;20743:19;20736:33;20789:51;20835:3;20824:9;20820:19;20806:12;20789:51;:::i;:::-;20778:62;;20887:9;20882:3;20878:19;20871:4;20860:9;20856:20;20849:49;20955:1;20951;20946:3;20942:11;20938:19;20929:6;20923:13;20919:39;20914:3;20907:52;21008:4;21000:6;20996:17;20990:24;21046:2;21039:4;21034:3;21030:14;21023:26;21066:46;21108:2;21103:3;21099:12;21083:14;21066:46;:::i;:::-;21058:54;20157:961;-1:-1:-1;;;;;;20157:961:54:o;21123:1094::-;21223:6;21267:9;21258:7;21254:23;21297:3;21293:2;21289:12;21286:32;;;21314:1;21311;21304:12;21286:32;21340:22;;:::i;:::-;21382:4;21378:2;21374:13;21371:33;;;21400:1;21397;21390:12;21371:33;21428:22;;:::i;:::-;21413:37;;21481:9;21475:16;21466:7;21459:33;21547:2;21536:9;21532:18;21526:25;21521:2;21512:7;21508:16;21501:51;21607:2;21596:9;21592:18;21586:25;21581:2;21572:7;21568:16;21561:51;21667:2;21656:9;21652:18;21646:25;21641:2;21632:7;21628:16;21621:51;21728:3;21717:9;21713:19;21707:26;21701:3;21692:7;21688:17;21681:53;21790:3;21779:9;21775:19;21769:26;21763:3;21754:7;21750:17;21743:53;21819:7;21812:5;21805:22;21880:4;21869:9;21865:20;21859:27;21854:2;21847:5;21843:14;21836:51;21940:4;21929:9;21925:20;21919:27;21914:2;21907:5;21903:14;21896:51;22000:3;21989:9;21985:19;21979:26;21974:2;21967:5;21963:14;21956:50;22060:3;22049:9;22045:19;22039:26;22033:3;22026:5;22022:15;22015:51;22120:3;22109:9;22105:19;22099:26;22093:3;22086:5;22082:15;22075:51;22181:3;22170:9;22166:19;22160:26;22153:4;22146:5;22142:16;22135:52;22206:5;22196:15;;;;21123:1094;;;;:::o;23263:1216::-;23530:3;23542:21;;;23600:13;;22950:12;;-1:-1:-1;;;;;22946:21:54;;;23615:18;;;22934:34;;;;23021:4;23010:16;;;23004:23;23000:32;;22984:14;;;22977:56;23082:4;23071:16;;;23065:23;23049:14;;;23042:47;23138:4;23127:16;;;23121:23;23105:14;;;23098:47;23677:17;;;23671:24;23665:3;23650:19;;23643:53;23731:17;;23725:24;-1:-1:-1;;;;;23221:30:54;23805:3;23790:19;;23209:43;23847:17;;23841:24;265:31;;23924:3;23909:19;;253:44;23984:4;23972:17;;23966:24;23960:3;23945:19;;23938:53;24046:4;24034:17;;24028:24;24022:3;24007:19;;24000:53;24108:4;24096:17;;24090:24;24084:3;24069:19;;24062:53;24164:4;24152:17;;24146:24;265:31;24229:3;24214:19;;253:44;24283:6;24271:19;;24265:26;24328:6;24322:3;24307:19;;24300:35;-1:-1:-1;;24352:53:54;24400:3;24385:19;;24265:26;24352:53;:::i;:::-;24344:61;;;24414:59;24467:4;24456:9;24452:20;24444:6;24414:59;:::i;24820:397::-;24887:5;24935:4;24923:9;24918:3;24914:19;24910:30;24907:50;;;24953:1;24950;24943:12;24907:50;24975:22;;:::i;:::-;24966:31;;25026:9;25020:16;25013:5;25006:31;25090:2;25079:9;25075:18;25069:25;25064:2;25057:5;25053:14;25046:49;25148:2;25137:9;25133:18;25127:25;25122:2;25115:5;25111:14;25104:49;25206:2;25195:9;25191:18;25185:25;25180:2;25173:5;25169:14;25162:49;24820:397;;;;:::o;25222:1173::-;25295:5;25334:9;25329:3;25325:19;25364:6;25360:2;25356:15;25353:35;;;25384:1;25381;25374:12;25353:35;25406:22;;:::i;:::-;25397:31;;25458:9;25452:16;25477:33;25502:7;25477:33;:::i;:::-;25519:22;;25586:2;25571:18;;25565:25;25599:33;25565:25;25599:33;:::i;:::-;25659:2;25648:14;;25641:31;25706:4;-1:-1:-1;;25688:16:54;;25684:27;25681:47;;;25724:1;25721;25714:12;25681:47;;25752:22;;:::i;:::-;25820:2;25809:9;25805:18;25799:25;25790:7;25783:42;25880:2;25869:9;25865:18;25859:25;25854:2;25845:7;25841:16;25834:51;25940:3;25929:9;25925:19;25919:26;25914:2;25905:7;25901:16;25894:52;26001:3;25990:9;25986:19;25980:26;25975:2;25966:7;25962:16;25955:52;26063:4;26052:9;26048:20;26042:27;26036:3;26027:7;26023:17;26016:54;26126:3;26115:9;26111:19;26105:26;26099:3;26090:7;26086:17;26079:53;26164:7;26159:2;26152:5;26148:14;26141:31;;26204:64;26264:3;26258;26247:9;26243:19;26204:64;:::i;:::-;26199:2;26192:5;26188:14;26181:88;26323:3;26312:9;26308:19;26302:26;26296:3;26289:5;26285:15;26278:51;26383:3;26372:9;26368:19;26362:26;26356:3;26349:5;26345:15;26338:51;25222:1173;;;;:::o;26400:389::-;26473:5;26521:4;26509:9;26504:3;26500:19;26496:30;26493:50;;;26539:1;26536;26529:12;26493:50;26561:22;;:::i;:::-;26552:31;;26612:9;26606:16;26599:5;26592:31;26655:47;26698:2;26687:9;26683:18;26655:47;:::i;:::-;26650:2;26643:5;26639:14;26632:71;26735:47;26778:2;26767:9;26763:18;26735:47;:::i;:::-;26730:2;26723:5;26719:14;26712:71;26400:389;;;;:::o;26794:1515::-;26871:5;26919:6;26907:9;26902:3;26898:19;26894:32;26891:52;;;26939:1;26936;26929:12;26891:52;26961:22;;:::i;:::-;26952:31;;27006:40;27036:9;27006:40;:::i;:::-;26999:5;26992:55;27079:47;27122:2;27111:9;27107:18;27079:47;:::i;:::-;27074:2;27067:5;27063:14;27056:71;27159:47;27202:2;27191:9;27187:18;27159:47;:::i;:::-;27154:2;27147:5;27143:14;27136:71;27239:48;27283:2;27272:9;27268:18;27239:48;:::i;:::-;27234:2;27223:14;;27216:72;27342:3;27327:19;;;27321:26;27304:15;;;27297:51;27402:3;27387:19;;;27381:26;27364:15;;;27357:51;27462:3;27447:19;;;27441:26;27424:15;;;27417:51;27522:3;27507:19;;;27501:26;27484:15;;;27477:51;27547:3;27588:18;;;27582:25;27566:14;;;27559:49;27627:3;27668:18;;;27662:25;27646:14;;;27639:49;27707:3;27748:18;;;27742:25;27726:14;;;27719:49;27787:3;27828:18;;;27822:25;27806:14;;;27799:49;27867:3;27908:18;;;27902:25;27886:14;;;27879:49;27947:3;27982:68;28046:3;28026:18;;;27982:68;:::i;:::-;27966:14;;;27959:92;28070:3;28109:68;28173:3;28153:18;;;28109:68;:::i;:::-;28100:6;28089:18;;28082:96;28231:6;28216:22;;28210:29;28194:14;;;28187:53;28297:3;28282:19;;;28276:26;28267:6;28256:18;;28249:54;28093:5;26794:1515;-1:-1:-1;26794:1515:54:o;28314:160::-;28391:13;;28444:4;28433:16;;28423:27;;28413:55;;28464:1;28461;28454:12;28479:1211;28578:6;28631:4;28619:9;28610:7;28606:23;28602:34;28599:54;;;28649:1;28646;28639:12;28599:54;28675:22;;:::i;:::-;28726:9;28720:16;28713:5;28706:31;28769:49;28814:2;28803:9;28799:18;28769:49;:::i;:::-;28764:2;28757:5;28753:14;28746:73;28851:49;28896:2;28885:9;28881:18;28851:49;:::i;:::-;28846:2;28839:5;28835:14;28828:73;28933;28998:7;28993:2;28982:9;28978:18;28933:73;:::i;:::-;28928:2;28921:5;28917:14;28910:97;29041:74;29107:7;29101:3;29090:9;29086:19;29041:74;:::i;:::-;29034:4;29027:5;29023:16;29016:100;29150:74;29216:7;29210:3;29199:9;29195:19;29150:74;:::i;:::-;29143:4;29136:5;29132:16;29125:100;29259:79;29330:7;29323:4;29312:9;29308:20;29259:79;:::i;:::-;29252:4;29245:5;29241:16;29234:105;29373:51;29418:4;29407:9;29403:20;29373:51;:::i;:::-;29366:4;29359:5;29355:16;29348:77;29461:48;29503:4;29492:9;29488:20;29461:48;:::i;:::-;29452:6;29445:5;29441:18;29434:76;29546:49;29589:4;29578:9;29574:20;29546:49;:::i;:::-;29537:6;29526:18;;29519:77;29653:4;29638:20;;;;29632:27;29623:6;29612:18;;29605:55;-1:-1:-1;29530:5:54;28479:1211;-1:-1:-1;28479:1211:54:o;30055:1654::-;-1:-1:-1;;;31166:26:54;;-1:-1:-1;;;31217:2:54;31208:12;;31201:39;-1:-1:-1;;;31265:2:54;31256:12;;31249:43;-1:-1:-1;;;31317:2:54;31308:12;;31301:38;31369:28;31364:2;31355:12;;31348:50;-1:-1:-1;;;31423:2:54;31414:12;;31407:43;31481:25;31475:3;31466:13;;31459:48;-1:-1:-1;;;31532:3:54;31523:13;;31516:45;31592:26;31586:3;31577:13;;31570:49;-1:-1:-1;;;31644:3:54;31635:13;;31628:46;31699:3;31690:13;;30055:1654::o;31714:492::-;31889:3;31927:6;31921:13;31943:66;32002:6;31997:3;31990:4;31982:6;31978:17;31943:66;:::i;:::-;32072:13;;32031:16;;;;32094:70;32072:13;32031:16;32141:4;32129:17;;32094:70;:::i;:::-;32180:20;;31714:492;-1:-1:-1;;;;31714:492:54:o;32211:656::-;-1:-1:-1;;;32514:3:54;32507:34;32489:3;32570:6;32564:13;32586:75;32654:6;32649:2;32644:3;32640:12;32633:4;32625:6;32621:17;32586:75;:::i;:::-;32721:13;;32680:16;;;;32743:76;32721:13;32805:2;32797:11;;32790:4;32778:17;;32743:76;:::i;:::-;32839:17;32858:2;32835:26;;32211:656;-1:-1:-1;;;;32211:656:54:o;33060:1061::-;33486:4;33515:3;33527:60;33577:9;33568:6;33562:13;32958:12;;-1:-1:-1;;;;;32954:38:54;32942:51;;33042:4;33031:16;;;33025:23;33009:14;;33002:47;32872:183;33527:60;33643:4;33635:6;33631:17;33625:24;33618:4;33607:9;33603:20;33596:54;33706:4;33698:6;33694:17;33688:24;33681:4;33670:9;33666:20;33659:54;33722:63;33780:3;33769:9;33765:19;33757:6;32958:12;;-1:-1:-1;;;;;32954:38:54;32942:51;;33042:4;33031:16;;;33025:23;33009:14;;33002:47;32872:183;33722:63;-1:-1:-1;;;;;33822:32:54;;33816:3;33801:19;;33794:61;33886:3;33871:19;;33864:35;;;33930:3;33915:19;;33908:31;;;33962:44;33987:18;;;33979:6;33962:44;:::i;:::-;33948:58;;34055:9;34047:6;34043:22;34037:3;34026:9;34022:19;34015:51;34083:32;34108:6;34100;34083:32;:::i;:::-;34075:40;33060:1061;-1:-1:-1;;;;;;;;;33060:1061:54:o;34126:128::-;34193:9;;;34214:11;;;34211:37;;;34228:18;;:::i;34259:168::-;34332:9;;;34363;;34380:15;;;34374:22;;34360:37;34350:71;;34401:18;;:::i;34432:127::-;34493:10;34488:3;34484:20;34481:1;34474:31;34524:4;34521:1;34514:15;34548:4;34545:1;34538:15;34564:120;34604:1;34630;34620:35;;34635:18;;:::i;:::-;-1:-1:-1;34669:9:54;;34564:120::o;34689:957::-;35043:4;35072:3;35102:6;35091:9;35084:25;35145:6;35140:2;35129:9;35125:18;35118:34;35188:6;35183:2;35172:9;35168:18;35161:34;-1:-1:-1;;;;;35235:6:54;35231:31;35226:2;35215:9;35211:18;35204:59;35299:1;35295;35290:3;35286:11;35282:19;35350:2;35342:6;35338:15;35332:3;35321:9;35317:19;35310:44;35391:6;35385:3;35374:9;35370:19;35363:35;35435:6;35429:3;35418:9;35414:19;35407:35;35479:6;35473:3;35462:9;35458:19;35451:35;35535:2;35527:6;35523:15;35517:3;35506:9;35502:19;35495:44;;35576:2;35570:3;35559:9;35555:19;35548:31;35596:44;35636:2;35625:9;35621:18;35613:6;35596:44;:::i;:::-;35588:52;34689:957;-1:-1:-1;;;;;;;;;;;;;34689:957:54:o;36062:184::-;36132:6;36185:2;36173:9;36164:7;36160:23;36156:32;36153:52;;;36201:1;36198;36191:12;36153:52;-1:-1:-1;36224:16:54;;36062:184;-1:-1:-1;36062:184:54:o;36775:125::-;36840:9;;;36861:10;;;36858:36;;;36874:18;;:::i;37314:237::-;37386:9;;;37353:7;37411:9;;-1:-1:-1;;;37422:18:54;;37407:34;37404:60;;;37444:18;;:::i;:::-;37517:1;37508:7;37503:16;37500:1;37497:23;37493:1;37486:9;37483:38;37473:72;;37525:18;;:::i;37556:193::-;37595:1;37621;37611:35;;37626:18;;:::i;:::-;-1:-1:-1;;;37662:18:54;;-1:-1:-1;;37682:13:54;;37658:38;37655:64;;;37699:18;;:::i;:::-;-1:-1:-1;37733:10:54;;37556:193::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BORROW_FEE_RATE()": "6eec1330",
    "confirmLiquidation(uint256)": "37ec56ea",
    "depositMargin(uint256)": "19bd1776",
    "depositToInsurancePool(uint256)": "3cb4560c",
    "execLiquidationCall(uint64,(address,bytes))": "c2a063e9",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "insurancePools(address)": "e2a2796b",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "updateQuoteTokenMap(uint256)": "e1c951ca",
    "userPositions(uint256)": "1e7f1370",
    "withdrawFromInsurancePool(uint256)": "649f3ce5",
    "withdrawMargin(uint256)": "0cea7534"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BORROW_FEE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"confirmLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"depositToInsurancePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"positionId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"execLiquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"insurancePools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fillerAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fillercumulativeFundingRates\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateGrobalGrowth\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFundingRateCalculationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"updateQuoteTokenMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"positionAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"assuranceMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastBorrowFeeCalculationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromInsurancePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marginAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint64,(address,bytes))\":{\"params\":{\"positionId\":\"The id of position\",\"settlementData\":\"The route of settlement created by liquidator\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"details\":\"Fillers call this function\",\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint64,(address,bytes))\":{\"notice\":\"Executes liquidation call for the position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and executes trade\"}},\"notice\":\"Provides leveraged perps to retail traders\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LeveragedGammaMarket.sol\":\"LeveragedGammaMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/LeveragedGammaMarket.sol\":{\"keccak256\":\"0xd56b3c9f21528069ea6ac372846c4b8de6be394a9ee07b2f77187460e1918944\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6b1ade051b47dad3610e4ff1c93c80d86f09802ecccec4ca560f32810e7bd262\",\"dweb:/ipfs/Qma5TuCqxw5rDvq4Ad2w2CY2f57MbdogdEmZLfZfGa2pU9\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2\",\"dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x7d9ef756ee70973ca84a61c4e2329b9a74d7ca15aa4043150cb2a15ef950d056\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://38637e93f422e7c8793a10b19bbb30f1104b8fd4c5a961c7d872c24b6ba5b9b8\",\"dweb:/ipfs/QmWtcfYuYfYkkmjwYuNBzT92ZVXdzaMEcDHNcmkCa8kNoq\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d\",\"dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0\",\"dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2\",\"dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/GammaOrder.sol\":{\"keccak256\":\"0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa\",\"dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180\",\"dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/PerpOrder.sol\":{\"keccak256\":\"0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e\",\"dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotFiller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BORROW_FEE_RATE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "confirmLiquidation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "marginAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositMargin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "depositAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToInsurancePool"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "positionId",
              "type": "uint64"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "insurancePools",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "fillerAddress",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "fillercumulativeFundingRates",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "fundingRateGrobalGrowth",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "lastFundingRateCalculationTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuoteTokenMap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "positionAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "positionAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "assuranceMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "lastBorrowFeeCalculationTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromInsurancePool"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "marginAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMargin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint64,(address,bytes))": {
            "params": {
              "positionId": "The id of position",
              "settlementData": "The route of settlement created by liquidator"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "details": "Fillers call this function",
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint64,(address,bytes))": {
            "notice": "Executes liquidation call for the position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and executes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/LeveragedGammaMarket.sol": "LeveragedGammaMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/LeveragedGammaMarket.sol": {
        "keccak256": "0xd56b3c9f21528069ea6ac372846c4b8de6be394a9ee07b2f77187460e1918944",
        "urls": [
          "bzz-raw://6b1ade051b47dad3610e4ff1c93c80d86f09802ecccec4ca560f32810e7bd262",
          "dweb:/ipfs/Qma5TuCqxw5rDvq4Ad2w2CY2f57MbdogdEmZLfZfGa2pU9"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3",
        "urls": [
          "bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2",
          "dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x7d9ef756ee70973ca84a61c4e2329b9a74d7ca15aa4043150cb2a15ef950d056",
        "urls": [
          "bzz-raw://38637e93f422e7c8793a10b19bbb30f1104b8fd4c5a961c7d872c24b6ba5b9b8",
          "dweb:/ipfs/QmWtcfYuYfYkkmjwYuNBzT92ZVXdzaMEcDHNcmkCa8kNoq"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627",
        "urls": [
          "bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d",
          "dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648",
        "urls": [
          "bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0",
          "dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897",
        "urls": [
          "bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2",
          "dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/GammaOrder.sol": {
        "keccak256": "0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f",
        "urls": [
          "bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa",
          "dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946",
        "urls": [
          "bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180",
          "dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/PerpOrder.sol": {
        "keccak256": "0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09",
        "urls": [
          "bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e",
          "dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/LeveragedGammaMarket.sol",
    "id": 14000,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        21217
      ],
      "BaseHookCallback": [
        14185
      ],
      "Constants": [
        14480
      ],
      "DataType": [
        14503
      ],
      "FixedPoint96": [
        11424
      ],
      "FixedPointMathLib": [
        10203
      ],
      "FullMath": [
        11601
      ],
      "GammaOrder": [
        20736
      ],
      "GammaOrderLib": [
        20860
      ],
      "IERC20": [
        8141
      ],
      "IFillerMarket": [
        14195
      ],
      "IHooks": [
        14208
      ],
      "IOrderValidator": [
        14226
      ],
      "IPermit2": [
        9908
      ],
      "IPerpOrderValidator": [
        14236
      ],
      "IPredyPool": [
        14415
      ],
      "ISettlement": [
        14430
      ],
      "ISignatureTransfer": [
        10044
      ],
      "ISwapRouter": [
        12263
      ],
      "IUniswapV3Pool": [
        10952
      ],
      "IUniswapV3PoolActions": [
        11062
      ],
      "IUniswapV3PoolDerivedState": [
        11093
      ],
      "IUniswapV3PoolErrors": [
        11121
      ],
      "IUniswapV3PoolEvents": [
        11240
      ],
      "IUniswapV3PoolImmutables": [
        11280
      ],
      "IUniswapV3PoolOracle": [
        21272
      ],
      "IUniswapV3PoolOwnerActions": [
        11306
      ],
      "IUniswapV3PoolState": [
        11414
      ],
      "InterestRateModel": [
        14578
      ],
      "LPMath": [
        20563
      ],
      "LeveragedGammaMarket": [
        13999
      ],
      "LiquidityAmounts": [
        12607
      ],
      "Math": [
        20704
      ],
      "OrderInfo": [
        20871
      ],
      "OrderInfoLib": [
        20906
      ],
      "PairLib": [
        14601
      ],
      "Permit2Lib": [
        20962
      ],
      "Perp": [
        17063
      ],
      "PerpFee": [
        17565
      ],
      "PerpOrder": [
        20992
      ],
      "PositionCalculator": [
        18286
      ],
      "PositionKey": [
        12632
      ],
      "PremiumCurveModel": [
        18328
      ],
      "PriceFeed": [
        14088
      ],
      "Reallocation": [
        18871
      ],
      "ResolvedOrder": [
        21129
      ],
      "ResolvedOrderLib": [
        21171
      ],
      "SafeCast": [
        9682
      ],
      "SafeCastLib": [
        10920
      ],
      "ScaledAsset": [
        19600
      ],
      "TickMath": [
        12147
      ],
      "TransferHelper": [
        12803
      ],
      "UniHelper": [
        20119
      ],
      "UnsafeMath": [
        12163
      ],
      "console": [
        8063
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13422:26",
    "nodes": [
      {
        "id": 12805,
        "nodeType": "PragmaDirective",
        "src": "39:24:26",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 12806,
        "nodeType": "ImportDirective",
        "src": "65:66:26",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 10953,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12808,
        "nodeType": "ImportDirective",
        "src": "132:92:26",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 12804,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12807,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12803,
              "src": "140:14:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12810,
        "nodeType": "ImportDirective",
        "src": "225:87:26",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 12264,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12809,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12263,
              "src": "233:11:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12812,
        "nodeType": "ImportDirective",
        "src": "313:70:26",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 9909,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12811,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9908,
              "src": "321:8:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12813,
        "nodeType": "ImportDirective",
        "src": "384:56:26",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 8142,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12814,
        "nodeType": "ImportDirective",
        "src": "441:37:26",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "./interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14416,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12815,
        "nodeType": "ImportDirective",
        "src": "479:40:26",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "./interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14196,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12816,
        "nodeType": "ImportDirective",
        "src": "520:42:26",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "./interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14237,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12817,
        "nodeType": "ImportDirective",
        "src": "563:37:26",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "./base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14186,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12818,
        "nodeType": "ImportDirective",
        "src": "601:43:26",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "./libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 20963,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12819,
        "nodeType": "ImportDirective",
        "src": "645:46:26",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "./libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 21172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12820,
        "nodeType": "ImportDirective",
        "src": "692:43:26",
        "nodes": [],
        "absolutePath": "src/libraries/orders/GammaOrder.sol",
        "file": "./libraries/orders/GammaOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 20861,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12821,
        "nodeType": "ImportDirective",
        "src": "736:35:26",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "./libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 20705,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12822,
        "nodeType": "ImportDirective",
        "src": "772:30:26",
        "nodes": [],
        "absolutePath": "src/libraries/Perp.sol",
        "file": "./libraries/Perp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 17064,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12823,
        "nodeType": "ImportDirective",
        "src": "803:35:26",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "./libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14481,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12824,
        "nodeType": "ImportDirective",
        "src": "839:34:26",
        "nodes": [],
        "absolutePath": "src/libraries/DataType.sol",
        "file": "./libraries/DataType.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 14000,
        "sourceUnit": 14504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 13999,
        "nodeType": "ContractDefinition",
        "src": "937:12523:26",
        "nodes": [
          {
            "id": 12833,
            "nodeType": "UsingForDirective",
            "src": "1008:41:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12830,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "1014:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21171,
              "src": "1014:16:26"
            },
            "typeName": {
              "id": 12832,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12831,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1035:13:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21129,
                "src": "1035:13:26"
              },
              "referencedDeclaration": 21129,
              "src": "1035:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$21129_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 12837,
            "nodeType": "UsingForDirective",
            "src": "1054:35:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12834,
              "name": "GammaOrderLib",
              "nameLocations": [
                "1060:13:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20860,
              "src": "1060:13:26"
            },
            "typeName": {
              "id": 12836,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12835,
                "name": "GammaOrder",
                "nameLocations": [
                  "1078:10:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20736,
                "src": "1078:10:26"
              },
              "referencedDeclaration": 20736,
              "src": "1078:10:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GammaOrder_$20736_storage_ptr",
                "typeString": "struct GammaOrder"
              }
            }
          },
          {
            "id": 12841,
            "nodeType": "UsingForDirective",
            "src": "1094:35:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12838,
              "name": "Permit2Lib",
              "nameLocations": [
                "1100:10:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20962,
              "src": "1100:10:26"
            },
            "typeName": {
              "id": 12840,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12839,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1115:13:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21129,
                "src": "1115:13:26"
              },
              "referencedDeclaration": 21129,
              "src": "1115:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$21129_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 12844,
            "nodeType": "UsingForDirective",
            "src": "1134:23:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12842,
              "name": "Math",
              "nameLocations": [
                "1140:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20704,
              "src": "1140:4:26"
            },
            "typeName": {
              "id": 12843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1149:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 12847,
            "nodeType": "UsingForDirective",
            "src": "1162:22:26",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 12845,
              "name": "Math",
              "nameLocations": [
                "1168:4:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20704,
              "src": "1168:4:26"
            },
            "typeName": {
              "id": 12846,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1177:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "id": 12850,
            "nodeType": "VariableDeclaration",
            "src": "1190:17:26",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1199:8:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$9908",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 12849,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12848,
                "name": "IPermit2",
                "nameLocations": [
                  "1190:8:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9908,
                "src": "1190:8:26"
              },
              "referencedDeclaration": 9908,
              "src": "1190:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$9908",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12853,
            "nodeType": "VariableDeclaration",
            "src": "1230:46:26",
            "nodes": [],
            "constant": true,
            "functionSelector": "6eec1330",
            "mutability": "constant",
            "name": "BORROW_FEE_RATE",
            "nameLocation": "1254:15:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12851,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1230:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31323030",
              "id": 12852,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1272:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1200_by_1",
                "typeString": "int_const 1200"
              },
              "value": "1200"
            },
            "visibility": "public"
          },
          {
            "id": 12856,
            "nodeType": "VariableDeclaration",
            "src": "1294:63:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_MARGIN_RATIO_WITH_DEBT_SQUART",
            "nameLocation": "1320:30:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12854,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1294:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 12855,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1353:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "id": 12859,
            "nodeType": "VariableDeclaration",
            "src": "1392:49:26",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_RISK_RATIO",
            "nameLocation": "1418:11:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12857,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1392:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030343938373536",
              "id": 12858,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1432:9:26",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100498756_by_1",
                "typeString": "int_const 100498756"
              },
              "value": "100498756"
            },
            "visibility": "internal"
          },
          {
            "id": 12872,
            "nodeType": "StructDefinition",
            "src": "1448:245:26",
            "nodes": [],
            "canonicalName": "LeveragedGammaMarket.InsurancePool",
            "members": [
              {
                "constant": false,
                "id": 12861,
                "mutability": "mutable",
                "name": "pairId",
                "nameLocation": "1487:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1479:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12860,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1479:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12863,
                "mutability": "mutable",
                "name": "fillerAddress",
                "nameLocation": "1511:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1503:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12862,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1503:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12865,
                "mutability": "mutable",
                "name": "marginAmount",
                "nameLocation": "1541:12:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1534:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12864,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1534:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12867,
                "mutability": "mutable",
                "name": "fillercumulativeFundingRates",
                "nameLocation": "1570:28:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1563:35:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12866,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1563:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12869,
                "mutability": "mutable",
                "name": "fundingRateGrobalGrowth",
                "nameLocation": "1615:23:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1608:30:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12868,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1608:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12871,
                "mutability": "mutable",
                "name": "lastFundingRateCalculationTime",
                "nameLocation": "1656:30:26",
                "nodeType": "VariableDeclaration",
                "scope": 12872,
                "src": "1648:38:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12870,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1648:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InsurancePool",
            "nameLocation": "1455:13:26",
            "scope": 13999,
            "visibility": "public"
          },
          {
            "id": 12889,
            "nodeType": "StructDefinition",
            "src": "1699:267:26",
            "nodes": [],
            "canonicalName": "LeveragedGammaMarket.UserPosition",
            "members": [
              {
                "constant": false,
                "id": 12874,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1737:2:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1729:10:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12873,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1729:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12876,
                "mutability": "mutable",
                "name": "filler",
                "nameLocation": "1757:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1749:14:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12875,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1749:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12878,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1781:5:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1773:13:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 12877,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1773:7:26",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12880,
                "mutability": "mutable",
                "name": "positionAmount",
                "nameLocation": "1803:14:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1796:21:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12879,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1796:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12882,
                "mutability": "mutable",
                "name": "positionAmountSqrt",
                "nameLocation": "1834:18:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1827:25:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12881,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1827:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12884,
                "mutability": "mutable",
                "name": "assuranceMargin",
                "nameLocation": "1869:15:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1862:22:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12883,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1862:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12886,
                "mutability": "mutable",
                "name": "marginAmount",
                "nameLocation": "1901:12:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1894:19:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12885,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1894:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12888,
                "mutability": "mutable",
                "name": "lastBorrowFeeCalculationTime",
                "nameLocation": "1931:28:26",
                "nodeType": "VariableDeclaration",
                "scope": 12889,
                "src": "1923:36:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12887,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1923:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserPosition",
            "nameLocation": "1706:12:26",
            "scope": 13999,
            "visibility": "public"
          },
          {
            "id": 12892,
            "nodeType": "EnumDefinition",
            "src": "1972:62:26",
            "nodes": [],
            "canonicalName": "LeveragedGammaMarket.CallbackSource",
            "members": [
              {
                "id": 12890,
                "name": "TRADE",
                "nameLocation": "2002:5:26",
                "nodeType": "EnumValue",
                "src": "2002:5:26"
              },
              {
                "id": 12891,
                "name": "LIQUIDATION",
                "nameLocation": "2017:11:26",
                "nodeType": "EnumValue",
                "src": "2017:11:26"
              }
            ],
            "name": "CallbackSource",
            "nameLocation": "1977:14:26"
          },
          {
            "id": 12898,
            "nodeType": "StructDefinition",
            "src": "2040:101:26",
            "nodes": [],
            "canonicalName": "LeveragedGammaMarket.CallbackData",
            "members": [
              {
                "constant": false,
                "id": 12895,
                "mutability": "mutable",
                "name": "callbackSource",
                "nameLocation": "2085:14:26",
                "nodeType": "VariableDeclaration",
                "scope": 12898,
                "src": "2070:29:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_CallbackSource_$12892",
                  "typeString": "enum LeveragedGammaMarket.CallbackSource"
                },
                "typeName": {
                  "id": 12894,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 12893,
                    "name": "CallbackSource",
                    "nameLocations": [
                      "2070:14:26"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 12892,
                    "src": "2070:14:26"
                  },
                  "referencedDeclaration": 12892,
                  "src": "2070:14:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CallbackSource_$12892",
                    "typeString": "enum LeveragedGammaMarket.CallbackSource"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12897,
                "mutability": "mutable",
                "name": "marginAmountUpdate",
                "nameLocation": "2116:18:26",
                "nodeType": "VariableDeclaration",
                "scope": 12898,
                "src": "2109:25:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 12896,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2109:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CallbackData",
            "nameLocation": "2047:12:26",
            "scope": 13999,
            "visibility": "public"
          },
          {
            "id": 12900,
            "nodeType": "ErrorDefinition",
            "src": "2147:26:26",
            "nodes": [],
            "errorSelector": "8173c763",
            "name": "CallerIsNotFiller",
            "nameLocation": "2153:17:26",
            "parameters": {
              "id": 12899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2170:2:26"
            }
          },
          {
            "id": 12905,
            "nodeType": "VariableDeclaration",
            "src": "2179:61:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "2227:13:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
              "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition)"
            },
            "typeName": {
              "id": 12904,
              "keyName": "vaultId",
              "keyNameLocation": "2195:7:26",
              "keyType": {
                "id": 12901,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2187:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2179:40:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 12903,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12902,
                  "name": "UserPosition",
                  "nameLocations": [
                    "2206:12:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12889,
                  "src": "2206:12:26"
                },
                "referencedDeclaration": 12889,
                "src": "2206:12:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                  "typeString": "struct LeveragedGammaMarket.UserPosition"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 12910,
            "nodeType": "VariableDeclaration",
            "src": "2247:55:26",
            "nodes": [],
            "constant": false,
            "functionSelector": "e2a2796b",
            "mutability": "mutable",
            "name": "insurancePools",
            "nameLocation": "2288:14:26",
            "scope": 13999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
              "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool)"
            },
            "typeName": {
              "id": 12909,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12906,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2255:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2247:33:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 12908,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12907,
                  "name": "InsurancePool",
                  "nameLocations": [
                    "2266:13:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12872,
                  "src": "2266:13:26"
                },
                "referencedDeclaration": 12872,
                "src": "2266:13:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                  "typeString": "struct LeveragedGammaMarket.InsurancePool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 12926,
            "nodeType": "ModifierDefinition",
            "src": "2309:136:26",
            "nodes": [],
            "body": {
              "id": 12925,
              "nodeType": "Block",
              "src": "2331:114:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 12912,
                          "name": "insurancePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12910,
                          "src": "2345:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                            "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                          }
                        },
                        "id": 12915,
                        "indexExpression": {
                          "expression": {
                            "id": 12913,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2360:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2364:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2360:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2345:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                        }
                      },
                      "id": 12916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2372:13:26",
                      "memberName": "fillerAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12863,
                      "src": "2345:40:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 12917,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2389:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2393:6:26",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2389:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2345:54:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12923,
                  "nodeType": "IfStatement",
                  "src": "2341:86:26",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12920,
                        "name": "CallerIsNotFiller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12900,
                        "src": "2408:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 12921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2408:19:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 12922,
                    "nodeType": "RevertStatement",
                    "src": "2401:26:26"
                  }
                },
                {
                  "id": 12924,
                  "nodeType": "PlaceholderStatement",
                  "src": "2437:1:26"
                }
              ]
            },
            "name": "onlyFiller",
            "nameLocation": "2318:10:26",
            "parameters": {
              "id": 12911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2328:2:26"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12944,
            "nodeType": "FunctionDefinition",
            "src": "2451:152:26",
            "nodes": [],
            "body": {
              "id": 12943,
              "nodeType": "Block",
              "src": "2551:52:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12937,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12850,
                      "src": "2561:8:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$9908",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12939,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12931,
                          "src": "2581:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12938,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9908,
                        "src": "2572:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$9908_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 12940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2572:24:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$9908",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "2561:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$9908",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 12942,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:35:26"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12934,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12929,
                    "src": "2535:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$14415",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 12935,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 12933,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "2518:16:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14185,
                  "src": "2518:16:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "2518:28:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12929,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "2474:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 12944,
                  "src": "2463:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$14415",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 12928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12927,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "2463:10:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14415,
                      "src": "2463:10:26"
                    },
                    "referencedDeclaration": 14415,
                    "src": "2463:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$14415",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12931,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "2494:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 12944,
                  "src": "2486:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:47:26"
            },
            "returnParameters": {
              "id": 12936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12993,
            "nodeType": "FunctionDefinition",
            "src": "2609:532:26",
            "nodes": [],
            "body": {
              "id": 12992,
              "nodeType": "Block",
              "src": "2800:341:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12959,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "2831:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 12992,
                      "src": "2810:33:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 12958,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12957,
                          "name": "UserPosition",
                          "nameLocations": [
                            "2810:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12889,
                          "src": "2810:12:26"
                        },
                        "referencedDeclaration": 12889,
                        "src": "2810:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12964,
                  "initialValue": {
                    "baseExpression": {
                      "id": 12960,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12905,
                      "src": "2846:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                        "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 12963,
                    "indexExpression": {
                      "expression": {
                        "id": 12961,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12947,
                        "src": "2860:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      "id": 12962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2872:7:26",
                      "memberName": "vaultId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14260,
                      "src": "2860:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2846:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                      "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2810:70:26"
                },
                {
                  "assignments": [
                    12967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12967,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "2912:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 12992,
                      "src": "2890:28:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.InsurancePool"
                      },
                      "typeName": {
                        "id": 12966,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12965,
                          "name": "InsurancePool",
                          "nameLocations": [
                            "2890:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12872,
                          "src": "2890:13:26"
                        },
                        "referencedDeclaration": 12872,
                        "src": "2890:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12972,
                  "initialValue": {
                    "baseExpression": {
                      "id": 12968,
                      "name": "insurancePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12910,
                      "src": "2921:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                      }
                    },
                    "id": 12971,
                    "indexExpression": {
                      "expression": {
                        "id": 12969,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12959,
                        "src": "2936:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 12970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2949:6:26",
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12876,
                      "src": "2936:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2921:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2890:66:26"
                },
                {
                  "assignments": [
                    12975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12975,
                      "mutability": "mutable",
                      "name": "callbackData",
                      "nameLocation": "2987:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 12992,
                      "src": "2967:32:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                        "typeString": "struct LeveragedGammaMarket.CallbackData"
                      },
                      "typeName": {
                        "id": 12974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12973,
                          "name": "CallbackData",
                          "nameLocations": [
                            "2967:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12898,
                          "src": "2967:12:26"
                        },
                        "referencedDeclaration": 12898,
                        "src": "2967:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackData_$12898_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.CallbackData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12983,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12978,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12947,
                          "src": "3013:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 12979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3025:9:26",
                        "memberName": "extraData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14266,
                        "src": "3013:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 12980,
                            "name": "CallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12898,
                            "src": "3037:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CallbackData_$12898_storage_ptr_$",
                              "typeString": "type(struct LeveragedGammaMarket.CallbackData storage pointer)"
                            }
                          }
                        ],
                        "id": 12981,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3036:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallbackData_$12898_storage_ptr_$",
                          "typeString": "type(struct LeveragedGammaMarket.CallbackData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_CallbackData_$12898_storage_ptr_$",
                          "typeString": "type(struct LeveragedGammaMarket.CallbackData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 12976,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3002:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 12977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3006:6:26",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3002:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 12982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:49:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                      "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2967:84:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12985,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12967,
                        "src": "3076:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      {
                        "id": 12986,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12959,
                        "src": "3084:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      {
                        "id": 12987,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12975,
                        "src": "3098:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                          "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 12988,
                          "name": "tradeResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12950,
                          "src": "3112:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "id": 12989,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3124:9:26",
                        "memberName": "minMargin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14276,
                        "src": "3112:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        },
                        {
                          "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                          "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 12984,
                      "name": "_updateMargin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13139,
                      "src": "3062:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InsurancePool_$12872_storage_ptr_$_t_struct$_UserPosition_$12889_storage_ptr_$_t_struct$_CallbackData_$12898_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (struct LeveragedGammaMarket.InsurancePool storage pointer,struct LeveragedGammaMarket.UserPosition storage pointer,struct LeveragedGammaMarket.CallbackData memory,int256)"
                      }
                    },
                    "id": 12990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3062:72:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12991,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:72:26"
                }
              ]
            },
            "baseFunctions": [
              14138
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12955,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12954,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "2786:13:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14129,
                  "src": "2786:13:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "2786:13:26"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "2618:23:26",
            "overrides": {
              "id": 12953,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 12952,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "2768:16:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14185,
                  "src": "2768:16:26"
                }
              ],
              "src": "2759:26:26"
            },
            "parameters": {
              "id": 12951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12947,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "2681:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 12993,
                  "src": "2651:41:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 12946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12945,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "2651:10:26",
                        "2662:11:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14267,
                      "src": "2651:22:26"
                    },
                    "referencedDeclaration": 14267,
                    "src": "2651:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$14267_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12950,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "2732:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 12993,
                  "src": "2702:41:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 12949,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12948,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "2702:10:26",
                        "2713:11:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14283,
                      "src": "2702:22:26"
                    },
                    "referencedDeclaration": 14283,
                    "src": "2702:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$14283_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2641:108:26"
            },
            "returnParameters": {
              "id": 12956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13139,
            "nodeType": "FunctionDefinition",
            "src": "3147:1273:26",
            "nodes": [],
            "body": {
              "id": 13138,
              "nodeType": "Block",
              "src": "3341:1079:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13008,
                      "mutability": "mutable",
                      "name": "margin",
                      "nameLocation": "3358:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13138,
                      "src": "3351:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13007,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3351:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13015,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13011,
                            "name": "userPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12999,
                            "src": "3387:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                              "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                            }
                          },
                          "id": 13012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3400:2:26",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12874,
                          "src": "3387:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 13009,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14097,
                          "src": "3367:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$14415",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 13010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3378:8:26",
                        "memberName": "getVault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14388,
                        "src": "3367:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$14497_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                        }
                      },
                      "id": 13013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3367:36:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$14497_memory_ptr",
                        "typeString": "struct DataType.Vault memory"
                      }
                    },
                    "id": 13014,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3404:6:26",
                    "memberName": "margin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14493,
                    "src": "3367:43:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3351:59:26"
                },
                {
                  "assignments": [
                    13017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13017,
                      "mutability": "mutable",
                      "name": "currentAssuranceMargin",
                      "nameLocation": "3427:22:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13138,
                      "src": "3420:29:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13016,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3420:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13020,
                  "initialValue": {
                    "expression": {
                      "id": 13018,
                      "name": "userPosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12999,
                      "src": "3452:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                      }
                    },
                    "id": 13019,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3465:15:26",
                    "memberName": "assuranceMargin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 12884,
                    "src": "3452:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3420:60:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CallbackSource_$12892",
                      "typeString": "enum LeveragedGammaMarket.CallbackSource"
                    },
                    "id": 13025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13021,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13002,
                        "src": "3495:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                          "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                        }
                      },
                      "id": 13022,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3508:14:26",
                      "memberName": "callbackSource",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12895,
                      "src": "3495:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CallbackSource_$12892",
                        "typeString": "enum LeveragedGammaMarket.CallbackSource"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 13023,
                        "name": "CallbackSource",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12892,
                        "src": "3526:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CallbackSource_$12892_$",
                          "typeString": "type(enum LeveragedGammaMarket.CallbackSource)"
                        }
                      },
                      "id": 13024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3541:5:26",
                      "memberName": "TRADE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12890,
                      "src": "3526:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CallbackSource_$12892",
                        "typeString": "enum LeveragedGammaMarket.CallbackSource"
                      }
                    },
                    "src": "3495:51:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CallbackSource_$12892",
                        "typeString": "enum LeveragedGammaMarket.CallbackSource"
                      },
                      "id": 13120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 13116,
                          "name": "callbackData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13002,
                          "src": "4277:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                            "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                          }
                        },
                        "id": 13117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4290:14:26",
                        "memberName": "callbackSource",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12895,
                        "src": "4277:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CallbackSource_$12892",
                          "typeString": "enum LeveragedGammaMarket.CallbackSource"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 13118,
                          "name": "CallbackSource",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12892,
                          "src": "4308:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CallbackSource_$12892_$",
                            "typeString": "type(enum LeveragedGammaMarket.CallbackSource)"
                          }
                        },
                        "id": 13119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4323:11:26",
                        "memberName": "LIQUIDATION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12891,
                        "src": "4308:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CallbackSource_$12892",
                          "typeString": "enum LeveragedGammaMarket.CallbackSource"
                        }
                      },
                      "src": "4277:57:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 13136,
                    "nodeType": "IfStatement",
                    "src": "4273:141:26",
                    "trueBody": {
                      "id": 13135,
                      "nodeType": "Block",
                      "src": "4336:78:26",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 13124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4366:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 13127,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4380:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                      "typeString": "contract LeveragedGammaMarket"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                      "typeString": "contract LeveragedGammaMarket"
                                    }
                                  ],
                                  "id": 13126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4372:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 13125,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4372:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4372:13:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 13131,
                                    "name": "margin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13008,
                                    "src": "4395:6:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 13130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4387:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 13129,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4387:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4387:15:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 13121,
                                "name": "_predyPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14097,
                                "src": "4350:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPredyPool_$14415",
                                  "typeString": "contract IPredyPool"
                                }
                              },
                              "id": 13123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4361:4:26",
                              "memberName": "take",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14344,
                              "src": "4350:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (bool,address,uint256) external"
                              }
                            },
                            "id": 13133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4350:53:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 13134,
                          "nodeType": "ExpressionStatement",
                          "src": "4350:53:26"
                        }
                      ]
                    }
                  },
                  "id": 13137,
                  "nodeType": "IfStatement",
                  "src": "3491:923:26",
                  "trueBody": {
                    "id": 13115,
                    "nodeType": "Block",
                    "src": "3548:719:26",
                    "statements": [
                      {
                        "assignments": [
                          13027
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13027,
                            "mutability": "mutable",
                            "name": "userMargin",
                            "nameLocation": "3569:10:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 13115,
                            "src": "3562:17:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 13026,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3562:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13031,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13028,
                            "name": "margin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13008,
                            "src": "3582:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 13029,
                            "name": "currentAssuranceMargin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13017,
                            "src": "3591:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3582:31:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3562:51:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 13038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 13036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 13033,
                                  "name": "userMargin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13027,
                                  "src": "3636:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 13034,
                                    "name": "callbackData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13002,
                                    "src": "3649:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                      "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                                    }
                                  },
                                  "id": 13035,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3662:18:26",
                                  "memberName": "marginAmountUpdate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12897,
                                  "src": "3649:31:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "3636:44:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 13037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3684:1:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3636:49:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 13032,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3628:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 13039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:58:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13040,
                        "nodeType": "ExpressionStatement",
                        "src": "3628:58:26"
                      },
                      {
                        "expression": {
                          "id": 13045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 13041,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12999,
                              "src": "3701:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 13043,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3714:15:26",
                            "memberName": "assuranceMargin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12884,
                            "src": "3701:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 13044,
                            "name": "fillerMinDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13004,
                            "src": "3732:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3701:47:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13046,
                        "nodeType": "ExpressionStatement",
                        "src": "3701:47:26"
                      },
                      {
                        "assignments": [
                          13048
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 13048,
                            "mutability": "mutable",
                            "name": "diff",
                            "nameLocation": "3770:4:26",
                            "nodeType": "VariableDeclaration",
                            "scope": 13115,
                            "src": "3763:11:26",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 13047,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3763:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13054,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 13051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 13049,
                              "name": "userMargin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13027,
                              "src": "3777:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 13050,
                              "name": "fillerMinDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13004,
                              "src": "3790:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "3777:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 13052,
                            "name": "currentAssuranceMargin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13017,
                            "src": "3809:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3777:54:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3763:68:26"
                      },
                      {
                        "expression": {
                          "id": 13060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 13055,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12999,
                              "src": "3846:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 13057,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3859:12:26",
                            "memberName": "marginAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12886,
                            "src": "3846:25:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13058,
                              "name": "callbackData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13002,
                              "src": "3875:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                              }
                            },
                            "id": 13059,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3888:18:26",
                            "memberName": "marginAmountUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12897,
                            "src": "3875:31:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3846:60:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13061,
                        "nodeType": "ExpressionStatement",
                        "src": "3846:60:26"
                      },
                      {
                        "expression": {
                          "id": 13066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 13062,
                              "name": "filler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12996,
                              "src": "3920:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                              }
                            },
                            "id": 13064,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3927:12:26",
                            "memberName": "marginAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12865,
                            "src": "3920:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 13065,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13048,
                            "src": "3943:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3920:27:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13067,
                        "nodeType": "ExpressionStatement",
                        "src": "3920:27:26"
                      },
                      {
                        "expression": {
                          "id": 13071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13068,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13048,
                            "src": "3962:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13069,
                              "name": "callbackData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13002,
                              "src": "3970:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                              }
                            },
                            "id": 13070,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3983:18:26",
                            "memberName": "marginAmountUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12897,
                            "src": "3970:31:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "3962:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13072,
                        "nodeType": "ExpressionStatement",
                        "src": "3962:39:26"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13073,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13048,
                            "src": "4020:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4027:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4020:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 13096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 13094,
                              "name": "diff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13048,
                              "src": "4162:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 13095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4169:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4162:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 13113,
                          "nodeType": "IfStatement",
                          "src": "4158:99:26",
                          "trueBody": {
                            "id": 13112,
                            "nodeType": "Block",
                            "src": "4172:85:26",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "hexValue": "74727565",
                                      "id": 13100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4206:4:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 13103,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "4220:4:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                            "typeString": "contract LeveragedGammaMarket"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                            "typeString": "contract LeveragedGammaMarket"
                                          }
                                        ],
                                        "id": 13102,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4212:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 13101,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4212:7:26",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 13104,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4212:13:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 13108,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "4235:5:26",
                                          "subExpression": {
                                            "id": 13107,
                                            "name": "diff",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13048,
                                            "src": "4236:4:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 13106,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4227:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 13105,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4227:7:26",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 13109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4227:14:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 13097,
                                      "name": "_predyPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14097,
                                      "src": "4190:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IPredyPool_$14415",
                                        "typeString": "contract IPredyPool"
                                      }
                                    },
                                    "id": 13099,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4201:4:26",
                                    "memberName": "take",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14344,
                                    "src": "4190:15:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (bool,address,uint256) external"
                                    }
                                  },
                                  "id": 13110,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4190:52:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 13111,
                                "nodeType": "ExpressionStatement",
                                "src": "4190:52:26"
                              }
                            ]
                          }
                        },
                        "id": 13114,
                        "nodeType": "IfStatement",
                        "src": "4016:241:26",
                        "trueBody": {
                          "id": 13093,
                          "nodeType": "Block",
                          "src": "4030:122:26",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 13085,
                                        "name": "_predyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14097,
                                        "src": "4110:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                                          "typeString": "contract IPredyPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                                          "typeString": "contract IPredyPool"
                                        }
                                      ],
                                      "id": 13084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4102:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 13083,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4102:7:26",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4102:19:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 13089,
                                        "name": "diff",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13048,
                                        "src": "4131:4:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 13088,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4123:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 13087,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4123:7:26",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4123:13:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 13078,
                                              "name": "filler",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 12996,
                                              "src": "4077:6:26",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                                                "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                                              }
                                            },
                                            "id": 13079,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4084:6:26",
                                            "memberName": "pairId",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 12861,
                                            "src": "4077:13:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 13077,
                                          "name": "_getQuoteTokenAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14184,
                                          "src": "4055:21:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                            "typeString": "function (uint256) view returns (address)"
                                          }
                                        },
                                        "id": 13080,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4055:36:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 13076,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8141,
                                      "src": "4048:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8141_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 13081,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4048:44:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$8141",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 13082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4093:8:26",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8108,
                                  "src": "4048:53:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 13091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4048:89:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 13092,
                              "nodeType": "ExpressionStatement",
                              "src": "4048:89:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateMargin",
            "nameLocation": "3156:13:26",
            "parameters": {
              "id": 13005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12996,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "3201:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13139,
                  "src": "3179:28:26",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                    "typeString": "struct LeveragedGammaMarket.InsurancePool"
                  },
                  "typeName": {
                    "id": 12995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12994,
                      "name": "InsurancePool",
                      "nameLocations": [
                        "3179:13:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12872,
                      "src": "3179:13:26"
                    },
                    "referencedDeclaration": 12872,
                    "src": "3179:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12999,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "3238:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13139,
                  "src": "3217:33:26",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                    "typeString": "struct LeveragedGammaMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 12998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12997,
                      "name": "UserPosition",
                      "nameLocations": [
                        "3217:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12889,
                      "src": "3217:12:26"
                    },
                    "referencedDeclaration": 12889,
                    "src": "3217:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13002,
                  "mutability": "mutable",
                  "name": "callbackData",
                  "nameLocation": "3280:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13139,
                  "src": "3260:32:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                    "typeString": "struct LeveragedGammaMarket.CallbackData"
                  },
                  "typeName": {
                    "id": 13001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13000,
                      "name": "CallbackData",
                      "nameLocations": [
                        "3260:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12898,
                      "src": "3260:12:26"
                    },
                    "referencedDeclaration": 12898,
                    "src": "3260:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallbackData_$12898_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.CallbackData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13004,
                  "mutability": "mutable",
                  "name": "fillerMinDeposit",
                  "nameLocation": "3309:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13139,
                  "src": "3302:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13003,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3169:162:26"
            },
            "returnParameters": {
              "id": 13006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3341:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13177,
            "nodeType": "FunctionDefinition",
            "src": "4426:308:26",
            "nodes": [],
            "body": {
              "id": 13176,
              "nodeType": "Block",
              "src": "4501:233:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4602:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4606:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4602:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 13160,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4622:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                              "typeString": "contract LeveragedGammaMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                              "typeString": "contract LeveragedGammaMarket"
                            }
                          ],
                          "id": 13159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 13161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13162,
                        "name": "depositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13141,
                        "src": "4629:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 13148,
                                    "name": "insurancePools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12910,
                                    "src": "4540:14:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                                      "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                                    }
                                  },
                                  "id": 13151,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 13149,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4555:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 13150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4559:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4555:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4540:26:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                                    "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                                  }
                                },
                                "id": 13152,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4567:6:26",
                                "memberName": "pairId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12861,
                                "src": "4540:33:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 13147,
                              "name": "_getQuoteTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14184,
                              "src": "4518:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 13153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4518:56:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13146,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8141,
                          "src": "4511:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$8141_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 13154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4511:64:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4576:12:26",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8140,
                      "src": "4511:77:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:141:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13164,
                  "nodeType": "ExpressionStatement",
                  "src": "4511:141:26"
                },
                {
                  "expression": {
                    "id": 13174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 13165,
                          "name": "insurancePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12910,
                          "src": "4663:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                            "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                          }
                        },
                        "id": 13168,
                        "indexExpression": {
                          "expression": {
                            "id": 13166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4678:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4682:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4678:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4663:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                        }
                      },
                      "id": 13169,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4690:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12865,
                      "src": "4663:39:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13172,
                          "name": "depositAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13141,
                          "src": "4713:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4706:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13170,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4706:6:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4706:21:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4663:64:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13175,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:64:26"
                }
              ]
            },
            "functionSelector": "3cb4560c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13143,
                  "name": "onlyFiller",
                  "nameLocations": [
                    "4490:10:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12926,
                  "src": "4490:10:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "4490:10:26"
              }
            ],
            "name": "depositToInsurancePool",
            "nameLocation": "4435:22:26",
            "parameters": {
              "id": 13142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13141,
                  "mutability": "mutable",
                  "name": "depositAmount",
                  "nameLocation": "4466:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13177,
                  "src": "4458:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4457:23:26"
            },
            "returnParameters": {
              "id": 13145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4501:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13211,
            "nodeType": "FunctionDefinition",
            "src": "4740:273:26",
            "nodes": [],
            "body": {
              "id": 13210,
              "nodeType": "Block",
              "src": "4819:194:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 13193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 13184,
                          "name": "insurancePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12910,
                          "src": "4829:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                            "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                          }
                        },
                        "id": 13187,
                        "indexExpression": {
                          "expression": {
                            "id": 13185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4844:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 13186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4848:6:26",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4844:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4829:26:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                        }
                      },
                      "id": 13188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4856:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12865,
                      "src": "4829:39:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13191,
                          "name": "withdrawAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13179,
                          "src": "4879:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4872:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13189,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4872:6:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4872:22:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4829:65:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13194,
                  "nodeType": "ExpressionStatement",
                  "src": "4829:65:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4979:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4983:6:26",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4979:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13207,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13179,
                        "src": "4991:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 13197,
                                    "name": "insurancePools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12910,
                                    "src": "4934:14:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                                      "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                                    }
                                  },
                                  "id": 13200,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 13198,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "4949:3:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 13199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4953:6:26",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4949:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4934:26:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                                    "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                                  }
                                },
                                "id": 13201,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4961:6:26",
                                "memberName": "pairId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12861,
                                "src": "4934:33:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 13196,
                              "name": "_getQuoteTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14184,
                              "src": "4912:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 13202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4912:56:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13195,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8141,
                          "src": "4905:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$8141_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 13203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4905:64:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$8141",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 13204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4970:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8108,
                      "src": "4905:73:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 13208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4905:101:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13209,
                  "nodeType": "ExpressionStatement",
                  "src": "4905:101:26"
                }
              ]
            },
            "functionSelector": "649f3ce5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13181,
                  "name": "onlyFiller",
                  "nameLocations": [
                    "4808:10:26"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12926,
                  "src": "4808:10:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "4808:10:26"
              }
            ],
            "name": "withdrawFromInsurancePool",
            "nameLocation": "4749:25:26",
            "parameters": {
              "id": 13180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13179,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "4783:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13211,
                  "src": "4775:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4774:24:26"
            },
            "returnParameters": {
              "id": 13183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4819:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13427,
            "nodeType": "FunctionDefinition",
            "src": "5258:2156:26",
            "nodes": [],
            "body": {
              "id": 13426,
              "nodeType": "Block",
              "src": "5437:1977:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13226,
                      "mutability": "mutable",
                      "name": "gammaOrder",
                      "nameLocation": "5465:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13426,
                      "src": "5447:28:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                        "typeString": "struct GammaOrder"
                      },
                      "typeName": {
                        "id": 13225,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13224,
                          "name": "GammaOrder",
                          "nameLocations": [
                            "5447:10:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20736,
                          "src": "5447:10:26"
                        },
                        "referencedDeclaration": 20736,
                        "src": "5447:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_storage_ptr",
                          "typeString": "struct GammaOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13234,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13229,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13215,
                          "src": "5489:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$14194_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 13230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5495:5:26",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14191,
                        "src": "5489:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 13231,
                            "name": "GammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20736,
                            "src": "5503:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_GammaOrder_$20736_storage_ptr_$",
                              "typeString": "type(struct GammaOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 13232,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5502:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$20736_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_GammaOrder_$20736_storage_ptr_$",
                          "typeString": "type(struct GammaOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 13227,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5478:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 13228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5482:6:26",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5478:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 13233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:37:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                      "typeString": "struct GammaOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5447:68:26"
                },
                {
                  "assignments": [
                    13237
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13237,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "5546:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13426,
                      "src": "5525:34:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 13236,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13235,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "5525:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21129,
                          "src": "5525:13:26"
                        },
                        "referencedDeclaration": 21129,
                        "src": "5525:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$21129_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13244,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13240,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "5584:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 13241,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13215,
                          "src": "5596:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$14194_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 13242,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5602:3:26",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14193,
                        "src": "5596:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 13238,
                        "name": "GammaOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20860,
                        "src": "5562:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$20860_$",
                          "typeString": "type(library GammaOrderLib)"
                        }
                      },
                      "id": 13239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5576:7:26",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20859,
                      "src": "5562:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_GammaOrder_$20736_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$21129_memory_ptr_$",
                        "typeString": "function (struct GammaOrder memory,bytes memory) pure returns (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 13243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5562:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5525:81:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 13246,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14101,
                            "src": "5625:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 13249,
                          "indexExpression": {
                            "expression": {
                              "id": 13247,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13226,
                              "src": "5640:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 13248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5651:6:26",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20723,
                            "src": "5640:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5625:33:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5670:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5662:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13250,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5662:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5662:10:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5625:47:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5617:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5617:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13256,
                  "nodeType": "ExpressionStatement",
                  "src": "5617:56:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 13258,
                            "name": "gammaOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13226,
                            "src": "5691:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                              "typeString": "struct GammaOrder memory"
                            }
                          },
                          "id": 13259,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5702:17:26",
                          "memberName": "entryTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20725,
                          "src": "5691:28:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 13260,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14101,
                            "src": "5723:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 13263,
                          "indexExpression": {
                            "expression": {
                              "id": 13261,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13226,
                              "src": "5738:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 13262,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5749:6:26",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20723,
                            "src": "5738:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5723:33:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5691:65:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5683:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5683:74:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13266,
                  "nodeType": "ExpressionStatement",
                  "src": "5683:74:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13268,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13237,
                        "src": "5781:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 13267,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13739,
                      "src": "5768:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$21129_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 13269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5768:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13270,
                  "nodeType": "ExpressionStatement",
                  "src": "5768:27:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13271,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "5810:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 13272,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5821:10:26",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20721,
                      "src": "5810:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5834:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5810:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13283,
                  "nodeType": "IfStatement",
                  "src": "5806:110:26",
                  "trueBody": {
                    "id": 13282,
                    "nodeType": "Block",
                    "src": "5837:79:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 13276,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12905,
                                "src": "5868:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                                  "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                                }
                              },
                              "id": 13279,
                              "indexExpression": {
                                "expression": {
                                  "id": 13277,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13226,
                                  "src": "5882:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 13278,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5893:10:26",
                                "memberName": "positionId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20721,
                                "src": "5882:21:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5868:36:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                              }
                            ],
                            "id": 13275,
                            "name": "_updateBorrowFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13804,
                            "src": "5851:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserPosition_$12889_storage_ptr_$returns$__$",
                              "typeString": "function (struct LeveragedGammaMarket.UserPosition storage pointer)"
                            }
                          },
                          "id": 13280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5851:54:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13281,
                        "nodeType": "ExpressionStatement",
                        "src": "5851:54:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13284,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13222,
                      "src": "5926:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13289,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6010:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13290,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6021:6:26",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20723,
                              "src": "6010:17:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 13291,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6045:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13292,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6056:10:26",
                              "memberName": "positionId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20721,
                              "src": "6045:21:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 13293,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6084:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13294,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6095:11:26",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20727,
                              "src": "6084:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 13295,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6124:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13296,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6135:15:26",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20729,
                              "src": "6124:26:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13300,
                                        "name": "CallbackSource",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 12892,
                                        "src": "6192:14:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_CallbackSource_$12892_$",
                                          "typeString": "type(enum LeveragedGammaMarket.CallbackSource)"
                                        }
                                      },
                                      "id": 13301,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6207:5:26",
                                      "memberName": "TRADE",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12890,
                                      "src": "6192:20:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_CallbackSource_$12892",
                                        "typeString": "enum LeveragedGammaMarket.CallbackSource"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 13302,
                                        "name": "gammaOrder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13226,
                                        "src": "6214:10:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                          "typeString": "struct GammaOrder memory"
                                        }
                                      },
                                      "id": 13303,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6225:12:26",
                                      "memberName": "marginAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 20731,
                                      "src": "6214:23:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_CallbackSource_$12892",
                                        "typeString": "enum LeveragedGammaMarket.CallbackSource"
                                      },
                                      {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    ],
                                    "id": 13299,
                                    "name": "CallbackData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12898,
                                    "src": "6179:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_CallbackData_$12898_storage_ptr_$",
                                      "typeString": "type(struct LeveragedGammaMarket.CallbackData storage pointer)"
                                    }
                                  },
                                  "id": 13304,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6179:59:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                    "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                    "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                                  }
                                ],
                                "expression": {
                                  "id": 13297,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6168:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 13298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6172:6:26",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6168:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 13305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6168:71:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 13287,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14415,
                              "src": "5970:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$14415_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 13288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5981:11:26",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14267,
                            "src": "5970:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$14267_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 13306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5970:283:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 13307,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13218,
                          "src": "6267:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 13285,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14097,
                          "src": "5940:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$14415",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 13286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5951:5:26",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14315,
                        "src": "5940:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$14267_memory_ptr_$_t_struct$_SettlementData_$14422_memory_ptr_$returns$_t_struct$_TradeResult_$14283_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 13308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5940:351:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "5926:365:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 13310,
                  "nodeType": "ExpressionStatement",
                  "src": "5926:365:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13311,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "6306:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 13312,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6317:10:26",
                      "memberName": "positionId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20721,
                      "src": "6306:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6331:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6306:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13361,
                    "nodeType": "Block",
                    "src": "6591:173:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 13345,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6609:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13346,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6620:4:26",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20719,
                              "src": "6609:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$20871_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 13347,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6625:6:26",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20866,
                            "src": "6609:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 13348,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12905,
                                "src": "6635:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                                  "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                                }
                              },
                              "id": 13351,
                              "indexExpression": {
                                "expression": {
                                  "id": 13349,
                                  "name": "tradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13222,
                                  "src": "6649:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeResult memory"
                                  }
                                },
                                "id": 13350,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6661:7:26",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14272,
                                "src": "6649:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6635:34:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                              }
                            },
                            "id": 13352,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6670:5:26",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12878,
                            "src": "6635:40:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6609:66:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13360,
                        "nodeType": "IfStatement",
                        "src": "6605:149:26",
                        "trueBody": {
                          "id": 13359,
                          "nodeType": "Block",
                          "src": "6677:77:26",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 13354,
                                    "name": "IFillerMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14195,
                                    "src": "6702:13:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IFillerMarket_$14195_$",
                                      "typeString": "type(contract IFillerMarket)"
                                    }
                                  },
                                  "id": 13356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6716:21:26",
                                  "memberName": "SignerIsNotVaultOwner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 14189,
                                  "src": "6702:35:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 13357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6702:37:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 13358,
                              "nodeType": "RevertStatement",
                              "src": "6695:44:26"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 13362,
                  "nodeType": "IfStatement",
                  "src": "6302:462:26",
                  "trueBody": {
                    "id": 13344,
                    "nodeType": "Block",
                    "src": "6334:251:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 13322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 13315,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12905,
                                "src": "6348:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                                  "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                                }
                              },
                              "id": 13318,
                              "indexExpression": {
                                "expression": {
                                  "id": 13316,
                                  "name": "tradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13222,
                                  "src": "6362:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeResult memory"
                                  }
                                },
                                "id": 13317,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6374:7:26",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14272,
                                "src": "6362:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6348:34:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                              }
                            },
                            "id": 13319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6383:2:26",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12874,
                            "src": "6348:37:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13320,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13226,
                              "src": "6388:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 13321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6399:10:26",
                            "memberName": "positionId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20721,
                            "src": "6388:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6348:61:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13323,
                        "nodeType": "ExpressionStatement",
                        "src": "6348:61:26"
                      },
                      {
                        "expression": {
                          "id": 13332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 13324,
                                "name": "userPositions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12905,
                                "src": "6423:13:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                                  "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                                }
                              },
                              "id": 13327,
                              "indexExpression": {
                                "expression": {
                                  "id": 13325,
                                  "name": "tradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13222,
                                  "src": "6437:11:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeResult memory"
                                  }
                                },
                                "id": 13326,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6449:7:26",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14272,
                                "src": "6437:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6423:34:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                              }
                            },
                            "id": 13328,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6458:5:26",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12878,
                            "src": "6423:40:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 13329,
                                "name": "gammaOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13226,
                                "src": "6466:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                  "typeString": "struct GammaOrder memory"
                                }
                              },
                              "id": 13330,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6477:4:26",
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20719,
                              "src": "6466:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OrderInfo_$20871_memory_ptr",
                                "typeString": "struct OrderInfo memory"
                              }
                            },
                            "id": 13331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6482:6:26",
                            "memberName": "trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20866,
                            "src": "6466:22:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6423:65:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 13333,
                        "nodeType": "ExpressionStatement",
                        "src": "6423:65:26"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13337,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13222,
                                "src": "6530:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 13338,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6542:7:26",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14272,
                              "src": "6530:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 13339,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13226,
                                  "src": "6551:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 13340,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6562:4:26",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20719,
                                "src": "6551:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$20871_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 13341,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6567:6:26",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20866,
                              "src": "6551:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 13334,
                              "name": "_predyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14097,
                              "src": "6503:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPredyPool_$14415",
                                "typeString": "contract IPredyPool"
                              }
                            },
                            "id": 13336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6514:15:26",
                            "memberName": "updateRecepient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14335,
                            "src": "6503:26:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 13342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6503:71:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 13343,
                        "nodeType": "ExpressionStatement",
                        "src": "6503:71:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 13363,
                          "name": "userPositions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12905,
                          "src": "6774:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                            "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                          }
                        },
                        "id": 13366,
                        "indexExpression": {
                          "expression": {
                            "id": 13364,
                            "name": "tradeResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13222,
                            "src": "6788:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                              "typeString": "struct IPredyPool.TradeResult memory"
                            }
                          },
                          "id": 13365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6800:7:26",
                          "memberName": "vaultId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14272,
                          "src": "6788:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6774:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                        }
                      },
                      "id": 13367,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6809:14:26",
                      "memberName": "positionAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12880,
                      "src": "6774:49:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13368,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "6827:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 13369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6838:11:26",
                      "memberName": "tradeAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20727,
                      "src": "6827:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "6774:75:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13371,
                  "nodeType": "ExpressionStatement",
                  "src": "6774:75:26"
                },
                {
                  "expression": {
                    "id": 13379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 13372,
                          "name": "userPositions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12905,
                          "src": "6859:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                            "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                          }
                        },
                        "id": 13375,
                        "indexExpression": {
                          "expression": {
                            "id": 13373,
                            "name": "tradeResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13222,
                            "src": "6873:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                              "typeString": "struct IPredyPool.TradeResult memory"
                            }
                          },
                          "id": 13374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6885:7:26",
                          "memberName": "vaultId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14272,
                          "src": "6873:19:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6859:34:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                        }
                      },
                      "id": 13376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6894:18:26",
                      "memberName": "positionAmountSqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12882,
                      "src": "6859:53:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13377,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "6916:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 13378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6927:15:26",
                      "memberName": "tradeAmountSqrt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20729,
                      "src": "6916:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "6859:83:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13380,
                  "nodeType": "ExpressionStatement",
                  "src": "6859:83:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 13383,
                              "name": "userPositions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12905,
                              "src": "6976:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                                "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                              }
                            },
                            "id": 13386,
                            "indexExpression": {
                              "expression": {
                                "id": 13384,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13222,
                                "src": "6990:11:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "id": 13385,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7002:7:26",
                              "memberName": "vaultId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14272,
                              "src": "6990:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6976:34:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                              "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                              "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                            }
                          ],
                          "id": 13382,
                          "name": "isPositionSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13825,
                          "src": "6961:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_UserPosition_$12889_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct LeveragedGammaMarket.UserPosition memory) view returns (bool)"
                          }
                        },
                        "id": 13387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6961:50:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53414645",
                        "id": 13388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7013:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71e4974a180ed74b74c97f35e21320eed38236dadb1595c3379984c3d2f04f7c",
                          "typeString": "literal_string \"SAFE\""
                        },
                        "value": "SAFE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71e4974a180ed74b74c97f35e21320eed38236dadb1595c3379984c3d2f04f7c",
                          "typeString": "literal_string \"SAFE\""
                        }
                      ],
                      "id": 13381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6953:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6953:67:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13390,
                  "nodeType": "ExpressionStatement",
                  "src": "6953:67:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13396,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "7147:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      {
                        "id": 13397,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13222,
                        "src": "7159:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13392,
                              "name": "gammaOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13226,
                              "src": "7109:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                "typeString": "struct GammaOrder memory"
                              }
                            },
                            "id": 13393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7120:16:26",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20733,
                            "src": "7109:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 13391,
                          "name": "IOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14226,
                          "src": "7093:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOrderValidator_$14226_$",
                            "typeString": "type(contract IOrderValidator)"
                          }
                        },
                        "id": 13394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7093:44:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOrderValidator_$14226",
                          "typeString": "contract IOrderValidator"
                        }
                      },
                      "id": 13395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7138:8:26",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14225,
                      "src": "7093:53:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_GammaOrder_$20736_memory_ptr_$_t_struct$_TradeResult_$14283_memory_ptr_$returns$__$",
                        "typeString": "function (struct GammaOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 13398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7093:78:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13399,
                  "nodeType": "ExpressionStatement",
                  "src": "7093:78:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13400,
                        "name": "gammaOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13226,
                        "src": "7186:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                          "typeString": "struct GammaOrder memory"
                        }
                      },
                      "id": 13401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7197:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20731,
                      "src": "7186:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7212:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7186:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13423,
                  "nodeType": "IfStatement",
                  "src": "7182:197:26",
                  "trueBody": {
                    "id": 13422,
                    "nodeType": "Block",
                    "src": "7215:164:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 13411,
                                  "name": "gammaOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13226,
                                  "src": "7297:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                    "typeString": "struct GammaOrder memory"
                                  }
                                },
                                "id": 13412,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7308:4:26",
                                "memberName": "info",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20719,
                                "src": "7297:15:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OrderInfo_$20871_memory_ptr",
                                  "typeString": "struct OrderInfo memory"
                                }
                              },
                              "id": 13413,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7313:6:26",
                              "memberName": "trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20866,
                              "src": "7297:22:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 13418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "-",
                                  "prefix": true,
                                  "src": "7329:24:26",
                                  "subExpression": {
                                    "expression": {
                                      "id": 13416,
                                      "name": "gammaOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13226,
                                      "src": "7330:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                        "typeString": "struct GammaOrder memory"
                                      }
                                    },
                                    "id": 13417,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7341:12:26",
                                    "memberName": "marginAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20731,
                                    "src": "7330:23:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 13415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7321:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 13414,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7321:7:26",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7321:33:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 13405,
                                    "name": "_quoteTokenMap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14101,
                                    "src": "7236:14:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 13408,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 13406,
                                      "name": "gammaOrder",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13226,
                                      "src": "7251:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_GammaOrder_$20736_memory_ptr",
                                        "typeString": "struct GammaOrder memory"
                                      }
                                    },
                                    "id": 13407,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7262:6:26",
                                    "memberName": "pairId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 20723,
                                    "src": "7251:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7236:33:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 13404,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8141,
                                "src": "7229:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$8141_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 13409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7229:41:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$8141",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 13410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7271:8:26",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8108,
                            "src": "7229:50:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 13420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7229:139:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 13421,
                        "nodeType": "ExpressionStatement",
                        "src": "7229:139:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13424,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13222,
                    "src": "7396:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 13223,
                  "id": 13425,
                  "nodeType": "Return",
                  "src": "7389:18:26"
                }
              ]
            },
            "documentation": {
              "id": 13212,
              "nodeType": "StructuredDocumentation",
              "src": "5019:234:26",
              "text": " @notice Verifies signature of the order and executes trade\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @dev Fillers call this function"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "5267:12:26",
            "parameters": {
              "id": 13219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13215,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5299:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13427,
                  "src": "5280:24:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$14194_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 13214,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13213,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "5280:11:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14194,
                      "src": "5280:11:26"
                    },
                    "referencedDeclaration": 14194,
                    "src": "5280:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$14194_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13218,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "5340:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13427,
                  "src": "5306:48:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 13217,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13216,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "5306:11:26",
                        "5318:14:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14422,
                      "src": "5306:26:26"
                    },
                    "referencedDeclaration": 14422,
                    "src": "5306:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$14422_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5279:76:26"
            },
            "returnParameters": {
              "id": 13223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13222,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "5420:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13427,
                  "src": "5390:41:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 13221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13220,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "5390:10:26",
                        "5401:11:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14283,
                      "src": "5390:22:26"
                    },
                    "referencedDeclaration": 14283,
                    "src": "5390:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$14283_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5389:43:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13433,
            "nodeType": "FunctionDefinition",
            "src": "7420:56:26",
            "nodes": [],
            "body": {
              "id": 13432,
              "nodeType": "Block",
              "src": "7474:2:26",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "19bd1776",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositMargin",
            "nameLocation": "7429:13:26",
            "parameters": {
              "id": 13430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13429,
                  "mutability": "mutable",
                  "name": "marginAmount",
                  "nameLocation": "7451:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13433,
                  "src": "7443:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7443:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7442:22:26"
            },
            "returnParameters": {
              "id": 13431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7474:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13439,
            "nodeType": "FunctionDefinition",
            "src": "7482:57:26",
            "nodes": [],
            "body": {
              "id": 13438,
              "nodeType": "Block",
              "src": "7537:2:26",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "0cea7534",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawMargin",
            "nameLocation": "7491:14:26",
            "parameters": {
              "id": 13436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13435,
                  "mutability": "mutable",
                  "name": "marginAmount",
                  "nameLocation": "7514:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13439,
                  "src": "7506:20:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7506:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7505:22:26"
            },
            "returnParameters": {
              "id": 13437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7537:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13504,
            "nodeType": "FunctionDefinition",
            "src": "7738:830:26",
            "nodes": [],
            "body": {
              "id": 13503,
              "nodeType": "Block",
              "src": "7845:723:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13450,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "7876:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13503,
                      "src": "7855:33:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 13449,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13448,
                          "name": "UserPosition",
                          "nameLocations": [
                            "7855:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12889,
                          "src": "7855:12:26"
                        },
                        "referencedDeclaration": 12889,
                        "src": "7855:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13454,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13451,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12905,
                      "src": "7891:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                        "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 13453,
                    "indexExpression": {
                      "id": 13452,
                      "name": "positionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13442,
                      "src": "7905:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7891:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                      "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7855:61:26"
                },
                {
                  "assignments": [
                    13457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13457,
                      "mutability": "mutable",
                      "name": "fillerPool",
                      "nameLocation": "7948:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13503,
                      "src": "7926:32:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.InsurancePool"
                      },
                      "typeName": {
                        "id": 13456,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13455,
                          "name": "InsurancePool",
                          "nameLocations": [
                            "7926:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12872,
                          "src": "7926:13:26"
                        },
                        "referencedDeclaration": 12872,
                        "src": "7926:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13462,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13458,
                      "name": "insurancePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12910,
                      "src": "7961:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                      }
                    },
                    "id": 13461,
                    "indexExpression": {
                      "expression": {
                        "id": 13459,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13450,
                        "src": "7976:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7989:6:26",
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12876,
                      "src": "7976:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7961:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7926:70:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8048:29:26",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 13465,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13450,
                              "src": "8064:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                              }
                            ],
                            "id": 13464,
                            "name": "isPositionSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13825,
                            "src": "8049:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_UserPosition_$12889_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct LeveragedGammaMarket.UserPosition memory) view returns (bool)"
                            }
                          },
                          "id": 13466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8049:28:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f542053414645",
                        "id": 13468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8079:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3120ee4b39a2f6db01a57307bb0e02097fda51e1d5313cbe4fb4e66618a34d08",
                          "typeString": "literal_string \"NOT SAFE\""
                        },
                        "value": "NOT SAFE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3120ee4b39a2f6db01a57307bb0e02097fda51e1d5313cbe4fb4e66618a34d08",
                          "typeString": "literal_string \"NOT SAFE\""
                        }
                      ],
                      "id": 13463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8040:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8040:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13470,
                  "nodeType": "ExpressionStatement",
                  "src": "8040:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 13476,
                              "name": "fillerPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13457,
                              "src": "8203:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                              }
                            },
                            "id": 13477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8214:6:26",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12861,
                            "src": "8203:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 13478,
                            "name": "positionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13442,
                            "src": "8238:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 13481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "8266:28:26",
                            "subExpression": {
                              "expression": {
                                "id": 13479,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13450,
                                "src": "8267:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                  "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                }
                              },
                              "id": 13480,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8280:14:26",
                              "memberName": "positionAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12880,
                              "src": "8267:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "id": 13484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "8312:32:26",
                            "subExpression": {
                              "expression": {
                                "id": 13482,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13450,
                                "src": "8313:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                  "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                }
                              },
                              "id": 13483,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8326:18:26",
                              "memberName": "positionAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12882,
                              "src": "8313:31:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 13488,
                                      "name": "CallbackSource",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12892,
                                      "src": "8386:14:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_CallbackSource_$12892_$",
                                        "typeString": "type(enum LeveragedGammaMarket.CallbackSource)"
                                      }
                                    },
                                    "id": 13489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8401:11:26",
                                    "memberName": "LIQUIDATION",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12891,
                                    "src": "8386:26:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_CallbackSource_$12892",
                                      "typeString": "enum LeveragedGammaMarket.CallbackSource"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 13490,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8414:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_CallbackSource_$12892",
                                      "typeString": "enum LeveragedGammaMarket.CallbackSource"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 13487,
                                  "name": "CallbackData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12898,
                                  "src": "8373:12:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_CallbackData_$12898_storage_ptr_$",
                                    "typeString": "type(struct LeveragedGammaMarket.CallbackData storage pointer)"
                                  }
                                },
                                "id": 13491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8373:43:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                  "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_CallbackData_$12898_memory_ptr",
                                  "typeString": "struct LeveragedGammaMarket.CallbackData memory"
                                }
                              ],
                              "expression": {
                                "id": 13485,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8362:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 13486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8366:6:26",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "8362:10:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 13492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8362:55:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 13474,
                            "name": "IPredyPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14415,
                            "src": "8163:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPredyPool_$14415_$",
                              "typeString": "type(contract IPredyPool)"
                            }
                          },
                          "id": 13475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8174:11:26",
                          "memberName": "TradeParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14267,
                          "src": "8163:22:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeParams_$14267_storage_ptr_$",
                            "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                          }
                        },
                        "id": 13493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8163:268:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 13494,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13445,
                        "src": "8445:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$14267_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 13471,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "8133:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8144:5:26",
                      "memberName": "trade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14315,
                      "src": "8133:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$14267_memory_ptr_$_t_struct$_SettlementData_$14422_memory_ptr_$returns$_t_struct$_TradeResult_$14283_memory_ptr_$",
                        "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 13495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8133:336:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$14283_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 13496,
                  "nodeType": "ExpressionStatement",
                  "src": "8133:336:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13498,
                        "name": "positionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13442,
                        "src": "8531:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 13499,
                          "name": "fillerPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13457,
                          "src": "8543:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                            "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                          }
                        },
                        "id": 13500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8554:6:26",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12861,
                        "src": "8543:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13497,
                      "name": "sendMarginToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13703,
                      "src": "8514:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_uint256_$returns$__$",
                        "typeString": "function (uint64,uint256)"
                      }
                    },
                    "id": 13501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8514:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13502,
                  "nodeType": "ExpressionStatement",
                  "src": "8514:47:26"
                }
              ]
            },
            "documentation": {
              "id": 13440,
              "nodeType": "StructuredDocumentation",
              "src": "7545:188:26",
              "text": " @notice Executes liquidation call for the position\n @param positionId The id of position\n @param settlementData The route of settlement created by liquidator"
            },
            "functionSelector": "c2a063e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "7747:19:26",
            "parameters": {
              "id": 13446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13442,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "7774:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13504,
                  "src": "7767:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13441,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13445,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "7820:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13504,
                  "src": "7786:48:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$14422_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 13444,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13443,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "7786:11:26",
                        "7798:14:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14422,
                      "src": "7786:26:26"
                    },
                    "referencedDeclaration": 14422,
                    "src": "7786:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$14422_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7766:69:26"
            },
            "returnParameters": {
              "id": 13447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7845:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13585,
            "nodeType": "FunctionDefinition",
            "src": "8574:784:26",
            "nodes": [],
            "body": {
              "id": 13584,
              "nodeType": "Block",
              "src": "8628:730:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13511,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "8659:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13584,
                      "src": "8638:33:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 13510,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13509,
                          "name": "UserPosition",
                          "nameLocations": [
                            "8638:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12889,
                          "src": "8638:12:26"
                        },
                        "referencedDeclaration": 12889,
                        "src": "8638:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13515,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13512,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12905,
                      "src": "8674:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                        "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 13514,
                    "indexExpression": {
                      "id": 13513,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13506,
                      "src": "8688:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8674:22:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                      "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8638:58:26"
                },
                {
                  "assignments": [
                    13520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13520,
                      "mutability": "mutable",
                      "name": "vaultStatus",
                      "nameLocation": "8771:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13584,
                      "src": "8741:41:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultStatus_$14303_memory_ptr",
                        "typeString": "struct IPredyPool.VaultStatus"
                      },
                      "typeName": {
                        "id": 13519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13518,
                          "name": "IPredyPool.VaultStatus",
                          "nameLocations": [
                            "8741:10:26",
                            "8752:11:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14303,
                          "src": "8741:22:26"
                        },
                        "referencedDeclaration": 14303,
                        "src": "8741:22:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultStatus_$14303_storage_ptr",
                          "typeString": "struct IPredyPool.VaultStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13525,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13523,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13506,
                        "src": "8811:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13521,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "8785:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8796:14:26",
                      "memberName": "getVaultStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14396,
                      "src": "8785:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_VaultStatus_$14303_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct IPredyPool.VaultStatus memory)"
                      }
                    },
                    "id": 13524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8785:34:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$14303_memory_ptr",
                      "typeString": "struct IPredyPool.VaultStatus memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8741:78:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 13530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 13527,
                              "name": "vaultStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13520,
                              "src": "8909:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultStatus_$14303_memory_ptr",
                                "typeString": "struct IPredyPool.VaultStatus memory"
                              }
                            },
                            "id": 13528,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8921:9:26",
                            "memberName": "minMargin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14302,
                            "src": "8909:21:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 13529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8934:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8909:26:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 13539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 13534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 13531,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13511,
                                    "src": "8940:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                      "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                    }
                                  },
                                  "id": 13532,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8953:14:26",
                                  "memberName": "positionAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12880,
                                  "src": "8940:27:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 13533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8971:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8940:32:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 13538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 13535,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13511,
                                    "src": "8976:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                      "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                    }
                                  },
                                  "id": 13536,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8989:18:26",
                                  "memberName": "positionAmountSqrt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12882,
                                  "src": "8976:31:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 13537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9011:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "8976:36:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8940:72:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 13540,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8939:74:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8909:104:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8888:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8888:135:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13543,
                  "nodeType": "ExpressionStatement",
                  "src": "8888:135:26"
                },
                {
                  "assignments": [
                    13548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13548,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "9056:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13584,
                      "src": "9034:27:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$14497_memory_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 13547,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13546,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "9034:8:26",
                            "9043:5:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14497,
                          "src": "9034:14:26"
                        },
                        "referencedDeclaration": 14497,
                        "src": "9034:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$14497_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13553,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13551,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13506,
                        "src": "9084:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13549,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "9064:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9075:8:26",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14388,
                      "src": "9064:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$14497_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                      }
                    },
                    "id": 13552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9064:28:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$14497_memory_ptr",
                      "typeString": "struct DataType.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9034:58:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13557,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13506,
                        "src": "9127:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 13560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "9136:13:26",
                        "subExpression": {
                          "expression": {
                            "id": 13558,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13548,
                            "src": "9137:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$14497_memory_ptr",
                              "typeString": "struct DataType.Vault memory"
                            }
                          },
                          "id": 13559,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9143:6:26",
                          "memberName": "margin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14493,
                          "src": "9137:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 13554,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "9103:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9114:12:26",
                      "memberName": "updateMargin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14351,
                      "src": "9103:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (uint256,int256) external"
                      }
                    },
                    "id": 13561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9103:47:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13562,
                  "nodeType": "ExpressionStatement",
                  "src": "9103:47:26"
                },
                {
                  "expression": {
                    "id": 13567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13563,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13511,
                        "src": "9161:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13565,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9174:14:26",
                      "memberName": "positionAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12880,
                      "src": "9161:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 13566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9191:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9161:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13568,
                  "nodeType": "ExpressionStatement",
                  "src": "9161:31:26"
                },
                {
                  "assignments": [
                    13571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13571,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "9261:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13584,
                      "src": "9239:28:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.InsurancePool"
                      },
                      "typeName": {
                        "id": 13570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13569,
                          "name": "InsurancePool",
                          "nameLocations": [
                            "9239:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12872,
                          "src": "9239:13:26"
                        },
                        "referencedDeclaration": 12872,
                        "src": "9239:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13576,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13572,
                      "name": "insurancePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12910,
                      "src": "9270:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                      }
                    },
                    "id": 13575,
                    "indexExpression": {
                      "expression": {
                        "id": 13573,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13511,
                        "src": "9285:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13574,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9298:6:26",
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12876,
                      "src": "9285:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9270:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9239:66:26"
                },
                {
                  "expression": {
                    "id": 13582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13577,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13571,
                        "src": "9316:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      "id": 13579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9323:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12865,
                      "src": "9316:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13580,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13548,
                        "src": "9339:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$14497_memory_ptr",
                          "typeString": "struct DataType.Vault memory"
                        }
                      },
                      "id": 13581,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9345:6:26",
                      "memberName": "margin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14493,
                      "src": "9339:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "9316:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13583,
                  "nodeType": "ExpressionStatement",
                  "src": "9316:35:26"
                }
              ]
            },
            "functionSelector": "37ec56ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "confirmLiquidation",
            "nameLocation": "8583:18:26",
            "parameters": {
              "id": 13507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13506,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "8610:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13585,
                  "src": "8602:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8602:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8601:17:26"
            },
            "returnParameters": {
              "id": 13508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8628:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 13630,
            "nodeType": "FunctionDefinition",
            "src": "9390:411:26",
            "nodes": [],
            "body": {
              "id": 13629,
              "nodeType": "Block",
              "src": "9480:321:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13595,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "9498:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13629,
                      "src": "9490:15:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13594,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9490:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13600,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13598,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13587,
                        "src": "9531:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13596,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "9508:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9519:11:26",
                      "memberName": "createVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14358,
                      "src": "9508:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 13599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9508:30:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9490:48:26"
                },
                {
                  "assignments": [
                    13603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13603,
                      "mutability": "mutable",
                      "name": "fillerPool",
                      "nameLocation": "9571:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13629,
                      "src": "9549:32:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.InsurancePool"
                      },
                      "typeName": {
                        "id": 13602,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13601,
                          "name": "InsurancePool",
                          "nameLocations": [
                            "9549:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12872,
                          "src": "9549:13:26"
                        },
                        "referencedDeclaration": 12872,
                        "src": "9549:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13607,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13604,
                      "name": "insurancePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12910,
                      "src": "9584:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                      }
                    },
                    "id": 13606,
                    "indexExpression": {
                      "id": 13605,
                      "name": "fillerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13589,
                      "src": "9599:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9584:29:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9549:64:26"
                },
                {
                  "expression": {
                    "id": 13612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13608,
                        "name": "fillerPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "9624:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      "id": 13610,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9635:6:26",
                      "memberName": "pairId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12861,
                      "src": "9624:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13611,
                      "name": "pairId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13587,
                      "src": "9644:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9624:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13613,
                  "nodeType": "ExpressionStatement",
                  "src": "9624:26:26"
                },
                {
                  "expression": {
                    "id": 13618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13614,
                        "name": "fillerPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "9660:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      "id": 13616,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9671:13:26",
                      "memberName": "fillerAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12863,
                      "src": "9660:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13617,
                      "name": "fillerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13589,
                      "src": "9687:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9660:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13619,
                  "nodeType": "ExpressionStatement",
                  "src": "9660:40:26"
                },
                {
                  "expression": {
                    "id": 13625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13620,
                        "name": "fillerPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13603,
                        "src": "9710:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      "id": 13622,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9721:30:26",
                      "memberName": "lastFundingRateCalculationTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12871,
                      "src": "9710:41:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13623,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9754:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 13624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9760:9:26",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9754:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9710:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13626,
                  "nodeType": "ExpressionStatement",
                  "src": "9710:59:26"
                },
                {
                  "expression": {
                    "id": 13627,
                    "name": "vaultId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13595,
                    "src": "9787:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13593,
                  "id": 13628,
                  "nodeType": "Return",
                  "src": "9780:14:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initFillerPool",
            "nameLocation": "9399:14:26",
            "parameters": {
              "id": 13590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13587,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "9422:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13630,
                  "src": "9414:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9414:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13589,
                  "mutability": "mutable",
                  "name": "fillerAddress",
                  "nameLocation": "9438:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13630,
                  "src": "9430:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9430:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9413:39:26"
            },
            "returnParameters": {
              "id": 13593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13630,
                  "src": "9471:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9471:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9470:9:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13703,
            "nodeType": "FunctionDefinition",
            "src": "9807:740:26",
            "nodes": [],
            "body": {
              "id": 13702,
              "nodeType": "Block",
              "src": "9877:670:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13639,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "9908:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13702,
                      "src": "9887:33:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 13638,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13637,
                          "name": "UserPosition",
                          "nameLocations": [
                            "9887:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12889,
                          "src": "9887:12:26"
                        },
                        "referencedDeclaration": 12889,
                        "src": "9887:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13643,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13640,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12905,
                      "src": "9923:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$12889_storage_$",
                        "typeString": "mapping(uint256 => struct LeveragedGammaMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 13642,
                    "indexExpression": {
                      "id": 13641,
                      "name": "positionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13632,
                      "src": "9937:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9923:25:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage",
                      "typeString": "struct LeveragedGammaMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9887:61:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13644,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13639,
                        "src": "9963:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13645,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9976:14:26",
                      "memberName": "positionAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12880,
                      "src": "9963:27:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9994:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9963:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13701,
                  "nodeType": "IfStatement",
                  "src": "9959:582:26",
                  "trueBody": {
                    "id": 13700,
                    "nodeType": "Block",
                    "src": "9997:544:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 13656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 13651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 13648,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13639,
                                "src": "10015:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                  "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                }
                              },
                              "id": 13649,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10028:14:26",
                              "memberName": "positionAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12880,
                              "src": "10015:27:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 13650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10046:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10015:32:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 13655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 13652,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13639,
                                "src": "10051:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                  "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                }
                              },
                              "id": 13653,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10064:12:26",
                              "memberName": "marginAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12886,
                              "src": "10051:25:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 13654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10079:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10051:29:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10015:65:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 13698,
                          "nodeType": "Block",
                          "src": "10318:213:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 13690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 13683,
                                      "name": "insurancePools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12910,
                                      "src": "10391:14:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                                      }
                                    },
                                    "id": 13686,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 13684,
                                        "name": "userPosition",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13639,
                                        "src": "10406:12:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                        }
                                      },
                                      "id": 13685,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10419:6:26",
                                      "memberName": "filler",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12876,
                                      "src": "10406:19:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10391:35:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                                    }
                                  },
                                  "id": 13687,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "10427:12:26",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12865,
                                  "src": "10391:48:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 13688,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13639,
                                    "src": "10443:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                      "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                    }
                                  },
                                  "id": 13689,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10456:12:26",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12886,
                                  "src": "10443:25:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "src": "10391:77:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 13691,
                              "nodeType": "ExpressionStatement",
                              "src": "10391:77:26"
                            },
                            {
                              "expression": {
                                "id": 13696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 13692,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13639,
                                    "src": "10487:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                      "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                    }
                                  },
                                  "id": 13694,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "10500:12:26",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12886,
                                  "src": "10487:25:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 13695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10515:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10487:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 13697,
                              "nodeType": "ExpressionStatement",
                              "src": "10487:29:26"
                            }
                          ]
                        },
                        "id": 13699,
                        "nodeType": "IfStatement",
                        "src": "10011:520:26",
                        "trueBody": {
                          "id": 13682,
                          "nodeType": "Block",
                          "src": "10082:230:26",
                          "statements": [
                            {
                              "assignments": [
                                13658
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 13658,
                                  "mutability": "mutable",
                                  "name": "marginAmount",
                                  "nameLocation": "10108:12:26",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 13682,
                                  "src": "10100:20:26",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 13657,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10100:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 13664,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 13661,
                                      "name": "userPosition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13639,
                                      "src": "10131:12:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                        "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                      }
                                    },
                                    "id": 13662,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10144:12:26",
                                    "memberName": "marginAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12886,
                                    "src": "10131:25:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 13660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10123:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 13659,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10123:7:26",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 13663,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10123:34:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10100:57:26"
                            },
                            {
                              "expression": {
                                "id": 13669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 13665,
                                    "name": "userPosition",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13639,
                                    "src": "10176:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                      "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                    }
                                  },
                                  "id": 13667,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "10189:12:26",
                                  "memberName": "marginAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 12886,
                                  "src": "10176:25:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 13668,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10204:1:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10176:29:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 13670,
                              "nodeType": "ExpressionStatement",
                              "src": "10176:29:26"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 13677,
                                      "name": "userPosition",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13639,
                                      "src": "10264:12:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                        "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                      }
                                    },
                                    "id": 13678,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10277:5:26",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12878,
                                    "src": "10264:18:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 13679,
                                    "name": "marginAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13658,
                                    "src": "10284:12:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 13672,
                                          "name": "_quoteTokenMap",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14101,
                                          "src": "10231:14:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                            "typeString": "mapping(uint256 => address)"
                                          }
                                        },
                                        "id": 13674,
                                        "indexExpression": {
                                          "id": 13673,
                                          "name": "pairId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13634,
                                          "src": "10246:6:26",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10231:22:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 13671,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8141,
                                      "src": "10224:6:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$8141_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 13675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10224:30:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$8141",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 13676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10255:8:26",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8108,
                                  "src": "10224:39:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 13680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10224:73:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 13681,
                              "nodeType": "ExpressionStatement",
                              "src": "10224:73:26"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMarginToUser",
            "nameLocation": "9816:16:26",
            "parameters": {
              "id": 13635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13632,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "9840:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13703,
                  "src": "9833:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 13631,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9833:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13634,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "9860:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13703,
                  "src": "9852:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9852:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9832:35:26"
            },
            "returnParameters": {
              "id": 13636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9877:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13739,
            "nodeType": "FunctionDefinition",
            "src": "10553:351:26",
            "nodes": [],
            "body": {
              "id": 13738,
              "nodeType": "Block",
              "src": "10612:292:26",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 13709,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13706,
                        "src": "10622:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 13711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10628:8:26",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21170,
                      "src": "10622:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$21129_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$21129_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 13712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10622:16:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13713,
                  "nodeType": "ExpressionStatement",
                  "src": "10622:16:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 13717,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13706,
                            "src": "10697:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 13718,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10703:8:26",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20941,
                          "src": "10697:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$21129_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$9945_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$21129_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 13719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10697:16:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$9945_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 13724,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10757:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                  "typeString": "contract LeveragedGammaMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LeveragedGammaMarket_$13999",
                                  "typeString": "contract LeveragedGammaMarket"
                                }
                              ],
                              "id": 13723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10749:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 13722,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10749:7:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10749:13:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 13720,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13706,
                            "src": "10727:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 13721,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10733:15:26",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20961,
                          "src": "10727:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$21129_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$9950_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$21129_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 13726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10727:36:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$9950_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 13727,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13706,
                            "src": "10777:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 13728,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10783:4:26",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21120,
                          "src": "10777:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$20871_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 13729,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10788:6:26",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20866,
                        "src": "10777:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 13730,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13706,
                          "src": "10808:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 13731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10814:4:26",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21126,
                        "src": "10808:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 13732,
                          "name": "GammaOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20860,
                          "src": "10832:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_GammaOrderLib_$20860_$",
                            "typeString": "type(library GammaOrderLib)"
                          }
                        },
                        "id": 13733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "10846:18:26",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20784,
                        "src": "10832:32:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 13734,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13706,
                          "src": "10878:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 13735,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10884:3:26",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21128,
                        "src": "10878:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$9945_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$9950_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 13714,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12850,
                        "src": "10649:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$9908",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 13716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10658:25:26",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10001,
                      "src": "10649:34:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$9945_memory_ptr_$_t_struct$_SignatureTransferDetails_$9950_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 13736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10649:248:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13737,
                  "nodeType": "ExpressionStatement",
                  "src": "10649:248:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "10562:12:26",
            "parameters": {
              "id": 13707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13706,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "10596:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13739,
                  "src": "10575:26:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$21129_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 13705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13704,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "10575:13:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 21129,
                      "src": "10575:13:26"
                    },
                    "referencedDeclaration": 21129,
                    "src": "10575:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$21129_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10574:28:26"
            },
            "returnParameters": {
              "id": 13708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10612:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13804,
            "nodeType": "FunctionDefinition",
            "src": "10910:541:26",
            "nodes": [],
            "body": {
              "id": 13803,
              "nodeType": "Block",
              "src": "10980:471:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13747,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "11012:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13803,
                      "src": "10990:28:26",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                        "typeString": "struct LeveragedGammaMarket.InsurancePool"
                      },
                      "typeName": {
                        "id": 13746,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13745,
                          "name": "InsurancePool",
                          "nameLocations": [
                            "10990:13:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12872,
                          "src": "10990:13:26"
                        },
                        "referencedDeclaration": 12872,
                        "src": "10990:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13752,
                  "initialValue": {
                    "baseExpression": {
                      "id": 13748,
                      "name": "insurancePools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12910,
                      "src": "11021:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                        "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                      }
                    },
                    "id": 13751,
                    "indexExpression": {
                      "expression": {
                        "id": 13749,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13742,
                        "src": "11036:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11049:6:26",
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12876,
                      "src": "11036:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11021:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10990:66:26"
                },
                {
                  "assignments": [
                    13754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13754,
                      "mutability": "mutable",
                      "name": "elapsedTime",
                      "nameLocation": "11075:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13803,
                      "src": "11067:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11067:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13760,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 13755,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11089:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 13756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11095:9:26",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11089:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 13757,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13742,
                        "src": "11107:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11120:28:26",
                      "memberName": "lastBorrowFeeCalculationTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12888,
                      "src": "11107:41:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11089:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11067:81:26"
                },
                {
                  "assignments": [
                    13762
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13762,
                      "mutability": "mutable",
                      "name": "borrowFee",
                      "nameLocation": "11167:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13803,
                      "src": "11159:17:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11159:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13777,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 13771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 13765,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13742,
                                "src": "11187:12:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                                  "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                                }
                              },
                              "id": 13766,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11200:15:26",
                              "memberName": "assuranceMargin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12884,
                              "src": "11187:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 13764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11179:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 13763,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11179:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11179:37:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 13768,
                          "name": "BORROW_FEE_RATE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12853,
                          "src": "11219:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11179:55:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 13770,
                        "name": "elapsedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13754,
                        "src": "11237:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11179:69:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_3153600000000000_by_1",
                            "typeString": "int_const 3153600000000000"
                          },
                          "id": 13774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "333635",
                            "id": 13772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11252:8:26",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_31536000_by_1",
                              "typeString": "int_const 31536000"
                            },
                            "value": "365"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "316538",
                            "id": 13773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11263:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "1e8"
                          },
                          "src": "11252:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3153600000000000_by_1",
                            "typeString": "int_const 3153600000000000"
                          }
                        }
                      ],
                      "id": 13775,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11251:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3153600000000000_by_1",
                        "typeString": "int_const 3153600000000000"
                      }
                    },
                    "src": "11179:88:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11159:108:26"
                },
                {
                  "expression": {
                    "id": 13785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13778,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13742,
                        "src": "11278:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11291:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12886,
                      "src": "11278:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13783,
                          "name": "borrowFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "11314:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11307:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13781,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11307:6:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11307:17:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11278:46:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13786,
                  "nodeType": "ExpressionStatement",
                  "src": "11278:46:26"
                },
                {
                  "expression": {
                    "id": 13794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13787,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13747,
                        "src": "11334:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                        }
                      },
                      "id": 13789,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11341:12:26",
                      "memberName": "marginAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12865,
                      "src": "11334:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13792,
                          "name": "borrowFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "11364:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 13791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11357:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 13790,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11357:6:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 13793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11357:17:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11334:40:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13795,
                  "nodeType": "ExpressionStatement",
                  "src": "11334:40:26"
                },
                {
                  "expression": {
                    "id": 13801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 13796,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13742,
                        "src": "11385:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 13798,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11398:28:26",
                      "memberName": "lastBorrowFeeCalculationTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12888,
                      "src": "11385:41:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13799,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11429:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 13800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11435:9:26",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11429:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11385:59:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13802,
                  "nodeType": "ExpressionStatement",
                  "src": "11385:59:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateBorrowFee",
            "nameLocation": "10919:16:26",
            "parameters": {
              "id": 13743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13742,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "10957:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13804,
                  "src": "10936:33:26",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                    "typeString": "struct LeveragedGammaMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 13741,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13740,
                      "name": "UserPosition",
                      "nameLocations": [
                        "10936:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12889,
                      "src": "10936:12:26"
                    },
                    "referencedDeclaration": 12889,
                    "src": "10936:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10935:35:26"
            },
            "returnParameters": {
              "id": 13744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10980:0:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13825,
            "nodeType": "FunctionDefinition",
            "src": "11457:219:26",
            "nodes": [],
            "body": {
              "id": 13824,
              "nodeType": "Block",
              "src": "11544:132:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13813,
                    13815,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13813,
                      "mutability": "mutable",
                      "name": "minMargin",
                      "nameLocation": "11562:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13824,
                      "src": "11555:16:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13812,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11555:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 13815,
                      "mutability": "mutable",
                      "name": "vaultValue",
                      "nameLocation": "11580:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13824,
                      "src": "11573:17:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13814,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11573:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13819,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13817,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13807,
                        "src": "11615:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                          "typeString": "struct LeveragedGammaMarket.UserPosition memory"
                        }
                      ],
                      "id": 13816,
                      "name": "calculateMinDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13913,
                      "src": "11595:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UserPosition_$12889_memory_ptr_$returns$_t_int256_$_t_int256_$_t_bool_$",
                        "typeString": "function (struct LeveragedGammaMarket.UserPosition memory) view returns (int256,int256,bool)"
                      }
                    },
                    "id": 13818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11595:33:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_bool_$",
                      "typeString": "tuple(int256,int256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11554:74:26"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13820,
                      "name": "vaultValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13815,
                      "src": "11646:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 13821,
                      "name": "minMargin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13813,
                      "src": "11660:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11646:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13811,
                  "id": 13823,
                  "nodeType": "Return",
                  "src": "11639:30:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPositionSafe",
            "nameLocation": "11466:14:26",
            "parameters": {
              "id": 13808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13807,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "11501:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13825,
                  "src": "11481:32:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                    "typeString": "struct LeveragedGammaMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 13806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13805,
                      "name": "UserPosition",
                      "nameLocations": [
                        "11481:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12889,
                      "src": "11481:12:26"
                    },
                    "referencedDeclaration": 12889,
                    "src": "11481:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11480:34:26"
            },
            "returnParameters": {
              "id": 13811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13810,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13825,
                  "src": "11538:4:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13809,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11538:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11537:6:26"
            },
            "scope": 13999,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13913,
            "nodeType": "FunctionDefinition",
            "src": "11682:1015:26",
            "nodes": [],
            "body": {
              "id": 13912,
              "nodeType": "Block",
              "src": "11851:846:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13841,
                      "mutability": "mutable",
                      "name": "positionParams",
                      "nameLocation": "11902:14:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13912,
                      "src": "11861:55:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PositionParams_$17596_memory_ptr",
                        "typeString": "struct PositionCalculator.PositionParams"
                      },
                      "typeName": {
                        "id": 13840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 13839,
                          "name": "PositionCalculator.PositionParams",
                          "nameLocations": [
                            "11861:18:26",
                            "11880:14:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17596,
                          "src": "11861:33:26"
                        },
                        "referencedDeclaration": 17596,
                        "src": "11861:33:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PositionParams_$17596_storage_ptr",
                          "typeString": "struct PositionCalculator.PositionParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13847,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 13844,
                          "name": "userPosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13828,
                          "src": "11971:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                            "typeString": "struct LeveragedGammaMarket.UserPosition memory"
                          }
                        },
                        "id": 13845,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11984:2:26",
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12874,
                        "src": "11971:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13842,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "11931:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11942:28:26",
                      "memberName": "getPositionWithUnrealizedFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14380,
                      "src": "11931:39:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_PositionParams_$17596_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct PositionCalculator.PositionParams memory)"
                      }
                    },
                    "id": 13846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11931:56:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PositionParams_$17596_memory_ptr",
                      "typeString": "struct PositionCalculator.PositionParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11861:126:26"
                },
                {
                  "assignments": [
                    13849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13849,
                      "mutability": "mutable",
                      "name": "minValue",
                      "nameLocation": "12005:8:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13912,
                      "src": "11998:15:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13848,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11998:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13850,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11998:15:26"
                },
                {
                  "assignments": [
                    13852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13852,
                      "mutability": "mutable",
                      "name": "debtValue",
                      "nameLocation": "12031:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13912,
                      "src": "12023:17:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12023:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13853,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12023:17:26"
                },
                {
                  "assignments": [
                    13855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13855,
                      "mutability": "mutable",
                      "name": "indexPrice",
                      "nameLocation": "12059:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13912,
                      "src": "12051:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12051:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13864,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 13858,
                            "name": "insurancePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12910,
                            "src": "12101:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_InsurancePool_$12872_storage_$",
                              "typeString": "mapping(address => struct LeveragedGammaMarket.InsurancePool storage ref)"
                            }
                          },
                          "id": 13861,
                          "indexExpression": {
                            "expression": {
                              "id": 13859,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13828,
                              "src": "12116:12:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                                "typeString": "struct LeveragedGammaMarket.UserPosition memory"
                              }
                            },
                            "id": 13860,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12129:6:26",
                            "memberName": "filler",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12876,
                            "src": "12116:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12101:35:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InsurancePool_$12872_storage",
                            "typeString": "struct LeveragedGammaMarket.InsurancePool storage ref"
                          }
                        },
                        "id": 13862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12137:6:26",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12861,
                        "src": "12101:42:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13856,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14097,
                        "src": "12072:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$14415",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 13857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12083:17:26",
                      "memberName": "getSqrtIndexPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14372,
                      "src": "12072:28:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 13863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12072:72:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12051:93:26"
                },
                {
                  "expression": {
                    "id": 13878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 13865,
                          "name": "minValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13849,
                          "src": "12156:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 13866,
                          "name": "vaultValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13833,
                          "src": "12166:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 13867,
                          "name": "debtValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13852,
                          "src": "12178:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 13868,
                          "name": "hasPosition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13835,
                          "src": "12189:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 13869,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12155:46:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$_t_bool_$",
                        "typeString": "tuple(int256,int256,uint256,bool)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 13872,
                            "name": "userPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13828,
                            "src": "12254:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                              "typeString": "struct LeveragedGammaMarket.UserPosition memory"
                            }
                          },
                          "id": 13873,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12267:12:26",
                          "memberName": "marginAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12886,
                          "src": "12254:25:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 13874,
                          "name": "positionParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13841,
                          "src": "12293:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PositionParams_$17596_memory_ptr",
                            "typeString": "struct PositionCalculator.PositionParams memory"
                          }
                        },
                        {
                          "id": 13875,
                          "name": "indexPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13855,
                          "src": "12321:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 13876,
                          "name": "_RISK_RATIO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "12378:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_struct$_PositionParams_$17596_memory_ptr",
                            "typeString": "struct PositionCalculator.PositionParams memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 13870,
                          "name": "PositionCalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18286,
                          "src": "12204:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PositionCalculator_$18286_$",
                            "typeString": "type(library PositionCalculator)"
                          }
                        },
                        "id": 13871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12223:17:26",
                        "memberName": "calculateMinValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17904,
                        "src": "12204:36:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_struct$_PositionParams_$17596_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_int256_$_t_uint256_$_t_bool_$",
                          "typeString": "function (int256,struct PositionCalculator.PositionParams memory,uint256,uint256) pure returns (int256,int256,uint256,bool)"
                        }
                      },
                      "id": 13877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12204:195:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$_t_bool_$",
                        "typeString": "tuple(int256,int256,uint256,bool)"
                      }
                    },
                    "src": "12155:244:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13879,
                  "nodeType": "ExpressionStatement",
                  "src": "12155:244:26"
                },
                {
                  "assignments": [
                    13881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13881,
                      "mutability": "mutable",
                      "name": "minMinValue",
                      "nameLocation": "12417:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13912,
                      "src": "12410:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13880,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12410:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13890,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 13886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 13884,
                            "name": "_MARGIN_RATIO_WITH_DEBT_SQUART",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12856,
                            "src": "12449:30:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 13885,
                            "name": "debtValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13852,
                            "src": "12482:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12449:42:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 13887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12494:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "12449:48:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 13882,
                        "name": "SafeCast",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9682,
                        "src": "12431:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCast_$9682_$",
                          "typeString": "type(library SafeCast)"
                        }
                      },
                      "id": 13883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12440:8:26",
                      "memberName": "toInt256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9681,
                      "src": "12431:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (uint256) pure returns (int256)"
                      }
                    },
                    "id": 13889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12431:67:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12410:88:26"
                },
                {
                  "expression": {
                    "id": 13897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13891,
                      "name": "minMargin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13831,
                      "src": "12509:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 13896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 13894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13892,
                          "name": "vaultValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13833,
                          "src": "12521:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 13893,
                          "name": "minValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13849,
                          "src": "12534:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "12521:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 13895,
                        "name": "minMinValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13881,
                        "src": "12545:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "12521:35:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "12509:47:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 13898,
                  "nodeType": "ExpressionStatement",
                  "src": "12509:47:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 13904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13899,
                      "name": "hasPosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13835,
                      "src": "12571:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 13903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 13900,
                        "name": "minMargin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13831,
                        "src": "12586:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 13901,
                          "name": "Constants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14480,
                          "src": "12598:9:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Constants_$14480_$",
                            "typeString": "type(library Constants)"
                          }
                        },
                        "id": 13902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12608:17:26",
                        "memberName": "MIN_MARGIN_AMOUNT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14444,
                        "src": "12598:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "src": "12586:39:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12571:54:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13911,
                  "nodeType": "IfStatement",
                  "src": "12567:124:26",
                  "trueBody": {
                    "id": 13910,
                    "nodeType": "Block",
                    "src": "12627:64:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 13908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13905,
                            "name": "minMargin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13831,
                            "src": "12641:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 13906,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14480,
                              "src": "12653:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$14480_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 13907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12663:17:26",
                            "memberName": "MIN_MARGIN_AMOUNT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14444,
                            "src": "12653:27:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "12641:39:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13909,
                        "nodeType": "ExpressionStatement",
                        "src": "12641:39:26"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMinDeposit",
            "nameLocation": "11691:19:26",
            "parameters": {
              "id": 13829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13828,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "11731:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13913,
                  "src": "11711:32:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$12889_memory_ptr",
                    "typeString": "struct LeveragedGammaMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 13827,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13826,
                      "name": "UserPosition",
                      "nameLocations": [
                        "11711:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12889,
                      "src": "11711:12:26"
                    },
                    "referencedDeclaration": 12889,
                    "src": "11711:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$12889_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11710:34:26"
            },
            "returnParameters": {
              "id": 13836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13831,
                  "mutability": "mutable",
                  "name": "minMargin",
                  "nameLocation": "11799:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13913,
                  "src": "11792:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13830,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11792:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13833,
                  "mutability": "mutable",
                  "name": "vaultValue",
                  "nameLocation": "11817:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13913,
                  "src": "11810:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13832,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11810:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13835,
                  "mutability": "mutable",
                  "name": "hasPosition",
                  "nameLocation": "11834:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13913,
                  "src": "11829:16:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13834,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11829:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11791:55:26"
            },
            "scope": 13999,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13950,
            "nodeType": "FunctionDefinition",
            "src": "12703:363:26",
            "nodes": [],
            "body": {
              "id": 13949,
              "nodeType": "Block",
              "src": "12859:207:26",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    13926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13926,
                      "mutability": "mutable",
                      "name": "rounded",
                      "nameLocation": "12876:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 13949,
                      "src": "12869:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 13925,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12869:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 13933,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 13928,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13918,
                        "src": "12899:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 13931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 13929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12908:2:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 13930,
                          "name": "_marginRoundedDecimal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13920,
                          "src": "12914:21:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "12908:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13927,
                      "name": "_roundMargin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13998,
                      "src": "12886:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (int256,uint256) pure returns (int256)"
                      }
                    },
                    "id": 13932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12886:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12869:67:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13934,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13918,
                      "src": "12951:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 13935,
                      "name": "rounded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13926,
                      "src": "12961:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "12951:17:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13946,
                  "nodeType": "IfStatement",
                  "src": "12947:88:26",
                  "trueBody": {
                    "id": 13945,
                    "nodeType": "Block",
                    "src": "12970:65:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 13943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 13937,
                              "name": "filler",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13916,
                              "src": "12984:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                                "typeString": "struct LeveragedGammaMarket.InsurancePool storage pointer"
                              }
                            },
                            "id": 13939,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12991:12:26",
                            "memberName": "marginAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12865,
                            "src": "12984:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 13942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 13940,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13918,
                              "src": "13007:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 13941,
                              "name": "rounded",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13926,
                              "src": "13017:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "13007:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "12984:40:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 13944,
                        "nodeType": "ExpressionStatement",
                        "src": "12984:40:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 13947,
                    "name": "rounded",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13926,
                    "src": "13052:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 13924,
                  "id": 13948,
                  "nodeType": "Return",
                  "src": "13045:14:26"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_roundAndAddToProtocolFee",
            "nameLocation": "12712:25:26",
            "parameters": {
              "id": 13921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13916,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "12760:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13950,
                  "src": "12738:28:26",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                    "typeString": "struct LeveragedGammaMarket.InsurancePool"
                  },
                  "typeName": {
                    "id": 13915,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13914,
                      "name": "InsurancePool",
                      "nameLocations": [
                        "12738:13:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12872,
                      "src": "12738:13:26"
                    },
                    "referencedDeclaration": 12872,
                    "src": "12738:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InsurancePool_$12872_storage_ptr",
                      "typeString": "struct LeveragedGammaMarket.InsurancePool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13918,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "12775:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13950,
                  "src": "12768:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13917,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12768:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13920,
                  "mutability": "mutable",
                  "name": "_marginRoundedDecimal",
                  "nameLocation": "12790:21:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13950,
                  "src": "12784:27:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 13919,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "12784:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12737:75:26"
            },
            "returnParameters": {
              "id": 13924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13950,
                  "src": "12847:6:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13922,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12847:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12846:8:26"
            },
            "scope": 13999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 13998,
            "nodeType": "FunctionDefinition",
            "src": "13072:386:26",
            "nodes": [],
            "body": {
              "id": 13997,
              "nodeType": "Block",
              "src": "13167:291:26",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 13961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 13959,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13952,
                      "src": "13181:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 13960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13191:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13181:11:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 13995,
                    "nodeType": "Block",
                    "src": "13326:126:26",
                    "statements": [
                      {
                        "expression": {
                          "id": 13993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "13347:94:26",
                          "subExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 13991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 13985,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "-",
                                          "prefix": true,
                                          "src": "13390:8:26",
                                          "subExpression": {
                                            "id": 13984,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13952,
                                            "src": "13391:7:26",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_int256",
                                              "typeString": "int256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 13983,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13382:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 13982,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13382:7:26",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 13986,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13382:17:26",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "31",
                                      "id": 13987,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13401:1:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    {
                                      "id": 13988,
                                      "name": "_roundedDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 13954,
                                      "src": "13404:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 13980,
                                      "name": "FixedPointMathLib",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10203,
                                      "src": "13355:17:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$10203_$",
                                        "typeString": "type(library FixedPointMathLib)"
                                      }
                                    },
                                    "id": 13981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13373:8:26",
                                    "memberName": "mulDivUp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10147,
                                    "src": "13355:26:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 13989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13355:66:26",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 13990,
                                  "name": "_roundedDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13954,
                                  "src": "13424:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13355:85:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 13979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13348:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 13978,
                                "name": "int256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13348:6:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 13992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13348:93:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 13958,
                        "id": 13994,
                        "nodeType": "Return",
                        "src": "13340:101:26"
                      }
                    ]
                  },
                  "id": 13996,
                  "nodeType": "IfStatement",
                  "src": "13177:275:26",
                  "trueBody": {
                    "id": 13977,
                    "nodeType": "Block",
                    "src": "13194:126:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 13974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 13968,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13952,
                                        "src": "13259:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 13967,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13251:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 13966,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13251:7:26",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 13969,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13251:16:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 13970,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13269:1:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  {
                                    "id": 13971,
                                    "name": "_roundedDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13954,
                                    "src": "13272:16:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 13964,
                                    "name": "FixedPointMathLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10203,
                                    "src": "13222:17:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_FixedPointMathLib_$10203_$",
                                      "typeString": "type(library FixedPointMathLib)"
                                    }
                                  },
                                  "id": 13965,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13240:10:26",
                                  "memberName": "mulDivDown",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10134,
                                  "src": "13222:28:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 13972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13222:67:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 13973,
                                "name": "_roundedDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13954,
                                "src": "13292:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13222:86:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 13963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13215:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 13962,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13215:6:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13215:94:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 13958,
                        "id": 13976,
                        "nodeType": "Return",
                        "src": "13208:101:26"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_roundMargin",
            "nameLocation": "13081:12:26",
            "parameters": {
              "id": 13955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13952,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13101:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13998,
                  "src": "13094:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13951,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13094:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13954,
                  "mutability": "mutable",
                  "name": "_roundedDecimals",
                  "nameLocation": "13118:16:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 13998,
                  "src": "13110:24:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13110:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13093:42:26"
            },
            "returnParameters": {
              "id": 13958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13957,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13998,
                  "src": "13159:6:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 13956,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13159:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13158:8:26"
            },
            "scope": 13999,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12826,
              "name": "IFillerMarket",
              "nameLocations": [
                "970:13:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14195,
              "src": "970:13:26"
            },
            "id": 12827,
            "nodeType": "InheritanceSpecifier",
            "src": "970:13:26"
          },
          {
            "baseName": {
              "id": 12828,
              "name": "BaseHookCallback",
              "nameLocations": [
                "985:16:26"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14185,
              "src": "985:16:26"
            },
            "id": 12829,
            "nodeType": "InheritanceSpecifier",
            "src": "985:16:26"
          }
        ],
        "canonicalName": "LeveragedGammaMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12825,
          "nodeType": "StructuredDocumentation",
          "src": "875:61:26",
          "text": " @notice Provides leveraged perps to retail traders"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          13999,
          14185,
          14208,
          14195
        ],
        "name": "LeveragedGammaMarket",
        "nameLocation": "946:20:26",
        "scope": 14000,
        "usedErrors": [
          12900,
          14103,
          14189,
          21132,
          21135
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 26
}
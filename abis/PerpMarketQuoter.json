{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract PerpMarket",
          "name": "_perpMarket",
          "type": "address"
        },
        {
          "internalType": "contract PredyPoolQuoter",
          "name": "_predyPoolQuoter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "perpMarket",
      "outputs": [
        {
          "internalType": "contract PerpMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "predyPoolQuoter",
      "outputs": [
        {
          "internalType": "contract PredyPoolQuoter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "filler",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "pairId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "entryTokenAddress",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "address",
              "name": "validatorAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "validationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct PerpOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "quoteExecuteOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "entryUpdate",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "payoff",
              "type": "int256"
            }
          ],
          "internalType": "struct PerpMarket.PerpTradeResult",
          "name": "perpTradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        }
      ],
      "name": "quoteUserPosition",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "filler",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "positionAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "entryValue",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "cumulativeFundingRates",
              "type": "int256"
            }
          ],
          "internalType": "struct PerpMarket.UserPosition",
          "name": "userPosition",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161099f38038061099f83398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b6108de806100c16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063462bf388146100515780634c49b7e4146100815780637521ec92146100af57806388c2a40814610131575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f366004610576565b610144565b60408051825181526020928301519281019290925201610078565b6100c26100bd366004610670565b610201565b60405161007891906000610100820190508251825260208301516020830152604083015160018060a01b03808216604085015280606086015116606085015250506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b600154610064906001600160a01b031681565b604080518082019091526000808252602082015260005460015460405163798c80d560e01b81526001600160a01b039283169263798c80d59261018f928892889216906004016106fe565b600060405180830381600087803b1580156101a957600080fd5b505af19250505080156101ba575060015b6101fb573d8080156101e8576040519150601f19603f3d011682016040523d82523d6000602084013e6101ed565b606091505b506101f7816102a6565b9150505b92915050565b61020961030e565b600054604051633a90f64960e11b8152600481018490526001600160a01b0390911690637521ec9290602401600060405180830381600087803b15801561024f57600080fd5b505af1925050508015610260575060015b6102a1573d80801561028e576040519150601f19603f3d011682016040523d82523d6000602084013e610293565b606091505b5061029d816102e0565b9150505b919050565b604080518082019091526000808252602082015260c0825110156102cc57815182602001fd5b818060200190518101906101fb91906107f3565b6102e861030e565b60c0825110156102fa57815182602001fd5b818060200190518101906101fb9190610825565b604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561039e5761039e610365565b60405290565b604051610100810167ffffffffffffffff8111828210171561039e5761039e610365565b6001600160a01b03811681146103dd57600080fd5b50565b80356102a1816103c8565b600060a082840312156103fd57600080fd5b60405160a0810181811067ffffffffffffffff8211171561042057610420610365565b6040529050808235610431816103c8565b81526020830135610441816103c8565b60208201526040830135610454816103c8565b8060408301525060608301356060820152608083013560808201525092915050565b803567ffffffffffffffff811681146102a157600080fd5b600082601f83011261049f57600080fd5b813567ffffffffffffffff808211156104ba576104ba610365565b604051601f8301601f19908116603f011681019082821181831017156104e2576104e2610365565b816040528381528660208588010111156104fb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561052d57600080fd5b61053561037b565b90508135610542816103c8565b8152602082013567ffffffffffffffff81111561055e57600080fd5b61056a8482850161048e565b60208301525092915050565b6000806040838503121561058957600080fd5b823567ffffffffffffffff808211156105a157600080fd5b9084019061018082870312156105b657600080fd5b6105be6103a4565b6105c887846103eb565b815260a083013560208201526105e060c08401610476565b60408201526105f160e084016103e0565b6060820152610100830135608082015261012083013560a082015261061961014084016103e0565b60c08201526101608301358281111561063157600080fd5b61063d8882860161048e565b60e0830152509350602085013591508082111561065957600080fd5b506106668582860161051b565b9150509250929050565b60006020828403121561068257600080fd5b5035919050565b6000815180845260005b818110156106af57602081850181015186830182015201610693565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03815116825260006020820151604060208501526106f66040850182610689565b949350505050565b6060808252845180516001600160a01b039081168484015260208201518116608080860191909152604083015190911660a08501529181015160c0840152015160e082015260208401516101008201526000604085015161076c61012084018267ffffffffffffffff169052565b5060608501516001600160a01b03908116610140840152608086015161016084015260a08601516101808085019190915260c08701519091166101a084015260e08601516101c08401919091526107c76101e0840182610689565b905082810360208401526107db81866106cf565b9150506106f660408301846001600160a01b03169052565b60006040828403121561080557600080fd5b61080d61037b565b82518152602083015160208201528091505092915050565b6000610100828403121561083857600080fd5b6108406103a4565b8251815260208301516020820152604083015161085c816103c8565b6040820152606083015161086f816103c8565b806060830152506080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152809150509291505056fea26469706673582212200be981cd74fe56c44efb034dcd9d58906b79dc24777fecb94422f9fe7748372664736f6c63430008130033",
    "sourceMap": "176:1855:69:-:0;;;287:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;367:10;:24;;-1:-1:-1;;;;;367:24:69;;;-1:-1:-1;;;;;;367:24:69;;;;;;;;401:34;;;;;;;;;;;176:1855;;14:143:161;-1:-1:-1;;;;;101:31:161;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:454::-;286:6;294;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;395:9;389:16;414:43;451:5;414:43;:::i;:::-;526:2;511:18;;505:25;476:5;;-1:-1:-1;539:45:161;505:25;539:45;:::i;:::-;603:7;593:17;;;162:454;;;;;:::o;:::-;176:1855:69;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063462bf388146100515780634c49b7e4146100815780637521ec92146100af57806388c2a40814610131575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f366004610576565b610144565b60408051825181526020928301519281019290925201610078565b6100c26100bd366004610670565b610201565b60405161007891906000610100820190508251825260208301516020830152604083015160018060a01b03808216604085015280606086015116606085015250506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b600154610064906001600160a01b031681565b604080518082019091526000808252602082015260005460015460405163798c80d560e01b81526001600160a01b039283169263798c80d59261018f928892889216906004016106fe565b600060405180830381600087803b1580156101a957600080fd5b505af19250505080156101ba575060015b6101fb573d8080156101e8576040519150601f19603f3d011682016040523d82523d6000602084013e6101ed565b606091505b506101f7816102a6565b9150505b92915050565b61020961030e565b600054604051633a90f64960e11b8152600481018490526001600160a01b0390911690637521ec9290602401600060405180830381600087803b15801561024f57600080fd5b505af1925050508015610260575060015b6102a1573d80801561028e576040519150601f19603f3d011682016040523d82523d6000602084013e610293565b606091505b5061029d816102e0565b9150505b919050565b604080518082019091526000808252602082015260c0825110156102cc57815182602001fd5b818060200190518101906101fb91906107f3565b6102e861030e565b60c0825110156102fa57815182602001fd5b818060200190518101906101fb9190610825565b604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561039e5761039e610365565b60405290565b604051610100810167ffffffffffffffff8111828210171561039e5761039e610365565b6001600160a01b03811681146103dd57600080fd5b50565b80356102a1816103c8565b600060a082840312156103fd57600080fd5b60405160a0810181811067ffffffffffffffff8211171561042057610420610365565b6040529050808235610431816103c8565b81526020830135610441816103c8565b60208201526040830135610454816103c8565b8060408301525060608301356060820152608083013560808201525092915050565b803567ffffffffffffffff811681146102a157600080fd5b600082601f83011261049f57600080fd5b813567ffffffffffffffff808211156104ba576104ba610365565b604051601f8301601f19908116603f011681019082821181831017156104e2576104e2610365565b816040528381528660208588010111156104fb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561052d57600080fd5b61053561037b565b90508135610542816103c8565b8152602082013567ffffffffffffffff81111561055e57600080fd5b61056a8482850161048e565b60208301525092915050565b6000806040838503121561058957600080fd5b823567ffffffffffffffff808211156105a157600080fd5b9084019061018082870312156105b657600080fd5b6105be6103a4565b6105c887846103eb565b815260a083013560208201526105e060c08401610476565b60408201526105f160e084016103e0565b6060820152610100830135608082015261012083013560a082015261061961014084016103e0565b60c08201526101608301358281111561063157600080fd5b61063d8882860161048e565b60e0830152509350602085013591508082111561065957600080fd5b506106668582860161051b565b9150509250929050565b60006020828403121561068257600080fd5b5035919050565b6000815180845260005b818110156106af57602081850181015186830182015201610693565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03815116825260006020820151604060208501526106f66040850182610689565b949350505050565b6060808252845180516001600160a01b039081168484015260208201518116608080860191909152604083015190911660a08501529181015160c0840152015160e082015260208401516101008201526000604085015161076c61012084018267ffffffffffffffff169052565b5060608501516001600160a01b03908116610140840152608086015161016084015260a08601516101808085019190915260c08701519091166101a084015260e08601516101c08401919091526107c76101e0840182610689565b905082810360208401526107db81866106cf565b9150506106f660408301846001600160a01b03169052565b60006040828403121561080557600080fd5b61080d61037b565b82518152602083015160208201528091505092915050565b6000610100828403121561083857600080fd5b6108406103a4565b8251815260208301516020820152604083015161085c816103c8565b6040820152606083015161086f816103c8565b806060830152506080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152809150509291505056fea26469706673582212200be981cd74fe56c44efb034dcd9d58906b79dc24777fecb94422f9fe7748372664736f6c63430008130033",
    "sourceMap": "176:1855:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208:28;;;;;-1:-1:-1;;;;;208:28:69;;;;;;-1:-1:-1;;;;;319:32:161;;;301:51;;289:2;274:18;208:28:69;;;;;;;;448:400;;;;;;:::i;:::-;;:::i;:::-;;;;5129:13:161;;5111:32;;5199:4;5187:17;;;5181:24;5159:20;;;5152:54;;;;5084:18;448:400:69;4897:315:161;854:290:69;;;;;;:::i;:::-;;:::i;:::-;;;;;;5556:4:161;5598:3;5587:9;5583:19;5575:27;;5635:6;5629:13;5618:9;5611:32;5699:4;5691:6;5687:17;5681:24;5674:4;5663:9;5659:20;5652:54;5753:4;5745:6;5741:17;5735:24;5795:1;5791;5786:3;5782:11;5778:19;5853:2;5839:12;5835:21;5828:4;5817:9;5813:20;5806:51;5925:2;5917:4;5909:6;5905:17;5899:24;5895:33;5888:4;5877:9;5873:20;5866:63;;;5985:4;5977:6;5973:17;5967:24;5960:4;5949:9;5945:20;5938:54;6048:4;6040:6;6036:17;6030:24;6023:4;6012:9;6008:20;6001:54;6111:4;6103:6;6099:17;6093:24;6086:4;6075:9;6071:20;6064:54;6174:4;6166:6;6162:17;6156:24;6149:4;6138:9;6134:20;6127:54;5402:785;;;;;242:38:69;;;;;-1:-1:-1;;;;;242:38:69;;;448:400;-1:-1:-1;;;;;;;;;;;;;;;;;652:10:69;;;704:15;652:68;;-1:-1:-1;;;652:68:69;;-1:-1:-1;;;;;652:10:69;;;;:28;;:68;;681:5;;688:14;;704:15;;652:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;648:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;792:39;824:6;792:31;:39::i;:::-;774:57;;732:110;648:194;448:400;;;;:::o;854:290::-;919:43;;:::i;:::-;978:10;;:40;;-1:-1:-1;;;978:40:69;;;;;9160:25:161;;;-1:-1:-1;;;;;978:10:69;;;;:28;;9133:18:161;;978:40:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:40;1120:6;1087:32;:40::i;:::-;1072:55;;1030:108;974:164;854:290;;;:::o;1258:393::-;-1:-1:-1;;;;;;;;;;;;;;;;;1451:3:69;1435:6;:13;:19;1431:214;;;1527:6;1521:13;1512:6;1508:2;1504:15;1497:38;1431:214;1597:6;1586:48;;;;;;;;;;;;:::i;1657:372::-;1766:30;;:::i;:::-;1832:3;1816:6;:13;:19;1812:211;;;1908:6;1902:13;1893:6;1889:2;1885:15;1878:38;1812:211;1978:6;1967:45;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;363:127:161:-;424:10;419:3;415:20;412:1;405:31;455:4;452:1;445:15;479:4;476:1;469:15;495:252;562:4;556:11;;;594:17;;641:18;626:34;;662:22;;;623:62;620:88;;;688:18;;:::i;:::-;724:4;717:24;495:252;:::o;752:255::-;824:2;818:9;866:6;854:19;;903:18;888:34;;924:22;;;885:62;882:88;;;950:18;;:::i;1012:131::-;-1:-1:-1;;;;;1087:31:161;;1077:42;;1067:70;;1133:1;1130;1123:12;1067:70;1012:131;:::o;1148:134::-;1216:20;;1245:31;1216:20;1245:31;:::i;1287:893::-;1343:5;1391:4;1379:9;1374:3;1370:19;1366:30;1363:50;;;1409:1;1406;1399:12;1363:50;1442:2;1436:9;1484:4;1476:6;1472:17;1555:6;1543:10;1540:22;1519:18;1507:10;1504:34;1501:62;1498:88;;;1566:18;;:::i;:::-;1602:2;1595:22;1635:6;-1:-1:-1;1635:6:161;1665:23;;1697:33;1665:23;1697:33;:::i;:::-;1739:23;;1814:2;1799:18;;1786:32;1827:33;1786:32;1827:33;:::i;:::-;1888:2;1876:15;;1869:32;1953:2;1938:18;;1925:32;1966:33;1925:32;1966:33;:::i;:::-;2032:7;2027:2;2019:6;2015:15;2008:32;;2101:2;2090:9;2086:18;2073:32;2068:2;2060:6;2056:15;2049:57;2168:3;2157:9;2153:19;2140:33;2134:3;2126:6;2122:16;2115:59;;1287:893;;;;:::o;2185:171::-;2252:20;;2312:18;2301:30;;2291:41;;2281:69;;2346:1;2343;2336:12;2361:718;2403:5;2456:3;2449:4;2441:6;2437:17;2433:27;2423:55;;2474:1;2471;2464:12;2423:55;2510:6;2497:20;2536:18;2573:2;2569;2566:10;2563:36;;;2579:18;;:::i;:::-;2654:2;2648:9;2622:2;2708:13;;-1:-1:-1;;2704:22:161;;;2728:2;2700:31;2696:40;2684:53;;;2752:18;;;2772:22;;;2749:46;2746:72;;;2798:18;;:::i;:::-;2838:10;2834:2;2827:22;2873:2;2865:6;2858:18;2919:3;2912:4;2907:2;2899:6;2895:15;2891:26;2888:35;2885:55;;;2936:1;2933;2926:12;2885:55;3000:2;2993:4;2985:6;2981:17;2974:4;2966:6;2962:17;2949:54;3047:1;3040:4;3035:2;3027:6;3023:15;3019:26;3012:37;3067:6;3058:15;;;;;;2361:718;;;;:::o;3084:484::-;3145:5;3193:4;3181:9;3176:3;3172:19;3168:30;3165:50;;;3211:1;3208;3201:12;3165:50;3233:17;;:::i;:::-;3224:26;;3287:9;3274:23;3306:33;3331:7;3306:33;:::i;:::-;3348:22;;3421:2;3406:18;;3393:32;3448:18;3437:30;;3434:50;;;3480:1;3477;3470:12;3434:50;3516:45;3557:3;3548:6;3537:9;3533:22;3516:45;:::i;:::-;3511:2;3504:5;3500:14;3493:69;;3084:484;;;;:::o;3573:1319::-;3702:6;3710;3763:2;3751:9;3742:7;3738:23;3734:32;3731:52;;;3779:1;3776;3769:12;3731:52;3819:9;3806:23;3848:18;3889:2;3881:6;3878:14;3875:34;;;3905:1;3902;3895:12;3875:34;3928:22;;;;3984:6;3966:16;;;3962:29;3959:49;;;4004:1;4001;3994:12;3959:49;4030:22;;:::i;:::-;4075:40;4107:7;4103:2;4075:40;:::i;:::-;4068:5;4061:55;4171:3;4167:2;4163:12;4150:26;4143:4;4136:5;4132:16;4125:52;4209:31;4235:3;4231:2;4227:12;4209:31;:::i;:::-;4204:2;4197:5;4193:14;4186:55;4275:32;4302:3;4298:2;4294:12;4275:32;:::i;:::-;4268:4;4261:5;4257:16;4250:58;4363:6;4359:2;4355:15;4342:29;4335:4;4328:5;4324:16;4317:55;4426:3;4422:2;4418:12;4405:26;4399:3;4392:5;4388:15;4381:51;4465:32;4492:3;4488:2;4484:12;4465:32;:::i;:::-;4459:3;4452:5;4448:15;4441:57;4544:3;4540:2;4536:12;4523:26;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4627:44;4663:7;4652:8;4648:2;4644:17;4627:44;:::i;:::-;4621:3;4610:15;;4603:69;-1:-1:-1;4614:5:161;-1:-1:-1;4749:4:161;4734:20;;4721:34;;-1:-1:-1;4767:16:161;;;4764:36;;;4796:1;4793;4786:12;4764:36;;4819:67;4878:7;4867:8;4856:9;4852:24;4819:67;:::i;:::-;4809:77;;;3573:1319;;;;;:::o;5217:180::-;5276:6;5329:2;5317:9;5308:7;5304:23;5300:32;5297:52;;;5345:1;5342;5335:12;5297:52;-1:-1:-1;5368:23:161;;5217:180;-1:-1:-1;5217:180:161:o;6920:422::-;6961:3;6999:5;6993:12;7026:6;7021:3;7014:19;7051:1;7061:162;7075:6;7072:1;7069:13;7061:162;;;7137:4;7193:13;;;7189:22;;7183:29;7165:11;;;7161:20;;7154:59;7090:12;7061:162;;;7065:3;7268:1;7261:4;7252:6;7247:3;7243:16;7239:27;7232:38;7331:4;7324:2;7320:7;7315:2;7307:6;7303:15;7299:29;7294:3;7290:39;7286:50;7279:57;;;6920:422;;;;:::o;7347:283::-;7469:1;7465;7460:3;7456:11;7452:19;7444:5;7438:12;7434:38;7429:3;7422:51;7404:3;7519:4;7512:5;7508:16;7502:23;7557:4;7550;7545:3;7541:14;7534:28;7578:46;7618:4;7613:3;7609:14;7595:12;7578:46;:::i;:::-;7571:53;7347:283;-1:-1:-1;;;;7347:283:161:o;7635:1374::-;7967:2;7949:21;;;8007:13;;6542:12;;-1:-1:-1;;;;;6538:21:161;;;8022:18;;;6526:34;6613:4;6602:16;;6596:23;6592:32;;6576:14;;;;6569:56;;;;6678:4;6667:16;;6661:23;6657:32;;;6641:14;;;6634:56;6728:16;;;6722:23;6706:14;;;6699:47;6784:16;6778:23;6762:14;;;6755:47;8096:4;8088:6;8084:17;8078:24;8072:3;8061:9;8057:19;8050:53;7930:4;8150;8142:6;8138:17;8132:24;8165:52;8212:3;8201:9;8197:19;8183:12;6889:18;6878:30;6866:43;;6813:102;8165:52;-1:-1:-1;8266:2:161;8254:15;;8248:22;-1:-1:-1;;;;;92:31:161;;;8341:3;8326:19;;80:44;8401:4;8389:17;;8383:24;8377:3;8362:19;;8355:53;8445:4;8433:17;;8427:24;8470:6;8492:18;;;8485:30;;;;8564:4;8552:17;;8546:24;92:31;;;8641:3;8626:19;;80:44;8695:4;8683:17;;8677:24;8732:3;8717:19;;8710:31;;;;8761:53;8809:3;8794:19;;8677:24;8761:53;:::i;:::-;8750:64;;8861:9;8856:3;8852:19;8845:4;8834:9;8830:20;8823:49;8889:45;8930:3;8922:6;8889:45;:::i;:::-;8881:53;;;8943:60;8997:4;8986:9;8982:20;8974:6;-1:-1:-1;;;;;92:31:161;80:44;;14:116;9196:344;9300:6;9353:2;9341:9;9332:7;9328:23;9324:32;9321:52;;;9369:1;9366;9359:12;9321:52;9395:17;;:::i;:::-;9441:9;9435:16;9428:5;9421:31;9505:2;9494:9;9490:18;9484:25;9479:2;9472:5;9468:14;9461:49;9529:5;9519:15;;;9196:344;;;;:::o;9545:849::-;9646:6;9699:3;9687:9;9678:7;9674:23;9670:33;9667:53;;;9716:1;9713;9706:12;9667:53;9742:22;;:::i;:::-;9793:9;9787:16;9780:5;9773:31;9857:2;9846:9;9842:18;9836:25;9831:2;9824:5;9820:14;9813:49;9907:2;9896:9;9892:18;9886:25;9920:33;9945:7;9920:33;:::i;:::-;9980:2;9969:14;;9962:31;10038:2;10023:18;;10017:25;10051:33;10017:25;10051:33;:::i;:::-;10116:7;10111:2;10104:5;10100:14;10093:31;;10178:3;10167:9;10163:19;10157:26;10151:3;10144:5;10140:15;10133:51;10238:3;10227:9;10223:19;10217:26;10211:3;10204:5;10200:15;10193:51;10298:3;10287:9;10283:19;10277:26;10271:3;10264:5;10260:15;10253:51;10358:3;10347:9;10343:19;10337:26;10331:3;10324:5;10320:15;10313:51;10383:5;10373:15;;;9545:849;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "perpMarket()": "462bf388",
    "predyPoolQuoter()": "88c2a408",
    "quoteExecuteOrder(((address,address,address,uint256,uint256),uint256,uint64,address,int256,int256,address,bytes),(address,bytes))": "4c49b7e4",
    "quoteUserPosition(uint256)": "7521ec92"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PerpMarket\",\"name\":\"_perpMarket\",\"type\":\"address\"},{\"internalType\":\"contract PredyPoolQuoter\",\"name\":\"_predyPoolQuoter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"perpMarket\",\"outputs\":[{\"internalType\":\"contract PerpMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predyPoolQuoter\",\"outputs\":[{\"internalType\":\"contract PredyPoolQuoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"pairId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"entryTokenAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct PerpOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"quoteExecuteOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"entryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"payoff\",\"type\":\"int256\"}],\"internalType\":\"struct PerpMarket.PerpTradeResult\",\"name\":\"perpTradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"quoteUserPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"filler\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"entryValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRates\",\"type\":\"int256\"}],\"internalType\":\"struct PerpMarket.UserPosition\",\"name\":\"userPosition\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Quoter contract for PerpMarket\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/PerpMarketQuoter.sol\":\"PerpMarketQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PerpMarket.sol\":{\"keccak256\":\"0xa6f058423ae8de58a3683a299392ba8064ebe7b42516484ccb331a2ac0e1bff4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dd130d21c6ab3ff743e9e87e97b95c95e177d7b77cca0c69dba9aeba899a5db1\",\"dweb:/ipfs/QmQdG8mUKNRLvatKNQu7DbevciRtKDAzGhTdw2qtR4HQtQ\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d\",\"dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d\",\"dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0xd7a2b8b3e38d353b76925acd0e3b1cfa43f8c52042b00e9e17068ee556615a16\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5daa3acc0f82d915c7c45b1a8ac6d3e238c03f41818c0cf771d955712811f53\",\"dweb:/ipfs/QmQaWGc1HL37g26wqDpGYJA1E6EooAPsW6n3pNnjN7NwLq\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/lens/PerpMarketQuoter.sol\":{\"keccak256\":\"0x0cdae48c32875d00c1609aa399ac42117b44be01b931a4ad655ab434222898fd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e6ba80d66883c0bce67fa3b1d57e976b256adedd621026b06c0145e1374ac64f\",\"dweb:/ipfs/QmRGqZxHGaDncCNaXytM5poiyDW8SajpAt6BWSRzsh4QAj\"]},\"src/lens/PredyPoolQuoter.sol\":{\"keccak256\":\"0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab\",\"dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7\",\"dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/GammaOrder.sol\":{\"keccak256\":\"0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa\",\"dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022\",\"dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/PerpOrder.sol\":{\"keccak256\":\"0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e\",\"dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract PerpMarket",
              "name": "_perpMarket",
              "type": "address"
            },
            {
              "internalType": "contract PredyPoolQuoter",
              "name": "_predyPoolQuoter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "perpMarket",
          "outputs": [
            {
              "internalType": "contract PerpMarket",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "predyPoolQuoter",
          "outputs": [
            {
              "internalType": "contract PredyPoolQuoter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct PerpOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "filler",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "positionId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "pairId",
                  "type": "uint64"
                },
                {
                  "internalType": "address",
                  "name": "entryTokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "marginAmount",
                  "type": "int256"
                },
                {
                  "internalType": "address",
                  "name": "validatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExecuteOrder",
          "outputs": [
            {
              "internalType": "struct PerpMarket.PerpTradeResult",
              "name": "perpTradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "entryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "payoff",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteUserPosition",
          "outputs": [
            {
              "internalType": "struct PerpMarket.UserPosition",
              "name": "userPosition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "filler",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "positionAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "entryValue",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "marginAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "cumulativeFundingRates",
                  "type": "int256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":aave-v3-core/=lib/aave-v3-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/PerpMarketQuoter.sol": "PerpMarketQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PerpMarket.sol": {
        "keccak256": "0xa6f058423ae8de58a3683a299392ba8064ebe7b42516484ccb331a2ac0e1bff4",
        "urls": [
          "bzz-raw://dd130d21c6ab3ff743e9e87e97b95c95e177d7b77cca0c69dba9aeba899a5db1",
          "dweb:/ipfs/QmQdG8mUKNRLvatKNQu7DbevciRtKDAzGhTdw2qtR4HQtQ"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc",
        "urls": [
          "bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d",
          "dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x271f7e575b396abe6617d34ddbdb9abff10189f037a06c8c23fb3bad7f90a627",
        "urls": [
          "bzz-raw://d641e13984c22999932185d0aaaff334f8b455e372be2c3a72ca083d25d3846d",
          "dweb:/ipfs/QmTYhNcVnKTuwyGVW56BauyEbTrkPtRpPwPL7JfgrXpAfj"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0xd7a2b8b3e38d353b76925acd0e3b1cfa43f8c52042b00e9e17068ee556615a16",
        "urls": [
          "bzz-raw://c5daa3acc0f82d915c7c45b1a8ac6d3e238c03f41818c0cf771d955712811f53",
          "dweb:/ipfs/QmQaWGc1HL37g26wqDpGYJA1E6EooAPsW6n3pNnjN7NwLq"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PerpMarketQuoter.sol": {
        "keccak256": "0x0cdae48c32875d00c1609aa399ac42117b44be01b931a4ad655ab434222898fd",
        "urls": [
          "bzz-raw://e6ba80d66883c0bce67fa3b1d57e976b256adedd621026b06c0145e1374ac64f",
          "dweb:/ipfs/QmRGqZxHGaDncCNaXytM5poiyDW8SajpAt6BWSRzsh4QAj"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PredyPoolQuoter.sol": {
        "keccak256": "0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab",
        "urls": [
          "bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab",
          "dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a",
        "urls": [
          "bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7",
          "dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/GammaOrder.sol": {
        "keccak256": "0x2401be0847555388aff34678000a2d8f2b711f4ce40c02d67e51f16032870e6f",
        "urls": [
          "bzz-raw://57cd1641b1e50f1320d588bbe2ea5d36b0080c75ab85536a382771df98e699aa",
          "dweb:/ipfs/Qmdqa6P2QehHLbEA83ynh4m5nb5RNMezr71JK2hV4FPAmp"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0xdcde9ff02d75e84dcf047cad72b8d7e2b1ffadb443362e5e14913a0ab42bc4ad",
        "urls": [
          "bzz-raw://c77625ce63ef1ded84cabaf8fb87b8a56c7ae8a84ce16206e4a16c47e9885022",
          "dweb:/ipfs/QmPpgD1dvmGzap6X586M39ogLfvYKtu3eaVbW4VhRC8t8W"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/PerpOrder.sol": {
        "keccak256": "0x9746a8032179c7a7879220cf24d1a1703332b8792177e166dbbb326f8449ab09",
        "urls": [
          "bzz-raw://a4ed2a0cc7b4df0c445e47676a0731986714b602fdeda198b146b76f2f64a23e",
          "dweb:/ipfs/QmdiFT9wqUdaocm64KzADixkLuTiUfXtVZ8EGMjMeSXuSB"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/PerpMarketQuoter.sol",
    "id": 57509,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        69042
      ],
      "BaseHookCallback": [
        57100
      ],
      "Constants": [
        58043
      ],
      "DataType": [
        58066
      ],
      "FixedPoint96": [
        49710
      ],
      "FixedPointMathLib": [
        48392
      ],
      "FullMath": [
        49887
      ],
      "GammaOrder": [
        67238
      ],
      "GammaOrderLib": [
        67362
      ],
      "IERC20": [
        44717
      ],
      "IFillerMarket": [
        57112
      ],
      "IHooks": [
        57125
      ],
      "IOrderValidator": [
        57155
      ],
      "IPermit2": [
        48097
      ],
      "IPerpOrderValidator": [
        57165
      ],
      "IPredyPool": [
        57335
      ],
      "ISettlement": [
        57350
      ],
      "ISignatureTransfer": [
        48233
      ],
      "ISwapRouter": [
        50549
      ],
      "IUniswapV3Pool": [
        49224
      ],
      "IUniswapV3PoolActions": [
        49348
      ],
      "IUniswapV3PoolDerivedState": [
        49379
      ],
      "IUniswapV3PoolErrors": [
        49407
      ],
      "IUniswapV3PoolEvents": [
        49526
      ],
      "IUniswapV3PoolImmutables": [
        49566
      ],
      "IUniswapV3PoolOracle": [
        69097
      ],
      "IUniswapV3PoolOwnerActions": [
        49592
      ],
      "IUniswapV3PoolState": [
        49700
      ],
      "InterestRateModel": [
        58141
      ],
      "LPMath": [
        66863
      ],
      "LiquidityAmounts": [
        50893
      ],
      "Math": [
        67004
      ],
      "OrderInfo": [
        67624
      ],
      "OrderInfoLib": [
        67659
      ],
      "PairLib": [
        58164
      ],
      "Permit2Lib": [
        67715
      ],
      "Perp": [
        60626
      ],
      "PerpFee": [
        61133
      ],
      "PerpMarket": [
        55303
      ],
      "PerpMarketQuoter": [
        57508
      ],
      "PerpOrder": [
        67893
      ],
      "PerpOrderLib": [
        68014
      ],
      "PositionCalculator": [
        61854
      ],
      "PositionKey": [
        50918
      ],
      "PredyPoolQuoter": [
        57773
      ],
      "PremiumCurveModel": [
        61896
      ],
      "PriceFeed": [
        55959
      ],
      "Reallocation": [
        62439
      ],
      "ResolvedOrder": [
        68030
      ],
      "ResolvedOrderLib": [
        68072
      ],
      "SafeCast": [
        47766
      ],
      "SafeCastLib": [
        49109
      ],
      "ScaledAsset": [
        63168
      ],
      "TickMath": [
        50433
      ],
      "TransferHelper": [
        51089
      ],
      "UniHelper": [
        64155
      ],
      "UnsafeMath": [
        50449
      ],
      "console": [
        22689
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1993:69",
    "nodes": [
      {
        "id": 57369,
        "nodeType": "PragmaDirective",
        "src": "39:24:69",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 57370,
        "nodeType": "ImportDirective",
        "src": "65:27:69",
        "nodes": [],
        "absolutePath": "src/PerpMarket.sol",
        "file": "../PerpMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57509,
        "sourceUnit": 55304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57371,
        "nodeType": "ImportDirective",
        "src": "93:31:69",
        "nodes": [],
        "absolutePath": "src/lens/PredyPoolQuoter.sol",
        "file": "./PredyPoolQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57509,
        "sourceUnit": 57774,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57508,
        "nodeType": "ContractDefinition",
        "src": "176:1855:69",
        "nodes": [
          {
            "id": 57375,
            "nodeType": "VariableDeclaration",
            "src": "208:28:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "462bf388",
            "mutability": "mutable",
            "name": "perpMarket",
            "nameLocation": "226:10:69",
            "scope": 57508,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PerpMarket_$55303",
              "typeString": "contract PerpMarket"
            },
            "typeName": {
              "id": 57374,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57373,
                "name": "PerpMarket",
                "nameLocations": [
                  "208:10:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55303,
                "src": "208:10:69"
              },
              "referencedDeclaration": 55303,
              "src": "208:10:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PerpMarket_$55303",
                "typeString": "contract PerpMarket"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57378,
            "nodeType": "VariableDeclaration",
            "src": "242:38:69",
            "nodes": [],
            "constant": false,
            "functionSelector": "88c2a408",
            "mutability": "mutable",
            "name": "predyPoolQuoter",
            "nameLocation": "265:15:69",
            "scope": 57508,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
              "typeString": "contract PredyPoolQuoter"
            },
            "typeName": {
              "id": 57377,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57376,
                "name": "PredyPoolQuoter",
                "nameLocations": [
                  "242:15:69"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57773,
                "src": "242:15:69"
              },
              "referencedDeclaration": 57773,
              "src": "242:15:69",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                "typeString": "contract PredyPoolQuoter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57396,
            "nodeType": "FunctionDefinition",
            "src": "287:155:69",
            "nodes": [],
            "body": {
              "id": 57395,
              "nodeType": "Block",
              "src": "357:85:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57387,
                      "name": "perpMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57375,
                      "src": "367:10:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PerpMarket_$55303",
                        "typeString": "contract PerpMarket"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57388,
                      "name": "_perpMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57381,
                      "src": "380:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PerpMarket_$55303",
                        "typeString": "contract PerpMarket"
                      }
                    },
                    "src": "367:24:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PerpMarket_$55303",
                      "typeString": "contract PerpMarket"
                    }
                  },
                  "id": 57390,
                  "nodeType": "ExpressionStatement",
                  "src": "367:24:69"
                },
                {
                  "expression": {
                    "id": 57393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57391,
                      "name": "predyPoolQuoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57378,
                      "src": "401:15:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                        "typeString": "contract PredyPoolQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57392,
                      "name": "_predyPoolQuoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57384,
                      "src": "419:16:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                        "typeString": "contract PredyPoolQuoter"
                      }
                    },
                    "src": "401:34:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                      "typeString": "contract PredyPoolQuoter"
                    }
                  },
                  "id": 57394,
                  "nodeType": "ExpressionStatement",
                  "src": "401:34:69"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57381,
                  "mutability": "mutable",
                  "name": "_perpMarket",
                  "nameLocation": "310:11:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57396,
                  "src": "299:22:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PerpMarket_$55303",
                    "typeString": "contract PerpMarket"
                  },
                  "typeName": {
                    "id": 57380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57379,
                      "name": "PerpMarket",
                      "nameLocations": [
                        "299:10:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55303,
                      "src": "299:10:69"
                    },
                    "referencedDeclaration": 55303,
                    "src": "299:10:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PerpMarket_$55303",
                      "typeString": "contract PerpMarket"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57384,
                  "mutability": "mutable",
                  "name": "_predyPoolQuoter",
                  "nameLocation": "339:16:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57396,
                  "src": "323:32:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                    "typeString": "contract PredyPoolQuoter"
                  },
                  "typeName": {
                    "id": 57383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57382,
                      "name": "PredyPoolQuoter",
                      "nameLocations": [
                        "323:15:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57773,
                      "src": "323:15:69"
                    },
                    "referencedDeclaration": 57773,
                    "src": "323:15:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                      "typeString": "contract PredyPoolQuoter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:58:69"
            },
            "returnParameters": {
              "id": 57386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:69"
            },
            "scope": 57508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 57429,
            "nodeType": "FunctionDefinition",
            "src": "448:400:69",
            "nodes": [],
            "body": {
              "id": 57428,
              "nodeType": "Block",
              "src": "638:210:69",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 57414,
                        "nodeType": "Block",
                        "src": "721:2:69",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 57415,
                      "nodeType": "TryCatchClause",
                      "src": "721:2:69"
                    },
                    {
                      "block": {
                        "id": 57425,
                        "nodeType": "Block",
                        "src": "760:82:69",
                        "statements": [
                          {
                            "expression": {
                              "id": 57423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 57419,
                                "name": "perpTradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57406,
                                "src": "774:15:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                                  "typeString": "struct PerpMarket.PerpTradeResult memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 57421,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57417,
                                    "src": "824:6:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 57420,
                                  "name": "_parseRevertReasonAsTradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57482,
                                  "src": "792:31:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_PerpTradeResult_$53149_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct PerpMarket.PerpTradeResult memory)"
                                  }
                                },
                                "id": 57422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "792:39:69",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                                  "typeString": "struct PerpMarket.PerpTradeResult memory"
                                }
                              },
                              "src": "774:57:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                                "typeString": "struct PerpMarket.PerpTradeResult memory"
                              }
                            },
                            "id": 57424,
                            "nodeType": "ExpressionStatement",
                            "src": "774:57:69"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 57426,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 57418,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 57417,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "752:6:69",
                            "nodeType": "VariableDeclaration",
                            "scope": 57426,
                            "src": "739:19:69",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 57416,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "739:5:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "738:21:69"
                      },
                      "src": "732:110:69"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 57410,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57399,
                        "src": "681:5:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PerpOrder_$67893_memory_ptr",
                          "typeString": "struct PerpOrder memory"
                        }
                      },
                      {
                        "id": 57411,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57402,
                        "src": "688:14:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      },
                      {
                        "id": 57412,
                        "name": "predyPoolQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57378,
                        "src": "704:15:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                          "typeString": "contract PredyPoolQuoter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PerpOrder_$67893_memory_ptr",
                          "typeString": "struct PerpOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_PredyPoolQuoter_$57773",
                          "typeString": "contract PredyPoolQuoter"
                        }
                      ],
                      "expression": {
                        "id": 57408,
                        "name": "perpMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57375,
                        "src": "652:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PerpMarket_$55303",
                          "typeString": "contract PerpMarket"
                        }
                      },
                      "id": 57409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "663:17:69",
                      "memberName": "quoteExecuteOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53792,
                      "src": "652:28:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PerpOrder_$67893_memory_ptr_$_t_struct$_SettlementData_$57342_memory_ptr_$_t_contract$_PredyPoolQuoter_$57773_$returns$__$",
                        "typeString": "function (struct PerpOrder memory,struct ISettlement.SettlementData memory,contract PredyPoolQuoter) external"
                      }
                    },
                    "id": 57413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:68:69",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57427,
                  "nodeType": "TryStatement",
                  "src": "648:194:69"
                }
              ]
            },
            "functionSelector": "4c49b7e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExecuteOrder",
            "nameLocation": "457:17:69",
            "parameters": {
              "id": 57403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57399,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "492:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57429,
                  "src": "475:22:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PerpOrder_$67893_memory_ptr",
                    "typeString": "struct PerpOrder"
                  },
                  "typeName": {
                    "id": 57398,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57397,
                      "name": "PerpOrder",
                      "nameLocations": [
                        "475:9:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67893,
                      "src": "475:9:69"
                    },
                    "referencedDeclaration": 67893,
                    "src": "475:9:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PerpOrder_$67893_storage_ptr",
                      "typeString": "struct PerpOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57402,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "533:14:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57429,
                  "src": "499:48:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$57342_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 57401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57400,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "499:11:69",
                        "511:14:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57342,
                      "src": "499:26:69"
                    },
                    "referencedDeclaration": 57342,
                    "src": "499:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$57342_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:74:69"
            },
            "returnParameters": {
              "id": 57407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57406,
                  "mutability": "mutable",
                  "name": "perpTradeResult",
                  "nameLocation": "617:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57429,
                  "src": "583:49:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                    "typeString": "struct PerpMarket.PerpTradeResult"
                  },
                  "typeName": {
                    "id": 57405,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57404,
                      "name": "PerpMarket.PerpTradeResult",
                      "nameLocations": [
                        "583:10:69",
                        "594:15:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53149,
                      "src": "583:26:69"
                    },
                    "referencedDeclaration": 53149,
                    "src": "583:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PerpTradeResult_$53149_storage_ptr",
                      "typeString": "struct PerpMarket.PerpTradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:51:69"
            },
            "scope": 57508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57456,
            "nodeType": "FunctionDefinition",
            "src": "854:290:69",
            "nodes": [],
            "body": {
              "id": 57455,
              "nodeType": "Block",
              "src": "964:180:69",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 57441,
                        "nodeType": "Block",
                        "src": "1019:2:69",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 57442,
                      "nodeType": "TryCatchClause",
                      "src": "1019:2:69"
                    },
                    {
                      "block": {
                        "id": 57452,
                        "nodeType": "Block",
                        "src": "1058:80:69",
                        "statements": [
                          {
                            "expression": {
                              "id": 57450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 57446,
                                "name": "userPosition",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57435,
                                "src": "1072:12:69",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                                  "typeString": "struct PerpMarket.UserPosition memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 57448,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57444,
                                    "src": "1120:6:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 57447,
                                  "name": "_parseRevertReasonAsUserPosition",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57507,
                                  "src": "1087:32:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_UserPosition_$53144_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct PerpMarket.UserPosition memory)"
                                  }
                                },
                                "id": 57449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1087:40:69",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                                  "typeString": "struct PerpMarket.UserPosition memory"
                                }
                              },
                              "src": "1072:55:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                                "typeString": "struct PerpMarket.UserPosition memory"
                              }
                            },
                            "id": 57451,
                            "nodeType": "ExpressionStatement",
                            "src": "1072:55:69"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 57453,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 57445,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 57444,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1050:6:69",
                            "nodeType": "VariableDeclaration",
                            "scope": 57453,
                            "src": "1037:19:69",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 57443,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1037:5:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1036:21:69"
                      },
                      "src": "1030:108:69"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 57439,
                        "name": "positionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57431,
                        "src": "1007:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 57437,
                        "name": "perpMarket",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57375,
                        "src": "978:10:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PerpMarket_$55303",
                          "typeString": "contract PerpMarket"
                        }
                      },
                      "id": 57438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "989:17:69",
                      "memberName": "quoteUserPosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53820,
                      "src": "978:28:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 57440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:40:69",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57454,
                  "nodeType": "TryStatement",
                  "src": "974:164:69"
                }
              ]
            },
            "functionSelector": "7521ec92",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteUserPosition",
            "nameLocation": "863:17:69",
            "parameters": {
              "id": 57432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57431,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "889:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57456,
                  "src": "881:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:20:69"
            },
            "returnParameters": {
              "id": 57436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57435,
                  "mutability": "mutable",
                  "name": "userPosition",
                  "nameLocation": "950:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57456,
                  "src": "919:43:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                    "typeString": "struct PerpMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 57434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57433,
                      "name": "PerpMarket.UserPosition",
                      "nameLocations": [
                        "919:10:69",
                        "930:12:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53144,
                      "src": "919:23:69"
                    },
                    "referencedDeclaration": 53144,
                    "src": "919:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$53144_storage_ptr",
                      "typeString": "struct PerpMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:45:69"
            },
            "scope": 57508,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57482,
            "nodeType": "FunctionDefinition",
            "src": "1258:393:69",
            "nodes": [],
            "body": {
              "id": 57481,
              "nodeType": "Block",
              "src": "1421:230:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 57465,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57459,
                        "src": "1435:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 57466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1442:6:69",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1435:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 57467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1451:3:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1435:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 57479,
                    "nodeType": "Block",
                    "src": "1565:80:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 57473,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57459,
                              "src": "1597:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 57474,
                                    "name": "PerpMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55303,
                                    "src": "1606:10:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PerpMarket_$55303_$",
                                      "typeString": "type(contract PerpMarket)"
                                    }
                                  },
                                  "id": 57475,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1617:15:69",
                                  "memberName": "PerpTradeResult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53149,
                                  "src": "1606:26:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_PerpTradeResult_$53149_storage_ptr_$",
                                    "typeString": "type(struct PerpMarket.PerpTradeResult storage pointer)"
                                  }
                                }
                              ],
                              "id": 57476,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1605:28:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PerpTradeResult_$53149_storage_ptr_$",
                                "typeString": "type(struct PerpMarket.PerpTradeResult storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_PerpTradeResult_$53149_storage_ptr_$",
                                "typeString": "type(struct PerpMarket.PerpTradeResult storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 57471,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1586:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 57472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1590:6:69",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1586:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 57477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:48:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                            "typeString": "struct PerpMarket.PerpTradeResult memory"
                          }
                        },
                        "functionReturnParameters": 57464,
                        "id": 57478,
                        "nodeType": "Return",
                        "src": "1579:55:69"
                      }
                    ]
                  },
                  "id": 57480,
                  "nodeType": "IfStatement",
                  "src": "1431:214:69",
                  "trueBody": {
                    "id": 57470,
                    "nodeType": "Block",
                    "src": "1456:103:69",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1479:70:69",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1508:2:69",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1512:6:69"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1504:3:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1504:15:69"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1527:6:69"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1521:5:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1521:13:69"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:6:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1497:38:69"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1497:38:69"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 57459,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1512:6:69",
                            "valueSize": 1
                          },
                          {
                            "declaration": 57459,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1527:6:69",
                            "valueSize": 1
                          }
                        ],
                        "id": 57469,
                        "nodeType": "InlineAssembly",
                        "src": "1470:79:69"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 57457,
              "nodeType": "StructuredDocumentation",
              "src": "1150:103:69",
              "text": "@notice Return the trade result of abi-encoded bytes.\n @param reason abi-encoded tradeResult"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsTradeResult",
            "nameLocation": "1267:31:69",
            "parameters": {
              "id": 57460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57459,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1312:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57482,
                  "src": "1299:19:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57458,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:21:69"
            },
            "returnParameters": {
              "id": 57464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57463,
                  "mutability": "mutable",
                  "name": "perpTradeResult",
                  "nameLocation": "1400:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57482,
                  "src": "1366:49:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PerpTradeResult_$53149_memory_ptr",
                    "typeString": "struct PerpMarket.PerpTradeResult"
                  },
                  "typeName": {
                    "id": 57462,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57461,
                      "name": "PerpMarket.PerpTradeResult",
                      "nameLocations": [
                        "1366:10:69",
                        "1377:15:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53149,
                      "src": "1366:26:69"
                    },
                    "referencedDeclaration": 53149,
                    "src": "1366:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PerpTradeResult_$53149_storage_ptr",
                      "typeString": "struct PerpMarket.PerpTradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:51:69"
            },
            "scope": 57508,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 57507,
            "nodeType": "FunctionDefinition",
            "src": "1657:372:69",
            "nodes": [],
            "body": {
              "id": 57506,
              "nodeType": "Block",
              "src": "1802:227:69",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 57490,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57484,
                        "src": "1816:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 57491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1823:6:69",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1816:13:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 57492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1832:3:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "1816:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 57504,
                    "nodeType": "Block",
                    "src": "1946:77:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 57498,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57484,
                              "src": "1978:6:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 57499,
                                    "name": "PerpMarket",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55303,
                                    "src": "1987:10:69",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_PerpMarket_$55303_$",
                                      "typeString": "type(contract PerpMarket)"
                                    }
                                  },
                                  "id": 57500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1998:12:69",
                                  "memberName": "UserPosition",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 53144,
                                  "src": "1987:23:69",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_UserPosition_$53144_storage_ptr_$",
                                    "typeString": "type(struct PerpMarket.UserPosition storage pointer)"
                                  }
                                }
                              ],
                              "id": 57501,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1986:25:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_UserPosition_$53144_storage_ptr_$",
                                "typeString": "type(struct PerpMarket.UserPosition storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_UserPosition_$53144_storage_ptr_$",
                                "typeString": "type(struct PerpMarket.UserPosition storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 57496,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1967:3:69",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 57497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1971:6:69",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "1967:10:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 57502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1967:45:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                            "typeString": "struct PerpMarket.UserPosition memory"
                          }
                        },
                        "functionReturnParameters": 57489,
                        "id": 57503,
                        "nodeType": "Return",
                        "src": "1960:52:69"
                      }
                    ]
                  },
                  "id": 57505,
                  "nodeType": "IfStatement",
                  "src": "1812:211:69",
                  "trueBody": {
                    "id": 57495,
                    "nodeType": "Block",
                    "src": "1837:103:69",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1860:70:69",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1889:2:69",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1893:6:69"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1885:3:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1885:15:69"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "1908:6:69"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1902:5:69"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1902:13:69"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1878:6:69"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1878:38:69"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1878:38:69"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 57484,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1893:6:69",
                            "valueSize": 1
                          },
                          {
                            "declaration": 57484,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1908:6:69",
                            "valueSize": 1
                          }
                        ],
                        "id": 57494,
                        "nodeType": "InlineAssembly",
                        "src": "1851:79:69"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsUserPosition",
            "nameLocation": "1666:32:69",
            "parameters": {
              "id": 57485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57484,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1712:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 57507,
                  "src": "1699:19:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 57483,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1698:21:69"
            },
            "returnParameters": {
              "id": 57489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57507,
                  "src": "1766:30:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPosition_$53144_memory_ptr",
                    "typeString": "struct PerpMarket.UserPosition"
                  },
                  "typeName": {
                    "id": 57487,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57486,
                      "name": "PerpMarket.UserPosition",
                      "nameLocations": [
                        "1766:10:69",
                        "1777:12:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53144,
                      "src": "1766:23:69"
                    },
                    "referencedDeclaration": 53144,
                    "src": "1766:23:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$53144_storage_ptr",
                      "typeString": "struct PerpMarket.UserPosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:32:69"
            },
            "scope": 57508,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PerpMarketQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57372,
          "nodeType": "StructuredDocumentation",
          "src": "126:49:69",
          "text": " @notice Quoter contract for PerpMarket"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          57508
        ],
        "name": "PerpMarketQuoter",
        "nameLocation": "185:16:69",
        "scope": 57509,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 69
}
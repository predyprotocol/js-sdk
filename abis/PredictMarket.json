{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "permit2Address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotFiller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CloseBeforeExpiration",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlinePassed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMarket",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfAcceptablePriceRange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SignerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SlippageTooLarge",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "closeValue",
          "type": "uint256"
        }
      ],
      "name": "Closed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "Opened",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "close",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "order",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "sig",
              "type": "bytes"
            }
          ],
          "internalType": "struct IFillerMarket.SignedOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "updateQuoteTokenMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "userPositions",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1173:6134:99:-:0;;;2099:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;381:10:54;:22;;-1:-1:-1;;;;;381:22:54;;;-1:-1:-1;;;;;;381:22:54;;;;;;;2197:8:99::1;:35:::0;;;;;::::1;::::0;::::1;;::::0;;1173:6134;;14:143:141;-1:-1:-1;;;;;101:31:141;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:141;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;1173:6134:99;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1173:6134:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1886:61:99;;;;;;;;;;-1:-1:-1;;;;;500:32:141;;;482:51;;564:2;549:18;;542:34;;;;455:18;1886:61:99;;;;;;;;5339:1160;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2245:1055::-;;;;;;:::i;:::-;;:::i;:::-;;3564:1508;;;;;;:::i;:::-;;:::i;707:191:54:-;;;;;;:::i;:::-;;:::i;5339:1160:99:-;5458:41;;:::i;:::-;5515:33;5551:25;;;:13;:25;;;;;5599:23;;;;5587:36;;;;;;5664:15;5638:12;:23;;;:41;5634:102;;;5702:23;;-1:-1:-1;;;5702:23:99;;;;;;;;;;;5634:102;5746:27;5776:10;;:31;;-1:-1:-1;;;5776:31:99;;;;;9318:25:141;;;-1:-1:-1;;;;;5776:10:99;;;;:19;;9291:18:141;;5776:31:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5832:10;;5862:276;;;;;;;;;5902:18;;;;:25;5862:276;;;;;;;;5974:18;:23;;;:30;5746:61;;-1:-1:-1;;;;;;5832:10:99;;;;:16;;5862:276;;;;5973:31;;;:::i;:::-;5862:276;;;;6023:5;:18;;;:27;;;:34;;;6022:35;;;:::i;:::-;5862:276;;;;6086:37;;;;;;;;6099:20;6086:37;;;;;;;;:::i;:::-;;;6121:1;6086:37;;;;;6075:49;;;;;;;:::i;:::-;;;;;;;;;;;;;5862:276;;;6152:14;5832:344;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6228:10;;6257:18;;;;:25;6228:55;;-1:-1:-1;;;6228:55:99;;5818:358;;-1:-1:-1;6187:267:99;;-1:-1:-1;;;;;6228:10:99;;;;:28;;:55;;;;9318:25:141;;;9306:2;9291:18;;9172:177;6228:55:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6297:11;6322:69;6350:12;:23;;;6375:15;6322:27;:69::i;:::-;6405:18;;;;;:27;;:34;:39;;6187:27;:267::i;:::-;-1:-1:-1;6491:1:99;6465:23;;;;:27;5339:1160;;-1:-1:-1;;5339:1160:99:o;2245:1055::-;477:10:54;;-1:-1:-1;;;;;477:10:54;455;:33;451:68;;497:22;;-1:-1:-1;;;497:22:54;;;;;;;;;;;451:68;2440:32:99::1;2486:11;:21;;;2475:49;;;;;;;;;;;;:::i;:::-;2440:84:::0;-1:-1:-1;2570:19:99::1;2539:27:::0;;:50:::1;::::0;::::1;;;;;;:::i;:::-;::::0;2535:759:::1;;2605:149;2650:41;2672:11;:18;;;2650:21;:41::i;:::-;2701:10;::::0;2714:26:::1;::::0;::::1;::::0;-1:-1:-1;;;;;2701:10:99;;::::1;::::0;2605:27:::1;:149::i;:::-;2430:870;2245:1055:::0;;:::o;2535:759::-:1;2806:20;2775:27:::0;;:51:::1;::::0;::::1;;;;;;:::i;:::-;::::0;2771:523:::1;;2842:27;2872:10:::0;;2892:19:::1;::::0;::::1;::::0;2872:40:::1;::::0;-1:-1:-1;;;2872:40:99;;-1:-1:-1;;;;;2872:10:99;;::::1;::::0;:19:::1;::::0;:40:::1;::::0;::::1;;9318:25:141::0;;;9306:2;9291:18;;9172:177;2872:40:99::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2956:12;::::0;::::1;::::0;2927:18:::1;3005:10:::0;2984:71:::1;::::0;-1:-1:-1;;;2984:71:99;;3005:10;2984:71:::1;::::0;::::1;16624:41:141::0;3037:4:99::1;16681:18:141::0;;;16674:60;16750:18;;;16743:34;;;2956:12:99;;-1:-1:-1;2956:12:99;;-1:-1:-1;;;;;3005:10:99;;::::1;::::0;2984:38:::1;::::0;16597:18:141;;2984:71:99::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3070:154;3115:41;3137:11;:18;;;3115:21;:41::i;:::-;3172:19;::::0;;::::1;::::0;3158:34:::1;::::0;;;:13:::1;:34:::0;;;;;;:40;-1:-1:-1;;;;;3158:40:99::1;3200:10:::0;3070:27:::1;:154::i;:::-;3251:19;::::0;;::::1;::::0;3244:39:::1;::::0;;16962:25:141;;;17003:18;;;16996:34;;;3244:39:99::1;::::0;16935:18:141;3244:39:99::1;;;;;;;2828:466;;2430:870;2245:1055:::0;;:::o;3564:1508::-;3696:41;;:::i;:::-;3753:32;3799:5;:11;;;3788:39;;;;;;;;;;;;:::i;:::-;3753:74;;3837:34;3874:48;3898:12;3912:5;:9;;;3874:23;:48::i;:::-;3956:19;;;;;-1:-1:-1;;;;;3941:35:99;3988:1;3941:35;;;:14;:35;;;;;;;3837:85;;-1:-1:-1;;;;;;3941:35:99;3933:58;;;;;;4058:19;;;;;-1:-1:-1;;;;;4043:35:99;;;;;:14;:35;;;;;;;4009:30;;;;-1:-1:-1;;;;;4009:69:99;;;4043:35;;4009:69;4001:78;;;;;;4090:27;4103:13;4090:12;:27::i;:::-;4142:10;;;;;;;;-1:-1:-1;;;;;4142:10:99;-1:-1:-1;;;;;4142:16:99;;4172:270;;;;;;;;4212:12;:19;;;-1:-1:-1;;;;;4172:270:99;;;;;4249:1;4172:270;;;;4268:12;:24;;;4172:270;;;;4310:12;:28;;;4172:270;;;;4367:60;;;;;;;;4380:19;4367:60;;;;;;;;:::i;:::-;;;4401:25;;;;4367:60;;;;;4356:72;;;;;;;:::i;:::-;;;;;;;;;;;;;4172:270;;;4456:14;4142:338;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4534:17;;:24;;;;;4505:19;;;;4534:17;4491:34;;;:13;:34;;;;;;;;:67;;-1:-1:-1;;;;;;4491:67:99;-1:-1:-1;;;;;4491:67:99;;;;;;;;;4634:21;;;4505:19;;-1:-1:-1;4616:39:99;;-1:-1:-1;;;;;4616:39:99;:15;:39;:::i;:::-;4582:19;;;;;;4568:34;;;;:13;:34;;;;;;:45;;:87;;;;4666:10;4693:19;;4714:17;;:24;;;;4666:73;;-1:-1:-1;;;4666:73:99;;;;;19552:25:141;;;;-1:-1:-1;;;;;19613:32:141;;;19593:18;;;19586:60;4666:10:99;;;;;:26;;19525:18:141;;4666:73:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4773:12;:29;;;-1:-1:-1;;;;;4750:62:99;;4813:12;4827:11;4750:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4875:17:99;;:24;;;;;4913:19;;;;4946:21;;;;;4875:17;4981:34;;;:13;:34;;;;;:45;;;4855:181;;-1:-1:-1;;;;;21616:32:141;;;21598:51;;21665:18;;;21658:34;;;;-1:-1:-1;;;;;21728:31:141;;;21708:18;;;21701:59;21791:2;21776:18;;21769:34;;;;4855:181:99;;-1:-1:-1;21585:3:141;21570:19;;-1:-1:-1;4855:181:99;;;;;;;5047:18;;3564:1508;;;;;:::o;707:191:54:-;809:1;775:22;;;:14;:22;;;;;;-1:-1:-1;;;;;775:22:54;771:121;;852:29;874:6;852:21;:29::i;:::-;827:22;;;;:14;:22;;;;;:54;;-1:-1:-1;;;;;;827:54:54;-1:-1:-1;;;;;827:54:54;;;;;;;;;;771:121;707:191;:::o;6505:437:99:-;6605:7;6643:9;6628:11;:24;6624:75;;-1:-1:-1;1555:5:99;6668:20;;6624:75;6709:15;1621:10;6728:23;6742:9;6728:11;:23;:::i;:::-;6727:31;;6755:3;6727:31;:::i;:::-;:51;;;;:::i;:::-;6709:69;;6803:3;6793:7;:13;6789:64;;;1499:5;6822:20;;;;;6789:64;6931:3;6898:29;1555:5;1499;6898:29;:::i;:::-;6887:41;;:7;:41;:::i;:::-;:47;;;;:::i;:::-;6871:63;;1555:5;6871:63;:::i;:::-;6863:72;6505:437;-1:-1:-1;;;;6505:437:99:o;5537:2533:79:-;5723:12;582:2:65;5739:19:79;5750:8;;5739:19;:::i;:::-;5738:45;;5723:60;;5825:1;5798:11;:24;;;:28;5794:424;;;5908:24;;;;5880:17;5867:10;:4;5874:3;5867:10;:::i;:::-;:30;;;;:::i;:::-;:66;5863:130;;;5960:18;;-1:-1:-1;;;5960:18:79;;;;;;;;;;;5863:130;5794:424;;;6040:1;6013:11;:24;;;:28;6009:209;;;6123:11;:24;;;6122:25;;;:::i;:::-;6108:3;6081:24;6088:17;6081:4;:24;:::i;:::-;:30;;;;:::i;:::-;:67;6077:131;;;6175:18;;-1:-1:-1;;;6175:18:79;;;;;;;;;;;6077:131;6245:9;:243;;;;-1:-1:-1;1097:9:79;6320:14;:8;6331:3;6320:14;:::i;:::-;:49;;;;:::i;:::-;6296:11;:21;;;:73;:174;;;-1:-1:-1;6449:21:79;;;;6443:3;6397:43;1097:9;6397:8;:43;:::i;:::-;:49;;;;:::i;:::-;:73;6296:174;6228:330;;;6520:27;;-1:-1:-1;;;6520:27:79;;;;;;;;;;;6228:330;5713:2357;5537:2533;;;;:::o;904:208:54:-;974:7;1029:10;;:32;;-1:-1:-1;;;1029:32:54;;;;;9318:25:141;;;974:7:54;;-1:-1:-1;;;;;1029:10:54;;:24;;9291:18:141;;1029:32:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1079:20;;;:26;;904:208;-1:-1:-1;;;904:208:54:o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;500:32:141;;;1381:59:51;;;482:51:141;549:18;;;;542:34;;;1381:59:51;;;;;;;;;;455:18:141;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;28336:2:141;1451:72:51;;;28318:21:141;28375:1;28355:18;;;28348:29;-1:-1:-1;;;28393:18:141;;;28386:32;28435:18;;1451:72:51;;;;;;;2164:276:100;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2295:138:100;;;;;;;;2322:12;:17;;;2295:138;;;;2341:12;:30;;;-1:-1:-1;;;;;2295:138:100;;;;;2373:12;:25;;;2295:138;;;;2400:18;2405:12;2400:4;:18::i;:::-;2295:138;;;;;;;;-1:-1:-1;2288:145:100;2164:276;-1:-1:-1;2164:276:100:o;6952:353:99:-;7021:16;:5;:14;:16::i;:::-;7048:8;;-1:-1:-1;;;;;7048:8:99;:34;7096:16;:5;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:233:89;;;569:79;;;;;613:11;;;;;-1:-1:-1;;;;;569:79:89;506:233;;;;569:79;;;634:12;;;;569:79;;;;506:233;;;669:10;;:16;;;506:233;;;;;;;709:10;;:19;;;;506:233;;;;;346:400;7096:16:99;-1:-1:-1;;;;;;;;;;;;;;;;;998:84:89;;;;;;;7156:4:99;998:84:89;;1068:12;;;;998:84;;;;7176:5:99;:10;;;:17;;;7207:5;:10;;;638:334:100;;;;;;;:::i;:::-;;;;-1:-1:-1;;638:334:100;;;;;;1149:28;;;;;;;;;;638:334;;;1149:28;638:334;1149:28;;;1112:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1112:66:100;;;;;;1491:22;;;;;;;;;;1112:66;;;1491:22;1112:66;1491:22;;;1437:77;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1437:77:100;;;;;;;;;;7279:9:99;;;;-1:-1:-1;;;;;;7048:250:99;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:521:100;1701:7;638:334;;;;;;;:::i;:::-;;;;;;;;;;;;;1236:29;;;;;;1819:17;:5;:10;;;:15;:17::i;:::-;1854:5;:12;;;1884:5;:14;;;1916:5;:23;;;1957:5;:17;;;1992:5;:21;;;2031:5;:18;;;2067:5;:22;;;2107:5;:20;;;1750:391;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1727:424;;;;;;1720:431;;1637:521;;;:::o;549:297:90:-;656:18;;:25;-1:-1:-1;;;;;631:51:90;639:4;631:51;627:104;;705:15;;-1:-1:-1;;;705:15:90;;;;;;;;;;;627:104;763:18;;:27;;;745:15;:45;741:99;;;813:16;;-1:-1:-1;;;813:16:90;;;;;;;;;;;539:189:88;599:7;426:15;;;;;;;;;;;;;;;;;416:26;;;;;;;668:11;;681;;;;694:10;;;;;706:13;;;;;635:85;;;;;33792:25:141;;;;-1:-1:-1;;;;;33891:15:141;;;33871:18;;;33864:43;;;;33943:15;;;;33923:18;;;33916:43;33975:18;;;33968:34;34018:19;;;34011:35;33764:19;;635:85:88;33533:519:141;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:141:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:141;;14:180;-1:-1:-1;14:180:141:o;587:127::-;648:10;643:3;639:20;636:1;629:31;679:4;676:1;669:15;703:4;700:1;693:15;719:257;791:4;785:11;;;823:17;;-1:-1:-1;;;;;855:34:141;;891:22;;;852:62;849:88;;;917:18;;:::i;:::-;953:4;946:24;719:257;:::o;981:253::-;1053:2;1047:9;1095:4;1083:17;;-1:-1:-1;;;;;1115:34:141;;1151:22;;;1112:62;1109:88;;;1177:18;;:::i;1239:253::-;1311:2;1305:9;1353:4;1341:17;;-1:-1:-1;;;;;1373:34:141;;1409:22;;;1370:62;1367:88;;;1435:18;;:::i;1497:253::-;1569:2;1563:9;1611:4;1599:17;;-1:-1:-1;;;;;1631:34:141;;1667:22;;;1628:62;1625:88;;;1693:18;;:::i;1755:255::-;1827:2;1821:9;1869:6;1857:19;;-1:-1:-1;;;;;1891:34:141;;1927:22;;;1888:62;1885:88;;;1953:18;;:::i;2015:253::-;2087:2;2081:9;2129:4;2117:17;;-1:-1:-1;;;;;2149:34:141;;2185:22;;;2146:62;2143:88;;;2211:18;;:::i;2273:255::-;2345:2;2339:9;2387:6;2375:19;;-1:-1:-1;;;;;2409:34:141;;2445:22;;;2406:62;2403:88;;;2471:18;;:::i;2533:255::-;2605:2;2599:9;2647:6;2635:19;;-1:-1:-1;;;;;2669:34:141;;2705:22;;;2666:62;2663:88;;;2731:18;;:::i;2793:255::-;2865:2;2859:9;2907:6;2895:19;;-1:-1:-1;;;;;2929:34:141;;2965:22;;;2926:62;2923:88;;;2991:18;;:::i;3053:275::-;3124:2;3118:9;3189:2;3170:13;;-1:-1:-1;;3166:27:141;3154:40;;-1:-1:-1;;;;;3209:34:141;;3245:22;;;3206:62;3203:88;;;3271:18;;:::i;:::-;3307:2;3300:22;3053:275;;-1:-1:-1;3053:275:141:o;3333:131::-;-1:-1:-1;;;;;3408:31:141;;3398:42;;3388:70;;3454:1;3451;3444:12;3469:186;3517:4;-1:-1:-1;;;;;3542:6:141;3539:30;3536:56;;;3572:18;;:::i;:::-;-1:-1:-1;3638:2:141;3617:15;-1:-1:-1;;3613:29:141;3644:4;3609:40;;3469:186::o;3660:462::-;3702:5;3755:3;3748:4;3740:6;3736:17;3732:27;3722:55;;3773:1;3770;3763:12;3722:55;3809:6;3796:20;3840:48;3856:31;3884:2;3856:31;:::i;:::-;3840:48;:::i;:::-;3913:2;3904:7;3897:19;3959:3;3952:4;3947:2;3939:6;3935:15;3931:26;3928:35;3925:55;;;3976:1;3973;3966:12;3925:55;4041:2;4034:4;4026:6;4022:17;4015:4;4006:7;4002:18;3989:55;4089:1;4064:16;;;4082:4;4060:27;4053:38;;;;4068:7;3660:462;-1:-1:-1;;;3660:462:141:o;4127:489::-;4188:5;4236:4;4224:9;4219:3;4215:19;4211:30;4208:50;;;4254:1;4251;4244:12;4208:50;4276:22;;:::i;:::-;4267:31;;4335:9;4322:23;4354:33;4379:7;4354:33;:::i;:::-;4396:22;;4469:2;4454:18;;4441:32;-1:-1:-1;;;;;4485:30:141;;4482:50;;;4528:1;4525;4518:12;4482:50;4564:45;4605:3;4596:6;4585:9;4581:22;4564:45;:::i;:::-;4559:2;4552:5;4548:14;4541:69;;4127:489;;;;:::o;4621:428::-;4722:6;4730;4783:2;4771:9;4762:7;4758:23;4754:32;4751:52;;;4799:1;4796;4789:12;4751:52;4835:9;4822:23;4812:33;;4896:2;4885:9;4881:18;4868:32;-1:-1:-1;;;;;4915:6:141;4912:30;4909:50;;;4955:1;4952;4945:12;4909:50;4978:65;5035:7;5026:6;5015:9;5011:22;4978:65;:::i;:::-;4968:75;;;4621:428;;;;;:::o;5054:733::-;5135:5;5129:12;5168:2;5162:9;5157:3;5150:22;5218:4;5214:2;5210:13;5204:20;5197:4;5192:3;5188:14;5181:44;5271:4;5267:2;5263:13;5257:20;5250:4;5245:3;5241:14;5234:44;5324:4;5320:2;5316:13;5310:20;5303:4;5298:3;5294:14;5287:44;5377:4;5373:2;5369:13;5363:20;5356:4;5351:3;5347:14;5340:44;5430:4;5426:2;5422:13;5416:20;5409:4;5404:3;5400:14;5393:44;;5486:4;5479:5;5475:16;5469:23;5462:4;5457:3;5453:14;5446:47;5542:4;5535:5;5531:16;5525:23;5518:4;5513:3;5509:14;5502:47;5600:4;5593:5;5589:16;5583:23;5574:6;5569:3;5565:16;5558:49;5658:4;5651:5;5647:16;5641:23;5632:6;5627:3;5623:16;5616:49;5716:4;5709:5;5705:16;5699:23;5690:6;5685:3;5681:16;5674:49;5774:4;5767:5;5763:16;5757:23;5748:6;5743:3;5739:16;5732:49;5054:733;;:::o;5792:261::-;5986:3;5971:19;;5999:48;5975:9;6029:6;5999:48;:::i;6058:1106::-;6116:5;6155:9;6150:3;6146:19;6185:6;6181:2;6177:15;6174:35;;;6205:1;6202;6195:12;6174:35;6227:22;;:::i;:::-;6218:31;;6269:4;6265:2;6261:13;6258:33;;;6287:1;6284;6277:12;6258:33;;6315:22;;:::i;:::-;6375:9;6362:23;6353:7;6346:40;6448:2;6437:9;6433:18;6420:32;6415:2;6406:7;6402:16;6395:58;6515:2;6504:9;6500:18;6487:32;6482:2;6473:7;6469:16;6462:58;6582:2;6571:9;6567:18;6554:32;6549:2;6540:7;6536:16;6529:58;6650:3;6639:9;6635:19;6622:33;6616:3;6607:7;6603:17;6596:60;6719:3;6708:9;6704:19;6691:33;6685:3;6676:7;6672:17;6665:60;6748:7;6741:5;6734:22;;6816:4;6805:9;6801:20;6788:34;6783:2;6776:5;6772:14;6765:58;6883:4;6872:9;6868:20;6855:34;6850:2;6843:5;6839:14;6832:58;6950:3;6939:9;6935:19;6922:33;6917:2;6910:5;6906:14;6899:57;7017:3;7006:9;7002:19;6989:33;6983:3;6976:5;6972:15;6965:58;7084:3;7073:9;7069:19;7056:33;7050:3;7043:5;7039:15;7032:58;7152:3;7141:9;7137:19;7124:33;7117:4;7110:5;7106:16;7099:59;6058:1106;;;;:::o;7169:972::-;7297:6;7305;7358:3;7346:9;7337:7;7333:23;7329:33;7326:53;;;7375:1;7372;7365:12;7326:53;7415:9;7402:23;-1:-1:-1;;;;;7485:2:141;7477:6;7474:14;7471:34;;;7501:1;7498;7491:12;7471:34;7524:22;;;;7580:4;7562:16;;;7558:27;7555:47;;;7598:1;7595;7588:12;7555:47;7624:22;;:::i;:::-;7682:2;7669:16;7662:5;7655:31;7739:2;7735;7731:11;7718:25;7713:2;7706:5;7702:14;7695:49;7797:2;7793;7789:11;7776:25;7771:2;7764:5;7760:14;7753:49;7855:2;7851;7847:11;7834:25;7829:2;7822:5;7818:14;7811:49;7906:3;7902:2;7898:12;7885:26;7936:2;7926:8;7923:16;7920:36;;;7952:1;7949;7942:12;7920:36;7989:44;8025:7;8014:8;8010:2;8006:17;7989:44;:::i;:::-;7983:3;7976:5;7972:15;7965:69;;8053:5;8043:15;;;;;8077:58;8127:7;8122:2;8111:9;8107:18;8077:58;:::i;:::-;8067:68;;7169:972;;;;;:::o;8146:1021::-;8277:6;8285;8338:2;8326:9;8317:7;8313:23;8309:32;8306:52;;;8354:1;8351;8344:12;8306:52;8394:9;8381:23;-1:-1:-1;;;;;8464:2:141;8456:6;8453:14;8450:34;;;8480:1;8477;8470:12;8450:34;8503:22;;;;8559:2;8541:16;;;8537:25;8534:45;;;8575:1;8572;8565:12;8534:45;8601:22;;:::i;:::-;8661:2;8648:16;8689:2;8679:8;8676:16;8673:36;;;8705:1;8702;8695:12;8673:36;8732:44;8768:7;8757:8;8753:2;8749:17;8732:44;:::i;:::-;8725:5;8718:59;;8823:2;8819;8815:11;8802:25;8852:2;8842:8;8839:16;8836:36;;;8868:1;8865;8858:12;8836:36;8904:44;8940:7;8929:8;8925:2;8921:17;8904:44;:::i;:::-;8899:2;8892:5;8888:14;8881:68;;8968:5;8958:15;;;9026:2;9015:9;9011:18;8998:32;8982:48;;9055:2;9045:8;9042:16;9039:36;;;9071:1;9068;9061:12;9039:36;;9094:67;9153:7;9142:8;9131:9;9127:24;9094:67;:::i;9354:138::-;9433:13;;9455:31;9433:13;9455:31;:::i;:::-;9354:138;;;:::o;9497:164::-;9574:13;;9627:1;9616:20;;;9606:31;;9596:59;;9651:1;9648;9641:12;9666:175;9744:13;;-1:-1:-1;;;;;9786:30:141;;9776:41;;9766:69;;9831:1;9828;9821:12;9846:286;9918:5;9966:4;9954:9;9949:3;9945:19;9941:30;9938:50;;;9984:1;9981;9974:12;9938:50;10006:22;;:::i;:::-;9997:31;;10057:9;10051:16;10044:5;10037:31;10121:2;10110:9;10106:18;10100:25;10095:2;10088:5;10084:14;10077:49;9846:286;;;;:::o;10137:526::-;10213:5;10261:4;10249:9;10244:3;10240:19;10236:30;10233:50;;;10279:1;10276;10269:12;10233:50;10301:22;;:::i;:::-;10292:31;;10352:9;10346:16;10339:5;10332:31;10416:2;10405:9;10401:18;10395:25;10390:2;10383:5;10379:14;10372:49;10474:2;10463:9;10459:18;10453:25;10448:2;10441:5;10437:14;10430:49;10532:2;10521:9;10517:18;10511:25;10506:2;10499:5;10495:14;10488:49;10591:3;10580:9;10576:19;10570:26;10564:3;10557:5;10553:15;10546:51;10651:3;10640:9;10636:19;10630:26;10624:3;10617:5;10613:15;10606:51;10137:526;;;;:::o;10668:1649::-;10762:6;10806:9;10797:7;10793:23;10836:3;10832:2;10828:12;10825:32;;;10853:1;10850;10843:12;10825:32;10879:22;;:::i;:::-;10930:9;10924:16;10917:5;10910:31;10986:2;10975:9;10971:18;10965:25;10999:33;11024:7;10999:33;:::i;:::-;11059:2;11048:14;;11041:31;11117:2;11102:18;;11096:25;11130:33;11096:25;11130:33;:::i;:::-;11190:2;11179:14;;11172:31;11248:2;11233:18;;11227:25;11261:33;11227:25;11261:33;:::i;:::-;11321:2;11310:14;;11303:31;11388:3;11373:19;;;11367:26;11350:15;;;11343:51;11429:6;-1:-1:-1;;11410:17:141;;11406:30;11403:50;;;11449:1;11446;11439:12;11403:50;11477:22;;:::i;:::-;11462:37;;11545:3;11534:9;11530:19;11524:26;11515:7;11508:43;11585:49;11628:4;11617:9;11613:20;11585:49;:::i;:::-;11580:2;11571:7;11567:16;11560:75;11669:48;11712:3;11701:9;11697:19;11669:48;:::i;:::-;11664:2;11655:7;11651:16;11644:74;11752:52;11796:6;11785:9;11781:22;11752:52;:::i;:::-;11747:2;11738:7;11734:16;11727:78;11840:73;11905:7;11899:3;11888:9;11884:19;11840:73;:::i;:::-;11834:3;11825:7;11821:17;11814:100;11949:77;12018:7;12012:3;12001:9;11997:19;11949:77;:::i;:::-;11943:3;11934:7;11930:17;11923:104;12063:73;12128:7;12122:3;12111:9;12107:19;12063:73;:::i;:::-;12056:4;12047:7;12043:18;12036:101;12172:73;12237:7;12231:3;12220:9;12216:19;12172:73;:::i;:::-;12166:3;12153:17;;12146:100;12273:3;12262:15;;12255:32;;;;12266:5;10668:1649;-1:-1:-1;;;10668:1649:141:o;12322:127::-;12383:10;12378:3;12374:20;12371:1;12364:31;12414:4;12411:1;12404:15;12438:4;12435:1;12428:15;12454:136;12489:3;-1:-1:-1;;;12510:22:141;;12507:48;;12535:18;;:::i;:::-;-1:-1:-1;12575:1:141;12571:13;;12454:136::o;12595:127::-;12656:10;12651:3;12647:20;12644:1;12637:31;12687:4;12684:1;12677:15;12711:4;12708:1;12701:15;12727:479;12945:13;;12923:2;12908:18;;;12984:1;12977:9;;12967:140;;13029:10;13024:3;13020:20;13017:1;13010:31;13064:4;13061:1;13054:15;13092:4;13089:1;13082:15;12967:140;13134:2;13123:9;13116:21;;13193:4;13185:6;13181:17;13175:24;13168:4;13157:9;13153:20;13146:54;12727:479;;;;:::o;13211:250::-;13296:1;13306:113;13320:6;13317:1;13314:13;13306:113;;;13396:11;;;13390:18;13377:11;;;13370:39;13342:2;13335:10;13306:113;;;-1:-1:-1;;13453:1:141;13435:16;;13428:27;13211:250::o;13466:270::-;13507:3;13545:5;13539:12;13572:6;13567:3;13560:19;13588:76;13657:6;13650:4;13645:3;13641:14;13634:4;13627:5;13623:16;13588:76;:::i;:::-;13718:2;13697:15;-1:-1:-1;;13693:29:141;13684:39;;;;13725:4;13680:50;;13466:270;-1:-1:-1;;13466:270:141:o;13741:961::-;14024:2;14013:9;14006:21;14069:6;14063:13;14058:2;14047:9;14043:18;14036:41;14131:4;14123:6;14119:17;14113:24;14108:2;14097:9;14093:18;14086:52;14193:2;14185:6;14181:15;14175:22;14169:3;14158:9;14154:19;14147:51;14254:2;14246:6;14242:15;14236:22;14229:4;14218:9;14214:20;14207:52;13987:4;14306:3;14298:6;14294:16;14288:23;14348:4;14342:3;14331:9;14327:19;14320:33;14373:51;14419:3;14408:9;14404:19;14390:12;14373:51;:::i;:::-;14362:62;;14471:9;14466:3;14462:19;14455:4;14444:9;14440:20;14433:49;14539:1;14535;14530:3;14526:11;14522:19;14513:6;14507:13;14503:39;14498:3;14491:52;14592:4;14584:6;14580:17;14574:24;14630:2;14623:4;14618:3;14614:14;14607:26;14650:46;14692:2;14687:3;14683:12;14667:14;14650:46;:::i;:::-;14642:54;13741:961;-1:-1:-1;;;;;;13741:961:141:o;14707:1094::-;14807:6;14851:9;14842:7;14838:23;14881:3;14877:2;14873:12;14870:32;;;14898:1;14895;14888:12;14870:32;14924:22;;:::i;:::-;14966:4;14962:2;14958:13;14955:33;;;14984:1;14981;14974:12;14955:33;15012:22;;:::i;:::-;14997:37;;15065:9;15059:16;15050:7;15043:33;15131:2;15120:9;15116:18;15110:25;15105:2;15096:7;15092:16;15085:51;15191:2;15180:9;15176:18;15170:25;15165:2;15156:7;15152:16;15145:51;15251:2;15240:9;15236:18;15230:25;15225:2;15216:7;15212:16;15205:51;15312:3;15301:9;15297:19;15291:26;15285:3;15276:7;15272:17;15265:53;15374:3;15363:9;15359:19;15353:26;15347:3;15338:7;15334:17;15327:53;15403:7;15396:5;15389:22;15464:4;15453:9;15449:20;15443:27;15438:2;15431:5;15427:14;15420:51;15524:4;15513:9;15509:20;15503:27;15498:2;15491:5;15487:14;15480:51;15584:3;15573:9;15569:19;15563:26;15558:2;15551:5;15547:14;15540:50;15644:3;15633:9;15629:19;15623:26;15617:3;15610:5;15606:15;15599:51;15704:3;15693:9;15689:19;15683:26;15677:3;15670:5;15666:15;15659:51;15765:3;15754:9;15750:19;15744:26;15737:4;15730:5;15726:16;15719:52;15790:5;15780:15;;;;14707:1094;;;;:::o;15806:184::-;15876:6;15929:2;15917:9;15908:7;15904:23;15900:32;15897:52;;;15945:1;15942;15935:12;15897:52;-1:-1:-1;15968:16:141;;15806:184;-1:-1:-1;15806:184:141:o;15995:428::-;16096:6;16149:2;16137:9;16128:7;16124:23;16120:32;16117:52;;;16165:1;16162;16155:12;16117:52;16191:22;;:::i;:::-;16243:9;16237:16;16284:1;16275:7;16272:14;16262:42;;16300:1;16297;16290:12;16262:42;16313:22;;16388:2;16373:18;;;16367:25;16351:14;;;16344:49;;;;-1:-1:-1;16320:5:141;15995:428;-1:-1:-1;15995:428:141:o;17041:543::-;17108:5;17156:4;17144:9;17139:3;17135:19;17131:30;17128:50;;;17174:1;17171;17164:12;17128:50;17196:22;;:::i;:::-;17187:31;;17248:9;17242:16;17267:33;17292:7;17267:33;:::i;:::-;17309:22;;17376:2;17361:18;;17355:25;17389:33;17355:25;17389:33;:::i;:::-;17454:7;17449:2;17442:5;17438:14;17431:31;;17515:2;17504:9;17500:18;17494:25;17489:2;17482:5;17478:14;17471:49;17573:2;17562:9;17558:18;17552:25;17547:2;17540:5;17536:14;17529:49;17041:543;;;;:::o;17589:441::-;17642:5;17695:3;17688:4;17680:6;17676:17;17672:27;17662:55;;17713:1;17710;17703:12;17662:55;17742:6;17736:13;17773:48;17789:31;17817:2;17789:31;:::i;17773:48::-;17846:2;17837:7;17830:19;17892:3;17885:4;17880:2;17872:6;17868:15;17864:26;17861:35;17858:55;;;17909:1;17906;17899:12;17858:55;17922:77;17996:2;17989:4;17980:7;17976:18;17969:4;17961:6;17957:17;17922:77;:::i;18035:1208::-;18136:6;18189:2;18177:9;18168:7;18164:23;18160:32;18157:52;;;18205:1;18202;18195:12;18157:52;18238:9;18232:16;-1:-1:-1;;;;;18308:2:141;18300:6;18297:14;18294:34;;;18324:1;18321;18314:12;18294:34;18347:22;;;;18403:6;18385:16;;;18381:29;18378:49;;;18423:1;18420;18413:12;18378:49;18449:22;;:::i;:::-;18494:51;18537:7;18533:2;18494:51;:::i;:::-;18487:5;18480:66;18578:42;18615:3;18611:2;18607:12;18578:42;:::i;:::-;18573:2;18566:5;18562:14;18555:66;18655:42;18692:3;18688:2;18684:12;18655:42;:::i;:::-;18648:4;18641:5;18637:16;18630:68;18732:43;18770:3;18766:2;18762:12;18732:43;:::i;:::-;18725:4;18718:5;18714:16;18707:69;18823:3;18819:2;18815:12;18809:19;18803:3;18796:5;18792:15;18785:44;18848:3;18898:2;18894;18890:11;18884:18;18878:3;18871:5;18867:15;18860:43;18950:6;18946:2;18942:15;18936:22;18930:3;18923:5;18919:15;18912:47;18992:43;19030:3;19026:2;19022:12;18992:43;:::i;:::-;18986:3;18979:5;18975:15;18968:68;19075:3;19071:2;19067:12;19061:19;19105:2;19095:8;19092:16;19089:36;;;19121:1;19118;19111:12;19089:36;19157:55;19204:7;19193:8;19189:2;19185:17;19157:55;:::i;:::-;19141:14;;;19134:79;;;;-1:-1:-1;19145:5:141;18035:1208;-1:-1:-1;;;;;18035:1208:141:o;19248:125::-;19313:9;;;19334:10;;;19331:36;;;19347:18;;:::i;20087:1276::-;20358:3;20370:21;;;20428:13;;19774:12;;-1:-1:-1;;;;;19770:21:141;;;20443:18;;;19758:34;;;;19845:4;19834:16;;;19828:23;19824:32;;19808:14;;;19801:56;19906:4;19895:16;;;19889:23;19873:14;;;19866:47;19962:4;19951:16;;;19945:23;19929:14;;;19922:47;20497:17;;;20491:24;-1:-1:-1;;;;;20045:30:141;;;20571:3;20556:19;;20033:43;20613:17;;;20607:24;20045:30;20689:3;20674:19;;20033:43;20731:17;;20725:24;265:31;;20808:3;20793:19;;253:44;20868:4;20856:17;;20850:24;20844:3;20829:19;;20822:53;20930:4;20918:17;;20912:24;20906:3;20891:19;;20884:53;20992:4;20980:17;;20974:24;20968:3;20953:19;;20946:53;21048:4;21036:17;;21030:24;265:31;21113:3;21098:19;;253:44;21167:6;21155:19;;21149:26;21212:6;21206:3;21191:19;;21184:35;-1:-1:-1;;21236:53:141;21284:3;21269:19;;21149:26;21236:53;:::i;:::-;21228:61;;;21298:59;21351:4;21340:9;21336:20;21328:6;21298:59;:::i;:::-;20087:1276;;;;;:::o;21814:128::-;21881:9;;;21902:11;;;21899:37;;;21916:18;;:::i;21947:168::-;22020:9;;;22051;;22068:15;;;22062:22;;22048:37;22038:71;;22089:18;;:::i;22120:217::-;22160:1;22186;22176:132;;22230:10;22225:3;22221:20;22218:1;22211:31;22265:4;22262:1;22255:15;22293:4;22290:1;22283:15;22176:132;-1:-1:-1;22322:9:141;;22120:217::o;22342:397::-;22409:5;22457:4;22445:9;22440:3;22436:19;22432:30;22429:50;;;22475:1;22472;22465:12;22429:50;22497:22;;:::i;:::-;22488:31;;22548:9;22542:16;22535:5;22528:31;22612:2;22601:9;22597:18;22591:25;22586:2;22579:5;22575:14;22568:49;22670:2;22659:9;22655:18;22649:25;22644:2;22637:5;22633:14;22626:49;22728:2;22717:9;22713:18;22707:25;22702:2;22695:5;22691:14;22684:49;22342:397;;;;:::o;22744:1173::-;22817:5;22856:9;22851:3;22847:19;22886:6;22882:2;22878:15;22875:35;;;22906:1;22903;22896:12;22875:35;22928:22;;:::i;:::-;22919:31;;22980:9;22974:16;22999:33;23024:7;22999:33;:::i;:::-;23041:22;;23108:2;23093:18;;23087:25;23121:33;23087:25;23121:33;:::i;:::-;23181:2;23170:14;;23163:31;23228:4;-1:-1:-1;;23210:16:141;;23206:27;23203:47;;;23246:1;23243;23236:12;23203:47;;23274:22;;:::i;:::-;23342:2;23331:9;23327:18;23321:25;23312:7;23305:42;23402:2;23391:9;23387:18;23381:25;23376:2;23367:7;23363:16;23356:51;23462:3;23451:9;23447:19;23441:26;23436:2;23427:7;23423:16;23416:52;23523:3;23512:9;23508:19;23502:26;23497:2;23488:7;23484:16;23477:52;23585:4;23574:9;23570:20;23564:27;23558:3;23549:7;23545:17;23538:54;23648:3;23637:9;23633:19;23627:26;23621:3;23612:7;23608:17;23601:53;23686:7;23681:2;23674:5;23670:14;23663:31;;23726:64;23786:3;23780;23769:9;23765:19;23726:64;:::i;:::-;23721:2;23714:5;23710:14;23703:88;23845:3;23834:9;23830:19;23824:26;23818:3;23811:5;23807:15;23800:51;23905:3;23894:9;23890:19;23884:26;23878:3;23871:5;23867:15;23860:51;22744:1173;;;;:::o;23922:553::-;23995:5;24043:4;24031:9;24026:3;24022:19;24018:30;24015:50;;;24061:1;24058;24051:12;24015:50;24083:22;;:::i;:::-;24074:31;;24134:9;24128:16;24121:5;24114:31;24177:47;24220:2;24209:9;24205:18;24177:47;:::i;:::-;24172:2;24165:5;24161:14;24154:71;24257:47;24300:2;24289:9;24285:18;24257:47;:::i;:::-;24252:2;24245:5;24241:14;24234:71;24337:48;24381:2;24370:9;24366:18;24337:48;:::i;:::-;24332:2;24325:5;24321:14;24314:72;24419:49;24463:3;24452:9;24448:19;24419:49;:::i;:::-;24413:3;24406:5;24402:15;24395:74;23922:553;;;;:::o;24480:1515::-;24557:5;24605:6;24593:9;24588:3;24584:19;24580:32;24577:52;;;24625:1;24622;24615:12;24577:52;24647:22;;:::i;:::-;24638:31;;24692:40;24722:9;24692:40;:::i;:::-;24685:5;24678:55;24765:47;24808:2;24797:9;24793:18;24765:47;:::i;:::-;24760:2;24753:5;24749:14;24742:71;24845:47;24888:2;24877:9;24873:18;24845:47;:::i;:::-;24840:2;24833:5;24829:14;24822:71;24925:48;24969:2;24958:9;24954:18;24925:48;:::i;:::-;24920:2;24909:14;;24902:72;25028:3;25013:19;;;25007:26;24990:15;;;24983:51;25088:3;25073:19;;;25067:26;25050:15;;;25043:51;25148:3;25133:19;;;25127:26;25110:15;;;25103:51;25208:3;25193:19;;;25187:26;25170:15;;;25163:51;25233:3;25274:18;;;25268:25;25252:14;;;25245:49;25313:3;25354:18;;;25348:25;25332:14;;;25325:49;25393:3;25434:18;;;25428:25;25412:14;;;25405:49;25473:3;25514:18;;;25508:25;25492:14;;;25485:49;25553:3;25594:18;;;25588:25;25572:14;;;25565:49;25633:3;25668:68;25732:3;25712:18;;;25668:68;:::i;:::-;25652:14;;;25645:92;25756:3;25795:68;25859:3;25839:18;;;25795:68;:::i;:::-;25786:6;25775:18;;25768:96;25917:6;25902:22;;25896:29;25880:14;;;25873:53;25983:3;25968:19;;;25962:26;25953:6;25942:18;;25935:54;25779:5;24480:1515;-1:-1:-1;24480:1515:141:o;26000:164::-;26076:13;;26125;;26118:21;26108:32;;26098:60;;26154:1;26151;26144:12;26169:160;26246:13;;26299:4;26288:16;;26278:27;;26268:55;;26319:1;26316;26309:12;26334:1296;26433:6;26486:4;26474:9;26465:7;26461:23;26457:34;26454:54;;;26504:1;26501;26494:12;26454:54;26530:22;;:::i;:::-;26581:9;26575:16;26568:5;26561:31;26624:49;26669:2;26658:9;26654:18;26624:49;:::i;:::-;26619:2;26612:5;26608:14;26601:73;26706:49;26751:2;26740:9;26736:18;26706:49;:::i;:::-;26701:2;26694:5;26690:14;26683:73;26788;26853:7;26848:2;26837:9;26833:18;26788:73;:::i;:::-;26783:2;26776:5;26772:14;26765:97;26896:74;26962:7;26956:3;26945:9;26941:19;26896:74;:::i;:::-;26889:4;26882:5;26878:16;26871:100;27005:74;27071:7;27065:3;27054:9;27050:19;27005:74;:::i;:::-;26998:4;26991:5;26987:16;26980:100;27114:79;27185:7;27178:4;27167:9;27163:20;27114:79;:::i;:::-;27107:4;27100:5;27096:16;27089:105;27228:51;27273:4;27262:9;27258:20;27228:51;:::i;:::-;27221:4;27214:5;27210:16;27203:77;27316:48;27358:4;27347:9;27343:20;27316:48;:::i;:::-;27307:6;27300:5;27296:18;27289:76;27401:48;27443:4;27432:9;27428:20;27401:48;:::i;:::-;27392:6;27385:5;27381:18;27374:76;27486:49;27529:4;27518:9;27514:20;27486:49;:::i;:::-;27477:6;27466:18;;27459:77;27593:4;27578:20;;;;27572:27;27563:6;27552:18;;27545:55;-1:-1:-1;27470:5:141;26334:1296;-1:-1:-1;26334:1296:141:o;27635:287::-;27764:3;27802:6;27796:13;27818:66;27877:6;27872:3;27865:4;27857:6;27853:17;27818:66;:::i;:::-;27900:16;;;;;27635:287;-1:-1:-1;;27635:287:141:o;27927:202::-;27994:6;28047:2;28035:9;28026:7;28022:23;28018:32;28015:52;;;28063:1;28060;28053:12;28015:52;28086:37;28113:9;28086:37;:::i;28464:1654::-;-1:-1:-1;;;29575:28:141;;-1:-1:-1;;;29628:2:141;29619:12;;29612:39;-1:-1:-1;;;29676:2:141;29667:12;;29660:38;-1:-1:-1;;;29723:2:141;29714:12;;29707:40;29777:28;29772:2;29763:12;;29756:50;-1:-1:-1;;;29831:2:141;29822:12;;29815:43;29889:25;29883:3;29874:13;;29867:48;-1:-1:-1;;;29940:3:141;29931:13;;29924:46;30001:26;29995:3;29986:13;;29979:49;-1:-1:-1;;;30053:3:141;30044:13;;30037:46;30108:3;30099:13;;28464:1654::o;30123:492::-;30298:3;30336:6;30330:13;30352:66;30411:6;30406:3;30399:4;30391:6;30387:17;30352:66;:::i;:::-;30481:13;;30440:16;;;;30503:70;30481:13;30440:16;30550:4;30538:17;;30503:70;:::i;:::-;30589:20;;30123:492;-1:-1:-1;;;;30123:492:141:o;30620:658::-;-1:-1:-1;;;30923:3:141;30916:36;30898:3;30981:6;30975:13;30997:75;31065:6;31060:2;31055:3;31051:12;31044:4;31036:6;31032:17;30997:75;:::i;:::-;31132:13;;31091:16;;;;31154:76;31132:13;31216:2;31208:11;;31201:4;31189:17;;31154:76;:::i;:::-;31250:17;31269:2;31246:26;;30620:658;-1:-1:-1;;;;30620:658:141:o;31471:1065::-;31901:4;31930:3;31942:60;31992:9;31983:6;31977:13;31369:12;;-1:-1:-1;;;;;31365:38:141;31353:51;;31453:4;31442:16;;;31436:23;31420:14;;31413:47;31283:183;31942:60;32058:4;32050:6;32046:17;32040:24;32033:4;32022:9;32018:20;32011:54;32121:4;32113:6;32109:17;32103:24;32096:4;32085:9;32081:20;32074:54;32137:63;32195:3;32184:9;32180:19;32172:6;31369:12;;-1:-1:-1;;;;;31365:38:141;31353:51;;31453:4;31442:16;;;31436:23;31420:14;;31413:47;31283:183;32137:63;-1:-1:-1;;;;;32237:32:141;;32231:3;32216:19;;32209:61;32301:3;32286:19;;32279:35;;;32345:3;32330:19;;32323:31;;;32377:44;32402:18;;;32394:6;32377:44;:::i;:::-;32363:58;;32470:9;32462:6;32458:22;32452:3;32441:9;32437:19;32430:51;32498:32;32523:6;32515;32498:32;:::i;:::-;32490:40;31471:1065;-1:-1:-1;;;;;;;;;31471:1065:141:o;32541:987::-;32936:25;;;32992:2;32977:18;;32970:34;;;-1:-1:-1;;;;;33077:15:141;;;33072:2;33057:18;;33050:43;33129:15;;33124:2;33109:18;;33102:43;-1:-1:-1;;;;;33220:15:141;;;33214:3;33199:19;;33192:44;33172:3;33252:19;;33245:35;;;33311:3;33296:19;;33289:35;;;33355:3;33340:19;;33333:35;;;33405:15;;33399:3;33384:19;;33377:44;32924:3;33452;33437:19;;33430:31;;;32895:4;;33478:44;33503:18;;;33495:6;33478:44;:::i;:::-;33470:52;32541:987;-1:-1:-1;;;;;;;;;;;;;32541:987:141:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "close(uint256,(address,bytes))": "333c6a3d",
    "executeOrder((bytes,bytes),(address,bytes))": "a966d863",
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "updateQuoteTokenMap(uint256)": "e1c951ca",
    "userPositions(uint256)": "1e7f1370"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"permit2Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotFiller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CloseBeforeExpiration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlinePassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMarket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfAcceptablePriceRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SlippageTooLarge\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"closeValue\",\"type\":\"uint256\"}],\"name\":\"Closed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"Opened\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"close\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"order\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct IFillerMarket.SignedOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"executeOrder\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"updateQuoteTokenMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"userPositions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"close(uint256,(address,bytes))\":{\"details\":\"Anyone can call this function\",\"params\":{\"positionId\":\"The id of position\",\"settlementData\":\"The route of settlement created by filler\"},\"returns\":{\"tradeResult\":\"The result of trade\"}},\"executeOrder((bytes,bytes),(address,bytes))\":{\"params\":{\"order\":\"The order signed by trader\",\"settlementData\":\"The route of settlement created by filler\"},\"returns\":{\"tradeResult\":\"The result of trade\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"DeadlinePassed()\":[{\"notice\":\"thrown if the order has expired\"}],\"InvalidMarket()\":[{\"notice\":\"thrown when the order targets a different market contract\"}]},\"kind\":\"user\",\"methods\":{\"close(uint256,(address,bytes))\":{\"notice\":\"Closes a predict position\"},\"executeOrder((bytes,bytes),(address,bytes))\":{\"notice\":\"Verifies signature of the order and open new predict position\"}},\"notice\":\"Predict market contract A trader can open position with any duration. Anyone can close the position after expiration timestamp.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/markets/predict/PredictMarket.sol\":\"PredictMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d\",\"dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9\",\"dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af\",\"dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x003b657218331c03b4c4d5287461876243814c2f8626d95b4080b5fbefae4715\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7f64b723ac32787f7908feb6114390d7e87b76be8b961d5715a67c8dd4911b09\",\"dweb:/ipfs/QmSoZBrHJqgJSQ1f97cFUPs7aYjhBr42fZ2WZ5BR59SYVf\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c\",\"dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/lens/PredyPoolQuoter.sol\":{\"keccak256\":\"0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab\",\"dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6\"]},\"src/libraries/ApplyInterestLib.sol\":{\"keccak256\":\"0xfb7dc2ad1007cb3a9c252d644baf7312aac86ff22054142b6283f7eaa308a684\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://520bdee70178cb384c6b6bf1a21d0ef71e7dd7427db954ab1662a0e89257faaf\",\"dweb:/ipfs/QmQpYn25sdXD6YhrMTXTWxXcK8EeEUTGN7Cj3tjd9o4XoH\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77\",\"dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xa3b98f67634f9dc64fa137550252e907cf612141cc89df0801f033fe44a563cd\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c5543482b7ab9230c967c7879ec91793a189c2b70715c7f3290c2513b35c8a49\",\"dweb:/ipfs/QmREnuvdgx64dpMqaZ96nP5Y5ygpVv6Ue18NhX6xBdBLr3\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7\",\"dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae\",\"dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b\",\"dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm\"]},\"src/libraries/Trade.sol\":{\"keccak256\":\"0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330\",\"dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/logic/LiquidationLogic.sol\":{\"keccak256\":\"0x909a4e28dd6029f2cfbf284d24c68ee2e3c366a65f43e035da585574d5488f25\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e9da13d6a863b5b9aaae7423df60033aac597e89e571e1d0294704e01d13a807\",\"dweb:/ipfs/QmZ7AcCvQspCRz3rmSZasMW5urTJdFfjXkSwtLdEDShAJW\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180\",\"dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/markets/gamma/GammaOrder.sol\":{\"keccak256\":\"0x7f86965e6bf5a36094b6043641c3f6693f02c0907bdc4d51fc5d565c18e9473d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8418060b184357c76592b037fef17e5bb0d557c8a5879545f3af1d7e3020c0fa\",\"dweb:/ipfs/QmbT8KTaLjQ59T37uafwDeb9cMajHCGhjU2grAJjC8pvkK\"]},\"src/markets/perp/PerpOrder.sol\":{\"keccak256\":\"0xcecd8fe6e136121af0fab5dafc299200d634a59bc70e8ebdec97afc0e38654e2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6a147072661f9a99b99abc62f78b8b441804371d886b0a029942e232c328a38a\",\"dweb:/ipfs/QmQms8Fz6P51XHngMYTGc8onxwWevVoqdAZ8SdS1jrmVo7\"]},\"src/markets/predict/PredictMarket.sol\":{\"keccak256\":\"0x0ee5a62b63feb216240fb05371dc7ac8dd5f103bb471b9d548f7e252850227c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4a745037253c490924b84373b6ae795df7dc48d3addc2882fb1af72e807f406a\",\"dweb:/ipfs/Qma1oQWR2zWm9JbMLiTcWtjEYVR9aSYRuW9oFH6uNLNoR5\"]},\"src/markets/predict/PredictOrder.sol\":{\"keccak256\":\"0xc8d822c1aae6d7ef3f563bcae13840c4a3b5e5f2fac6706a8b9276bf07828346\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3abc21f201b3926272fa345f20a4cb0b2b2c001b5e549026e9b745b865bb9bde\",\"dweb:/ipfs/QmXboEQjWNgP3LCW8sHwkzUWAfKyC3Hfenag3No8Jf4hpt\"]},\"src/markets/spot/SpotOrder.sol\":{\"keccak256\":\"0x7563b9aa2877946fb43b9067bc5a8f2c44adf6ed218196e30f4685924f6f8f77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e406362eab471a7cda6b506b2e03f9f3de70c19d62d45b080381bc346212f4e\",\"dweb:/ipfs/QmUQaui6EowUgzjUS7KAxnAcQ6FHps6XAwEQ44Q7Us61Xd\"]},\"src/types/GlobalData.sol\":{\"keccak256\":\"0x10dfb7579b578948bd5aa2ef115a1ce874342871356ed1df26eb3721f0961c70\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4f90f80260b595294983292c79922c48bee5e315c8540c8f688726ad9d226c1b\",\"dweb:/ipfs/QmTZiDdEL41r4pVZT74nN2NfgPzhUmonisvoKdCojxVEdn\"]},\"src/types/LockData.sol\":{\"keccak256\":\"0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418\",\"dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "permit2Address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotFiller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CloseBeforeExpiration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlinePassed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidMarket"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfAcceptablePriceRange"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignerIsNotVaultOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SlippageTooLarge"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "closeValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Closed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Opened",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "close",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IFillerMarket.SignedOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "order",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "sig",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateQuoteTokenMap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositions",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiration",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "close(uint256,(address,bytes))": {
            "details": "Anyone can call this function",
            "params": {
              "positionId": "The id of position",
              "settlementData": "The route of settlement created by filler"
            },
            "returns": {
              "tradeResult": "The result of trade"
            }
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "params": {
              "order": "The order signed by trader",
              "settlementData": "The route of settlement created by filler"
            },
            "returns": {
              "tradeResult": "The result of trade"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "close(uint256,(address,bytes))": {
            "notice": "Closes a predict position"
          },
          "executeOrder((bytes,bytes),(address,bytes))": {
            "notice": "Verifies signature of the order and open new predict position"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/markets/predict/PredictMarket.sol": "PredictMarket"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x6cea42d80b09db466dd4152f6a867bc1ba03ee499eed000068332af0926dc0fc",
        "urls": [
          "bzz-raw://4cb3440e2d591af629334690d4887aa72b40826676f9c8cc15da95a6c214cf2d",
          "dweb:/ipfs/QmaX5dBbNUwho8UphrbJKdY3cRPXJYAhXyagY5GESBtssU"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0xd39b4d9c5e09c8ee8fa55c84be8f7fd340281172a3b6ee894ea25241593496af",
        "urls": [
          "bzz-raw://86170fd2a8d07aeaad641bae3e5c97cc99b1a907684679549d3b58baf829e1f9",
          "dweb:/ipfs/QmaUg4xgkdhEyApEsWq5dNcEKHmupBa5BrDR6gDWnmTzkt"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec",
        "urls": [
          "bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af",
          "dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x003b657218331c03b4c4d5287461876243814c2f8626d95b4080b5fbefae4715",
        "urls": [
          "bzz-raw://7f64b723ac32787f7908feb6114390d7e87b76be8b961d5715a67c8dd4911b09",
          "dweb:/ipfs/QmSoZBrHJqgJSQ1f97cFUPs7aYjhBr42fZ2WZ5BR59SYVf"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x74ca3c336661281d9d1e206dd0bc24c38eca46907ed1de8397c0508d52bd0e8a",
        "urls": [
          "bzz-raw://4040871830dab5c11788df27e7a7cd626718b693e5e7fa57eb49886a1a0d9d4c",
          "dweb:/ipfs/QmZ6VoiKsdA1MyFcY7YUuTW3vjA7dMNiS3M7fmRf73D5EG"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PredyPoolQuoter.sol": {
        "keccak256": "0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab",
        "urls": [
          "bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab",
          "dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/ApplyInterestLib.sol": {
        "keccak256": "0xfb7dc2ad1007cb3a9c252d644baf7312aac86ff22054142b6283f7eaa308a684",
        "urls": [
          "bzz-raw://520bdee70178cb384c6b6bf1a21d0ef71e7dd7427db954ab1662a0e89257faaf",
          "dweb:/ipfs/QmQpYn25sdXD6YhrMTXTWxXcK8EeEUTGN7Cj3tjd9o4XoH"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x21942ca931473c9b89a8b1ccbb72c71f791b264834ac981beb665b9ae9448f17",
        "urls": [
          "bzz-raw://55f9d188d592addb0091db5d02f37977a1392216ec86f7ce0bad964de11a0c77",
          "dweb:/ipfs/QmWcxpRmrmhTQsB9vWcAwKYuKteqZDdV2ZmKmqibgHGpux"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xa3b98f67634f9dc64fa137550252e907cf612141cc89df0801f033fe44a563cd",
        "urls": [
          "bzz-raw://c5543482b7ab9230c967c7879ec91793a189c2b70715c7f3290c2513b35c8a49",
          "dweb:/ipfs/QmREnuvdgx64dpMqaZ96nP5Y5ygpVv6Ue18NhX6xBdBLr3"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0xb638304d0d8e152eb311d351b40d1813d4e499e772e4b5191f71011ddd611a4a",
        "urls": [
          "bzz-raw://9bc56af475d48767394ea7b7ab7b2199e64ef46fe883ed995a475b16932d29d7",
          "dweb:/ipfs/QmNmGqr7QjhLc6PraUDrk8fz9kDoZjyTkqKLxLiJAVgajs"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0xa3f996623c2905b6957068f382a5ee0f7183c92614e2c0bd7313b67be500d1b1",
        "urls": [
          "bzz-raw://bc713b0a0975563cd5d2bfa16cb3ea70871a308afb1f806dc4c130760a490eae",
          "dweb:/ipfs/QmRGLeHVoTBwWPwyQbvSQvpJkY9TagXt5hTUhRmwSTWUAv"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x36548d642fcdc9ffb022332d10aa7c1e8cf864405d5108ba0619ffba982f547e",
        "urls": [
          "bzz-raw://05c7efb590b66b6dc2fbfd4ad2628eaf89bb6790a1bfe0215e515f76b49fd47b",
          "dweb:/ipfs/QmeLwYzvQr6LnztpuLnTg2Hyrs7Xx6MPSNnGRJro7CVzQm"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Trade.sol": {
        "keccak256": "0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf",
        "urls": [
          "bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330",
          "dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "keccak256": "0x909a4e28dd6029f2cfbf284d24c68ee2e3c366a65f43e035da585574d5488f25",
        "urls": [
          "bzz-raw://e9da13d6a863b5b9aaae7423df60033aac597e89e571e1d0294704e01d13a807",
          "dweb:/ipfs/QmZ7AcCvQspCRz3rmSZasMW5urTJdFfjXkSwtLdEDShAJW"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946",
        "urls": [
          "bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180",
          "dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/gamma/GammaOrder.sol": {
        "keccak256": "0x7f86965e6bf5a36094b6043641c3f6693f02c0907bdc4d51fc5d565c18e9473d",
        "urls": [
          "bzz-raw://8418060b184357c76592b037fef17e5bb0d557c8a5879545f3af1d7e3020c0fa",
          "dweb:/ipfs/QmbT8KTaLjQ59T37uafwDeb9cMajHCGhjU2grAJjC8pvkK"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/perp/PerpOrder.sol": {
        "keccak256": "0xcecd8fe6e136121af0fab5dafc299200d634a59bc70e8ebdec97afc0e38654e2",
        "urls": [
          "bzz-raw://6a147072661f9a99b99abc62f78b8b441804371d886b0a029942e232c328a38a",
          "dweb:/ipfs/QmQms8Fz6P51XHngMYTGc8onxwWevVoqdAZ8SdS1jrmVo7"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/predict/PredictMarket.sol": {
        "keccak256": "0x0ee5a62b63feb216240fb05371dc7ac8dd5f103bb471b9d548f7e252850227c5",
        "urls": [
          "bzz-raw://4a745037253c490924b84373b6ae795df7dc48d3addc2882fb1af72e807f406a",
          "dweb:/ipfs/Qma1oQWR2zWm9JbMLiTcWtjEYVR9aSYRuW9oFH6uNLNoR5"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/predict/PredictOrder.sol": {
        "keccak256": "0xc8d822c1aae6d7ef3f563bcae13840c4a3b5e5f2fac6706a8b9276bf07828346",
        "urls": [
          "bzz-raw://3abc21f201b3926272fa345f20a4cb0b2b2c001b5e549026e9b745b865bb9bde",
          "dweb:/ipfs/QmXboEQjWNgP3LCW8sHwkzUWAfKyC3Hfenag3No8Jf4hpt"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/spot/SpotOrder.sol": {
        "keccak256": "0x7563b9aa2877946fb43b9067bc5a8f2c44adf6ed218196e30f4685924f6f8f77",
        "urls": [
          "bzz-raw://9e406362eab471a7cda6b506b2e03f9f3de70c19d62d45b080381bc346212f4e",
          "dweb:/ipfs/QmUQaui6EowUgzjUS7KAxnAcQ6FHps6XAwEQ44Q7Us61Xd"
        ],
        "license": "UNLICENSED"
      },
      "src/types/GlobalData.sol": {
        "keccak256": "0x10dfb7579b578948bd5aa2ef115a1ce874342871356ed1df26eb3721f0961c70",
        "urls": [
          "bzz-raw://4f90f80260b595294983292c79922c48bee5e315c8540c8f688726ad9d226c1b",
          "dweb:/ipfs/QmTZiDdEL41r4pVZT74nN2NfgPzhUmonisvoKdCojxVEdn"
        ],
        "license": "UNLICENSED"
      },
      "src/types/LockData.sol": {
        "keccak256": "0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4",
        "urls": [
          "bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418",
          "dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/markets/predict/PredictMarket.sol",
    "id": 64179,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        65969
      ],
      "ApplyInterestLib": [
        51714
      ],
      "BaseHookCallback": [
        50819
      ],
      "Constants": [
        51764
      ],
      "DataType": [
        51787
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GammaOrder": [
        61144
      ],
      "GlobalDataLibrary": [
        65910
      ],
      "IERC20": [
        43517
      ],
      "IFillerMarket": [
        50831
      ],
      "IGammaOrderValidator": [
        50887
      ],
      "IHooks": [
        50844
      ],
      "ILendingPool": [
        50856
      ],
      "IOrderValidator": [
        50877
      ],
      "IPermit2": [
        46897
      ],
      "IPredictOrderValidator": [
        50897
      ],
      "IPredyPool": [
        51097
      ],
      "ISettlement": [
        51112
      ],
      "ISignatureTransfer": [
        47033
      ],
      "ISpotOrderValidator": [
        50910
      ],
      "ISwapRouter": [
        49349
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        66024
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        51862
      ],
      "LPMath": [
        60712
      ],
      "LiquidationLogic": [
        59174
      ],
      "LiquidityAmounts": [
        49693
      ],
      "Math": [
        60853
      ],
      "OrderInfo": [
        60958
      ],
      "PairLib": [
        51885
      ],
      "Permit2Lib": [
        61049
      ],
      "Perp": [
        54353
      ],
      "PerpFee": [
        54860
      ],
      "PerpOrder": [
        63384
      ],
      "PositionCalculator": [
        55569
      ],
      "PositionKey": [
        49718
      ],
      "PredictMarket": [
        64178
      ],
      "PredictOrder": [
        64205
      ],
      "PredictOrderLib": [
        64316
      ],
      "PredyPoolQuoter": [
        51486
      ],
      "PremiumCurveModel": [
        55611
      ],
      "PriceFeed": [
        50722
      ],
      "Reallocation": [
        56154
      ],
      "ResolvedOrder": [
        61065
      ],
      "ResolvedOrderLib": [
        61107
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        56875
      ],
      "SpotOrder": [
        64904
      ],
      "TickMath": [
        49233
      ],
      "Trade": [
        57343
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        57862
      ],
      "UnsafeMath": [
        49249
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7269:99",
    "nodes": [
      {
        "id": 63620,
        "nodeType": "PragmaDirective",
        "src": "39:24:99",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 63622,
        "nodeType": "ImportDirective",
        "src": "65:88:99",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 48025,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63621,
              "name": "IUniswapV3Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48024,
              "src": "73:14:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63624,
        "nodeType": "ImportDirective",
        "src": "154:92:99",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63623,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "162:14:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63626,
        "nodeType": "ImportDirective",
        "src": "247:87:99",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 49350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63625,
              "name": "ISwapRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49349,
              "src": "255:11:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63628,
        "nodeType": "ImportDirective",
        "src": "335:70:99",
        "nodes": [],
        "absolutePath": "lib/permit2/src/interfaces/IPermit2.sol",
        "file": "@uniswap/permit2/src/interfaces/IPermit2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 46898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63627,
              "name": "IPermit2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46897,
              "src": "343:8:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63630,
        "nodeType": "ImportDirective",
        "src": "406:70:99",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 43518,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63629,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43517,
              "src": "414:6:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63631,
        "nodeType": "ImportDirective",
        "src": "477:41:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "../../interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 51098,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63632,
        "nodeType": "ImportDirective",
        "src": "519:43:99",
        "nodes": [],
        "absolutePath": "src/interfaces/ILendingPool.sol",
        "file": "../../interfaces/ILendingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 50857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63633,
        "nodeType": "ImportDirective",
        "src": "563:44:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IFillerMarket.sol",
        "file": "../../interfaces/IFillerMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 50832,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63634,
        "nodeType": "ImportDirective",
        "src": "608:46:99",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "../../interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 50911,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63635,
        "nodeType": "ImportDirective",
        "src": "655:41:99",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "../../base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 50820,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63636,
        "nodeType": "ImportDirective",
        "src": "697:52:99",
        "nodes": [],
        "absolutePath": "src/libraries/logic/LiquidationLogic.sol",
        "file": "../../libraries/logic/LiquidationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 59175,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63637,
        "nodeType": "ImportDirective",
        "src": "750:47:99",
        "nodes": [],
        "absolutePath": "src/libraries/orders/Permit2Lib.sol",
        "file": "../../libraries/orders/Permit2Lib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 61050,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63638,
        "nodeType": "ImportDirective",
        "src": "798:50:99",
        "nodes": [],
        "absolutePath": "src/libraries/orders/ResolvedOrder.sol",
        "file": "../../libraries/orders/ResolvedOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 61108,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63641,
        "nodeType": "ImportDirective",
        "src": "849:65:99",
        "nodes": [],
        "absolutePath": "src/markets/predict/PredictOrder.sol",
        "file": "./PredictOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 64317,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63639,
              "name": "PredictOrderLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64316,
              "src": "857:15:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 63640,
              "name": "PredictOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64205,
              "src": "874:12:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 63642,
        "nodeType": "ImportDirective",
        "src": "915:39:99",
        "nodes": [],
        "absolutePath": "src/libraries/math/Math.sol",
        "file": "../../libraries/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 60854,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63644,
        "nodeType": "ImportDirective",
        "src": "955:63:99",
        "nodes": [],
        "absolutePath": "src/lens/PredyPoolQuoter.sol",
        "file": "../../lens/PredyPoolQuoter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64179,
        "sourceUnit": 51487,
        "symbolAliases": [
          {
            "foreign": {
              "id": 63643,
              "name": "PredyPoolQuoter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51486,
              "src": "963:15:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64178,
        "nodeType": "ContractDefinition",
        "src": "1173:6134:99",
        "nodes": [
          {
            "id": 63653,
            "nodeType": "UsingForDirective",
            "src": "1237:41:99",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63650,
              "name": "ResolvedOrderLib",
              "nameLocations": [
                "1243:16:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61107,
              "src": "1243:16:99"
            },
            "typeName": {
              "id": 63652,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63651,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1264:13:99"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61065,
                "src": "1264:13:99"
              },
              "referencedDeclaration": 61065,
              "src": "1264:13:99",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$61065_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 63657,
            "nodeType": "UsingForDirective",
            "src": "1283:39:99",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63654,
              "name": "PredictOrderLib",
              "nameLocations": [
                "1289:15:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64316,
              "src": "1289:15:99"
            },
            "typeName": {
              "id": 63656,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63655,
                "name": "PredictOrder",
                "nameLocations": [
                  "1309:12:99"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64205,
                "src": "1309:12:99"
              },
              "referencedDeclaration": 64205,
              "src": "1309:12:99",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PredictOrder_$64205_storage_ptr",
                "typeString": "struct PredictOrder"
              }
            }
          },
          {
            "id": 63661,
            "nodeType": "UsingForDirective",
            "src": "1327:35:99",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63658,
              "name": "Permit2Lib",
              "nameLocations": [
                "1333:10:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61049,
              "src": "1333:10:99"
            },
            "typeName": {
              "id": 63660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63659,
                "name": "ResolvedOrder",
                "nameLocations": [
                  "1348:13:99"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 61065,
                "src": "1348:13:99"
              },
              "referencedDeclaration": 61065,
              "src": "1348:13:99",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ResolvedOrder_$61065_storage_ptr",
                "typeString": "struct ResolvedOrder"
              }
            }
          },
          {
            "id": 63664,
            "nodeType": "UsingForDirective",
            "src": "1367:23:99",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63662,
              "name": "Math",
              "nameLocations": [
                "1373:4:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60853,
              "src": "1373:4:99"
            },
            "typeName": {
              "id": 63663,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1382:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 63666,
            "nodeType": "ErrorDefinition",
            "src": "1396:30:99",
            "nodes": [],
            "errorSelector": "bf0038a7",
            "name": "CloseBeforeExpiration",
            "nameLocation": "1402:21:99",
            "parameters": {
              "id": 63665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:2:99"
            }
          },
          {
            "id": 63669,
            "nodeType": "VariableDeclaration",
            "src": "1432:17:99",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_permit2",
            "nameLocation": "1441:8:99",
            "scope": 64178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPermit2_$46897",
              "typeString": "contract IPermit2"
            },
            "typeName": {
              "id": 63668,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63667,
                "name": "IPermit2",
                "nameLocations": [
                  "1432:8:99"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46897,
                "src": "1432:8:99"
              },
              "referencedDeclaration": 46897,
              "src": "1432:8:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPermit2_$46897",
                "typeString": "contract IPermit2"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 63672,
            "nodeType": "VariableDeclaration",
            "src": "1466:38:99",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_MAX_SLIPPAGE",
            "nameLocation": "1483:13:99",
            "scope": 64178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63670,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1466:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130323030",
              "id": 63671,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1499:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10200_by_1",
                "typeString": "int_const 10200"
              },
              "value": "10200"
            },
            "visibility": "internal"
          },
          {
            "id": 63675,
            "nodeType": "VariableDeclaration",
            "src": "1522:38:99",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_MIN_SLIPPAGE",
            "nameLocation": "1539:13:99",
            "scope": 64178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63673,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1522:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303130",
              "id": 63674,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1555:5:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10010_by_1",
                "typeString": "int_const 10010"
              },
              "value": "10010"
            },
            "visibility": "internal"
          },
          {
            "id": 63678,
            "nodeType": "VariableDeclaration",
            "src": "1584:47:99",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_AUCTION_DURATION",
            "nameLocation": "1601:17:99",
            "scope": 64178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63676,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1584:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230",
              "id": 63677,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1621:10:99",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1200_by_1",
                "typeString": "int_const 1200"
              },
              "value": "20"
            },
            "visibility": "internal"
          },
          {
            "id": 63683,
            "nodeType": "StructDefinition",
            "src": "1638:78:99",
            "nodes": [],
            "canonicalName": "PredictMarket.UserPosition",
            "members": [
              {
                "constant": false,
                "id": 63680,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "1676:5:99",
                "nodeType": "VariableDeclaration",
                "scope": 63683,
                "src": "1668:13:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63679,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1668:7:99",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63682,
                "mutability": "mutable",
                "name": "expiration",
                "nameLocation": "1699:10:99",
                "nodeType": "VariableDeclaration",
                "scope": 63683,
                "src": "1691:18:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63681,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1691:7:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserPosition",
            "nameLocation": "1645:12:99",
            "scope": 64178,
            "visibility": "public"
          },
          {
            "id": 63686,
            "nodeType": "EnumDefinition",
            "src": "1722:55:99",
            "nodes": [],
            "canonicalName": "PredictMarket.CallbackSource",
            "members": [
              {
                "id": 63684,
                "name": "OPEN",
                "nameLocation": "1752:4:99",
                "nodeType": "EnumValue",
                "src": "1752:4:99"
              },
              {
                "id": 63685,
                "name": "CLOSE",
                "nameLocation": "1766:5:99",
                "nodeType": "EnumValue",
                "src": "1766:5:99"
              }
            ],
            "name": "CallbackSource",
            "nameLocation": "1727:14:99"
          },
          {
            "id": 63692,
            "nodeType": "StructDefinition",
            "src": "1783:97:99",
            "nodes": [],
            "canonicalName": "PredictMarket.CallbackData",
            "members": [
              {
                "constant": false,
                "id": 63689,
                "mutability": "mutable",
                "name": "callbackSource",
                "nameLocation": "1828:14:99",
                "nodeType": "VariableDeclaration",
                "scope": 63692,
                "src": "1813:29:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_CallbackSource_$63686",
                  "typeString": "enum PredictMarket.CallbackSource"
                },
                "typeName": {
                  "id": 63688,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 63687,
                    "name": "CallbackSource",
                    "nameLocations": [
                      "1813:14:99"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63686,
                    "src": "1813:14:99"
                  },
                  "referencedDeclaration": 63686,
                  "src": "1813:14:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CallbackSource_$63686",
                    "typeString": "enum PredictMarket.CallbackSource"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63691,
                "mutability": "mutable",
                "name": "depositAmount",
                "nameLocation": "1860:13:99",
                "nodeType": "VariableDeclaration",
                "scope": 63692,
                "src": "1852:21:99",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 63690,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1852:7:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CallbackData",
            "nameLocation": "1790:12:99",
            "scope": 64178,
            "visibility": "public"
          },
          {
            "id": 63697,
            "nodeType": "VariableDeclaration",
            "src": "1886:61:99",
            "nodes": [],
            "constant": false,
            "functionSelector": "1e7f1370",
            "mutability": "mutable",
            "name": "userPositions",
            "nameLocation": "1934:13:99",
            "scope": 64178,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
              "typeString": "mapping(uint256 => struct PredictMarket.UserPosition)"
            },
            "typeName": {
              "id": 63696,
              "keyName": "vaultId",
              "keyNameLocation": "1902:7:99",
              "keyType": {
                "id": 63693,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1894:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1886:40:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                "typeString": "mapping(uint256 => struct PredictMarket.UserPosition)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 63695,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63694,
                  "name": "UserPosition",
                  "nameLocations": [
                    "1913:12:99"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63683,
                  "src": "1913:12:99"
                },
                "referencedDeclaration": 63683,
                "src": "1913:12:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                  "typeString": "struct PredictMarket.UserPosition"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 63707,
            "nodeType": "EventDefinition",
            "src": "1954:84:99",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1ae84d4a14bea8146749d9831e35557d4318d019c88ef77238907396f34fb38e",
            "name": "Opened",
            "nameLocation": "1960:6:99",
            "parameters": {
              "id": 63706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63699,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "nameLocation": "1975:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63707,
                  "src": "1967:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63701,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "1991:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63707,
                  "src": "1983:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63703,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "expiration",
                  "nameLocation": "2008:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63707,
                  "src": "2000:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63705,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "2028:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63707,
                  "src": "2020:16:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:71:99"
            }
          },
          {
            "id": 63713,
            "nodeType": "EventDefinition",
            "src": "2043:50:99",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "bb1c869dafbabf53b7b5a50e7864066365b4c5d1bcfa0220f75cc2a2acfb44f6",
            "name": "Closed",
            "nameLocation": "2049:6:99",
            "parameters": {
              "id": 63712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "2064:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63713,
                  "src": "2056:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "closeValue",
                  "nameLocation": "2081:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63713,
                  "src": "2073:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2055:37:99"
            }
          },
          {
            "id": 63731,
            "nodeType": "FunctionDefinition",
            "src": "2099:140:99",
            "nodes": [],
            "body": {
              "id": 63730,
              "nodeType": "Block",
              "src": "2187:52:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63724,
                      "name": "_permit2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63669,
                      "src": "2197:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63726,
                          "name": "permit2Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63718,
                          "src": "2217:14:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63725,
                        "name": "IPermit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46897,
                        "src": "2208:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPermit2_$46897_$",
                          "typeString": "type(contract IPermit2)"
                        }
                      },
                      "id": 63727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2208:24:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPermit2_$46897",
                        "typeString": "contract IPermit2"
                      }
                    },
                    "src": "2197:35:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPermit2_$46897",
                      "typeString": "contract IPermit2"
                    }
                  },
                  "id": 63729,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:35:99"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 63721,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63716,
                    "src": "2175:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51097",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 63722,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 63720,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "2158:16:99"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "2158:16:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "2158:28:99"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 63719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63716,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "2122:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63731,
                  "src": "2111:21:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$51097",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 63715,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63714,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "2111:10:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51097,
                      "src": "2111:10:99"
                    },
                    "referencedDeclaration": 51097,
                    "src": "2111:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$51097",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63718,
                  "mutability": "mutable",
                  "name": "permit2Address",
                  "nameLocation": "2142:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63731,
                  "src": "2134:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:47:99"
            },
            "returnParameters": {
              "id": 63723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2187:0:99"
            },
            "scope": 64178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63840,
            "nodeType": "FunctionDefinition",
            "src": "2245:1055:99",
            "nodes": [],
            "body": {
              "id": 63839,
              "nodeType": "Block",
              "src": "2430:870:99",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63746,
                      "mutability": "mutable",
                      "name": "callbackData",
                      "nameLocation": "2460:12:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 63839,
                      "src": "2440:32:99",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                        "typeString": "struct PredictMarket.CallbackData"
                      },
                      "typeName": {
                        "id": 63745,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63744,
                          "name": "CallbackData",
                          "nameLocations": [
                            "2440:12:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63692,
                          "src": "2440:12:99"
                        },
                        "referencedDeclaration": 63692,
                        "src": "2440:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackData_$63692_storage_ptr",
                          "typeString": "struct PredictMarket.CallbackData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63754,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63749,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63734,
                          "src": "2486:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 63750,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2498:9:99",
                        "memberName": "extraData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50942,
                        "src": "2486:21:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 63751,
                            "name": "CallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63692,
                            "src": "2510:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CallbackData_$63692_storage_ptr_$",
                              "typeString": "type(struct PredictMarket.CallbackData storage pointer)"
                            }
                          }
                        ],
                        "id": 63752,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2509:14:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CallbackData_$63692_storage_ptr_$",
                          "typeString": "type(struct PredictMarket.CallbackData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_CallbackData_$63692_storage_ptr_$",
                          "typeString": "type(struct PredictMarket.CallbackData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 63747,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2475:3:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 63748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2479:6:99",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2475:10:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 63753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2475:49:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                      "typeString": "struct PredictMarket.CallbackData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2440:84:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CallbackSource_$63686",
                      "typeString": "enum PredictMarket.CallbackSource"
                    },
                    "id": 63759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 63755,
                        "name": "callbackData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63746,
                        "src": "2539:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                          "typeString": "struct PredictMarket.CallbackData memory"
                        }
                      },
                      "id": 63756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2552:14:99",
                      "memberName": "callbackSource",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "2539:27:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                        "typeString": "enum PredictMarket.CallbackSource"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 63757,
                        "name": "CallbackSource",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63686,
                        "src": "2570:14:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CallbackSource_$63686_$",
                          "typeString": "type(enum PredictMarket.CallbackSource)"
                        }
                      },
                      "id": 63758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2585:4:99",
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63684,
                      "src": "2570:19:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                        "typeString": "enum PredictMarket.CallbackSource"
                      }
                    },
                    "src": "2539:50:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                        "typeString": "enum PredictMarket.CallbackSource"
                      },
                      "id": 63780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 63776,
                          "name": "callbackData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63746,
                          "src": "2775:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                            "typeString": "struct PredictMarket.CallbackData memory"
                          }
                        },
                        "id": 63777,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2788:14:99",
                        "memberName": "callbackSource",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63689,
                        "src": "2775:27:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CallbackSource_$63686",
                          "typeString": "enum PredictMarket.CallbackSource"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 63778,
                          "name": "CallbackSource",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63686,
                          "src": "2806:14:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CallbackSource_$63686_$",
                            "typeString": "type(enum PredictMarket.CallbackSource)"
                          }
                        },
                        "id": 63779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2821:5:99",
                        "memberName": "CLOSE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63685,
                        "src": "2806:20:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CallbackSource_$63686",
                          "typeString": "enum PredictMarket.CallbackSource"
                        }
                      },
                      "src": "2775:51:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 63837,
                    "nodeType": "IfStatement",
                    "src": "2771:523:99",
                    "trueBody": {
                      "id": 63836,
                      "nodeType": "Block",
                      "src": "2828:466:99",
                      "statements": [
                        {
                          "assignments": [
                            63785
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 63785,
                              "mutability": "mutable",
                              "name": "vault",
                              "nameLocation": "2864:5:99",
                              "nodeType": "VariableDeclaration",
                              "scope": 63836,
                              "src": "2842:27:99",
                              "stateVariable": false,
                              "storageLocation": "memory",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                "typeString": "struct DataType.Vault"
                              },
                              "typeName": {
                                "id": 63784,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 63783,
                                  "name": "DataType.Vault",
                                  "nameLocations": [
                                    "2842:8:99",
                                    "2851:5:99"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 51781,
                                  "src": "2842:14:99"
                                },
                                "referencedDeclaration": 51781,
                                "src": "2842:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$51781_storage_ptr",
                                  "typeString": "struct DataType.Vault"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 63791,
                          "initialValue": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 63788,
                                  "name": "tradeParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63734,
                                  "src": "2892:11:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeParams memory"
                                  }
                                },
                                "id": 63789,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2904:7:99",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50936,
                                "src": "2892:19:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 63786,
                                "name": "_predyPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50731,
                                "src": "2872:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPredyPool_$51097",
                                  "typeString": "contract IPredyPool"
                                }
                              },
                              "id": 63787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2883:8:99",
                              "memberName": "getVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51070,
                              "src": "2872:19:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$51781_memory_ptr_$",
                                "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                              }
                            },
                            "id": 63790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2872:40:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                              "typeString": "struct DataType.Vault memory"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2842:70:99"
                        },
                        {
                          "assignments": [
                            63793
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 63793,
                              "mutability": "mutable",
                              "name": "closeValue",
                              "nameLocation": "2935:10:99",
                              "nodeType": "VariableDeclaration",
                              "scope": 63836,
                              "src": "2927:18:99",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 63792,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2927:7:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 63799,
                          "initialValue": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 63796,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63785,
                                  "src": "2956:5:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                    "typeString": "struct DataType.Vault memory"
                                  }
                                },
                                "id": 63797,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2962:6:99",
                                "memberName": "margin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51777,
                                "src": "2956:12:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 63795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2948:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 63794,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2948:7:99",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 63798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2948:21:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2927:42:99"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 63807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3023:4:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 63810,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "3037:4:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PredictMarket_$64178",
                                      "typeString": "contract PredictMarket"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PredictMarket_$64178",
                                      "typeString": "contract PredictMarket"
                                    }
                                  ],
                                  "id": 63809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3029:7:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 63808,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3029:7:99",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 63811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3029:13:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 63812,
                                "name": "closeValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63793,
                                "src": "3044:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 63803,
                                        "name": "_predyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50731,
                                        "src": "3005:10:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51097",
                                          "typeString": "contract IPredyPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IPredyPool_$51097",
                                          "typeString": "contract IPredyPool"
                                        }
                                      ],
                                      "id": 63802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2997:7:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 63801,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2997:7:99",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 63804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2997:19:99",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 63800,
                                  "name": "ILendingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50856,
                                  "src": "2984:12:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILendingPool_$50856_$",
                                    "typeString": "type(contract ILendingPool)"
                                  }
                                },
                                "id": 63805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2984:33:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILendingPool_$50856",
                                  "typeString": "contract ILendingPool"
                                }
                              },
                              "id": 63806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3018:4:99",
                              "memberName": "take",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50855,
                              "src": "2984:38:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (bool,address,uint256) external"
                              }
                            },
                            "id": 63813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2984:71:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 63814,
                          "nodeType": "ExpressionStatement",
                          "src": "2984:71:99"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 63819,
                                      "name": "tradeParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63734,
                                      "src": "3137:11:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                                        "typeString": "struct IPredyPool.TradeParams memory"
                                      }
                                    },
                                    "id": 63820,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3149:6:99",
                                    "memberName": "pairId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50934,
                                    "src": "3137:18:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 63818,
                                  "name": "_getQuoteTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50818,
                                  "src": "3115:21:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view returns (address)"
                                  }
                                },
                                "id": 63821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3115:41:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 63822,
                                    "name": "userPositions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63697,
                                    "src": "3158:13:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                                      "typeString": "mapping(uint256 => struct PredictMarket.UserPosition storage ref)"
                                    }
                                  },
                                  "id": 63825,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 63823,
                                      "name": "tradeParams",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 63734,
                                      "src": "3172:11:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                                        "typeString": "struct IPredyPool.TradeParams memory"
                                      }
                                    },
                                    "id": 63824,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3184:7:99",
                                    "memberName": "vaultId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50936,
                                    "src": "3172:19:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3158:34:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserPosition_$63683_storage",
                                    "typeString": "struct PredictMarket.UserPosition storage ref"
                                  }
                                },
                                "id": 63826,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3193:5:99",
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63680,
                                "src": "3158:40:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 63827,
                                "name": "closeValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63793,
                                "src": "3200:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 63815,
                                "name": "TransferHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49889,
                                "src": "3070:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                  "typeString": "type(library TransferHelper)"
                                }
                              },
                              "id": 63817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3085:12:99",
                              "memberName": "safeTransfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49816,
                              "src": "3070:27:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256)"
                              }
                            },
                            "id": 63828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3070:154:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 63829,
                          "nodeType": "ExpressionStatement",
                          "src": "3070:154:99"
                        },
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 63831,
                                  "name": "tradeParams",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63734,
                                  "src": "3251:11:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                                    "typeString": "struct IPredyPool.TradeParams memory"
                                  }
                                },
                                "id": 63832,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3263:7:99",
                                "memberName": "vaultId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50936,
                                "src": "3251:19:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 63833,
                                "name": "closeValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63793,
                                "src": "3272:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 63830,
                              "name": "Closed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63713,
                              "src": "3244:6:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256)"
                              }
                            },
                            "id": 63834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3244:39:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 63835,
                          "nodeType": "EmitStatement",
                          "src": "3239:44:99"
                        }
                      ]
                    }
                  },
                  "id": 63838,
                  "nodeType": "IfStatement",
                  "src": "2535:759:99",
                  "trueBody": {
                    "id": 63775,
                    "nodeType": "Block",
                    "src": "2591:174:99",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 63764,
                                    "name": "tradeParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63734,
                                    "src": "2672:11:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                                      "typeString": "struct IPredyPool.TradeParams memory"
                                    }
                                  },
                                  "id": 63765,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2684:6:99",
                                  "memberName": "pairId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50934,
                                  "src": "2672:18:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 63763,
                                "name": "_getQuoteTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50818,
                                "src": "2650:21:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 63766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2650:41:99",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 63769,
                                  "name": "_predyPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50731,
                                  "src": "2701:10:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPredyPool_$51097",
                                    "typeString": "contract IPredyPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPredyPool_$51097",
                                    "typeString": "contract IPredyPool"
                                  }
                                ],
                                "id": 63768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2693:7:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 63767,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2693:7:99",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2693:19:99",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 63771,
                                "name": "callbackData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63746,
                                "src": "2714:12:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                                  "typeString": "struct PredictMarket.CallbackData memory"
                                }
                              },
                              "id": 63772,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2727:13:99",
                              "memberName": "depositAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63691,
                              "src": "2714:26:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 63760,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "2605:14:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 63762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2620:12:99",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "2605:27:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 63773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2605:149:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 63774,
                        "nodeType": "ExpressionStatement",
                        "src": "2605:149:99"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              50772
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63742,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 63741,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "2412:13:99"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50763,
                  "src": "2412:13:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "2412:13:99"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "2254:23:99",
            "overrides": {
              "id": 63740,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 63739,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "2386:16:99"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50819,
                  "src": "2386:16:99"
                }
              ],
              "src": "2377:26:99"
            },
            "parameters": {
              "id": 63738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63734,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "2308:11:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63840,
                  "src": "2278:41:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 63733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63732,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "2278:10:99",
                        "2289:11:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50943,
                      "src": "2278:22:99"
                    },
                    "referencedDeclaration": 50943,
                    "src": "2278:22:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$50943_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63840,
                  "src": "2321:29:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 63736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63735,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "2321:10:99",
                        "2332:11:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50959,
                      "src": "2321:22:99"
                    },
                    "referencedDeclaration": 50959,
                    "src": "2321:22:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2277:74:99"
            },
            "returnParameters": {
              "id": 63743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:99"
            },
            "scope": 64178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63985,
            "nodeType": "FunctionDefinition",
            "src": "3564:1508:99",
            "nodes": [],
            "body": {
              "id": 63984,
              "nodeType": "Block",
              "src": "3743:1329:99",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63855
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63855,
                      "mutability": "mutable",
                      "name": "predictOrder",
                      "nameLocation": "3773:12:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 63984,
                      "src": "3753:32:99",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                        "typeString": "struct PredictOrder"
                      },
                      "typeName": {
                        "id": 63854,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63853,
                          "name": "PredictOrder",
                          "nameLocations": [
                            "3753:12:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64205,
                          "src": "3753:12:99"
                        },
                        "referencedDeclaration": 64205,
                        "src": "3753:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PredictOrder_$64205_storage_ptr",
                          "typeString": "struct PredictOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63863,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63858,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63844,
                          "src": "3799:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 63859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3805:5:99",
                        "memberName": "order",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50827,
                        "src": "3799:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 63860,
                            "name": "PredictOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64205,
                            "src": "3813:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_PredictOrder_$64205_storage_ptr_$",
                              "typeString": "type(struct PredictOrder storage pointer)"
                            }
                          }
                        ],
                        "id": 63861,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3812:14:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PredictOrder_$64205_storage_ptr_$",
                          "typeString": "type(struct PredictOrder storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_PredictOrder_$64205_storage_ptr_$",
                          "typeString": "type(struct PredictOrder storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 63856,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3788:3:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 63857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3792:6:99",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3788:10:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 63862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:39:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                      "typeString": "struct PredictOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3753:74:99"
                },
                {
                  "assignments": [
                    63866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63866,
                      "mutability": "mutable",
                      "name": "resolvedOrder",
                      "nameLocation": "3858:13:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 63984,
                      "src": "3837:34:99",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                        "typeString": "struct ResolvedOrder"
                      },
                      "typeName": {
                        "id": 63865,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63864,
                          "name": "ResolvedOrder",
                          "nameLocations": [
                            "3837:13:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61065,
                          "src": "3837:13:99"
                        },
                        "referencedDeclaration": 61065,
                        "src": "3837:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$61065_storage_ptr",
                          "typeString": "struct ResolvedOrder"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63869,
                        "name": "predictOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63855,
                        "src": "3898:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                          "typeString": "struct PredictOrder memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 63870,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63844,
                          "src": "3912:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                            "typeString": "struct IFillerMarket.SignedOrder memory"
                          }
                        },
                        "id": 63871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3918:3:99",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50829,
                        "src": "3912:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                          "typeString": "struct PredictOrder memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 63867,
                        "name": "PredictOrderLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64316,
                        "src": "3874:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PredictOrderLib_$64316_$",
                          "typeString": "type(library PredictOrderLib)"
                        }
                      },
                      "id": 63868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3890:7:99",
                      "memberName": "resolve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64315,
                      "src": "3874:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PredictOrder_$64205_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_ResolvedOrder_$61065_memory_ptr_$",
                        "typeString": "function (struct PredictOrder memory,bytes memory) pure returns (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 63872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3874:48:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                      "typeString": "struct ResolvedOrder memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3837:85:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 63875,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "3941:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 63878,
                          "indexExpression": {
                            "expression": {
                              "id": 63876,
                              "name": "predictOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63855,
                              "src": "3956:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                "typeString": "struct PredictOrder memory"
                              }
                            },
                            "id": 63877,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3969:6:99",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64190,
                            "src": "3956:19:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3941:35:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3988:1:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3980:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 63879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3980:7:99",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3980:10:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3941:49:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 63874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3933:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 63884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3933:58:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63885,
                  "nodeType": "ExpressionStatement",
                  "src": "3933:58:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 63887,
                            "name": "predictOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63855,
                            "src": "4009:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                              "typeString": "struct PredictOrder memory"
                            }
                          },
                          "id": 63888,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4022:17:99",
                          "memberName": "entryTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64194,
                          "src": "4009:30:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 63889,
                            "name": "_quoteTokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50735,
                            "src": "4043:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 63892,
                          "indexExpression": {
                            "expression": {
                              "id": 63890,
                              "name": "predictOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63855,
                              "src": "4058:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                "typeString": "struct PredictOrder memory"
                              }
                            },
                            "id": 63891,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4071:6:99",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64190,
                            "src": "4058:19:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4043:35:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4009:69:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 63886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4001:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 63894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:78:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63895,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:78:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63897,
                        "name": "resolvedOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63866,
                        "src": "4103:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      ],
                      "id": 63896,
                      "name": "_verifyOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64177,
                      "src": "4090:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ResolvedOrder_$61065_memory_ptr_$returns$__$",
                        "typeString": "function (struct ResolvedOrder memory)"
                      }
                    },
                    "id": 63898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:27:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63899,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:27:99"
                },
                {
                  "expression": {
                    "id": 63924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63900,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63851,
                      "src": "4128:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 63905,
                                "name": "predictOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63855,
                                "src": "4212:12:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                  "typeString": "struct PredictOrder memory"
                                }
                              },
                              "id": 63906,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4225:6:99",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64190,
                              "src": "4212:19:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 63907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4249:1:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "expression": {
                                "id": 63908,
                                "name": "predictOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63855,
                                "src": "4268:12:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                  "typeString": "struct PredictOrder memory"
                                }
                              },
                              "id": 63909,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4281:11:99",
                              "memberName": "tradeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64196,
                              "src": "4268:24:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 63910,
                                "name": "predictOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63855,
                                "src": "4310:12:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                  "typeString": "struct PredictOrder memory"
                                }
                              },
                              "id": 63911,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4323:15:99",
                              "memberName": "tradeAmountSqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64198,
                              "src": "4310:28:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 63915,
                                        "name": "CallbackSource",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 63686,
                                        "src": "4380:14:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_CallbackSource_$63686_$",
                                          "typeString": "type(enum PredictMarket.CallbackSource)"
                                        }
                                      },
                                      "id": 63916,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "4395:4:99",
                                      "memberName": "OPEN",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 63684,
                                      "src": "4380:19:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                                        "typeString": "enum PredictMarket.CallbackSource"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 63917,
                                        "name": "predictOrder",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 63855,
                                        "src": "4401:12:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                          "typeString": "struct PredictOrder memory"
                                        }
                                      },
                                      "id": 63918,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4414:12:99",
                                      "memberName": "marginAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 64200,
                                      "src": "4401:25:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                                        "typeString": "enum PredictMarket.CallbackSource"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 63914,
                                    "name": "CallbackData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63692,
                                    "src": "4367:12:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_CallbackData_$63692_storage_ptr_$",
                                      "typeString": "type(struct PredictMarket.CallbackData storage pointer)"
                                    }
                                  },
                                  "id": 63919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4367:60:99",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                                    "typeString": "struct PredictMarket.CallbackData memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                                    "typeString": "struct PredictMarket.CallbackData memory"
                                  }
                                ],
                                "expression": {
                                  "id": 63912,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4356:3:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 63913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4360:6:99",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "4356:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 63920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4356:72:99",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 63903,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51097,
                              "src": "4172:10:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51097_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 63904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4183:11:99",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50943,
                            "src": "4172:22:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$50943_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 63921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4172:270:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 63922,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63847,
                          "src": "4456:14:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 63901,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50731,
                          "src": "4142:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$51097",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 63902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4153:5:99",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50991,
                        "src": "4142:16:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50943_memory_ptr_$_t_struct$_SettlementData_$51104_memory_ptr_$returns$_t_struct$_TradeResult_$50959_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 63923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4142:338:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "4128:352:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 63925,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:352:99"
                },
                {
                  "expression": {
                    "id": 63934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 63926,
                          "name": "userPositions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63697,
                          "src": "4491:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                            "typeString": "mapping(uint256 => struct PredictMarket.UserPosition storage ref)"
                          }
                        },
                        "id": 63929,
                        "indexExpression": {
                          "expression": {
                            "id": 63927,
                            "name": "tradeResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63851,
                            "src": "4505:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                              "typeString": "struct IPredyPool.TradeResult memory"
                            }
                          },
                          "id": 63928,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4517:7:99",
                          "memberName": "vaultId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50948,
                          "src": "4505:19:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4491:34:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$63683_storage",
                          "typeString": "struct PredictMarket.UserPosition storage ref"
                        }
                      },
                      "id": 63930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4526:5:99",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63680,
                      "src": "4491:40:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 63931,
                          "name": "predictOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63855,
                          "src": "4534:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                            "typeString": "struct PredictOrder memory"
                          }
                        },
                        "id": 63932,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4547:4:99",
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64188,
                        "src": "4534:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OrderInfo_$60958_memory_ptr",
                          "typeString": "struct OrderInfo memory"
                        }
                      },
                      "id": 63933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4552:6:99",
                      "memberName": "trader",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60953,
                      "src": "4534:24:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4491:67:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 63935,
                  "nodeType": "ExpressionStatement",
                  "src": "4491:67:99"
                },
                {
                  "expression": {
                    "id": 63946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 63936,
                          "name": "userPositions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63697,
                          "src": "4568:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                            "typeString": "mapping(uint256 => struct PredictMarket.UserPosition storage ref)"
                          }
                        },
                        "id": 63939,
                        "indexExpression": {
                          "expression": {
                            "id": 63937,
                            "name": "tradeResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63851,
                            "src": "4582:11:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                              "typeString": "struct IPredyPool.TradeResult memory"
                            }
                          },
                          "id": 63938,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4594:7:99",
                          "memberName": "vaultId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50948,
                          "src": "4582:19:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4568:34:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$63683_storage",
                          "typeString": "struct PredictMarket.UserPosition storage ref"
                        }
                      },
                      "id": 63940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4603:10:99",
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63682,
                      "src": "4568:45:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 63941,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4616:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 63942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4622:9:99",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4616:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 63943,
                          "name": "predictOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63855,
                          "src": "4634:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                            "typeString": "struct PredictOrder memory"
                          }
                        },
                        "id": 63944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4647:8:99",
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64192,
                        "src": "4634:21:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "4616:39:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4568:87:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 63947,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:87:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63951,
                          "name": "tradeResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63851,
                          "src": "4693:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "id": 63952,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4705:7:99",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50948,
                        "src": "4693:19:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 63953,
                            "name": "predictOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63855,
                            "src": "4714:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                              "typeString": "struct PredictOrder memory"
                            }
                          },
                          "id": 63954,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4727:4:99",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64188,
                          "src": "4714:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60958_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 63955,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4732:6:99",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60953,
                        "src": "4714:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 63948,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50731,
                        "src": "4666:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$51097",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 63950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4677:15:99",
                      "memberName": "updateRecepient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51026,
                      "src": "4666:26:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 63956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:73:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63957,
                  "nodeType": "ExpressionStatement",
                  "src": "4666:73:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63963,
                        "name": "predictOrder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63855,
                        "src": "4813:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                          "typeString": "struct PredictOrder memory"
                        }
                      },
                      {
                        "id": 63964,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63851,
                        "src": "4827:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                          "typeString": "struct PredictOrder memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 63959,
                              "name": "predictOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63855,
                              "src": "4773:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                                "typeString": "struct PredictOrder memory"
                              }
                            },
                            "id": 63960,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4786:16:99",
                            "memberName": "validatorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64202,
                            "src": "4773:29:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 63958,
                          "name": "IPredictOrderValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50897,
                          "src": "4750:22:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPredictOrderValidator_$50897_$",
                            "typeString": "type(contract IPredictOrderValidator)"
                          }
                        },
                        "id": 63961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4750:53:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredictOrderValidator_$50897",
                          "typeString": "contract IPredictOrderValidator"
                        }
                      },
                      "id": 63962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4804:8:99",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50896,
                      "src": "4750:62:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_struct$_PredictOrder_$64205_memory_ptr_$_t_struct$_TradeResult_$50959_memory_ptr_$returns$__$",
                        "typeString": "function (struct PredictOrder memory,struct IPredyPool.TradeResult memory) pure external"
                      }
                    },
                    "id": 63965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4750:89:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63966,
                  "nodeType": "ExpressionStatement",
                  "src": "4750:89:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 63968,
                            "name": "predictOrder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63855,
                            "src": "4875:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                              "typeString": "struct PredictOrder memory"
                            }
                          },
                          "id": 63969,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4888:4:99",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64188,
                          "src": "4875:17:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60958_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 63970,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4893:6:99",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60953,
                        "src": "4875:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 63971,
                          "name": "tradeResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63851,
                          "src": "4913:11:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "id": 63972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4925:7:99",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50948,
                        "src": "4913:19:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 63973,
                          "name": "predictOrder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63855,
                          "src": "4946:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PredictOrder_$64205_memory_ptr",
                            "typeString": "struct PredictOrder memory"
                          }
                        },
                        "id": 63974,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4959:8:99",
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64192,
                        "src": "4946:21:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 63975,
                            "name": "userPositions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63697,
                            "src": "4981:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                              "typeString": "mapping(uint256 => struct PredictMarket.UserPosition storage ref)"
                            }
                          },
                          "id": 63978,
                          "indexExpression": {
                            "expression": {
                              "id": 63976,
                              "name": "tradeResult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63851,
                              "src": "4995:11:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                                "typeString": "struct IPredyPool.TradeResult memory"
                              }
                            },
                            "id": 63977,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5007:7:99",
                            "memberName": "vaultId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50948,
                            "src": "4995:19:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4981:34:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserPosition_$63683_storage",
                            "typeString": "struct PredictMarket.UserPosition storage ref"
                          }
                        },
                        "id": 63979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5016:10:99",
                        "memberName": "expiration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63682,
                        "src": "4981:45:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63967,
                      "name": "Opened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63707,
                      "src": "4855:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 63980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:181:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63981,
                  "nodeType": "EmitStatement",
                  "src": "4850:186:99"
                },
                {
                  "expression": {
                    "id": 63982,
                    "name": "tradeResult",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63851,
                    "src": "5054:11:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 63852,
                  "id": 63983,
                  "nodeType": "Return",
                  "src": "5047:18:99"
                }
              ]
            },
            "documentation": {
              "id": 63841,
              "nodeType": "StructuredDocumentation",
              "src": "3306:253:99",
              "text": " @notice Verifies signature of the order and open new predict position\n @param order The order signed by trader\n @param settlementData The route of settlement created by filler\n @return tradeResult The result of trade"
            },
            "functionSelector": "a966d863",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "3573:12:99",
            "parameters": {
              "id": 63848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63844,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "3605:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63985,
                  "src": "3586:24:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SignedOrder_$50830_memory_ptr",
                    "typeString": "struct IFillerMarket.SignedOrder"
                  },
                  "typeName": {
                    "id": 63843,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63842,
                      "name": "SignedOrder",
                      "nameLocations": [
                        "3586:11:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50830,
                      "src": "3586:11:99"
                    },
                    "referencedDeclaration": 50830,
                    "src": "3586:11:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SignedOrder_$50830_storage_ptr",
                      "typeString": "struct IFillerMarket.SignedOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63847,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3646:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63985,
                  "src": "3612:48:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 63846,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63845,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3612:11:99",
                        "3624:14:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51104,
                      "src": "3612:26:99"
                    },
                    "referencedDeclaration": 51104,
                    "src": "3612:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51104_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3585:76:99"
            },
            "returnParameters": {
              "id": 63852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63851,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "3726:11:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 63985,
                  "src": "3696:41:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 63850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63849,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "3696:10:99",
                        "3707:11:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50959,
                      "src": "3696:22:99"
                    },
                    "referencedDeclaration": 50959,
                    "src": "3696:22:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3695:43:99"
            },
            "scope": 64178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64094,
            "nodeType": "FunctionDefinition",
            "src": "5339:1160:99",
            "nodes": [],
            "body": {
              "id": 64093,
              "nodeType": "Block",
              "src": "5505:994:99",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63999,
                      "mutability": "mutable",
                      "name": "userPosition",
                      "nameLocation": "5536:12:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 64093,
                      "src": "5515:33:99",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                        "typeString": "struct PredictMarket.UserPosition"
                      },
                      "typeName": {
                        "id": 63998,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 63997,
                          "name": "UserPosition",
                          "nameLocations": [
                            "5515:12:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 63683,
                          "src": "5515:12:99"
                        },
                        "referencedDeclaration": 63683,
                        "src": "5515:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                          "typeString": "struct PredictMarket.UserPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64003,
                  "initialValue": {
                    "baseExpression": {
                      "id": 64000,
                      "name": "userPositions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63697,
                      "src": "5551:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserPosition_$63683_storage_$",
                        "typeString": "mapping(uint256 => struct PredictMarket.UserPosition storage ref)"
                      }
                    },
                    "id": 64002,
                    "indexExpression": {
                      "id": 64001,
                      "name": "positionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63988,
                      "src": "5565:10:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5551:25:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPosition_$63683_storage",
                      "typeString": "struct PredictMarket.UserPosition storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5515:61:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 64005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5595:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 64006,
                            "name": "userPosition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63999,
                            "src": "5599:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                              "typeString": "struct PredictMarket.UserPosition storage pointer"
                            }
                          },
                          "id": 64007,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5612:10:99",
                          "memberName": "expiration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63682,
                          "src": "5599:23:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5595:27:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 64004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5587:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5587:36:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64010,
                  "nodeType": "ExpressionStatement",
                  "src": "5587:36:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 64011,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63999,
                        "src": "5638:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                          "typeString": "struct PredictMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 64012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5651:10:99",
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63682,
                      "src": "5638:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 64013,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5664:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 64014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5670:9:99",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5664:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5638:41:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64020,
                  "nodeType": "IfStatement",
                  "src": "5634:102:99",
                  "trueBody": {
                    "id": 64019,
                    "nodeType": "Block",
                    "src": "5681:55:99",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 64016,
                            "name": "CloseBeforeExpiration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63666,
                            "src": "5702:21:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 64017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5702:23:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 64018,
                        "nodeType": "RevertStatement",
                        "src": "5695:30:99"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    64025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64025,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "5768:5:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 64093,
                      "src": "5746:27:99",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 64024,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64023,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "5746:8:99",
                            "5755:5:99"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51781,
                          "src": "5746:14:99"
                        },
                        "referencedDeclaration": 51781,
                        "src": "5746:14:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$51781_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64030,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 64028,
                        "name": "positionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63988,
                        "src": "5796:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64026,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50731,
                        "src": "5776:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$51097",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 64027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5787:8:99",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51070,
                      "src": "5776:19:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$51781_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct DataType.Vault memory)"
                      }
                    },
                    "id": 64029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5776:31:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                      "typeString": "struct DataType.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5746:61:99"
                },
                {
                  "expression": {
                    "id": 64061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64031,
                      "name": "tradeResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63995,
                      "src": "5818:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 64036,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64025,
                                  "src": "5902:5:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                    "typeString": "struct DataType.Vault memory"
                                  }
                                },
                                "id": 64037,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5908:12:99",
                                "memberName": "openPosition",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51780,
                                "src": "5902:18:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserStatus_$52059_memory_ptr",
                                  "typeString": "struct Perp.UserStatus memory"
                                }
                              },
                              "id": 64038,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5921:6:99",
                              "memberName": "pairId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52040,
                              "src": "5902:25:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 64039,
                              "name": "positionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63988,
                              "src": "5945:10:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 64044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "5973:31:99",
                              "subExpression": {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 64040,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64025,
                                      "src": "5974:5:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                        "typeString": "struct DataType.Vault memory"
                                      }
                                    },
                                    "id": 64041,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5980:12:99",
                                    "memberName": "openPosition",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51780,
                                    "src": "5974:18:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStatus_$52059_memory_ptr",
                                      "typeString": "struct Perp.UserStatus memory"
                                    }
                                  },
                                  "id": 64042,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5993:4:99",
                                  "memberName": "perp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52049,
                                  "src": "5974:23:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PositionStatus_$51978_memory_ptr",
                                    "typeString": "struct Perp.PositionStatus memory"
                                  }
                                },
                                "id": 64043,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5998:6:99",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51975,
                                "src": "5974:30:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 64049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "-",
                              "prefix": true,
                              "src": "6022:35:99",
                              "subExpression": {
                                "expression": {
                                  "expression": {
                                    "expression": {
                                      "id": 64045,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 64025,
                                      "src": "6023:5:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                        "typeString": "struct DataType.Vault memory"
                                      }
                                    },
                                    "id": 64046,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6029:12:99",
                                    "memberName": "openPosition",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51780,
                                    "src": "6023:18:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserStatus_$52059_memory_ptr",
                                      "typeString": "struct Perp.UserStatus memory"
                                    }
                                  },
                                  "id": 64047,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6042:8:99",
                                  "memberName": "sqrtPerp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52052,
                                  "src": "6023:27:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SqrtPositionStatus_$51991_memory_ptr",
                                    "typeString": "struct Perp.SqrtPositionStatus memory"
                                  }
                                },
                                "id": 64048,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6051:6:99",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 51980,
                                "src": "6023:34:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 64053,
                                        "name": "CallbackSource",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 63686,
                                        "src": "6099:14:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_CallbackSource_$63686_$",
                                          "typeString": "type(enum PredictMarket.CallbackSource)"
                                        }
                                      },
                                      "id": 64054,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6114:5:99",
                                      "memberName": "CLOSE",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 63685,
                                      "src": "6099:20:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                                        "typeString": "enum PredictMarket.CallbackSource"
                                      }
                                    },
                                    {
                                      "hexValue": "30",
                                      "id": 64055,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6121:1:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_CallbackSource_$63686",
                                        "typeString": "enum PredictMarket.CallbackSource"
                                      },
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 64052,
                                    "name": "CallbackData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63692,
                                    "src": "6086:12:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_CallbackData_$63692_storage_ptr_$",
                                      "typeString": "type(struct PredictMarket.CallbackData storage pointer)"
                                    }
                                  },
                                  "id": 64056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6086:37:99",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                                    "typeString": "struct PredictMarket.CallbackData memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_CallbackData_$63692_memory_ptr",
                                    "typeString": "struct PredictMarket.CallbackData memory"
                                  }
                                ],
                                "expression": {
                                  "id": 64050,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6075:3:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 64051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6079:6:99",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6075:10:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 64057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6075:49:99",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 64034,
                              "name": "IPredyPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51097,
                              "src": "5862:10:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPredyPool_$51097_$",
                                "typeString": "type(contract IPredyPool)"
                              }
                            },
                            "id": 64035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5873:11:99",
                            "memberName": "TradeParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50943,
                            "src": "5862:22:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TradeParams_$50943_storage_ptr_$",
                              "typeString": "type(struct IPredyPool.TradeParams storage pointer)"
                            }
                          },
                          "id": 64058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5862:276:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        {
                          "id": 64059,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63991,
                          "src": "6152:14:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_TradeParams_$50943_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        ],
                        "expression": {
                          "id": 64032,
                          "name": "_predyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50731,
                          "src": "5832:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPredyPool_$51097",
                            "typeString": "contract IPredyPool"
                          }
                        },
                        "id": 64033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5843:5:99",
                        "memberName": "trade",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50991,
                        "src": "5832:16:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$50943_memory_ptr_$_t_struct$_SettlementData_$51104_memory_ptr_$returns$_t_struct$_TradeResult_$50959_memory_ptr_$",
                          "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                        }
                      },
                      "id": 64060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5832:344:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                        "typeString": "struct IPredyPool.TradeResult memory"
                      }
                    },
                    "src": "5818:358:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 64062,
                  "nodeType": "ExpressionStatement",
                  "src": "5818:358:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 64068,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64025,
                                "src": "6257:5:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                  "typeString": "struct DataType.Vault memory"
                                }
                              },
                              "id": 64069,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6263:12:99",
                              "memberName": "openPosition",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51780,
                              "src": "6257:18:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStatus_$52059_memory_ptr",
                                "typeString": "struct Perp.UserStatus memory"
                              }
                            },
                            "id": 64070,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6276:6:99",
                            "memberName": "pairId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52040,
                            "src": "6257:25:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 64066,
                            "name": "_predyPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50731,
                            "src": "6228:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPredyPool_$51097",
                              "typeString": "contract IPredyPool"
                            }
                          },
                          "id": 64067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6239:17:99",
                          "memberName": "getSqrtIndexPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51054,
                          "src": "6228:28:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 64071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6228:55:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64072,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63995,
                        "src": "6297:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 64074,
                              "name": "userPosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63999,
                              "src": "6350:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                                "typeString": "struct PredictMarket.UserPosition storage pointer"
                              }
                            },
                            "id": 64075,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6363:10:99",
                            "memberName": "expiration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63682,
                            "src": "6350:23:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 64076,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6375:5:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 64077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6381:9:99",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6375:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 64073,
                          "name": "_calculateSlippageTolerance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64141,
                          "src": "6322:27:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 64078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6322:69:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 64084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 64079,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64025,
                                "src": "6405:5:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$51781_memory_ptr",
                                  "typeString": "struct DataType.Vault memory"
                                }
                              },
                              "id": 64080,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6411:12:99",
                              "memberName": "openPosition",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51780,
                              "src": "6405:18:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserStatus_$52059_memory_ptr",
                                "typeString": "struct Perp.UserStatus memory"
                              }
                            },
                            "id": 64081,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6424:8:99",
                            "memberName": "sqrtPerp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52052,
                            "src": "6405:27:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SqrtPositionStatus_$51991_memory_ptr",
                              "typeString": "struct Perp.SqrtPositionStatus memory"
                            }
                          },
                          "id": 64082,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6433:6:99",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 51980,
                          "src": "6405:34:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 64083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6443:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6405:39:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 64063,
                        "name": "LiquidationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59174,
                        "src": "6187:16:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidationLogic_$59174_$",
                          "typeString": "type(library LiquidationLogic)"
                        }
                      },
                      "id": 64065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6204:10:99",
                      "memberName": "checkPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59173,
                      "src": "6187:27:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_struct$_TradeResult_$50959_memory_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,struct IPredyPool.TradeResult memory,uint256,bool) pure"
                      }
                    },
                    "id": 64085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:267:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64086,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:267:99"
                },
                {
                  "expression": {
                    "id": 64091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 64087,
                        "name": "userPosition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63999,
                        "src": "6465:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserPosition_$63683_storage_ptr",
                          "typeString": "struct PredictMarket.UserPosition storage pointer"
                        }
                      },
                      "id": 64089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6478:10:99",
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63682,
                      "src": "6465:23:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 64090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6491:1:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6465:27:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64092,
                  "nodeType": "ExpressionStatement",
                  "src": "6465:27:99"
                }
              ]
            },
            "documentation": {
              "id": 63986,
              "nodeType": "StructuredDocumentation",
              "src": "5078:256:99",
              "text": " @notice Closes a predict position\n @param positionId The id of position\n @param settlementData The route of settlement created by filler\n @return tradeResult The result of trade\n @dev Anyone can call this function"
            },
            "functionSelector": "333c6a3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "5348:5:99",
            "parameters": {
              "id": 63992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63988,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "5362:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64094,
                  "src": "5354:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5354:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63991,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "5408:14:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64094,
                  "src": "5374:48:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51104_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 63990,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63989,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "5374:11:99",
                        "5386:14:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51104,
                      "src": "5374:26:99"
                    },
                    "referencedDeclaration": 51104,
                    "src": "5374:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51104_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5353:70:99"
            },
            "returnParameters": {
              "id": 63996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63995,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "5488:11:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64094,
                  "src": "5458:41:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$50959_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 63994,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63993,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "5458:10:99",
                        "5469:11:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50959,
                      "src": "5458:22:99"
                    },
                    "referencedDeclaration": 50959,
                    "src": "5458:22:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$50959_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:43:99"
            },
            "scope": 64178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64141,
            "nodeType": "FunctionDefinition",
            "src": "6505:437:99",
            "nodes": [],
            "body": {
              "id": 64140,
              "nodeType": "Block",
              "src": "6614:328:99",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64103,
                      "name": "currentTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64098,
                      "src": "6628:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 64104,
                      "name": "startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64096,
                      "src": "6643:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6628:24:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64109,
                  "nodeType": "IfStatement",
                  "src": "6624:75:99",
                  "trueBody": {
                    "id": 64108,
                    "nodeType": "Block",
                    "src": "6654:45:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 64106,
                          "name": "_MIN_SLIPPAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63675,
                          "src": "6675:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 64102,
                        "id": 64107,
                        "nodeType": "Return",
                        "src": "6668:20:99"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    64111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64111,
                      "mutability": "mutable",
                      "name": "elapsed",
                      "nameLocation": "6717:7:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 64140,
                      "src": "6709:15:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6709:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64120,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 64117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 64112,
                              "name": "currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64098,
                              "src": "6728:11:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 64113,
                              "name": "startTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64096,
                              "src": "6742:9:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6728:23:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 64115,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6727:25:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "316534",
                        "id": 64116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6755:3:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "1e4"
                      },
                      "src": "6727:31:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 64118,
                      "name": "_AUCTION_DURATION",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63678,
                      "src": "6761:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6727:51:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6709:69:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 64123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64121,
                      "name": "elapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64111,
                      "src": "6793:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "316534",
                      "id": 64122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6803:3:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "1e4"
                    },
                    "src": "6793:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64127,
                  "nodeType": "IfStatement",
                  "src": "6789:64:99",
                  "trueBody": {
                    "id": 64126,
                    "nodeType": "Block",
                    "src": "6808:45:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 64124,
                          "name": "_MAX_SLIPPAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63672,
                          "src": "6829:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 64102,
                        "id": 64125,
                        "nodeType": "Return",
                        "src": "6822:20:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 64128,
                          "name": "_MIN_SLIPPAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63675,
                          "src": "6871:13:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 64136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 64134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 64129,
                              "name": "elapsed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64111,
                              "src": "6887:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 64132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 64130,
                                    "name": "_MAX_SLIPPAGE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63672,
                                    "src": "6898:13:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 64131,
                                    "name": "_MIN_SLIPPAGE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63675,
                                    "src": "6914:13:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6898:29:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 64133,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6897:31:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6887:41:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "316534",
                            "id": 64135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6931:3:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "1e4"
                          },
                          "src": "6887:47:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6871:63:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 64138,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6870:65:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 64102,
                  "id": 64139,
                  "nodeType": "Return",
                  "src": "6863:72:99"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculateSlippageTolerance",
            "nameLocation": "6514:27:99",
            "parameters": {
              "id": 64099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64096,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "6550:9:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64141,
                  "src": "6542:17:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6542:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64098,
                  "mutability": "mutable",
                  "name": "currentTime",
                  "nameLocation": "6569:11:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64141,
                  "src": "6561:19:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6561:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6541:40:99"
            },
            "returnParameters": {
              "id": 64102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64141,
                  "src": "6605:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6605:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6604:9:99"
            },
            "scope": 64178,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64177,
            "nodeType": "FunctionDefinition",
            "src": "6952:353:99",
            "nodes": [],
            "body": {
              "id": 64176,
              "nodeType": "Block",
              "src": "7011:294:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64147,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64144,
                        "src": "7021:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                          "typeString": "struct ResolvedOrder memory"
                        }
                      },
                      "id": 64149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7027:8:99",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61106,
                      "src": "7021:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResolvedOrder_$61065_memory_ptr_$returns$__$attached_to$_t_struct$_ResolvedOrder_$61065_memory_ptr_$",
                        "typeString": "function (struct ResolvedOrder memory) view"
                      }
                    },
                    "id": 64150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7021:16:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64151,
                  "nodeType": "ExpressionStatement",
                  "src": "7021:16:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 64155,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64144,
                            "src": "7096:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 64156,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7102:8:99",
                          "memberName": "toPermit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61028,
                          "src": "7096:14:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$61065_memory_ptr_$returns$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$61065_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory) pure returns (struct ISignatureTransfer.PermitTransferFrom memory)"
                          }
                        },
                        "id": 64157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7096:16:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64162,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7156:4:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PredictMarket_$64178",
                                  "typeString": "contract PredictMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PredictMarket_$64178",
                                  "typeString": "contract PredictMarket"
                                }
                              ],
                              "id": 64161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7148:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64160,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7148:7:99",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7148:13:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64158,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64144,
                            "src": "7126:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 64159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7132:15:99",
                          "memberName": "transferDetails",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61048,
                          "src": "7126:21:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ResolvedOrder_$61065_memory_ptr_$_t_address_$returns$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$attached_to$_t_struct$_ResolvedOrder_$61065_memory_ptr_$",
                            "typeString": "function (struct ResolvedOrder memory,address) pure returns (struct ISignatureTransfer.SignatureTransferDetails memory)"
                          }
                        },
                        "id": 64164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7126:36:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 64165,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64144,
                            "src": "7176:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                              "typeString": "struct ResolvedOrder memory"
                            }
                          },
                          "id": 64166,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7182:4:99",
                          "memberName": "info",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61056,
                          "src": "7176:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OrderInfo_$60958_memory_ptr",
                            "typeString": "struct OrderInfo memory"
                          }
                        },
                        "id": 64167,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7187:6:99",
                        "memberName": "trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60953,
                        "src": "7176:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 64168,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64144,
                          "src": "7207:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 64169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7213:4:99",
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61062,
                        "src": "7207:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 64170,
                          "name": "PredictOrderLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64316,
                          "src": "7231:15:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PredictOrderLib_$64316_$",
                            "typeString": "type(library PredictOrderLib)"
                          }
                        },
                        "id": 64171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7247:18:99",
                        "memberName": "PERMIT2_ORDER_TYPE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64253,
                        "src": "7231:34:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 64172,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64144,
                          "src": "7279:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                            "typeString": "struct ResolvedOrder memory"
                          }
                        },
                        "id": 64173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7285:3:99",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61064,
                        "src": "7279:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$46934_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$46939_memory_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 64152,
                        "name": "_permit2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63669,
                        "src": "7048:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPermit2_$46897",
                          "typeString": "contract IPermit2"
                        }
                      },
                      "id": 64154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7057:25:99",
                      "memberName": "permitWitnessTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46990,
                      "src": "7048:34:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$46934_memory_ptr_$_t_struct$_SignatureTransferDetails_$46939_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                      }
                    },
                    "id": 64174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7048:250:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64175,
                  "nodeType": "ExpressionStatement",
                  "src": "7048:250:99"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyOrder",
            "nameLocation": "6961:12:99",
            "parameters": {
              "id": 64145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64144,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "6995:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 64177,
                  "src": "6974:26:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResolvedOrder_$61065_memory_ptr",
                    "typeString": "struct ResolvedOrder"
                  },
                  "typeName": {
                    "id": 64143,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64142,
                      "name": "ResolvedOrder",
                      "nameLocations": [
                        "6974:13:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61065,
                      "src": "6974:13:99"
                    },
                    "referencedDeclaration": 61065,
                    "src": "6974:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResolvedOrder_$61065_storage_ptr",
                      "typeString": "struct ResolvedOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:28:99"
            },
            "returnParameters": {
              "id": 64146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7011:0:99"
            },
            "scope": 64178,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63646,
              "name": "IFillerMarket",
              "nameLocations": [
                "1199:13:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50831,
              "src": "1199:13:99"
            },
            "id": 63647,
            "nodeType": "InheritanceSpecifier",
            "src": "1199:13:99"
          },
          {
            "baseName": {
              "id": 63648,
              "name": "BaseHookCallback",
              "nameLocations": [
                "1214:16:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50819,
              "src": "1214:16:99"
            },
            "id": 63649,
            "nodeType": "InheritanceSpecifier",
            "src": "1214:16:99"
          }
        ],
        "canonicalName": "PredictMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 63645,
          "nodeType": "StructuredDocumentation",
          "src": "1020:152:99",
          "text": " @notice Predict market contract\n A trader can open position with any duration.\n Anyone can close the position after expiration timestamp."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64178,
          50819,
          50844,
          50831
        ],
        "name": "PredictMarket",
        "nameLocation": "1182:13:99",
        "scope": 64179,
        "usedErrors": [
          50737,
          50823,
          50825,
          58691,
          58693,
          61068,
          61071,
          63666
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 99
}
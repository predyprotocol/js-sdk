{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uniswapFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyNotSettled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPairId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        }
      ],
      "name": "LockedBy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "T",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultAlreadyHasAnotherMarginId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultAlreadyHasAnotherPair",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultIsNotDanger",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedUniswapPools",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closeRatio",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getPairStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "quotePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "basePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "riskRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rangeSize",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceThreshold",
                  "type": "int24"
                }
              ],
              "internalType": "struct Perp.AssetRiskParams",
              "name": "riskParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "uniswapPool",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint64",
                  "name": "numRebalance",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRebalanceTotalSquartAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee1Growth",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionUnderlying",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionStable",
                  "type": "tuple"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthStable",
                  "type": "int256"
                }
              ],
              "internalType": "struct Perp.SqrtPerpAssetStatus",
              "name": "sqrtAssetStatus",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isMarginZero",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "feeRatio",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Perp.PairStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getSqrtIndexPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getSqrtPrice",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recepient",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "margin",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceLastTickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceLastTickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint64",
                  "name": "lastNumRebalance",
                  "type": "uint64"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "entryValue",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct Perp.PositionStatus",
                  "name": "perp",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "entryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "quoteRebalanceEntryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "baseRebalanceEntryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "entryTradeFee0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "entryTradeFee1",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Perp.SqrtPositionStatus",
                  "name": "sqrtPerp",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "underlying",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "stable",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Perp.UserStatus",
              "name": "openPosition",
              "type": "tuple"
            }
          ],
          "internalType": "struct DataType.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVaultStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "vaultValue",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            }
          ],
          "internalType": "struct IPredyPool.VaultStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pairsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "uniswapFactory",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "locker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "internalType": "struct LockDataLibrary.LockData",
          "name": "lockData",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "reallocate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "relocationOccurred",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "uniswapPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "fee",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "riskRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rangeSize",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceThreshold",
                  "type": "int24"
                }
              ],
              "internalType": "struct Perp.AssetRiskParams",
              "name": "assetRiskParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "baseRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "kinkRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope2",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InterestRateModel.IRMParams",
              "name": "stableIrmParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "baseRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "kinkRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope2",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InterestRateModel.IRMParams",
              "name": "underlyingIrmParams",
              "type": "tuple"
            }
          ],
          "internalType": "struct AddPairLogic.AddPairParams",
          "name": "addPairParam",
          "type": "tuple"
        }
      ],
      "name": "registerPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "finalSuppliedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "take",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3MintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "marginAmount",
          "type": "int256"
        }
      ],
      "name": "updateMargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recepient",
          "type": "address"
        }
      ],
      "name": "updateRecepient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "finalBurnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalWithdrawAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620047b6380380620047b68339810160408190526200003491620000bb565b600280546001600160a01b0319166001600160a01b03831617905560405163743b521360e11b81526000600482015273__$95910b7b93a5208ca27f4262a74795a535$__9063e876a4269060240160006040518083038186803b1580156200009b57600080fd5b505af4158015620000b0573d6000803e3d6000fd5b5050505050620000ed565b600060208284031215620000ce57600080fd5b81516001600160a01b0381168114620000e657600080fd5b9392505050565b6146b980620000fd6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639b819b30116100a2578063c92af3ec11610071578063c92af3ec14610396578063d3487997146103b6578063db9d4a19146103c9578063e5fbab85146103dc578063f3eb8cd8146103ef57600080fd5b80639b819b301461034a578063ab4db3601461035d578063acfcd9fd14610370578063c6b6d3401461038357600080fd5b80635393e780116100e95780635393e780146101c4578063613ce410146101d95780637f223b4c1461027257806391d0370f1461029a5780639403b6341461032a57600080fd5b806318e807491461011b5780633b39b99d1461014b57806349ebb77d1461016c5780634e20a76e146101a1575b600080fd5b61012e610129366004613509565b610412565b6040516001600160a01b0390911681526020015b60405180910390f35b61015e610159366004613714565b610461565b604051908152602001610142565b61017f61017a366004613509565b6104e1565b6040805182518152602080840151908201529181015190820152606001610142565b6101b46101af3660046138a5565b610c4c565b6040519015158152602001610142565b6101d76101d23660046138eb565b610cd2565b005b600054600154600254604080516080810182526006546001600160a01b0390811682526007546020830152600854928201929092526009546060820152610224949392919091169084565b604080519485526020808601949094526001600160a01b039283168582015281519092166060808601919091529281015160808501529081015160a0840152015160c082015260e001610142565b61028561028036600461391b565b610d53565b60408051928352602083019190915201610142565b6102ad6102a8366004613953565b610ded565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e085015285015161010084015284015161012083015283015161014082015291015161016082015261018001610142565b61033d610338366004613509565b610e7d565b60405161014291906139a2565b6102ad610358366004613ab6565b610fd6565b6101d761036b366004613b65565b611048565b61015e61037e366004613509565b6110a1565b6101d7610391366004613b95565b6113ae565b6103a96103a4366004613509565b6113fd565b6040516101429190613d6d565b6101d76103c4366004613e55565b61170d565b61015e6103d736600461391b565b611815565b61015e6103ea3660046138eb565b6118a2565b6101b46103fd366004613ed4565b600a6020526000908152604090205460ff1681565b60008181526003602052604081206021015461045b9061043a906001600160a01b03166118c4565b600084815260036020526040902060320154600160a01b900460ff16611935565b92915050565b604051635641324160e11b815260009073__$95910b7b93a5208ca27f4262a74795a535$__9063ac826482906104a0908490600a908790600401613ef1565b602060405180830381865af41580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190613fe6565b61050560405180606001604052806000815260200160008152602001600081525090565b6000806005016000848152602001908152602001600020600501600001549050600080610c296000600301600085815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601182016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601f8201604051806060016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81525050815260200160218201604051806102200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460020b60020b60020b81526020016001820160009054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201604051806040016040529081600082015481526020016001820154815250508152602001600d8201604051806040016040529081600082015481526020016001820154815250508152602001600f820154815260200160108201548152505081526020016032820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016032820160149054906101000a900460ff161515151581526020016032820160159054906101000a900460ff1660ff1660ff1681526020016033820154815250506000600401600060050160008981526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820160405180610100016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81526020016001820160069054906101000a90046001600160401b03166001600160401b03166001600160401b0316815260200160028201604051806040016040529081600082015481526020016001820154815250508152602001600482016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600a8201604051806040016040529081600082015481526020016001820154815250508152602001600c8201604051806040016040529081600082015481526020016001820154815250508152505081525050611962565b505060408051606081018252978852602088019190915286015250929392505050565b60405163f78c1fb560e01b815260009073__$82e740bfb21403018c74028207d6b78a82$__9063f78c1fb590610c8a90849087908790600401614076565b602060405180830381865af4158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb919061409e565b9392505050565b610cdd600083611a05565b5060405163f66f5cc760e01b815260006004820152602481018390526044810182905273__$dce61b2ba8cb2bacc386287dc451d94595$__9063f66f5cc79060640160006040518083038186803b158015610d3757600080fd5b505af4158015610d4b573d6000803e3d6000fd5b505050505050565b604051633e16468d60e01b81526000600482018190526024820185905260448201839052831515606483015290819073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633e16468d906084016040805180830381865af4158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de191906140bb565b91509150935093915050565b610df5613187565b60405163fe8473e160e01b815273__$a1fa80d38d689cae49e54718da49b6432c$__9063fe8473e190610e33908790879060009088906004016140df565b61018060405180830381865af4158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e75919061410e565b949350505050565b610e856131fb565b50600090815260056020818152604092839020835160c080820186528254825260018301546001600160a01b039081168386015260028085015482168489015260038501549091166060808501919091526004850154608080860191909152885161010081018a52978601548852600686015480840b898901526301000000810490930b888a015266010000000000009092046001600160401b0316878201528751808901895260078601548152600886015481880152878301528751808401895260098601548152600a86015481880152600b860154818a0152600c86015491810191909152600d85015491810191909152600e84015460a0808301919091528087019190915286518088018852600f8501548152601085015481870152918601919091528551808701909652601183015486526012909201549285019290925260e08301939093529182015290565b610fde613187565b8251610fec90600090611a42565b6020830151835160009161100291839190611a72565b8054602086015260405163010bcadf60e21b815290915073__$bc9f384c073b2381249378965b2d698cf3$__9063042f2b7c90610e3390600090889088906004016141c6565b60006110548184611a05565b90506001600160a01b03821661107d5760405163e6c4247b60e01b815260040160405180910390fd5b60030180546001600160a01b0319166001600160a01b039290921691909117905550565b6000818152600360208181526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060828101919091526009880154608080840191909152600a89015460a080850191909152848b019390935289518082018b52600b8a01548152600c8a0154818d0152600d8a0154818c0152600e8a01548184015284830152600f89015481850152601089015483850152818801939093528851808c018a5260118901548616815260128901548616818c01528951808d018b5260138a0154815260148a0154818d015260158a0154818c015260168a01548184015260178a01548186015260188a015481850152818b015289518085018b5260198a01548152601a8a0154818d0152601b8a0154818c0152601c8a01548184015281830152601d89015481850152601e890154818401528388015288518082018a52601f8901548152888b015480860b828d015263010000009004850b818b015282880152885161022081018a5260218901548087168252600160a01b808204870b838e0152600160b81b90910490950b818b015260228901546001600160401b0316918101919091526023880154928101929092526024870154908201526025860154818a0152602686015460e080830191909152602787015461010083810191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528951808b018b52602c8a01548152602d8a0154818d01526101a08501528951808b01909a52602e8901548a52602f8901549a8a019a909a526101c083019890985260308701546101e083015260318701546102008301529885015260328501549182169784019790975260ff9681048716151594830194909452600160a81b909304909416928401929092526033909101549082015261045b90611bab565b6006546001600160a01b03163381146113ea576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b6113f76000858585611c36565b50505050565b611405613251565b50600090815260036020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160c08082018a529786015483168152600486015483168188015288518089018a52600587015481526006870154818901526007870154818b015260088701546060808301919091526009880154608080840191909152600a89015460a080850191909152848d01939093528b518082018d52600b8a01548152600c8a0154818c0152600d8a0154818e0152600e8a01548184015282850152600f89015481850152601089015483850152818801939093528a51808b018c5260118901548616815260128901548616818b01528b51808c018d5260138a0154815260148a0154818c015260158a0154818e015260168a01548184015260178a01548186015260188a015481850152818d01528b518085018d5260198a01548152601a8a0154818c0152601b8a0154818e0152601c8a01548184015281830152601d89015481850152601e89015481840152838801528a518082018c52601f8901548152888a015480860b828c015263010000009004850b818d0152828801528a5161022081018c5260218901548087168252600160a01b808204870b838d0152600160b81b90910490950b818d015260228901546001600160401b031691810191909152602388015492810192909252602487015490820152602586015481890152602686015460e080830191909152602787015461010080840191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528b51808d018d52602c8a01548152602d8a0154818c01526101a08501528b51808d01909c52602e8901548c52602f890154998c01999099526101c083019a909a5260308701546101e083015260318701546102008301529785015260328501549182169684019690965294850460ff908116151596830196909652600160a81b90940490941691840191909152603301549082015290565b336000908152600a602052604090205460ff1661172957600080fd5b33841561179c5761179c816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117959190614225565b3387611fdd565b831561180e5761180e816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190614225565b3386611fdd565b5050505050565b604051633ec463bf60e01b8152600060048201819052602482018590526044820183905283151560648301529073__$22e71cc2a9e9de4b2967c224ed91c7d01e$",
    "sourceMap": "937:6131:55:-:0;;;1443:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1489:25;:42;;-1:-1:-1;;;;;;1489:42:55;-1:-1:-1;;;;;1489:42:55;;;;;1541:45;;-1:-1:-1;;;1541:45:55;;-1:-1:-1;1541:45:55;;;489:25:124;1541:12:55;;:33;;462:18:124;;1541:45:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:150;937:6131;;14:290:124;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:124;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:124:o;309:211::-;937:6131:55;;;;;;",
    "linkReferences": {
      "src/libraries/logic/AddPairLogic.sol": {
        "AddPairLogic": [
          {
            "start": 101,
            "length": 20
          },
          {
            "start": 1392,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "LiquidationLogic": [
          {
            "start": 3841,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/MarginLogic.sol": {
        "MarginLogic": [
          {
            "start": 3583,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "ReallocationLogic": [
          {
            "start": 3419,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "SupplyLogic": [
          {
            "start": 3713,
            "length": 20
          },
          {
            "start": 6465,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/TradeLogic.sol": {
        "TradeLogic": [
          {
            "start": 4376,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80639b819b30116100a2578063c92af3ec11610071578063c92af3ec14610396578063d3487997146103b6578063db9d4a19146103c9578063e5fbab85146103dc578063f3eb8cd8146103ef57600080fd5b80639b819b301461034a578063ab4db3601461035d578063acfcd9fd14610370578063c6b6d3401461038357600080fd5b80635393e780116100e95780635393e780146101c4578063613ce410146101d95780637f223b4c1461027257806391d0370f1461029a5780639403b6341461032a57600080fd5b806318e807491461011b5780633b39b99d1461014b57806349ebb77d1461016c5780634e20a76e146101a1575b600080fd5b61012e610129366004613509565b610412565b6040516001600160a01b0390911681526020015b60405180910390f35b61015e610159366004613714565b610461565b604051908152602001610142565b61017f61017a366004613509565b6104e1565b6040805182518152602080840151908201529181015190820152606001610142565b6101b46101af3660046138a5565b610c4c565b6040519015158152602001610142565b6101d76101d23660046138eb565b610cd2565b005b600054600154600254604080516080810182526006546001600160a01b0390811682526007546020830152600854928201929092526009546060820152610224949392919091169084565b604080519485526020808601949094526001600160a01b039283168582015281519092166060808601919091529281015160808501529081015160a0840152015160c082015260e001610142565b61028561028036600461391b565b610d53565b60408051928352602083019190915201610142565b6102ad6102a8366004613953565b610ded565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e085015285015161010084015284015161012083015283015161014082015291015161016082015261018001610142565b61033d610338366004613509565b610e7d565b60405161014291906139a2565b6102ad610358366004613ab6565b610fd6565b6101d761036b366004613b65565b611048565b61015e61037e366004613509565b6110a1565b6101d7610391366004613b95565b6113ae565b6103a96103a4366004613509565b6113fd565b6040516101429190613d6d565b6101d76103c4366004613e55565b61170d565b61015e6103d736600461391b565b611815565b61015e6103ea3660046138eb565b6118a2565b6101b46103fd366004613ed4565b600a6020526000908152604090205460ff1681565b60008181526003602052604081206021015461045b9061043a906001600160a01b03166118c4565b600084815260036020526040902060320154600160a01b900460ff16611935565b92915050565b604051635641324160e11b815260009073__$95910b7b93a5208ca27f4262a74795a535$__9063ac826482906104a0908490600a908790600401613ef1565b602060405180830381865af41580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190613fe6565b61050560405180606001604052806000815260200160008152602001600081525090565b6000806005016000848152602001908152602001600020600501600001549050600080610c296000600301600085815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601182016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601f8201604051806060016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81525050815260200160218201604051806102200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460020b60020b60020b81526020016001820160009054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201604051806040016040529081600082015481526020016001820154815250508152602001600d8201604051806040016040529081600082015481526020016001820154815250508152602001600f820154815260200160108201548152505081526020016032820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016032820160149054906101000a900460ff161515151581526020016032820160159054906101000a900460ff1660ff1660ff1681526020016033820154815250506000600401600060050160008981526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820160405180610100016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81526020016001820160069054906101000a90046001600160401b03166001600160401b03166001600160401b0316815260200160028201604051806040016040529081600082015481526020016001820154815250508152602001600482016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600a8201604051806040016040529081600082015481526020016001820154815250508152602001600c8201604051806040016040529081600082015481526020016001820154815250508152505081525050611962565b505060408051606081018252978852602088019190915286015250929392505050565b60405163f78c1fb560e01b815260009073__$82e740bfb21403018c74028207d6b78a82$__9063f78c1fb590610c8a90849087908790600401614076565b602060405180830381865af4158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb919061409e565b9392505050565b610cdd600083611a05565b5060405163f66f5cc760e01b815260006004820152602481018390526044810182905273__$dce61b2ba8cb2bacc386287dc451d94595$__9063f66f5cc79060640160006040518083038186803b158015610d3757600080fd5b505af4158015610d4b573d6000803e3d6000fd5b505050505050565b604051633e16468d60e01b81526000600482018190526024820185905260448201839052831515606483015290819073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633e16468d906084016040805180830381865af4158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de191906140bb565b91509150935093915050565b610df5613187565b60405163fe8473e160e01b815273__$a1fa80d38d689cae49e54718da49b6432c$__9063fe8473e190610e33908790879060009088906004016140df565b61018060405180830381865af4158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e75919061410e565b949350505050565b610e856131fb565b50600090815260056020818152604092839020835160c080820186528254825260018301546001600160a01b039081168386015260028085015482168489015260038501549091166060808501919091526004850154608080860191909152885161010081018a52978601548852600686015480840b898901526301000000810490930b888a015266010000000000009092046001600160401b0316878201528751808901895260078601548152600886015481880152878301528751808401895260098601548152600a86015481880152600b860154818a0152600c86015491810191909152600d85015491810191909152600e84015460a0808301919091528087019190915286518088018852600f8501548152601085015481870152918601919091528551808701909652601183015486526012909201549285019290925260e08301939093529182015290565b610fde613187565b8251610fec90600090611a42565b6020830151835160009161100291839190611a72565b8054602086015260405163010bcadf60e21b815290915073__$bc9f384c073b2381249378965b2d698cf3$__9063042f2b7c90610e3390600090889088906004016141c6565b60006110548184611a05565b90506001600160a01b03821661107d5760405163e6c4247b60e01b815260040160405180910390fd5b60030180546001600160a01b0319166001600160a01b039290921691909117905550565b6000818152600360208181526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060828101919091526009880154608080840191909152600a89015460a080850191909152848b019390935289518082018b52600b8a01548152600c8a0154818d0152600d8a0154818c0152600e8a01548184015284830152600f89015481850152601089015483850152818801939093528851808c018a5260118901548616815260128901548616818c01528951808d018b5260138a0154815260148a0154818d015260158a0154818c015260168a01548184015260178a01548186015260188a015481850152818b015289518085018b5260198a01548152601a8a0154818d0152601b8a0154818c0152601c8a01548184015281830152601d89015481850152601e890154818401528388015288518082018a52601f8901548152888b015480860b828d015263010000009004850b818b015282880152885161022081018a5260218901548087168252600160a01b808204870b838e0152600160b81b90910490950b818b015260228901546001600160401b0316918101919091526023880154928101929092526024870154908201526025860154818a0152602686015460e080830191909152602787015461010083810191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528951808b018b52602c8a01548152602d8a0154818d01526101a08501528951808b01909a52602e8901548a52602f8901549a8a019a909a526101c083019890985260308701546101e083015260318701546102008301529885015260328501549182169784019790975260ff9681048716151594830194909452600160a81b909304909416928401929092526033909101549082015261045b90611bab565b6006546001600160a01b03163381146113ea576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b6113f76000858585611c36565b50505050565b611405613251565b50600090815260036020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160c08082018a529786015483168152600486015483168188015288518089018a52600587015481526006870154818901526007870154818b015260088701546060808301919091526009880154608080840191909152600a89015460a080850191909152848d01939093528b518082018d52600b8a01548152600c8a0154818c0152600d8a0154818e0152600e8a01548184015282850152600f89015481850152601089015483850152818801939093528a51808b018c5260118901548616815260128901548616818b01528b51808c018d5260138a0154815260148a0154818c015260158a0154818e015260168a01548184015260178a01548186015260188a015481850152818d01528b518085018d5260198a01548152601a8a0154818c0152601b8a0154818e0152601c8a01548184015281830152601d89015481850152601e89015481840152838801528a518082018c52601f8901548152888a015480860b828c015263010000009004850b818d0152828801528a5161022081018c5260218901548087168252600160a01b808204870b838d0152600160b81b90910490950b818d015260228901546001600160401b031691810191909152602388015492810192909252602487015490820152602586015481890152602686015460e080830191909152602787015461010080840191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528b51808d018d52602c8a01548152602d8a0154818c01526101a08501528b51808d01909c52602e8901548c52602f890154998c01999099526101c083019a909a5260308701546101e083015260318701546102008301529785015260328501549182169684019690965294850460ff908116151596830196909652600160a81b90940490941691840191909152603301549082015290565b336000908152600a602052604090205460ff1661172957600080fd5b33841561179c5761179c816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117959190614225565b3387611fdd565b831561180e5761180e816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190614225565b3386611fdd565b5050505050565b604051633ec463bf60e01b8152600060048201819052602482018590526044820183905283151560648301529073__$22e71cc2a9e9de4b2967c224ed91c7d01e$",
    "sourceMap": "937:6131:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5917:271;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;472:32:124;;;454:51;;442:2;427:18;5917:271:55;;;;;;;;2259:188;;;;;;:::i;:::-;;:::i;:::-;;;4929:25:124;;;4917:2;4902:18;2259:188:55;4783:177:124;6638:428:55;;;;;;:::i;:::-;;:::i;:::-;;;;5189:13:124;;5171:32;;5259:4;5247:17;;;5241:24;5219:20;;;5212:54;5310:17;;;5304:24;5282:20;;;5275:54;5159:2;5144:18;6638:428:55;4965:370:124;3198:237:55;;;;;;:::i;:::-;;:::i;:::-;;;7262:14:124;;7255:22;7237:41;;7225:2;7210:18;3198:237:55;7097:187:124;5484:184:55;;;;;;:::i;:::-;;:::i;:::-;;1172:46;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1172:46:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7826:25:124;;;7882:2;7867:18;;;7860:34;;;;-1:-1:-1;;;;;7968:15:124;;;7948:18;;;7941:43;8024:13;;8020:22;;;8015:2;8000:18;;;7993:50;;;;8086:15;;;8080:22;8074:3;8059:19;;8052:51;8146:15;;;8140:22;7921:3;8119:19;;8112:51;8206:15;8200:22;8194:3;8179:19;;8172:51;7813:3;7798:19;1172:46:55;7541:688:124;2832:263:55;;;;;;:::i;:::-;;:::i;:::-;;;;8913:25:124;;;8969:2;8954:18;;8947:34;;;;8886:18;2832:263:55;8739:248:124;4813:285:55;;;;;;:::i;:::-;;:::i;:::-;;;;9710:13:124;;9750:9;;9732:28;;9812:4;9804:13;;;9798:20;9776;;;9769:50;9863:13;;;9857:20;9835;;;9828:50;9930:4;9922:13;;;9916:20;9894;;;9887:50;9989:4;9981:13;;;9975:20;9953;;;9946:50;10048:4;10040:13;;;10034:20;10012;;;10005:50;10099:17;;;10093:24;10086:4;10071:20;;;10064:54;;;;10162:17;;;10156:24;10149:4;10134:20;;10127:54;10227:17;;10221:24;10212:6;10197:22;;10190:56;10292:17;;10286:24;10277:6;10262:22;;10255:56;10357:17;;10351:24;10342:6;10327:22;;10320:56;10422:17;;10416:24;10407:6;10392:22;;10385:56;9687:3;9672:19;4813:285:55;9493:954:124;6501:131:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3700:449::-;;;;;;:::i;:::-;;:::i;4155:271::-;;;;;;:::i;:::-;;:::i;6194:161::-;;;;;;:::i;:::-;;:::i;5195:141::-;;;;;;:::i;:::-;;:::i;6361:134::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1657:463::-;;;;;;:::i;:::-;;:::i;2523:230::-;;;;;;:::i;:::-;;:::i;5674:237::-;;;;;;:::i;:::-;;:::i;1225:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5917:271;5978:7;6067:24;;;:16;:24;;;;;:40;;:52;6004:177;;6044:76;;-1:-1:-1;;;;;6067:52:55;6044:22;:76::i;:::-;6134:10;:24;;;:16;:24;;;;;:37;;;-1:-1:-1;;;6134:37:55;;;;6004:26;:177::i;:::-;5997:184;5917:271;-1:-1:-1;;5917:271:55:o;2259:188::-;2373:67;;-1:-1:-1;;;2373:67:55;;2347:7;;2373:12;;:20;;:67;;2347:7;;2406:19;;2427:12;;2373:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6638:428::-;6702:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6702:18:55;6732:14;6749:10;:17;;:26;6767:7;6749:26;;;;;;;;;;;:39;;:46;;;6732:63;;6807:16;6825:17;6848:150;6900:10;:16;;:24;6917:6;6900:24;;;;;;;;;;;6848:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6926:10;:34;;6962:10;:17;;:26;6980:7;6962:26;;;;;;;;;;;6848:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;-1:-1:-1;;;;;6848:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;:150::i;:::-;-1:-1:-1;;7016:43:55;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7016:43:55;;6638:428;-1:-1:-1;;;6638:428:55:o;3198:237::-;3364:64;;-1:-1:-1;;;3364:64:55;;3318:23;;3364:17;;:28;;:64;;3318:23;;3405:6;;3413:14;;3364:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3357:71;3198:237;-1:-1:-1;;;3198:237:55:o;5484:184::-;5563:28;:10;5583:7;5563:19;:28::i;:::-;-1:-1:-1;5602:59:55;;-1:-1:-1;;;5602:59:55;;5627:10;5602:59;;;23451:25:124;23492:18;;;23485:34;;;23535:18;;;23528:34;;;5602:11:55;;:24;;23424:18:124;;5602:59:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5484:184;;:::o;2832:263::-;3018:70;;-1:-1:-1;;;3018:70:55;;2943:23;3018:70;;;23832:25:124;;;23873:18;;;23866:34;;;23916:18;;;23909:34;;;23986:14;;23979:22;23959:18;;;23952:50;2943:23:55;;;3018:11;;:20;;23804:19:124;;3018:70:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3011:77;;;;2832:263;;;;;;:::o;4813:285::-;4963:30;;:::i;:::-;5016:75;;-1:-1:-1;;;5016:75:55;;:16;;:26;;:75;;5043:7;;5052:10;;5064;;5076:14;;5016:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5009:82;4813:285;-1:-1:-1;;;;4813:285:55:o;6501:131::-;6559:21;;:::i;:::-;-1:-1:-1;6599:10:55;:26;;;:17;:26;;;;;;;;;6592:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6592:33:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6592:33:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6501:131::o;3700:449::-;3831:30;;:::i;:::-;3897:18;;3877:39;;3897:18;;3877:19;:39::i;:::-;3986:19;;;;4007:18;;3927:28;;3958:68;;3927:28;;3986:19;3958:27;:68::i;:::-;4059:8;;4037:19;;;:30;4085:57;;-1:-1:-1;;;4085:57:55;;3927:99;;-1:-1:-1;4085:10:55;;:16;;:57;;4059:8;;4037:11;;4127:14;;4085:57;;;:::i;4155:271::-;4235:28;4266;4235;4286:7;4266:19;:28::i;:::-;4235:59;-1:-1:-1;;;;;;4309:23:55;;4305:77;;4355:16;;-1:-1:-1;;;4355:16:55;;;;;;;;;;;4305:77;4392:15;;:27;;-1:-1:-1;;;;;;4392:27:55;-1:-1:-1;;;;;4392:27:55;;;;;;;;;;-1:-1:-1;4155:271:55:o;6194:161::-;6260:7;6323:24;;;:16;:24;;;;;;;;6286:62;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6286:62:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6286:62:55;;;;;;;;;-1:-1:-1;;;6286:62:55;;;;;;;;;;;;;;-1:-1:-1;;;;;6286:62:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6286:62:55;;;;;;;;;;;;;;;;;;;;;;;;:36;:62::i;5195:141::-;1334:19;:26;-1:-1:-1;;;;;1334:26:55;1374:10;:20;;1370:49;;1403:16;;-1:-1:-1;;;1403:16:55;;-1:-1:-1;;;;;472:32:124;;1403:16:55;;;454:51:124;427:18;;1403:16:55;;;;;;;;1370:49;5288:41:::1;:10;5304:12:::0;5318:2;5322:6;5288:15:::1;:41::i;:::-;1307:130:::0;5195:141;;;:::o;6361:134::-;6423:22;;:::i;:::-;-1:-1:-1;6464:10:55;:24;;;:16;:24;;;;;;;;;6457:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6457:31:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6457:31:55;;;;;;;;;-1:-1:-1;;;6457:31:55;;;;;;;;;;;;;;-1:-1:-1;;;;;6457:31:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6457:31:55;;;;;;;;;;;;;;;;;;;;;6361:134::o;1657:463::-;1794:10;1774:31;;;;:19;:31;;;;;;;;1766:40;;;;;;1860:10;1885:11;;1881:112;;1912:70;1940:11;-1:-1:-1;;;;;1940:18:55;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:10;1974:7;1912:27;:70::i;:::-;2006:11;;2002:112;;2033:70;2061:11;-1:-1:-1;;;;;2061:18:55;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2083:10;2095:7;2033:27;:70::i;:::-;1756:364;1657:463;;;;:::o;2523:230::-;2680:66;;-1:-1:-1;;;2680:66:55;;2630:27;2680:66;;;23832:25:124;;;23873:18;;;23866:34;;;23916:18;;;23909:34;;;23986:14;;23979:22;23959:18;;;23952:50;2630:27:55;2680:11;;:18;;23804:19:124;;2680:66:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5674:237::-;5746:7;5765:27;5746:7;5785:6;5765:19;:27::i;:::-;5803:28;5834:44;5803:28;5862:7;5871:6;5834:27;:44::i;:::-;5896:8;;5674:237;-1:-1:-1;;;;5674:237:55:o;416:159:76:-;483:17;547:12;-1:-1:-1;;;;;532:34:76;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;512:56:76;;416:159;-1:-1:-1;;;;;;;416:159:76:o;893:283::-;985:7;1008:13;1004:166;;;1052:55;-1:-1:-1;;;;;1052:55:76;;-1:-1:-1;;;1052:55:76;:::i;:::-;1037:71;;;;1004:166;-1:-1:-1;1146:13:76;1139:20;;2313:975:71;2546:16;2564:17;2583:16;2601:12;2625:15;2650:17;2685:29;2703:10;2685:17;:29::i;:::-;2678:36;;2774:209;2805:5;2824:86;2853:10;2865:24;2891:5;:18;;;2824:28;:86::i;:::-;2942:21;;;;:31;2924:4;;2774:17;:209::i;:::-;2725:258;;-1:-1:-1;2725:258:71;;-1:-1:-1;2725:258:71;;-1:-1:-1;2725:258:71;-1:-1:-1;2994:18:71;3015:74;3085:3;3033:49;2725:258;800:4:65;3033:49:71;:::i;:::-;:55;;;;:::i;:::-;3015:17;:74::i;:::-;2994:95;-1:-1:-1;2994:95:71;3112:21;3125:8;3112:10;:21;:::i;:::-;:35;;;;:::i;:::-;3100:47;;3162:11;:54;;;;;326:3:65;3177:9:71;:39;3162:54;3158:124;;;326:3:65;3232:39:71;;3158:124;2615:673;;;2313:975;;;;;;;:::o;282:376:77:-;413:28;465:26;;;:17;;;:26;;;;;570:11;;;;-1:-1:-1;;;;;570:11:77;585:10;570:25;566:86;;618:23;;-1:-1:-1;;;618:23:77;;;;;;;;;;;834:199:95;945:11;;;:46;;-1:-1:-1;960:21:95;;:31;-1:-1:-1;960:31:95;945:46;941:85;;;1000:26;;-1:-1:-1;;;1000:26:95;;;;;;;;;;;941:85;834:199;;:::o;664:1159:77:-;806:28;869:24;;;:16;;;:24;;;;;:33;;;-1:-1:-1;;;;;869:33:77;917:12;;;913:904;;968:21;;;;;;945:20;1050:31;;;:17;;;;:31;;;;;1096:23;;;1133:11;;;:24;;1147:10;-1:-1:-1;;;;;;1133:24:77;;;;;;;;1171:15;;;:28;;;;;;;;;;1213:18;;;:34;;;1261:14;;;:25;;;;;-1:-1:-1;;;;;1261:25:77;;;;;1301:23;;1050:31;;-1:-1:-1;968:21:77;;1301:23;968:21;1301:23;;;:::i;:::-;;;;;;931:404;913:904;;;1363:26;;;;:17;;;:26;;;;;1476:11;;;;1363:26;;-1:-1:-1;;;;;;1476:11:77;1491:10;1476:25;1472:94;;1528:23;;-1:-1:-1;;;1528:23:77;;;;;;;;;;;1472:94;1584:14;;;;-1:-1:-1;;;;;1584:26:77;;;:14;;:26;1580:104;;1637:32;;-1:-1:-1;;;1637:32:77;;;;;;;;;;;1580:104;1702:18;;;:25;:35;;1698:109;;1764:28;;-1:-1:-1;;;1764:28:77;;;;;;;;;;;1698:109;840:983;664:1159;;;;;:::o;4687:423:71:-;4808:20;;;;4772;;-1:-1:-1;;;;;4808:34:71;;4804:300;;4875:10;:20;;;-1:-1:-1;;;;;4865:44:71;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4804:300;4949:144;4993:61;5015:10;:26;;;:38;;;4993:21;:61::i;:::-;5056:10;:23;;;4949:26;:144::i;:::-;-1:-1:-1;;;;;4942:151:71;;4687:423;-1:-1:-1;;4687:423:71:o;4804:300::-;4687:423;;;:::o;1625:460:95:-;1819:26;;;;;1766:33;1802:44;;;:16;;;;:44;;;;;;;;1766:80;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:80:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:19;1766:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1766:80:95;;;;;;;;;-1:-1:-1;;;1766:80:95;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:80:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1766:80:95;;;;;;;;;;;;;;;;;;;;;;;1884:147;;;;-1:-1:-1;1927:20:95;;;;:26;1884:147;;;-1:-1:-1;1995:19:95;;;;:25;1884:147;2041:37;;-1:-1:-1;;;2041:37:95;;-1:-1:-1;;;;;29666:32:124;;;2041:37:95;;;29648:51:124;29715:18;;;29708:34;;;2041:25:95;;;;;29621:18:124;;2041:37:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1756:329;;1625:460;;;;:::o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;29666:32:124;;;1381:59:51;;;29648:51:124;29715:18;;;;29708:34;;;1381:59:51;;;;;;;;;;29621:18:124;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;30247:2:124;1451:72:51;;;30229:21:124;30286:1;30266:18;;;30259:29;-1:-1:-1;;;30304:18:124;;;30297:32;30346:18;;1451:72:51;30045:325:124;5116:719:71;5369:36;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5369:36:71;5418:30;5450:26;5492:77;5515:10;5527:24;5553:15;5492:22;:77::i;:::-;5417:152;;;;5587:241;;;;;;;;5687:19;5649:15;:24;;;:35;;;5615:15;:20;;;:31;;;:69;;;;:::i;:::-;:91;;;;:::i;:::-;5587:241;;5720:24;;;;:31;5587:241;;;;-1:-1:-1;5765:20:71;;;:27;5587:241;;;;;5765:53;;5795:23;;5765:53;:::i;:::-;5587:241;;5580:248;5116:719;-1:-1:-1;;;;;;5116:719:71:o;3729:709::-;3922:15;3939:17;3958;3977:16;4005:33;4041:5;:18;;;4005:54;;4082:55;4100:9;4111:14;4127:9;4082:17;:55::i;:::-;4070:67;;;;:::i;:::-;;;4162:41;4177:9;4188:14;4162;:41::i;:::-;4148:55;;;;:::i;:::-;;;4227:47;4252:9;4263:10;4227:24;:47::i;:::-;4214:60;;;;:::i;:::-;;;4299:11;:45;;;;4314:30;4333:10;4314:18;:30::i;:::-;4285:59;;4374:5;:12;;;4355:32;;;;;:::i;:::-;;;4418:5;:12;;;4397:34;;;;;:::i;:::-;;;3995:443;3729:709;;;;;;;;;:::o;34781:297:25:-;34837:6;-1:-1:-1;;;;;34962:5:25;:34;;34954:87;;;;-1:-1:-1;;;34954:87:25;;30707:2:124;34954:87:25;;;30689:21:124;30746:2;30726:18;;;30719:30;30785:34;30765:18;;;30758:62;-1:-1:-1;;;30836:18:124;;;30829:38;30884:19;;34954:87:25;30505:404:124;34954:87:25;-1:-1:-1;35065:5:25;34781:297::o;653:184:76:-;719:19;767:63;801:12;399:10;767:18;:63::i;:::-;-1:-1:-1;750:80:76;653:184;-1:-1:-1;;653:184:76:o;298:1095:70:-;535:30;567:26;631:72;680:11;:22;;;631:12;:21;;;:33;;;:48;;:72;;;;:::i;:::-;605:98;;735:69;785:11;:18;;;735:12;:22;;;:34;;;:49;;:69;;;;:::i;:::-;713:91;;830:29;861:25;890:140;932:12;:15;;;949:12;:28;;;979:24;1005:11;890:24;:140::i;:::-;829:201;;-1:-1:-1;829:201:70;-1:-1:-1;1044:49:70;829:201;1044:49;;:::i;:::-;;-1:-1:-1;1107:41:70;1130:18;1107:41;;:::i;:::-;;;815:344;;1184:20;1206:16;1226:50;1241:12;1255:11;:20;;;1226:14;:50::i;:::-;1183:93;;-1:-1:-1;1183:93:70;-1:-1:-1;1290:40:70;1183:93;1290:40;;:::i;:::-;;-1:-1:-1;1344:32:70;1367:9;1344:32;;:::i;:::-;;;1169:218;;298:1095;;;;;;:::o;6757:1191:71:-;-1:-1:-1;;;;;6910:15:71;578:3;7000:23;7013:10;7000;:23;:::i;:::-;:40;;;;:::i;:::-;6979:61;-1:-1:-1;7050:18:71;7101:10;7071:27;578:3;7071:10;:27;:::i;:::-;:40;;;;:::i;:::-;7050:61;;7136:8;7147:43;7162:10;7174:15;7147:14;:43::i;:::-;7136:54;;7212:8;7208:1;:12;7204:63;;;7251:1;7240:12;;7204:63;7122:155;7301:8;7312:43;7327:10;7339:15;7312:14;:43::i;:::-;7301:54;;7377:8;7373:1;:12;7369:63;;;7416:1;7405:12;;7369:63;7287:155;7485:1;7456:15;:26;;;:30;:70;;;;;7525:1;7490:15;:32;;;:36;7456:70;7452:490;;;7542:20;7646:15;:32;;;-1:-1:-1;;;7591:15:71;:26;;;7590:27;;;:::i;:::-;7582:52;;;;:::i;:::-;7581:98;;;;:::i;:::-;7542:137;;7711:12;7698:10;:25;:54;;;;;7742:10;7727:12;:25;7698:54;7694:238;;;7772:8;7783:45;7798:12;7812:15;7783:14;:45::i;:::-;7772:56;;7855:8;7851:1;:12;7847:71;;;7898:1;7887:12;;7847:71;7754:178;7694:238;7528:414;7452:490;6931:1017;;6757:1191;;;;;:::o;8188:433::-;8294:6;;582:2:65;8329:23:71;8342:10;;8329:23;:::i;:::-;8586:28;;8328:49;;;-1:-1:-1;;;;8524:21:71;:10;:19;:21::i;:::-;8495:15;:26;;;:50;;;;:::i;:::-;8490:56;;:1;:56;:::i;:::-;:80;;;;:::i;:::-;-1:-1:-1;;;8432:16:71;:5;:14;:16::i;:::-;8397:15;:32;;;:51;;;;:::i;:::-;8396:77;;;;:::i;:::-;8395:176;;;;:::i;:::-;:219;;;;:::i;8627:380::-;8815:24;;;;:31;8768:7;;8861:18;;;8857:57;;;8902:1;8895:8;;;;;8857:57;582:2:65;8964:10:71;8945:15;8946:14;8945:15;:::i;:::-;8937:37;;;;:::i;:::-;8932:43;;:1;:43;:::i;:::-;:67;;;8627:380;-1:-1:-1;;;;8627:380:71:o;6214:262::-;6305:4;6368:1;6328:15;:22;;;:37;;;:41;:80;;;-1:-1:-1;6373:24:71;;;;:31;6407:1;-1:-1:-1;6328:80:71;:141;;;-1:-1:-1;;6424:26:71;;;:41;6468:1;-1:-1:-1;;6214:262:71:o;1182:1511:76:-;1332:15;;;1345:1;1332:15;;;;;;;;1274:7;;;;;;1332:15;;;;;;;;;;;;-1:-1:-1;1332:15:76;1302:45;;1382:3;1358:11;1370:1;1358:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;;;;;1413:1;1396:11;1408:1;1396:14;;;;;;;;:::i;:::-;;;;;;:18;;;;;;;;;;;1426:12;1440:17;1481:11;-1:-1:-1;;;;;1473:31:76;1528:37;;;1567:11;1505:74;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1505:74:76;;;;;;;;;;;;;;-1:-1:-1;;;;;1505:74:76;-1:-1:-1;;;;;;1505:74:76;;;;;;;;;;1473:107;;;;1505:74;1473:107;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:155;;;;1596:7;1591:828;;1652:47;;32481:2:124;1652:47:76;;;32463:21:124;32520:1;32500:18;;;32493:29;-1:-1:-1;;;32538:18:124;;;32531:33;32581:18;;1652:47:76;;;-1:-1:-1;;1652:47:76;;;;;;;;;;;;;;;-1:-1:-1;;;;;1652:47:76;-1:-1:-1;;;1652:47:76;;;1642:58;;;;;1623:15;;;;;;;;;:77;1619:133;;1720:17;1732:4;1720:11;:17::i;:::-;1770:12;1784:18;1809:11;-1:-1:-1;;;;;1809:17:76;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1766:62;;;;;;;;;1844:25;1873:16;1893:11;-1:-1:-1;;;;;1893:24:76;;1932:11;1919:5;1927:1;1919:9;;;;:::i;:::-;1918:25;;;;:::i;:::-;1893:51;;-1:-1:-1;;;;;;1893:51:76;;;;;;;33142:6:124;33130:19;;;1893:51:76;;;33112:38:124;33085:18;;1893:51:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:101;;;;;;1964:11;1959:104;;2021:27;;-1:-1:-1;;;2021:27:76;;2046:1;2021:27;;;4929:25:124;-1:-1:-1;;;;;2021:24:76;;;;;4902:18:124;;2021:27:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1995:53:76;;-1:-1:-1;;;1959:104:76;2083:36;;;;:15;:36;:::i;:::-;2077:42;;2157:3;2133:11;2145:1;2133:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;;;;;2202:11;-1:-1:-1;;;;;2194:31:76;2266:37;;;2305:11;2243:74;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2243:74:76;;;;;;;;;;;;;;-1:-1:-1;;;;;2243:74:76;-1:-1:-1;;;;;;2243:74:76;;;;;;;;;;2194:137;;;;2243:74;2194:137;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2176:155:76;;-1:-1:-1;2176:155:76;-1:-1:-1;2176:155:76;2345:64;;2377:17;2389:4;2377:11;:17::i;:::-;1605:814;;;;1591:828;2429:30;2473:4;2462:27;;;;;;;;;;;;:::i;:::-;2429:60;;2500:10;2576:3;2541:15;2557:1;2541:18;;;;;;;;:::i;:::-;;;;;;;2520:15;2536:1;2520:18;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;2519:62;;;;:::i;:::-;2500:82;;2593:20;2616:33;2644:4;2616:27;:33::i;:::-;2593:56;-1:-1:-1;2682:3:76;;-1:-1:-1;;;;;;;1182:1511:76;;;;;;:::o;3990:411:74:-;4149:18;4216:1;4187:11;:26;;;:30;4183:212;;;4254:38;4266:12;4280:11;4254;:38::i;4183:212::-;4346:37;4357:12;4371:11;4346:10;:37::i;:::-;4338:46;;;:::i;4496:1143:70:-;4850:20;;;;:27;4778:29;;;;4850:32;;;;:92;;;4917:12;:25;;;-1:-1:-1;;;;;4886:56:70;:11;:28;;;-1:-1:-1;;;;;4886:56:70;;4850:92;4846:787;;;4958:19;4980:67;5008:8;5018:11;:28;;;4980:27;:67::i;:::-;4958:89;;5062:23;5088:37;5097:11;:20;;;:27;;;5088:8;:37::i;:::-;5248;;;;;;;;;;;:54;;;5204:41;;;;5062:63;;-1:-1:-1;5165:215:70;;5204:98;;5248:54;5204:98;:::i;:::-;5320:15;119:4:65;5165:21:70;:215::i;:::-;5494:37;;;;;;;;;;;:50;5454:37;;;;5140:240;;-1:-1:-1;5415:207:70;;5454:90;;5494:50;5454:90;:::i;5415:207::-;5394:228;;4944:689;;4846:787;4496:1143;;;;;;;:::o;2455:1251::-;2615:20;2637:16;2669:19;2698;2751:1;2732:9;:16;;;:20;2728:580;;;2834:9;:24;;;2782:22;:38;;;:49;;;:76;;;;:::i;:::-;2768:90;;2938:9;:24;;;2886:22;:38;;;:49;;;:76;;;;:::i;:::-;2872:90;;2728:580;;;2983:16;;3002:1;-1:-1:-1;2979:329:70;;;3095:9;:24;;;3033:22;:38;;;:59;;;:86;;;;:::i;:::-;3019:100;;3209:9;:24;;;3147:22;:38;;;:59;;;:86;;;;:::i;2979:329::-;3264:33;;;;2979:329;3318:11;3332:68;3354:9;:16;;;3372:11;-1:-1:-1;;;3332:21:70;:68::i;:::-;3318:82;;3410:11;3424:68;3446:9;:16;;;3464:11;-1:-1:-1;;;3424:21:70;:68::i;:::-;3410:82;;3507:22;:35;;;3503:197;;;3570:4;3558:16;;3604:4;3588:20;;3503:197;;;3655:4;3639:20;;3685:4;3673:16;;3503:197;2659:1047;;;;2455:1251;;;;;:::o;2699:232:76:-;2769:13;;:17;2765:126;;2859:6;2853:13;2844:6;2840:2;2836:15;2829:38;2765:126;2901:23;;-1:-1:-1;;;2901:23:76;;35949:2:124;2901:23:76;;;35931:21:124;35988:2;35968:18;;;35961:30;-1:-1:-1;;;36007:18:124;;;36000:43;36060:18;;2901:23:76;35747:337:124;1385:2759:46;1448:20;1504:15;1529:1;1522:4;:8;;;:57;;1573:4;1566:12;;1522:57;;;1549:4;1542:12;;1541:13;;1522:57;1504:75;-1:-1:-1;667:9:46;1597:35;;1593:51;;;1641:3;;-1:-1:-1;;;1641:3:46;;;;;;;;;;;1593:51;1659:13;1675:7;1685:3;1675:13;1692:1;1675:18;:125;;-1:-1:-1;;;1675:125:46;;;1712:34;1675:125;1659:141;;;-1:-1:-1;1828:3:46;1818:13;;:18;1814:83;;1855:34;1847:42;1894:3;1846:51;1814:83;1925:3;1915:13;;:18;1911:83;;1952:34;1944:42;1991:3;1943:51;1911:83;2022:3;2012:13;;:18;2008:83;;2049:34;2041:42;2088:3;2040:51;2008:83;2119:4;2109:14;;:19;2105:84;;2147:34;2139:42;2186:3;2138:51;2105:84;2217:4;2207:14;;:19;2203:84;;2245:34;2237:42;2284:3;2236:51;2203:84;2315:4;2305:14;;:19;2301:84;;2343:34;2335:42;2382:3;2334:51;2301:84;2413:4;2403:14;;:19;2399:84;;2441:34;2433:42;2480:3;2432:51;2399:84;2511:5;2501:15;;:20;2497:85;;2540:34;2532:42;2579:3;2531:51;2497:85;2610:5;2600:15;;:20;2596:85;;2639:34;2631:42;2678:3;2630:51;2596:85;2709:5;2699:15;;:20;2695:85;;2738:34;2730:42;2777:3;2729:51;2695:85;2808:5;2798:15;;:20;2794:85;;2837:34;2829:42;2876:3;2828:51;2794:85;2907:6;2897:16;;:21;2893:86;;2937:34;2929:42;2976:3;2928:51;2893:86;3007:6;2997:16;;:21;2993:86;;3037:34;3029:42;3076:3;3028:51;2993:86;3107:6;3097:16;;:21;3093:86;;3137:34;3129:42;3176:3;3128:51;3093:86;3207:6;3197:16;;:21;3193:86;;3237:34;3229:42;3276:3;3228:51;3193:86;3307:7;3297:17;;:22;3293:86;;3338:33;3330:41;3376:3;3329:50;3293:86;3407:7;3397:17;;:22;3393:85;;3438:32;3430:40;3475:3;3429:49;3393:85;3506:7;3496:17;;:22;3492:83;;3537:30;3529:38;3572:3;3528:47;3492:83;3603:7;3593:17;;:22;3589:78;;3634:25;3626:33;3664:3;3625:42;3589:78;3693:1;3686:4;:8;;;3682:47;;;3724:5;-1:-1:-1;;3704:25:46;;;;;:::i;:::-;;3696:33;;3682:47;4104:7;4095:5;:17;:22;:30;;4124:1;4095:30;;;4120:1;4095:30;4078:48;;4088:2;4079:5;:11;;4078:48;4055:72;;1480:2658;;1385:2759;;;:::o;4860:436:74:-;4991:7;5053:1;5022:12;:27;;;:32;;5014:47;;;;-1:-1:-1;;;5014:47:74;;36291:2:124;5014:47:74;;;36273:21:124;36330:1;36310:18;;;36303:29;-1:-1:-1;;;36348:18:124;;;36341:32;36390:18;;5014:47:74;36089:325:124;5014:47:74;5079:210;5146:12;:26;;;5121:10;:22;;;:51;;;;:::i;:::-;5224:27;;119:4:65;5079:28:74;:210::i;5302:433::-;5432:7;5494:1;5463:12;:27;;;:32;;5455:47;;;;-1:-1:-1;;;5455:47:74;;36291:2:124;5455:47:74;;;36273:21:124;36330:1;36310:18;;;36303:29;-1:-1:-1;;;36348:18:124;;;36341:32;36390:18;;5455:47:74;36089:325:124;5455:47:74;5520:208;5584:12;:26;;;5560:10;:21;;;:50;;;;:::i;:::-;5663:27;;5662:28;;;:::i;:::-;119:4:65;5520:26:74;:208::i;85:164:68:-;175:7;-1:-1:-1;;;;;201:41:68;;;;:26;;:7;:26;:::i;:::-;:41;;;;:::i;143:103:90:-;189:7;228:1;223;:6;;:15;;236:2;237:1;236:2;:::i;:::-;223:15;;472:342;556:6;578:2;584:1;578:7;574:234;;-1:-1:-1;608:1:90;601:8;;574:234;635:1;630:2;:6;626:182;;;666:36;690:2;695;699;666:15;:36::i;:::-;652:51;;;;626:182;749:47;783:3;784:2;783:3;:::i;:::-;789:2;793;749:25;:47::i;:::-;741:56;;;:::i;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;2096:672::-;2210:9;2458:1;-1:-1:-1;;2441:19:31;2438:1;2435:26;2432:1;2428:34;2421:42;2408:11;2404:60;2394:116;;2494:1;2491;2484:12;2394:116;-1:-1:-1;2728:9:31;;2691:27;;;2688:34;;2724:27;;;2684:68;;2096:672::o;741:4127:45:-;853:14;;;-1:-1:-1;;1416:1:45;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;;1615:5;1624:1;1615:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;-1:-1:-1;1728:23:45;;;;-1:-1:-1;1786:13:45;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2736:12;2752:15;;;2751:31;;2888:22;;;;;3763:1;3744;:15;;3743:21;;4006:17;;;4002:21;;3995:28;4068:17;;;4064:21;;4057:28;4131:17;;;4127:21;;4120:28;4194:17;;;4190:21;;4183:28;4257:17;;;4253:21;;4246:28;4321:17;;;4317:21;;;4310:28;3300:12;;;;3296:23;;;3321:1;3292:31;2489:20;;;2478:32;;;3359:12;;;;2536:21;;;;3032:16;;;;3350:21;;;;4813:11;;;;;-1:-1:-1;;741:4127:45;;;;;:::o;5150:365::-;5272:14;5331:25;5338:1;5341;5344:11;5331:6;:25::i;:::-;5322:34;;5402:1;5387:11;5374:25;;;;;:::i;:::-;5384:1;5381;5374:25;:29;5370:129;;;-1:-1:-1;;5431:6:45;:26;5423:35;;;;;;5476:8;;5150:365;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:124;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:124;;14:180;-1:-1:-1;14:180:124:o;516:127::-;577:10;572:3;568:20;565:1;558:31;608:4;605:1;598:15;632:4;629:1;622:15;648:255;720:2;714:9;762:6;750:19;;-1:-1:-1;;;;;784:34:124;;820:22;;;781:62;778:88;;;846:18;;:::i;:::-;882:2;875:22;648:255;:::o;908:253::-;980:2;974:9;1022:4;1010:17;;-1:-1:-1;;;;;1042:34:124;;1078:22;;;1039:62;1036:88;;;1104:18;;:::i;1166:253::-;1238:2;1232:9;1280:4;1268:17;;-1:-1:-1;;;;;1300:34:124;;1336:22;;;1297:62;1294:88;;;1362:18;;:::i;1424:253::-;1496:2;1490:9;1538:4;1526:17;;-1:-1:-1;;;;;1558:34:124;;1594:22;;;1555:62;1552:88;;;1620:18;;:::i;1682:275::-;1753:2;1747:9;1818:2;1799:13;;-1:-1:-1;;1795:27:124;1783:40;;-1:-1:-1;;;;;1838:34:124;;1874:22;;;1835:62;1832:88;;;1900:18;;:::i;:::-;1936:2;1929:22;1682:275;;-1:-1:-1;1682:275:124:o;1962:131::-;-1:-1:-1;;;;;2037:31:124;;2027:42;;2017:70;;2083:1;2080;2073:12;2017:70;1962:131;:::o;2098:134::-;2166:20;;2195:31;2166:20;2195:31;:::i;2237:114::-;2321:4;2314:5;2310:16;2303:5;2300:27;2290:55;;2341:1;2338;2331:12;2356:130;2422:20;;2451:29;2422:20;2451:29;:::i;2491:118::-;2578:5;2575:1;2564:20;2557:5;2554:31;2544:59;;2599:1;2596;2589:12;2614:688;2676:5;2724:4;2712:9;2707:3;2703:19;2699:30;2696:50;;;2742:1;2739;2732:12;2696:50;2775:2;2769:9;2817:4;2809:6;2805:17;2888:6;2876:10;2873:22;-1:-1:-1;;;;;2840:10:124;2837:34;2834:62;2831:88;;;2899:18;;:::i;:::-;2935:2;2928:22;2998:23;;2983:39;;2968:6;-1:-1:-1;2968:6:124;3074:2;3059:18;;3046:32;3087:31;3046:32;3087:31;:::i;:::-;3146:2;3134:15;;3127:32;3211:2;3196:18;;3183:32;3224:31;3183:32;3224:31;:::i;:::-;3283:2;3271:15;;;;3264:32;2614:688;;-1:-1:-1;;2614:688:124:o;3307:606::-;3363:5;3411:4;3399:9;3394:3;3390:19;3386:30;3383:50;;;3429:1;3426;3419:12;3383:50;3462:2;3456:9;3504:4;3496:6;3492:17;3575:6;3563:10;3560:22;-1:-1:-1;;;;;3527:10:124;3524:34;3521:62;3518:88;;;3586:18;;:::i;:::-;3626:10;3622:2;3615:22;;3655:6;3646:15;;3698:9;3685:23;3677:6;3670:39;3770:2;3759:9;3755:18;3742:32;3737:2;3729:6;3725:15;3718:57;3836:2;3825:9;3821:18;3808:32;3803:2;3795:6;3791:15;3784:57;3902:2;3891:9;3887:18;3874:32;3869:2;3861:6;3857:15;3850:57;;3307:606;;;;:::o;3918:860::-;4009:6;4062:3;4050:9;4041:7;4037:23;4033:33;4030:53;;;4079:1;4076;4069:12;4030:53;4105:22;;:::i;:::-;4150:29;4169:9;4150:29;:::i;:::-;4143:5;4136:44;4212:38;4246:2;4235:9;4231:18;4212:38;:::i;:::-;4207:2;4200:5;4196:14;4189:62;4283:38;4317:2;4306:9;4302:18;4283:38;:::i;:::-;4278:2;4271:5;4267:14;4260:62;4354:38;4388:2;4377:9;4373:18;4354:38;:::i;:::-;4349:2;4342:5;4338:14;4331:62;4426:37;4458:3;4447:9;4443:19;4426:37;:::i;:::-;4420:3;4413:5;4409:15;4402:62;4497:63;4552:7;4546:3;4535:9;4531:19;4497:63;:::i;:::-;4491:3;4484:5;4480:15;4473:88;4595:60;4647:7;4638:6;4627:9;4623:22;4595:60;:::i;:::-;4588:4;4581:5;4577:16;4570:86;4690:57;4739:7;4733:3;4722:9;4718:19;4690:57;:::i;:::-;4683:4;4672:16;;4665:83;4676:5;3918:860;-1:-1:-1;;;3918:860:124:o;5340:530::-;5382:5;5435:3;5428:4;5420:6;5416:17;5412:27;5402:55;;5453:1;5450;5443:12;5402:55;5489:6;5476:20;-1:-1:-1;;;;;5511:2:124;5508:26;5505:52;;;5537:18;;:::i;:::-;5581:55;5624:2;5605:13;;-1:-1:-1;;5601:27:124;5630:4;5597:38;5581:55;:::i;:::-;5661:2;5652:7;5645:19;5707:3;5700:4;5695:2;5687:6;5683:15;5679:26;5676:35;5673:55;;;5724:1;5721;5714:12;5673:55;5789:2;5782:4;5774:6;5770:17;5763:4;5754:7;5750:18;5737:55;5837:1;5812:16;;;5830:4;5808:27;5801:38;;;;5816:7;5340:530;-1:-1:-1;;;5340:530:124:o;5875:688::-;5936:5;5984:4;5972:9;5967:3;5963:19;5959:30;5956:50;;;6002:1;5999;5992:12;5956:50;6035:4;6029:11;6079:4;6071:6;6067:17;-1:-1:-1;;;;;6171:6:124;6159:10;6156:22;6151:2;6139:10;6136:18;6133:46;6130:72;;;6182:18;;:::i;:::-;6224:10;6218:4;6211:24;6253:6;6244:15;;6296:9;6283:23;6268:38;;6315:33;6340:7;6315:33;:::i;:::-;6357:23;;;6431:2;6416:18;;6403:32;;6447:14;;;6444:34;;;6474:1;6471;6464:12;6444:34;;6511:45;6552:3;6543:6;6532:9;6528:22;6511:45;:::i;:::-;6506:2;6498:6;6494:15;6487:70;;;5875:688;;;;:::o;6568:428::-;6669:6;6677;6730:2;6718:9;6709:7;6705:23;6701:32;6698:52;;;6746:1;6743;6736:12;6698:52;6782:9;6769:23;6759:33;;6843:2;6832:9;6828:18;6815:32;-1:-1:-1;;;;;6862:6:124;6859:30;6856:50;;;6902:1;6899;6892:12;6856:50;6925:65;6982:7;6973:6;6962:9;6958:22;6925:65;:::i;:::-;6915:75;;;6568:428;;;;;:::o;7289:247::-;7356:6;7364;7417:2;7405:9;7396:7;7392:23;7388:32;7385:52;;;7433:1;7430;7423:12;7385:52;-1:-1:-1;;7456:23:124;;;7526:2;7511:18;;;7498:32;;-1:-1:-1;7289:247:124:o;8234:118::-;8320:5;8313:13;8306:21;8299:5;8296:32;8286:60;;8342:1;8339;8332:12;8357:377;8431:6;8439;8447;8500:2;8488:9;8479:7;8475:23;8471:32;8468:52;;;8516:1;8513;8506:12;8468:52;8552:9;8539:23;8529:33;;8612:2;8601:9;8597:18;8584:32;8625:28;8647:5;8625:28;:::i;:::-;8357:377;;8672:5;;-1:-1:-1;;;8724:2:124;8709:18;;;;8696:32;;8357:377::o;8992:496::-;9102:6;9110;9118;9171:2;9159:9;9150:7;9146:23;9142:32;9139:52;;;9187:1;9184;9177:12;9139:52;9223:9;9210:23;9200:33;;9280:2;9269:9;9265:18;9252:32;9242:42;;9335:2;9324:9;9320:18;9307:32;-1:-1:-1;;;;;9354:6:124;9351:30;9348:50;;;9394:1;9391;9384:12;9348:50;9417:65;9474:7;9465:6;9454:9;9450:22;9417:65;:::i;:::-;9407:75;;;8992:496;;;;;:::o;11203:1537::-;11343:4;11385:3;11374:9;11370:19;11362:27;;11422:6;11416:13;11405:9;11398:32;11477:4;11469:6;11465:17;11459:24;11519:1;11515;11510:3;11506:11;11502:19;11577:2;11563:12;11559:21;11552:4;11541:9;11537:20;11530:51;11649:2;11641:4;11633:6;11629:17;11623:24;11619:33;11612:4;11601:9;11597:20;11590:63;11721:2;11713:4;11705:6;11701:17;11695:24;11691:33;11684:4;11673:9;11669:20;11662:63;;;11781:4;11773:6;11769:17;11763:24;11756:4;11745:9;11741:20;11734:54;11837:4;11829:6;11825:17;11819:24;11887:14;11881:21;11874:4;11863:9;11859:20;11852:51;11980:4;11964:14;11960:25;11954:32;11951:1;11940:47;11934:3;11923:9;11919:19;11912:76;12065:4;12049:14;12045:25;12039:32;12036:1;12025:47;12019:3;12008:9;12004:19;11997:76;-1:-1:-1;;;;;12140:4:124;12124:14;12120:25;12114:32;12110:57;12104:3;12093:9;12089:19;12082:86;12225:4;12209:14;12205:25;12199:32;12240:69;12304:3;12293:9;12289:19;12273:14;10735:12;;10723:25;;10797:4;10786:16;;;10780:23;10764:14;;10757:47;10655:155;12240:69;-1:-1:-1;12366:4:124;12346:25;;;12340:32;10899:12;;12449:3;12434:19;;10887:25;10961:4;10950:16;;;10944:23;10928:14;;;10921:47;11017:4;11006:16;;11000:23;10984:14;;;10977:47;11073:4;11062:16;;11056:23;11040:14;;;11033:47;11129:4;11118:16;;11112:23;11096:14;;;11089:47;11174:16;;11168:23;11152:14;;;11145:47;12511:3;12491:24;;12485:31;10735:12;;12589:3;12574:19;;10723:25;10786:16;;10780:23;10764:14;;;10757:47;12651:3;12631:24;;;12625:31;10735:12;;12729:3;12714:19;;10723:25;10786:16;;;10780:23;10764:14;;;10757:47;12665:69;10655:155;12745:1085;12876:6;12884;12937:2;12925:9;12916:7;12912:23;12908:32;12905:52;;;12953:1;12950;12943:12;12905:52;12993:9;12980:23;-1:-1:-1;;;;;13063:2:124;13055:6;13052:14;13049:34;;;13079:1;13076;13069:12;13049:34;13102:22;;;;13158:4;13140:16;;;13136:27;13133:47;;;13176:1;13173;13166:12;13133:47;13202:22;;:::i;:::-;13260:2;13247:16;13240:5;13233:31;13317:2;13313;13309:11;13296:25;13291:2;13284:5;13280:14;13273:49;13375:2;13371;13367:11;13354:25;13349:2;13342:5;13338:14;13331:49;13433:2;13429;13425:11;13412:25;13407:2;13400:5;13396:14;13389:49;13484:3;13480:2;13476:12;13463:26;13514:2;13504:8;13501:16;13498:36;;;13530:1;13527;13520:12;13498:36;13567:44;13603:7;13592:8;13588:2;13584:17;13567:44;:::i;:::-;13561:3;13550:15;;13543:69;-1:-1:-1;13554:5:124;-1:-1:-1;13689:2:124;13674:18;;13661:32;;-1:-1:-1;13705:16:124;;;13702:36;;;13734:1;13731;13724:12;13702:36;;13757:67;13816:7;13805:8;13794:9;13790:24;13757:67;:::i;13835:315::-;13903:6;13911;13964:2;13952:9;13943:7;13939:23;13935:32;13932:52;;;13980:1;13977;13970:12;13932:52;14016:9;14003:23;13993:33;;14076:2;14065:9;14061:18;14048:32;14089:31;14114:5;14089:31;:::i;:::-;14139:5;14129:15;;;13835:315;;;;;:::o;14155:450::-;14229:6;14237;14245;14298:2;14286:9;14277:7;14273:23;14269:32;14266:52;;;14314:1;14311;14304:12;14266:52;14353:9;14340:23;14372:28;14394:5;14372:28;:::i;:::-;14419:5;-1:-1:-1;14476:2:124;14461:18;;14448:32;14489:33;14448:32;14489:33;:::i;14877:857::-;14973:1;14969;14964:3;14960:11;14956:19;15014:2;15006:5;15000:12;14996:21;14991:3;14984:34;15079:2;15071:4;15064:5;15060:16;15054:23;15050:32;15043:4;15038:3;15034:14;15027:56;;15129:4;15122:5;15118:16;15112:23;15173:12;15167:19;15160:4;15155:3;15151:14;15144:43;15241:4;15227:12;15223:23;15217:30;15212:2;15207:3;15203:12;15196:52;15303:4;15289:12;15285:23;15279:30;15273:3;15268;15264:13;15257:53;15365:2;15351:12;15347:21;15341:28;15335:3;15330;15326:13;15319:51;15425:3;15411:12;15407:22;15401:29;15395:3;15390;15386:13;15379:52;15486:3;15472:12;15468:22;15462:29;15456:3;15451;15447:13;15440:52;;15540:2;15533:5;15529:14;15523:21;15553:61;15606:6;15601:3;15597:16;15581:14;14691:5;14685:12;14680:3;14673:25;14747:4;14740:5;14736:16;14730:23;14723:4;14718:3;14714:14;14707:47;14803:4;14796:5;14792:16;14786:23;14779:4;14774:3;14770:14;14763:47;14859:4;14852:5;14848:16;14842:23;14835:4;14830:3;14826:14;14819:47;;;14610:262;15553:61;-1:-1:-1;15665:3:124;15654:15;;15648:22;15639:6;15630:16;;15623:48;15722:3;15711:15;15705:22;15696:6;15687:16;;;15680:48;14877:857::o;15986:1471::-;16078:12;;-1:-1:-1;;;;;265:31:124;253:44;;16142:4;16135:5;16131:16;16125:23;16157:46;16197:4;16192:3;16188:14;16174:12;10527:1;10516:20;10504:33;;10452:91;16157:46;;16251:4;16244:5;16240:16;16234:23;16266:48;16308:4;16303:3;16299:14;16283;10527:1;10516:20;10504:33;;10452:91;16266:48;;16362:4;16355:5;16351:16;16345:23;16377:49;16420:4;16415:3;16411:14;16395;-1:-1:-1;;;;;10613:30:124;10601:43;;10548:102;16377:49;-1:-1:-1;16475:4:124;16464:16;;;16458:23;16442:14;;;16435:47;16531:4;16520:16;;;16514:23;16498:14;;;16491:47;16587:4;16576:16;;;16570:23;16554:14;;;16547:47;16643:4;16632:16;;;16626:23;16610:14;;;16603:47;16669:6;16711:14;;;16705:21;16691:12;;;16684:43;16746:6;16788:14;;;16782:21;16768:12;;;16761:43;16823:6;16865:14;;;16859:21;16845:12;;;16838:43;16900:6;16942:14;;;16936:21;16922:12;;;16915:43;16977:6;17019:14;;;17013:21;16999:12;;;16992:43;17054:6;17097:14;;;17091:21;10735:12;;17170;;;10723:25;10797:4;10786:16;;10780:23;10764:14;;;10757:47;17121:62;;17231:6;17224:5;17220:18;17214:25;17258:6;17273:62;17331:2;17326:3;17322:12;17306:14;10735:12;;10723:25;;10797:4;10786:16;;;10780:23;10764:14;;10757:47;10655:155;17273:62;17375:14;;17369:21;17360:6;17351:16;;17344:47;-1:-1:-1;17442:6:124;17431:18;17425:25;17416:6;17407:16;;;17400:51;15986:1471::o;17542:1462::-;17766:13;;17748:32;;17827:4;17815:17;;;17809:24;17734:4;17719:20;;;17842:54;;17875:20;;17809:24;-1:-1:-1;;;;;265:31:124;253:44;;199:104;17842:54;;17945:4;17937:6;17933:17;17927:24;17960:56;18010:4;17999:9;17995:20;17979:14;-1:-1:-1;;;;;265:31:124;253:44;;199:104;17960:56;;18065:4;18057:6;18053:17;18047:24;18080:71;18145:4;18134:9;18130:20;18114:14;18080:71;:::i;:::-;;18200:4;18192:6;18188:17;18182:24;18215:73;18280:6;18269:9;18265:22;18249:14;18215:73;:::i;:::-;-1:-1:-1;18337:4:124;18325:17;;18319:24;15820:12;;18417:6;18402:22;;15808:25;15896:4;15885:16;;15879:23;15876:1;15865:38;;;15849:14;;;15842:62;15967:4;15956:16;;15950:23;15936:38;;15920:14;;;15913:62;18352:73;18474:4;18466:6;18462:17;18456:24;18489:77;18558:6;18547:9;18543:22;18527:14;18489:77;:::i;:::-;-1:-1:-1;18615:4:124;18603:17;;18597:24;-1:-1:-1;;;;;265:31:124;18680:6;18665:22;;253:44;18737:6;18725:19;;18719:26;7071:13;7064:21;18801:6;18786:22;;7052:34;18858:6;18846:19;;18840:26;17529:4;17518:16;18923:6;18908:22;;17506:29;18989:6;18977:19;;;18971:26;18962:6;18947:22;;;18940:58;17542:1462;:::o;19009:727::-;19097:6;19105;19113;19121;19174:2;19162:9;19153:7;19149:23;19145:32;19142:52;;;19190:1;19187;19180:12;19142:52;19226:9;19213:23;19203:33;;19283:2;19272:9;19268:18;19255:32;19245:42;;19338:2;19327:9;19323:18;19310:32;-1:-1:-1;;;;;19402:2:124;19394:6;19391:14;19388:34;;;19418:1;19415;19408:12;19388:34;19456:6;19445:9;19441:22;19431:32;;19501:7;19494:4;19490:2;19486:13;19482:27;19472:55;;19523:1;19520;19513:12;19472:55;19563:2;19550:16;19589:2;19581:6;19578:14;19575:34;;;19605:1;19602;19595:12;19575:34;19650:7;19645:2;19636:6;19632:2;19628:15;19624:24;19621:37;19618:57;;;19671:1;19668;19661:12;19618:57;19009:727;;;;-1:-1:-1;;19702:2:124;19694:11;;-1:-1:-1;;;19009:727:124:o;19994:247::-;20053:6;20106:2;20094:9;20085:7;20081:23;20077:32;20074:52;;;20122:1;20119;20112:12;20074:52;20161:9;20148:23;20180:31;20205:5;20180:31;:::i;20246:1247::-;20514:4;20556:3;20545:9;20541:19;20533:27;;20587:6;20576:9;20569:25;20630:6;20625:2;20614:9;20610:18;20603:34;20673:1;20669;20664:3;20660:11;20656:19;20730:2;20721:6;20715:13;20711:22;20706:2;20695:9;20691:18;20684:50;20798:2;20792;20784:6;20780:15;20774:22;20770:31;20765:2;20754:9;20750:18;20743:59;20867:2;20861;20853:6;20849:15;20843:22;20839:31;20833:3;20822:9;20818:19;20811:60;;20918:2;20910:6;20906:15;20900:22;20931:53;20979:3;20968:9;20964:19;20950:12;-1:-1:-1;;;;;265:31:124;253:44;;199:104;20931:53;-1:-1:-1;21033:3:124;21021:16;;21015:23;17529:4;17518:16;;21095:3;21080:19;;17506:29;-1:-1:-1;21149:3:124;21137:16;;21131:23;15820:12;;21228:3;21213:19;;15808:25;15896:4;15885:16;;15879:23;15876:1;15865:38;;;15849:14;;;15842:62;15967:4;15956:16;;15950:23;15936:38;;15920:14;;;15913:62;-1:-1:-1;21282:3:124;21270:16;;21264:23;14685:12;;21355:3;21340:19;;14673:25;14747:4;14736:16;;14730:23;14714:14;;;14707:47;14803:4;14792:16;;14786:23;14770:14;;;14763:47;14859:4;14848:16;;14842:23;14826:14;;;14819:47;-1:-1:-1;21409:3:124;21397:16;;21391:23;14685:12;;21482:3;21467:19;;14673:25;14747:4;14736:16;;14730:23;14714:14;;;14707:47;14803:4;14792:16;;14786:23;14770:14;;;14763:47;14859:4;14848:16;;14842:23;14826:14;;;14819:47;21423:64;20246:1247;;;;;;:::o;21498:184::-;21568:6;21621:2;21609:9;21600:7;21596:23;21592:32;21589:52;;;21637:1;21634;21627:12;21589:52;-1:-1:-1;21660:16:124;;21498:184;-1:-1:-1;21498:184:124:o;21687:250::-;21772:1;21782:113;21796:6;21793:1;21790:13;21782:113;;;21872:11;;;21866:18;21853:11;;;21846:39;21818:2;21811:10;21782:113;;;-1:-1:-1;;21929:1:124;21911:16;;21904:27;21687:250::o;21942:270::-;21983:3;22021:5;22015:12;22048:6;22043:3;22036:19;22064:76;22133:6;22126:4;22121:3;22117:14;22110:4;22103:5;22099:16;22064:76;:::i;:::-;22194:2;22173:15;-1:-1:-1;;22169:29:124;22160:39;;;;22201:4;22156:50;;21942:270;-1:-1:-1;;21942:270:124:o;22217:283::-;22339:1;22335;22330:3;22326:11;22322:19;22314:5;22308:12;22304:38;22299:3;22292:51;22274:3;22389:4;22382:5;22378:16;22372:23;22427:4;22420;22415:3;22411:14;22404:28;22448:46;22488:4;22483:3;22479:14;22465:12;22448:46;:::i;22505:457::-;22790:6;22779:9;22772:25;22833:6;22828:2;22817:9;22813:18;22806:34;22876:2;22871;22860:9;22856:18;22849:30;22753:4;22896:60;22952:2;22941:9;22937:18;22929:6;22896:60;:::i;:::-;22888:68;22505:457;-1:-1:-1;;;;;22505:457:124:o;22967:245::-;23034:6;23087:2;23075:9;23066:7;23062:23;23058:32;23055:52;;;23103:1;23100;23093:12;23055:52;23135:9;23129:16;23154:28;23176:5;23154:28;:::i;24013:245::-;24092:6;24100;24153:2;24141:9;24132:7;24128:23;24124:32;24121:52;;;24169:1;24166;24159:12;24121:52;-1:-1:-1;;24192:16:124;;24248:2;24233:18;;;24227:25;24192:16;;24227:25;;-1:-1:-1;24013:245:124:o;24263:530::-;24576:6;24565:9;24558:25;24619:6;24614:2;24603:9;24599:18;24592:34;24662:6;24657:2;24646:9;24642:18;24635:34;24705:3;24700:2;24689:9;24685:18;24678:31;24539:4;24726:61;24782:3;24771:9;24767:19;24759:6;24726:61;:::i;:::-;24718:69;24263:530;-1:-1:-1;;;;;;24263:530:124:o;24798:1094::-;24898:6;24942:9;24933:7;24929:23;24972:3;24968:2;24964:12;24961:32;;;24989:1;24986;24979:12;24961:32;25015:22;;:::i;:::-;25057:4;25053:2;25049:13;25046:33;;;25075:1;25072;25065:12;25046:33;25103:22;;:::i;:::-;25088:37;;25156:9;25150:16;25141:7;25134:33;25222:2;25211:9;25207:18;25201:25;25196:2;25187:7;25183:16;25176:51;25282:2;25271:9;25267:18;25261:25;25256:2;25247:7;25243:16;25236:51;25342:2;25331:9;25327:18;25321:25;25316:2;25307:7;25303:16;25296:51;25403:3;25392:9;25388:19;25382:26;25376:3;25367:7;25363:17;25356:53;25465:3;25454:9;25450:19;25444:26;25438:3;25429:7;25425:17;25418:53;25494:7;25487:5;25480:22;25555:4;25544:9;25540:20;25534:27;25529:2;25522:5;25518:14;25511:51;25615:4;25604:9;25600:20;25594:27;25589:2;25582:5;25578:14;25571:51;25675:3;25664:9;25660:19;25654:26;25649:2;25642:5;25638:14;25631:50;25735:3;25724:9;25720:19;25714:26;25708:3;25701:5;25697:15;25690:51;25795:3;25784:9;25780:19;25774:26;25768:3;25761:5;25757:15;25750:51;25856:3;25845:9;25841:19;25835:26;25828:4;25821:5;25817:16;25810:52;25881:5;25871:15;;;;24798:1094;;;;:::o;25897:915::-;26242:6;26231:9;26224:25;26285:2;26280;26269:9;26265:18;26258:30;26330:6;26324:13;26319:2;26308:9;26304:18;26297:41;26393:2;26385:6;26381:15;26375:22;26369:3;26358:9;26354:19;26347:51;26454:4;26446:6;26442:17;26436:24;26429:4;26418:9;26414:20;26407:54;26516:2;26508:6;26504:15;26498:22;26492:3;26481:9;26477:19;26470:51;26205:4;26568:3;26560:6;26556:16;26550:23;26610:4;26604:3;26593:9;26589:19;26582:33;26635:51;26681:3;26670:9;26666:19;26652:12;26635:51;:::i;:::-;26624:62;;26733:9;26728:3;26724:19;26717:4;26706:9;26702:20;26695:49;26761:45;26802:3;26794:6;26761:45;:::i;27025:251::-;27095:6;27148:2;27136:9;27127:7;27123:23;27119:32;27116:52;;;27164:1;27161;27154:12;27116:52;27196:9;27190:16;27215:31;27240:5;27215:31;:::i;27281:163::-;27359:13;;27412:6;27401:18;;27391:29;;27381:57;;27434:1;27431;27424:12;27449:892;27563:6;27571;27579;27587;27595;27603;27611;27664:3;27652:9;27643:7;27639:23;27635:33;27632:53;;;27681:1;27678;27671:12;27632:53;27713:9;27707:16;27732:31;27757:5;27732:31;:::i;:::-;27832:2;27817:18;;27811:25;27782:5;;-1:-1:-1;27845:31:124;27811:25;27845:31;:::i;:::-;27895:7;-1:-1:-1;27921:48:124;27965:2;27950:18;;27921:48;:::i;:::-;27911:58;;27988:48;28032:2;28021:9;28017:18;27988:48;:::i;:::-;27978:58;;28055:49;28099:3;28088:9;28084:19;28055:49;:::i;:::-;28045:59;;28149:3;28138:9;28134:19;28128:26;28163:31;28186:7;28163:31;:::i;:::-;28265:3;28250:19;;28244:26;28213:7;;-1:-1:-1;28279:30:124;28244:26;28279:30;:::i;:::-;28328:7;28318:17;;;27449:892;;;;;;;;;;:::o;28346:127::-;28407:10;28402:3;28398:20;28395:1;28388:31;28438:4;28435:1;28428:15;28462:4;28459:1;28452:15;28478:127;28539:10;28534:3;28530:20;28527:1;28520:31;28570:4;28567:1;28560:15;28594:4;28591:1;28584:15;28610:120;28650:1;28676;28666:35;;28681:18;;:::i;:::-;-1:-1:-1;28715:9:124;;28610:120::o;28735:168::-;28808:9;;;28839;;28856:15;;;28850:22;;28836:37;28826:71;;28877:18;;:::i;28908:200::-;28974:9;;;28947:4;29002:9;;29030:10;;29042:12;;;29026:29;29065:12;;;29057:21;;29023:56;29020:82;;;29082:18;;:::i;29113:216::-;29177:9;;;29205:11;;;29152:3;29235:9;;29263:10;;29259:19;;29288:10;;29280:19;;29256:44;29253:70;;;29303:18;;:::i;:::-;29253:70;;29113:216;;;;:::o;29334:135::-;29373:3;29394:17;;;29391:43;;29414:18;;:::i;:::-;-1:-1:-1;29461:1:124;29450:13;;29334:135::o;29753:287::-;29882:3;29920:6;29914:13;29936:66;29995:6;29990:3;29983:4;29975:6;29971:17;29936:66;:::i;:::-;30018:16;;;;;29753:287;-1:-1:-1;;29753:287:124:o;30375:125::-;30440:9;;;30461:10;;;30458:36;;;30474:18;;:::i;30914:136::-;30949:3;-1:-1:-1;;;30970:22:124;;30967:48;;30995:18;;:::i;:::-;-1:-1:-1;31035:1:124;31031:13;;30914:136::o;31055:237::-;31127:9;;;31094:7;31152:9;;-1:-1:-1;;;31163:18:124;;31148:34;31145:60;;;31185:18;;:::i;:::-;31258:1;31249:7;31244:16;31241:1;31238:23;31234:1;31227:9;31224:38;31214:72;;31266:18;;:::i;31297:193::-;31336:1;31362;31352:35;;31367:18;;:::i;:::-;-1:-1:-1;;;31403:18:124;;-1:-1:-1;;31423:13:124;;31399:38;31396:64;;;31440:18;;:::i;:::-;-1:-1:-1;31474:10:124;;31297:193::o;31495:127::-;31556:10;31551:3;31547:20;31544:1;31537:31;31587:4;31584:1;31577:15;31611:4;31608:1;31601:15;31627:647;31796:2;31848:21;;;31918:13;;31821:18;;;31940:22;;;31767:4;;31796:2;32019:15;;;;31993:2;31978:18;;;31767:4;32062:186;32076:6;32073:1;32070:13;32062:186;;;32141:13;;32156:10;32137:30;32125:43;;32223:15;;;;32188:12;;;;32098:1;32091:9;32062:186;;;-1:-1:-1;32265:3:124;;31627:647;-1:-1:-1;;;;;;31627:647:124:o;32610:168::-;32677:6;32703:10;;;32715;;;32699:27;;32738:11;;;32735:37;;;32752:18;;:::i;32783:179::-;32814:1;32840:6;32873:2;32870:1;32866:10;32895:3;32885:37;;32902:18;;:::i;:::-;32940:10;;32936:20;;;;;32783:179;-1:-1:-1;;32783:179:124:o;33161:164::-;33238:13;;33291:1;33280:20;;;33270:31;;33260:59;;33315:1;33312;33305:12;33330:624;33421:6;33429;33437;33445;33498:3;33486:9;33477:7;33473:23;33469:33;33466:53;;;33515:1;33512;33505:12;33466:53;33547:9;33541:16;33597:10;33590:5;33586:22;33579:5;33576:33;33566:61;;33623:1;33620;33613:12;33566:61;33646:5;-1:-1:-1;33670:47:124;33713:2;33698:18;;33670:47;:::i;:::-;33660:57;;33762:2;33751:9;33747:18;33741:25;33775:33;33800:7;33775:33;:::i;:::-;33879:2;33864:18;;33858:25;33827:7;;-1:-1:-1;33892:30:124;33858:25;33892:30;:::i;:::-;33330:624;;;;-1:-1:-1;33330:624:124;;-1:-1:-1;;33330:624:124:o;34149:128::-;34216:9;;;34237:11;;;34234:37;;;34251:18;;:::i;34282:956::-;34375:6;34406:2;34449;34437:9;34428:7;34424:23;34420:32;34417:52;;;34465:1;34462;34455:12;34417:52;34498:9;34492:16;-1:-1:-1;;;;;34568:2:124;34560:6;34557:14;34554:34;;;34584:1;34581;34574:12;34554:34;34622:6;34611:9;34607:22;34597:32;;34667:7;34660:4;34656:2;34652:13;34648:27;34638:55;;34689:1;34686;34679:12;34638:55;34718:2;34712:9;34740:2;34736;34733:10;34730:36;;;34746:18;;:::i;:::-;34792:2;34789:1;34785:10;34775:20;;34815:28;34839:2;34835;34831:11;34815:28;:::i;:::-;34877:15;;;34947:11;;;34943:20;;;34908:12;;;;34975:19;;;34972:39;;;35007:1;35004;34997:12;34972:39;35031:11;;;;35051:157;35067:6;35062:3;35059:15;35051:157;;;35133:32;35161:3;35133:32;:::i;:::-;35121:45;;35084:12;;;;35186;;;;35051:157;;;35227:5;34282:956;-1:-1:-1;;;;;;;;34282:956:124:o;35243:210::-;35341:1;35330:16;;;35312;;;;35308:39;-1:-1:-1;;35362:32:124;;35406:16;35396:27;;35359:65;35356:91;;;35427:18;;:::i;35458:284::-;35496:1;35537;35534;35523:16;35573:1;35570;35559:16;35594:3;35584:37;;35601:18;;:::i;:::-;-1:-1:-1;;35637:30:124;;-1:-1:-1;;35669:15:124;;35633:52;35630:78;;;35688:18;;:::i;:::-;35722:14;;;35458:284;-1:-1:-1;;;35458:284:124:o",
    "linkReferences": {
      "src/libraries/logic/AddPairLogic.sol": {
        "AddPairLogic": [
          {
            "start": 1139,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "LiquidationLogic": [
          {
            "start": 3588,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/MarginLogic.sol": {
        "MarginLogic": [
          {
            "start": 3330,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "ReallocationLogic": [
          {
            "start": 3166,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "SupplyLogic": [
          {
            "start": 3460,
            "length": 20
          },
          {
            "start": 6212,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/TradeLogic.sol": {
        "TradeLogic": [
          {
            "start": 4123,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "allowedUniswapPools(address)": "f3eb8cd8",
    "createVault(uint256,uint256)": "e5fbab85",
    "execLiquidationCall(uint256,uint256,(address,bytes))": "91d0370f",
    "getPairStatus(uint256)": "c92af3ec",
    "getSqrtIndexPrice(uint256)": "acfcd9fd",
    "getSqrtPrice(uint256)": "18e80749",
    "getVault(uint256)": "9403b634",
    "getVaultStatus(uint256)": "49ebb77d",
    "globalData()": "613ce410",
    "reallocate(uint256,(address,bytes))": "4e20a76e",
    "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": "3b39b99d",
    "supply(uint256,bool,uint256)": "db9d4a19",
    "take(bool,address,uint256)": "c6b6d340",
    "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": "9b819b30",
    "uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997",
    "updateMargin(uint256,int256)": "5393e780",
    "updateRecepient(uint256,address)": "ab4db360",
    "withdraw(uint256,bool,uint256)": "7f223b4c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPairId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"}],\"name\":\"LockedBy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"T\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultAlreadyHasAnotherMarginId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultAlreadyHasAnotherPair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotDanger\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedUniswapPools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"execLiquidationCall\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getPairStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"quotePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"basePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"riskRatio\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rangeSize\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceThreshold\",\"type\":\"int24\"}],\"internalType\":\"struct Perp.AssetRiskParams\",\"name\":\"riskParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"uniswapPool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint64\",\"name\":\"numRebalance\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebalanceTotalSquartAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1Growth\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionUnderlying\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionStable\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthStable\",\"type\":\"int256\"}],\"internalType\":\"struct Perp.SqrtPerpAssetStatus\",\"name\":\"sqrtAssetStatus\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isMarginZero\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"feeRatio\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.PairStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getSqrtIndexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getSqrtPrice\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rebalanceLastTickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceLastTickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint64\",\"name\":\"lastNumRebalance\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"entryValue\",\"type\":\"int256\"}],\"internalType\":\"struct Perp.PositionStatus\",\"name\":\"perp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"entryValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"quoteRebalanceEntryValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"baseRebalanceEntryValue\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"entryTradeFee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryTradeFee1\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.SqrtPositionStatus\",\"name\":\"sqrtPerp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"underlying\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"stable\",\"type\":\"tuple\"}],\"internalType\":\"struct Perp.UserStatus\",\"name\":\"openPosition\",\"type\":\"tuple\"}],\"internalType\":\"struct DataType.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVaultStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"vaultValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.VaultStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pairsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniswapFactory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"internalType\":\"struct LockDataLibrary.LockData\",\"name\":\"lockData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"reallocate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"relocationOccurred\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"fee\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"riskRatio\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rangeSize\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceThreshold\",\"type\":\"int24\"}],\"internalType\":\"struct Perp.AssetRiskParams\",\"name\":\"assetRiskParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"stableIrmParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"underlyingIrmParams\",\"type\":\"tuple\"}],\"internalType\":\"struct AddPairLogic.AddPairParams\",\"name\":\"addPairParam\",\"type\":\"tuple\"}],\"name\":\"registerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalSuppliedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"trade\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"}],\"name\":\"updateRecepient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint256,uint256,(address,bytes))\":{\"params\":{\"closeRatio\":\"The ratio at which the position will be closed.\",\"settlementData\":\"SettlementData struct for trade settlement.\",\"vaultId\":\"The identifier of the vault to be liquidated.\"},\"returns\":{\"tradeResult\":\"TradeResult struct with the result of the liquidation.\"}},\"registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))\":{\"params\":{\"addPairParam\":\"AddPairParams struct containing pair information.\"}},\"take(bool,address,uint256)\":{\"details\":\"Only locker can call this function\"},\"trade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"params\":{\"settlementData\":\"byte data for settlement contract.\",\"tradeParams\":\"trade details\"},\"returns\":{\"tradeResult\":\"The result of the trade.\"}},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"Callback for Uniswap V3 pool.\"},\"updateMargin(uint256,int256)\":{\"details\":\"Only locker can call this function\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint256,uint256,(address,bytes))\":{\"notice\":\"Executes a liquidation call to close an unsafe vault.\"},\"reallocate(uint256,(address,bytes))\":{\"notice\":\"Reallocated the range of concentrated liquidity provider position\"},\"registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))\":{\"notice\":\"Adds a new trading pair.\"},\"supply(uint256,bool,uint256)\":{\"notice\":\"Supplies liquidity to the lending pool\"},\"take(bool,address,uint256)\":{\"notice\":\"Takes tokens\"},\"trade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"notice\":\"This function allows users to open or close perpetual future positions.\"},\"updateMargin(uint256,int256)\":{\"notice\":\"Deposits margin to the vault or withdraws margin from the vault\"},\"withdraw(uint256,bool,uint256)\":{\"notice\":\"Withdraws liquidity from the lending pool\"}},\"notice\":\"Holds the state for all pairs and vaults\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PredyPool.sol\":\"PredyPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PredyPool.sol\":{\"keccak256\":\"0x1b2890af09436a79b07496fa337645cc3130bab076278a31deebab1d323fa947\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4f4020c97e41cc8c9a7a0990c64dc9e68d1936efd27e95dcf9e21d9eb3965c0b\",\"dweb:/ipfs/QmZkWUBuSKUYR8Cvoqz7LBSKukhGnM6iEPPzN49uKYekqc\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2\",\"dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x9d3cf068928afb9af696d1760a87609f7caaa35e590dbef86529f265efc4003e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://425639dc7ccf87fd7bbcd4b2de160f4d5a4dca8242f1155ba59bb53766145b20\",\"dweb:/ipfs/QmZHaLKRuijkRN8SWpwLqk5S2N5R2QKAphyqDDkYkvHX9V\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/interfaces/ISupplyToken.sol\":{\"keccak256\":\"0xbc722f52efe85caaec0a7b4a2bb13a8293ee289f5954da4c9916811226ce2610\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://dd9bb7cf669fa851b63a6e68dec99b4bd631accbb281504aad212ef65b8fe1aa\",\"dweb:/ipfs/QmY8WVzitNHFdHPkTC7me8JXkJ6kRTURh3q8fnnhFFnSyf\"]},\"src/libraries/ApplyInterestLib.sol\":{\"keccak256\":\"0x2fdaf3bfea0abf7064ff3a856b762711db5ddbdb3687cc5396e8f52c8b754182\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f5a2eb701b301cf06773001cf856955bb17acea8a5ca2edd10e490ac9a96b27a\",\"dweb:/ipfs/QmbLmpm9vYnd1eeRiaMG7cSma8JPdiesMV5rxD7ZUKbQUf\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2\",\"dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x877c1fe4bf975c034cfca9e71604dbd02ddcd3016efc3b3c10aede81e3f9c068\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://84f1a06a9f989f35a46967514bf434f688f520350cc68c33a995d2d23d6bff20\",\"dweb:/ipfs/QmeLAFYomVcwyHnvLEZgubZLQmLcA9y1ERiuH4N3osNfdx\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/Trade.sol\":{\"keccak256\":\"0x6f9d1638e5b2abdb3df345d310599c5a8204785c2bcd10ca129a701559dfdcec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1891f5afbe725e19afa3780281226444b5e702141582e0a1cc713b80e08f8d8d\",\"dweb:/ipfs/QmPRVLnQCtvfvMkprMvcEWgQkVGuzDptXTrLhjHLqcfVvL\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/VaultLib.sol\":{\"keccak256\":\"0x10232527e7a500c90bb6c0c7353b6a450db5921c95edcfa6d17a8cb3b3975a2f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://91821b3f7fe9d16e7db025b04d36e35ddcbc61c2bead356fd921091dedea0947\",\"dweb:/ipfs/QmU2CXUKP98b8HaRVHrvBf4BFXhjudJGefTHu1u6cTZazN\"]},\"src/libraries/logic/AddPairLogic.sol\":{\"keccak256\":\"0x22e26e8b5726ea10259820bb2046b964a6932a3073fa8bb7f62536098e110a71\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b0d5df526e6c7723de61c31653931ea0e283704a83daea512ff2d039bacafda2\",\"dweb:/ipfs/QmWEi9yxYXPzsNwbStn8oayp1b34FHPQkeZKc8G67TKWYC\"]},\"src/libraries/logic/LiquidationLogic.sol\":{\"keccak256\":\"0xaaa362e16ef9c1508d9fbe71f917589ed59c6efc7e5e8a2c7c2f3177dccdfd20\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4eadf6b5831f012d0eb1a8ae6fa26901611a572e69f5d35b2ef3f733ccc1db7f\",\"dweb:/ipfs/QmTwwHPNFxD6nZ89neTJs1mTwm81pvMoGsnPgcD3fEqRdo\"]},\"src/libraries/logic/MarginLogic.sol\":{\"keccak256\":\"0x3b96fc20f13a5ac12f036703e115a0aa3d00ce65c9bdd33813771bff35e53b8f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5eee457ce666022a5868625c0eddc28d23dada6cb3469afb4188528bae7b620\",\"dweb:/ipfs/Qmc3Lfs59SajZbDrZNt7TzKzGwG2hhggt3HfM7DPtBFtc4\"]},\"src/libraries/logic/ReallocationLogic.sol\":{\"keccak256\":\"0x91816ab69d750ee9f3ef8237f87fa3e95bbc3395eb58f0eeba72e07218d4ff19\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://65f3f716cb37c4958504a4df198b0ac5999f2432eb6892810fb77412b266ec6f\",\"dweb:/ipfs/QmdW69VWqPtLQ88jsAwdATaaM7s5HqbRBmL9gnEeefM1rq\"]},\"src/libraries/logic/SupplyLogic.sol\":{\"keccak256\":\"0x5f53e5f382757c67842cffd2f9d37a98375f1e99a7b73bc76bfa37a6d41fe676\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c0cb83a6f0e79041e09d110964b4904d5871b27b1605ffa3447863e33aa01aa1\",\"dweb:/ipfs/QmQacVsk8hbBAPR4wjkMHoeKfZ7MFvoUgcpn2c9sMC6qxi\"]},\"src/libraries/logic/TradeLogic.sol\":{\"keccak256\":\"0xbc8d878f0269f0a1145701c0189df1819ba670d713f5a2986e7a2ca67f44580b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32a88ef57a17be3a32b075374bb32dc960371f87019383e7fb92f2197b127a24\",\"dweb:/ipfs/QmbriVA4BnyoFtso6fxv6Wds9fyxY7Spfm4u8fDJoGSFwZ\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/tokenization/SupplyToken.sol\":{\"keccak256\":\"0x1347b9c7ab2d8aaeceec8521dc43c7ce35b124fc41c89fca582b774c4c0022fd\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://175a6a29d1cd9469dc4cf30347a3ce4bbde63d6222124ae7ee1534d6b5dcd6c0\",\"dweb:/ipfs/QmbjstzkLjpRmNPCsuouGha3YgeqgGL7zYqYdcBQbnGBaT\"]},\"src/types/GlobalData.sol\":{\"keccak256\":\"0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a\",\"dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC\"]},\"src/types/LockData.sol\":{\"keccak256\":\"0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418\",\"dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "uniswapFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotVaultOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyNotSettled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPairId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "locker",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LockedBy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "T"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultAlreadyHasAnotherMarginId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultAlreadyHasAnotherPair"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultIsNotDanger"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowedUniswapPools",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeRatio",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPairStatus",
          "outputs": [
            {
              "internalType": "struct Perp.PairStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolOwner",
                  "type": "address"
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "quotePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "basePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetRiskParams",
                  "name": "riskParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "riskRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rangeSize",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceThreshold",
                      "type": "int24"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.SqrtPerpAssetStatus",
                  "name": "sqrtAssetStatus",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "uniswapPool",
                      "type": "address"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint64",
                      "name": "numRebalance",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastRebalanceTotalSquartAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionUnderlying",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionStable",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthStable",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isMarginZero",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "feeRatio",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSqrtIndexPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSqrtPrice",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVault",
          "outputs": [
            {
              "internalType": "struct DataType.Vault",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recepient",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "margin",
                  "type": "int256"
                },
                {
                  "internalType": "struct Perp.UserStatus",
                  "name": "openPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pairId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceLastTickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceLastTickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint64",
                      "name": "lastNumRebalance",
                      "type": "uint64"
                    },
                    {
                      "internalType": "struct Perp.PositionStatus",
                      "name": "perp",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "entryValue",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Perp.SqrtPositionStatus",
                      "name": "sqrtPerp",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "entryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "quoteRebalanceEntryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "baseRebalanceEntryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "entryTradeFee0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "entryTradeFee1",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "underlying",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "stable",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultStatus",
          "outputs": [
            {
              "internalType": "struct IPredyPool.VaultStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "vaultValue",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalData",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pairsCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "uniswapFactory",
              "type": "address"
            },
            {
              "internalType": "struct LockDataLibrary.LockData",
              "name": "lockData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "locker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteReserve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseReserve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reallocate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "relocationOccurred",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AddPairLogic.AddPairParams",
              "name": "addPairParam",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uniswapPool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "fee",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Perp.AssetRiskParams",
                  "name": "assetRiskParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "riskRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rangeSize",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceThreshold",
                      "type": "int24"
                    }
                  ]
                },
                {
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "stableIrmParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "underlyingIrmParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPair",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "supplyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "supply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finalSuppliedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "take"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trade",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "uniswapV3MintCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMargin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recepient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRecepient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finalBurnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finalWithdrawAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint256,uint256,(address,bytes))": {
            "params": {
              "closeRatio": "The ratio at which the position will be closed.",
              "settlementData": "SettlementData struct for trade settlement.",
              "vaultId": "The identifier of the vault to be liquidated."
            },
            "returns": {
              "tradeResult": "TradeResult struct with the result of the liquidation."
            }
          },
          "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": {
            "params": {
              "addPairParam": "AddPairParams struct containing pair information."
            }
          },
          "take(bool,address,uint256)": {
            "details": "Only locker can call this function"
          },
          "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "params": {
              "settlementData": "byte data for settlement contract.",
              "tradeParams": "trade details"
            },
            "returns": {
              "tradeResult": "The result of the trade."
            }
          },
          "uniswapV3MintCallback(uint256,uint256,bytes)": {
            "details": "Callback for Uniswap V3 pool."
          },
          "updateMargin(uint256,int256)": {
            "details": "Only locker can call this function"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint256,uint256,(address,bytes))": {
            "notice": "Executes a liquidation call to close an unsafe vault."
          },
          "reallocate(uint256,(address,bytes))": {
            "notice": "Reallocated the range of concentrated liquidity provider position"
          },
          "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": {
            "notice": "Adds a new trading pair."
          },
          "supply(uint256,bool,uint256)": {
            "notice": "Supplies liquidity to the lending pool"
          },
          "take(bool,address,uint256)": {
            "notice": "Takes tokens"
          },
          "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "notice": "This function allows users to open or close perpetual future positions."
          },
          "updateMargin(uint256,int256)": {
            "notice": "Deposits margin to the vault or withdraws margin from the vault"
          },
          "withdraw(uint256,bool,uint256)": {
            "notice": "Withdraws liquidity from the lending pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PredyPool.sol": "PredyPool"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol": {
        "keccak256": "0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a",
        "urls": [
          "bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7",
          "dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PredyPool.sol": {
        "keccak256": "0x1b2890af09436a79b07496fa337645cc3130bab076278a31deebab1d323fa947",
        "urls": [
          "bzz-raw://4f4020c97e41cc8c9a7a0990c64dc9e68d1936efd27e95dcf9e21d9eb3965c0b",
          "dweb:/ipfs/QmZkWUBuSKUYR8Cvoqz7LBSKukhGnM6iEPPzN49uKYekqc"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3",
        "urls": [
          "bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2",
          "dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x9d3cf068928afb9af696d1760a87609f7caaa35e590dbef86529f265efc4003e",
        "urls": [
          "bzz-raw://425639dc7ccf87fd7bbcd4b2de160f4d5a4dca8242f1155ba59bb53766145b20",
          "dweb:/ipfs/QmZHaLKRuijkRN8SWpwLqk5S2N5R2QKAphyqDDkYkvHX9V"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISupplyToken.sol": {
        "keccak256": "0xbc722f52efe85caaec0a7b4a2bb13a8293ee289f5954da4c9916811226ce2610",
        "urls": [
          "bzz-raw://dd9bb7cf669fa851b63a6e68dec99b4bd631accbb281504aad212ef65b8fe1aa",
          "dweb:/ipfs/QmY8WVzitNHFdHPkTC7me8JXkJ6kRTURh3q8fnnhFFnSyf"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ApplyInterestLib.sol": {
        "keccak256": "0x2fdaf3bfea0abf7064ff3a856b762711db5ddbdb3687cc5396e8f52c8b754182",
        "urls": [
          "bzz-raw://f5a2eb701b301cf06773001cf856955bb17acea8a5ca2edd10e490ac9a96b27a",
          "dweb:/ipfs/QmbLmpm9vYnd1eeRiaMG7cSma8JPdiesMV5rxD7ZUKbQUf"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897",
        "urls": [
          "bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2",
          "dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x877c1fe4bf975c034cfca9e71604dbd02ddcd3016efc3b3c10aede81e3f9c068",
        "urls": [
          "bzz-raw://84f1a06a9f989f35a46967514bf434f688f520350cc68c33a995d2d23d6bff20",
          "dweb:/ipfs/QmeLAFYomVcwyHnvLEZgubZLQmLcA9y1ERiuH4N3osNfdx"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Trade.sol": {
        "keccak256": "0x6f9d1638e5b2abdb3df345d310599c5a8204785c2bcd10ca129a701559dfdcec",
        "urls": [
          "bzz-raw://1891f5afbe725e19afa3780281226444b5e702141582e0a1cc713b80e08f8d8d",
          "dweb:/ipfs/QmPRVLnQCtvfvMkprMvcEWgQkVGuzDptXTrLhjHLqcfVvL"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/VaultLib.sol": {
        "keccak256": "0x10232527e7a500c90bb6c0c7353b6a450db5921c95edcfa6d17a8cb3b3975a2f",
        "urls": [
          "bzz-raw://91821b3f7fe9d16e7db025b04d36e35ddcbc61c2bead356fd921091dedea0947",
          "dweb:/ipfs/QmU2CXUKP98b8HaRVHrvBf4BFXhjudJGefTHu1u6cTZazN"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/AddPairLogic.sol": {
        "keccak256": "0x22e26e8b5726ea10259820bb2046b964a6932a3073fa8bb7f62536098e110a71",
        "urls": [
          "bzz-raw://b0d5df526e6c7723de61c31653931ea0e283704a83daea512ff2d039bacafda2",
          "dweb:/ipfs/QmWEi9yxYXPzsNwbStn8oayp1b34FHPQkeZKc8G67TKWYC"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "keccak256": "0xaaa362e16ef9c1508d9fbe71f917589ed59c6efc7e5e8a2c7c2f3177dccdfd20",
        "urls": [
          "bzz-raw://4eadf6b5831f012d0eb1a8ae6fa26901611a572e69f5d35b2ef3f733ccc1db7f",
          "dweb:/ipfs/QmTwwHPNFxD6nZ89neTJs1mTwm81pvMoGsnPgcD3fEqRdo"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/MarginLogic.sol": {
        "keccak256": "0x3b96fc20f13a5ac12f036703e115a0aa3d00ce65c9bdd33813771bff35e53b8f",
        "urls": [
          "bzz-raw://c5eee457ce666022a5868625c0eddc28d23dada6cb3469afb4188528bae7b620",
          "dweb:/ipfs/Qmc3Lfs59SajZbDrZNt7TzKzGwG2hhggt3HfM7DPtBFtc4"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "keccak256": "0x91816ab69d750ee9f3ef8237f87fa3e95bbc3395eb58f0eeba72e07218d4ff19",
        "urls": [
          "bzz-raw://65f3f716cb37c4958504a4df198b0ac5999f2432eb6892810fb77412b266ec6f",
          "dweb:/ipfs/QmdW69VWqPtLQ88jsAwdATaaM7s5HqbRBmL9gnEeefM1rq"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "keccak256": "0x5f53e5f382757c67842cffd2f9d37a98375f1e99a7b73bc76bfa37a6d41fe676",
        "urls": [
          "bzz-raw://c0cb83a6f0e79041e09d110964b4904d5871b27b1605ffa3447863e33aa01aa1",
          "dweb:/ipfs/QmQacVsk8hbBAPR4wjkMHoeKfZ7MFvoUgcpn2c9sMC6qxi"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/TradeLogic.sol": {
        "keccak256": "0xbc8d878f0269f0a1145701c0189df1819ba670d713f5a2986e7a2ca67f44580b",
        "urls": [
          "bzz-raw://32a88ef57a17be3a32b075374bb32dc960371f87019383e7fb92f2197b127a24",
          "dweb:/ipfs/QmbriVA4BnyoFtso6fxv6Wds9fyxY7Spfm4u8fDJoGSFwZ"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/tokenization/SupplyToken.sol": {
        "keccak256": "0x1347b9c7ab2d8aaeceec8521dc43c7ce35b124fc41c89fca582b774c4c0022fd",
        "urls": [
          "bzz-raw://175a6a29d1cd9469dc4cf30347a3ce4bbde63d6222124ae7ee1534d6b5dcd6c0",
          "dweb:/ipfs/QmbjstzkLjpRmNPCsuouGha3YgeqgGL7zYqYdcBQbnGBaT"
        ],
        "license": "agpl-3.0"
      },
      "src/types/GlobalData.sol": {
        "keccak256": "0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c",
        "urls": [
          "bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a",
          "dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC"
        ],
        "license": "UNLICENSED"
      },
      "src/types/LockData.sol": {
        "keccak256": "0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4",
        "urls": [
          "bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418",
          "dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PredyPool.sol",
    "id": 53306,
    "exportedSymbols": {
      "AddPairLogic": [
        60982
      ],
      "ApplyInterestLib": [
        53892
      ],
      "Constants": [
        53942
      ],
      "Context": [
        43564
      ],
      "DataType": [
        53965
      ],
      "ERC20": [
        43439
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GlobalDataLibrary": [
        64306
      ],
      "IERC20": [
        43517
      ],
      "IERC20Metadata": [
        43542
      ],
      "IHooks": [
        53464
      ],
      "IPredyPool": [
        53640
      ],
      "ISettlement": [
        53655
      ],
      "ISupplyToken": [
        53672
      ],
      "IUniswapV3Factory": [
        47992
      ],
      "IUniswapV3MintCallback": [
        48038
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        64420
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        54040
      ],
      "LPMath": [
        63299
      ],
      "LiquidationLogic": [
        61475
      ],
      "LiquidityAmounts": [
        49693
      ],
      "LockDataLibrary": [
        64319
      ],
      "MarginLogic": [
        61601
      ],
      "Math": [
        63440
      ],
      "PairLib": [
        54063
      ],
      "Perp": [
        56525
      ],
      "PositionCalculator": [
        57771
      ],
      "PositionKey": [
        49718
      ],
      "PredyPool": [
        53305
      ],
      "PremiumCurveModel": [
        57813
      ],
      "Reallocation": [
        58356
      ],
      "ReallocationLogic": [
        61755
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        59085
      ],
      "SupplyLogic": [
        62052
      ],
      "SupplyToken": [
        63989
      ],
      "TickMath": [
        49233
      ],
      "Trade": [
        59677
      ],
      "TradeLogic": [
        62276
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        60196
      ],
      "UnsafeMath": [
        49249
      ],
      "VaultLib": [
        60351
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7030:55",
    "nodes": [
      {
        "id": 52794,
        "nodeType": "PragmaDirective",
        "src": "39:24:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 52795,
        "nodeType": "ImportDirective",
        "src": "65:56:55",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 43518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52796,
        "nodeType": "ImportDirective",
        "src": "122:66:55",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 48025,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52797,
        "nodeType": "ImportDirective",
        "src": "189:83:55",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 48039,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52799,
        "nodeType": "ImportDirective",
        "src": "273:92:55",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52798,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "281:14:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52800,
        "nodeType": "ImportDirective",
        "src": "366:37:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "./interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 53641,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52801,
        "nodeType": "ImportDirective",
        "src": "404:33:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IHooks.sol",
        "file": "./interfaces/IHooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 53465,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52802,
        "nodeType": "ImportDirective",
        "src": "438:38:55",
        "nodes": [],
        "absolutePath": "src/interfaces/ISettlement.sol",
        "file": "./interfaces/ISettlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 53656,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52803,
        "nodeType": "ImportDirective",
        "src": "477:30:55",
        "nodes": [],
        "absolutePath": "src/libraries/Perp.sol",
        "file": "./libraries/Perp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 56526,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52804,
        "nodeType": "ImportDirective",
        "src": "508:34:55",
        "nodes": [],
        "absolutePath": "src/libraries/VaultLib.sol",
        "file": "./libraries/VaultLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 60352,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52805,
        "nodeType": "ImportDirective",
        "src": "543:44:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/AddPairLogic.sol",
        "file": "./libraries/logic/AddPairLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 60983,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52806,
        "nodeType": "ImportDirective",
        "src": "588:48:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/LiquidationLogic.sol",
        "file": "./libraries/logic/LiquidationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 61476,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52807,
        "nodeType": "ImportDirective",
        "src": "637:49:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/ReallocationLogic.sol",
        "file": "./libraries/logic/ReallocationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 61756,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52808,
        "nodeType": "ImportDirective",
        "src": "687:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/SupplyLogic.sol",
        "file": "./libraries/logic/SupplyLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 62053,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52809,
        "nodeType": "ImportDirective",
        "src": "731:42:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/TradeLogic.sol",
        "file": "./libraries/logic/TradeLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 62277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52810,
        "nodeType": "ImportDirective",
        "src": "774:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/MarginLogic.sol",
        "file": "./libraries/logic/MarginLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 61602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 52812,
        "nodeType": "ImportDirective",
        "src": "818:57:55",
        "nodes": [],
        "absolutePath": "src/types/GlobalData.sol",
        "file": "./types/GlobalData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53306,
        "sourceUnit": 64307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52811,
              "name": "GlobalDataLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64306,
              "src": "826:17:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53305,
        "nodeType": "ContractDefinition",
        "src": "937:6131:55",
        "nodes": [
          {
            "id": 52821,
            "nodeType": "UsingForDirective",
            "src": "1000:57:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 52818,
              "name": "GlobalDataLibrary",
              "nameLocations": [
                "1006:17:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64306,
              "src": "1006:17:55"
            },
            "typeName": {
              "id": 52820,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52819,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1028:17:55",
                  "1046:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64021,
                "src": "1028:28:55"
              },
              "referencedDeclaration": 64021,
              "src": "1028:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$64021_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            }
          },
          {
            "id": 52825,
            "nodeType": "UsingForDirective",
            "src": "1062:51:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 52822,
              "name": "LockDataLibrary",
              "nameLocations": [
                "1068:15:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64319,
              "src": "1068:15:55"
            },
            "typeName": {
              "id": 52824,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52823,
                "name": "LockDataLibrary.LockData",
                "nameLocations": [
                  "1088:15:55",
                  "1104:8:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64318,
                "src": "1088:24:55"
              },
              "referencedDeclaration": 64318,
              "src": "1088:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LockData_$64318_storage_ptr",
                "typeString": "struct LockDataLibrary.LockData"
              }
            }
          },
          {
            "id": 52829,
            "nodeType": "UsingForDirective",
            "src": "1118:48:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 52826,
              "name": "VaultLib",
              "nameLocations": [
                "1124:8:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60351,
              "src": "1124:8:55"
            },
            "typeName": {
              "id": 52828,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52827,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1137:17:55",
                  "1155:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64021,
                "src": "1137:28:55"
              },
              "referencedDeclaration": 64021,
              "src": "1137:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$64021_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            }
          },
          {
            "id": 52832,
            "nodeType": "VariableDeclaration",
            "src": "1172:46:55",
            "nodes": [],
            "constant": false,
            "functionSelector": "613ce410",
            "mutability": "mutable",
            "name": "globalData",
            "nameLocation": "1208:10:55",
            "scope": 53305,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
              "typeString": "struct GlobalDataLibrary.GlobalData"
            },
            "typeName": {
              "id": 52831,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52830,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1172:17:55",
                  "1190:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64021,
                "src": "1172:28:55"
              },
              "referencedDeclaration": 64021,
              "src": "1172:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$64021_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            },
            "visibility": "public"
          },
          {
            "id": 52836,
            "nodeType": "VariableDeclaration",
            "src": "1225:51:55",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3eb8cd8",
            "mutability": "mutable",
            "name": "allowedUniswapPools",
            "nameLocation": "1257:19:55",
            "scope": 53305,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 52835,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 52833,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1233:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1225:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 52834,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1244:4:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 52855,
            "nodeType": "ModifierDefinition",
            "src": "1283:154:55",
            "nodes": [],
            "body": {
              "id": 52854,
              "nodeType": "Block",
              "src": "1307:130:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    52839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52839,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "1325:6:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 52854,
                      "src": "1317:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 52838,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1317:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52843,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 52840,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "1334:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 52841,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1345:8:55",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64020,
                      "src": "1334:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockData_$64318_storage",
                        "typeString": "struct LockDataLibrary.LockData storage ref"
                      }
                    },
                    "id": 52842,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1354:6:55",
                    "memberName": "locker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64311,
                    "src": "1334:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1317:43:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 52847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 52844,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1374:3:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1378:6:55",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1374:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 52846,
                      "name": "locker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52839,
                      "src": "1388:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1374:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52852,
                  "nodeType": "IfStatement",
                  "src": "1370:49:55",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 52849,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52839,
                          "src": "1412:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 52848,
                        "name": "LockedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53487,
                        "src": "1403:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 52850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1403:16:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 52851,
                    "nodeType": "RevertStatement",
                    "src": "1396:23:55"
                  }
                },
                {
                  "id": 52853,
                  "nodeType": "PlaceholderStatement",
                  "src": "1429:1:55"
                }
              ]
            },
            "name": "onlyByLocker",
            "nameLocation": "1292:12:55",
            "parameters": {
              "id": 52837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:2:55"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 52873,
            "nodeType": "FunctionDefinition",
            "src": "1443:150:55",
            "nodes": [],
            "body": {
              "id": 52872,
              "nodeType": "Block",
              "src": "1479:114:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 52864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 52860,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "1489:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 52862,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1500:14:55",
                      "memberName": "uniswapFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64002,
                      "src": "1489:25:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52863,
                      "name": "uniswapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52857,
                      "src": "1517:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1489:42:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 52865,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:42:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52869,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "1575:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      ],
                      "expression": {
                        "id": 52866,
                        "name": "AddPairLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60982,
                        "src": "1541:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddPairLogic_$60982_$",
                          "typeString": "type(library AddPairLogic)"
                        }
                      },
                      "id": 52868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1554:20:55",
                      "memberName": "initializeGlobalData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60448,
                      "src": "1541:33:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer)"
                      }
                    },
                    "id": 52870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:45:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52871,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:45:55"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52857,
                  "mutability": "mutable",
                  "name": "uniswapFactory",
                  "nameLocation": "1463:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52873,
                  "src": "1455:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1454:24:55"
            },
            "returnParameters": {
              "id": 52859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:0:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52932,
            "nodeType": "FunctionDefinition",
            "src": "1657:463:55",
            "nodes": [],
            "body": {
              "id": 52931,
              "nodeType": "Block",
              "src": "1756:364:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 52885,
                          "name": "allowedUniswapPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52836,
                          "src": "1774:19:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 52888,
                        "indexExpression": {
                          "expression": {
                            "id": 52886,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1794:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 52887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1798:6:55",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1794:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1774:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 52884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1766:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:40:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52890,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:40:55"
                },
                {
                  "assignments": [
                    52893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52893,
                      "mutability": "mutable",
                      "name": "uniswapPool",
                      "nameLocation": "1831:11:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 52931,
                      "src": "1816:26:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 52892,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 52891,
                          "name": "IUniswapV3Pool",
                          "nameLocations": [
                            "1816:14:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 48024,
                          "src": "1816:14:55"
                        },
                        "referencedDeclaration": 48024,
                        "src": "1816:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52898,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52895,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1860:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 52896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1864:6:55",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1860:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 52894,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48024,
                      "src": "1845:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$48024_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 52897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:26:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1816:55:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52899,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52876,
                      "src": "1885:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 52900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1895:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1885:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52914,
                  "nodeType": "IfStatement",
                  "src": "1881:112:55",
                  "trueBody": {
                    "id": 52913,
                    "nodeType": "Block",
                    "src": "1898:95:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 52905,
                                  "name": "uniswapPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52893,
                                  "src": "1940:11:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                                    "typeString": "contract IUniswapV3Pool"
                                  }
                                },
                                "id": 52906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1952:6:55",
                                "memberName": "token0",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48341,
                                "src": "1940:18:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 52907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1940:20:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 52908,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1962:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 52909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1966:6:55",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1962:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52910,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52876,
                              "src": "1974:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 52902,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "1912:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 52904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1927:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "1912:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 52911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:70:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52912,
                        "nodeType": "ExpressionStatement",
                        "src": "1912:70:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 52915,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52878,
                      "src": "2006:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 52916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2016:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2006:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52930,
                  "nodeType": "IfStatement",
                  "src": "2002:112:55",
                  "trueBody": {
                    "id": 52929,
                    "nodeType": "Block",
                    "src": "2019:95:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 52921,
                                  "name": "uniswapPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52893,
                                  "src": "2061:11:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                                    "typeString": "contract IUniswapV3Pool"
                                  }
                                },
                                "id": 52922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2073:6:55",
                                "memberName": "token1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48347,
                                "src": "2061:18:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 52923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2061:20:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 52924,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2083:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 52925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2087:6:55",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2083:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 52926,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52878,
                              "src": "2095:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 52918,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "2033:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 52920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2048:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "2033:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 52927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2033:70:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52928,
                        "nodeType": "ExpressionStatement",
                        "src": "2033:70:55"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              48037
            ],
            "documentation": {
              "id": 52874,
              "nodeType": "StructuredDocumentation",
              "src": "1599:53:55",
              "text": " @dev Callback for Uniswap V3 pool."
            },
            "functionSelector": "d3487997",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3MintCallback",
            "nameLocation": "1666:21:55",
            "overrides": {
              "id": 52882,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1747:8:55"
            },
            "parameters": {
              "id": 52881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52876,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1696:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52932,
                  "src": "1688:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52878,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1713:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52932,
                  "src": "1705:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52932,
                  "src": "1722:14:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52879,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:50:55"
            },
            "returnParameters": {
              "id": 52883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52949,
            "nodeType": "FunctionDefinition",
            "src": "2259:188:55",
            "nodes": [],
            "body": {
              "id": 52948,
              "nodeType": "Block",
              "src": "2356:91:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52943,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "2394:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 52944,
                        "name": "allowedUniswapPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52836,
                        "src": "2406:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      {
                        "id": 52945,
                        "name": "addPairParam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52936,
                        "src": "2427:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddPairParams_$60383_memory_ptr",
                          "typeString": "struct AddPairLogic.AddPairParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        {
                          "typeIdentifier": "t_struct$_AddPairParams_$60383_memory_ptr",
                          "typeString": "struct AddPairLogic.AddPairParams memory"
                        }
                      ],
                      "expression": {
                        "id": 52941,
                        "name": "AddPairLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60982,
                        "src": "2373:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddPairLogic_$60982_$",
                          "typeString": "type(library AddPairLogic)"
                        }
                      },
                      "id": 52942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2386:7:55",
                      "memberName": "addPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60579,
                      "src": "2373:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_mapping$_t_address_$_t_bool_$_$_t_struct$_AddPairParams_$60383_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,mapping(address => bool),struct AddPairLogic.AddPairParams memory) returns (uint256)"
                      }
                    },
                    "id": 52946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2373:67:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 52940,
                  "id": 52947,
                  "nodeType": "Return",
                  "src": "2366:74:55"
                }
              ]
            },
            "documentation": {
              "id": 52933,
              "nodeType": "StructuredDocumentation",
              "src": "2126:128:55",
              "text": " @notice Adds a new trading pair.\n @param addPairParam AddPairParams struct containing pair information."
            },
            "functionSelector": "3b39b99d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerPair",
            "nameLocation": "2268:12:55",
            "parameters": {
              "id": 52937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52936,
                  "mutability": "mutable",
                  "name": "addPairParam",
                  "nameLocation": "2315:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52949,
                  "src": "2281:46:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AddPairParams_$60383_memory_ptr",
                    "typeString": "struct AddPairLogic.AddPairParams"
                  },
                  "typeName": {
                    "id": 52935,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52934,
                      "name": "AddPairLogic.AddPairParams",
                      "nameLocations": [
                        "2281:12:55",
                        "2294:13:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60383,
                      "src": "2281:26:55"
                    },
                    "referencedDeclaration": 60383,
                    "src": "2281:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddPairParams_$60383_storage_ptr",
                      "typeString": "struct AddPairLogic.AddPairParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2280:48:55"
            },
            "returnParameters": {
              "id": 52940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52949,
                  "src": "2347:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:9:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52970,
            "nodeType": "FunctionDefinition",
            "src": "2523:230:55",
            "nodes": [],
            "body": {
              "id": 52969,
              "nodeType": "Block",
              "src": "2663:90:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52963,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "2699:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 52964,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52952,
                        "src": "2711:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52965,
                        "name": "supplyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52956,
                        "src": "2719:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52966,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52954,
                        "src": "2733:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52961,
                        "name": "SupplyLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62052,
                        "src": "2680:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SupplyLogic_$62052_$",
                          "typeString": "type(library SupplyLogic)"
                        }
                      },
                      "id": 52962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2692:6:55",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61873,
                      "src": "2680:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 52967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:66:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 52960,
                  "id": 52968,
                  "nodeType": "Return",
                  "src": "2673:73:55"
                }
              ]
            },
            "documentation": {
              "id": 52950,
              "nodeType": "StructuredDocumentation",
              "src": "2453:65:55",
              "text": " @notice Supplies liquidity to the lending pool"
            },
            "functionSelector": "db9d4a19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supply",
            "nameLocation": "2532:6:55",
            "parameters": {
              "id": 52957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52952,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "2547:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52970,
                  "src": "2539:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2539:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52954,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "2560:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52970,
                  "src": "2555:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52956,
                  "mutability": "mutable",
                  "name": "supplyAmount",
                  "nameLocation": "2582:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52970,
                  "src": "2574:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2538:57:55"
            },
            "returnParameters": {
              "id": 52960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52959,
                  "mutability": "mutable",
                  "name": "finalSuppliedAmount",
                  "nameLocation": "2638:19:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52970,
                  "src": "2630:27:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2629:29:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52993,
            "nodeType": "FunctionDefinition",
            "src": "2832:263:55",
            "nodes": [],
            "body": {
              "id": 52992,
              "nodeType": "Block",
              "src": "3001:94:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52986,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "3039:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 52987,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52973,
                        "src": "3051:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52988,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52977,
                        "src": "3059:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 52989,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52975,
                        "src": "3075:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 52984,
                        "name": "SupplyLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62052,
                        "src": "3018:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SupplyLogic_$62052_$",
                          "typeString": "type(library SupplyLogic)"
                        }
                      },
                      "id": 52985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3030:8:55",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61997,
                      "src": "3018:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 52990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:70:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 52983,
                  "id": 52991,
                  "nodeType": "Return",
                  "src": "3011:77:55"
                }
              ]
            },
            "documentation": {
              "id": 52971,
              "nodeType": "StructuredDocumentation",
              "src": "2759:68:55",
              "text": " @notice Withdraws liquidity from the lending pool"
            },
            "functionSelector": "7f223b4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2841:8:55",
            "parameters": {
              "id": 52978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52973,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "2858:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52993,
                  "src": "2850:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52975,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "2871:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52993,
                  "src": "2866:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 52974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52977,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "2893:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52993,
                  "src": "2885:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2885:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2849:59:55"
            },
            "returnParameters": {
              "id": 52983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52980,
                  "mutability": "mutable",
                  "name": "finalBurnAmount",
                  "nameLocation": "2951:15:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52993,
                  "src": "2943:23:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2943:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52982,
                  "mutability": "mutable",
                  "name": "finalWithdrawAmount",
                  "nameLocation": "2976:19:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 52993,
                  "src": "2968:27:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2968:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2942:54:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53012,
            "nodeType": "FunctionDefinition",
            "src": "3198:237:55",
            "nodes": [],
            "body": {
              "id": 53011,
              "nodeType": "Block",
              "src": "3347:88:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53006,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "3393:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53007,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52996,
                        "src": "3405:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53008,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52999,
                        "src": "3413:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53004,
                        "name": "ReallocationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61755,
                        "src": "3364:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReallocationLogic_$61755_$",
                          "typeString": "type(library ReallocationLogic)"
                        }
                      },
                      "id": 53005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3382:10:55",
                      "memberName": "reallocate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61754,
                      "src": "3364:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_struct$_SettlementData_$53647_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,struct ISettlement.SettlementData memory) returns (bool)"
                      }
                    },
                    "id": 53009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3364:64:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 53003,
                  "id": 53010,
                  "nodeType": "Return",
                  "src": "3357:71:55"
                }
              ]
            },
            "documentation": {
              "id": 52994,
              "nodeType": "StructuredDocumentation",
              "src": "3101:92:55",
              "text": " @notice Reallocated the range of concentrated liquidity provider position"
            },
            "functionSelector": "4e20a76e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reallocate",
            "nameLocation": "3207:10:55",
            "parameters": {
              "id": 53000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52996,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "3226:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53012,
                  "src": "3218:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52999,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3268:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53012,
                  "src": "3234:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 52998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52997,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3234:11:55",
                        "3246:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53647,
                      "src": "3234:26:55"
                    },
                    "referencedDeclaration": 53647,
                    "src": "3234:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$53647_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3217:66:55"
            },
            "returnParameters": {
              "id": 53003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53002,
                  "mutability": "mutable",
                  "name": "relocationOccurred",
                  "nameLocation": "3323:18:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53012,
                  "src": "3318:23:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3318:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3317:25:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53060,
            "nodeType": "FunctionDefinition",
            "src": "3700:449:55",
            "nodes": [],
            "body": {
              "id": 53059,
              "nodeType": "Block",
              "src": "3867:282:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53028,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53016,
                          "src": "3897:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53029,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3909:6:55",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53499,
                        "src": "3897:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53025,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "3877:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3888:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64067,
                      "src": "3877:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view"
                      }
                    },
                    "id": 53030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3877:39:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53031,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:39:55"
                },
                {
                  "assignments": [
                    53036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53036,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3950:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53059,
                      "src": "3927:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53035,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53034,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "3927:8:55",
                            "3936:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53959,
                          "src": "3927:14:55"
                        },
                        "referencedDeclaration": 53959,
                        "src": "3927:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53044,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53039,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53016,
                          "src": "3986:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53040,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3998:7:55",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53501,
                        "src": "3986:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 53041,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53016,
                          "src": "4007:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53042,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4019:6:55",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53499,
                        "src": "4007:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53037,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "3958:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53038,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3969:16:55",
                      "memberName": "createOrGetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60350,
                      "src": "3958:27:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Vault_$53959_storage_ptr_$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256) returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3927:99:55"
                },
                {
                  "expression": {
                    "id": 53050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 53045,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53016,
                        "src": "4037:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      "id": 53047,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4049:7:55",
                      "memberName": "vaultId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53501,
                      "src": "4037:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 53048,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53036,
                        "src": "4059:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                          "typeString": "struct DataType.Vault storage pointer"
                        }
                      },
                      "id": 53049,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4065:2:55",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53947,
                      "src": "4059:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4037:30:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53051,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:30:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53054,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "4102:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53055,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53016,
                        "src": "4114:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 53056,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53019,
                        "src": "4127:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53052,
                        "name": "TradeLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62276,
                        "src": "4085:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradeLogic_$62276_$",
                          "typeString": "type(library TradeLogic)"
                        }
                      },
                      "id": 53053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4096:5:55",
                      "memberName": "trade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62209,
                      "src": "4085:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_struct$_TradeParams_$53508_memory_ptr_$_t_struct$_SettlementData_$53647_memory_ptr_$returns$_t_struct$_TradeResult_$53524_memory_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 53057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4085:57:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$53524_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 53024,
                  "id": 53058,
                  "nodeType": "Return",
                  "src": "4078:64:55"
                }
              ]
            },
            "baseFunctions": [
              53556
            ],
            "documentation": {
              "id": 53013,
              "nodeType": "StructuredDocumentation",
              "src": "3441:254:55",
              "text": " @notice This function allows users to open or close perpetual future positions.\n @param tradeParams trade details\n @param settlementData byte data for settlement contract.\n @return tradeResult The result of the trade."
            },
            "functionSelector": "9b819b30",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trade",
            "nameLocation": "3709:5:55",
            "parameters": {
              "id": 53020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53016,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "3734:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53060,
                  "src": "3715:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$53508_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 53015,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53014,
                      "name": "TradeParams",
                      "nameLocations": [
                        "3715:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53508,
                      "src": "3715:11:55"
                    },
                    "referencedDeclaration": 53508,
                    "src": "3715:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$53508_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53019,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3781:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53060,
                  "src": "3747:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 53018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53017,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3747:11:55",
                        "3759:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53647,
                      "src": "3747:26:55"
                    },
                    "referencedDeclaration": 53647,
                    "src": "3747:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$53647_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3714:82:55"
            },
            "returnParameters": {
              "id": 53024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53023,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "3850:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53060,
                  "src": "3831:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$53524_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 53022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53021,
                      "name": "TradeResult",
                      "nameLocations": [
                        "3831:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53524,
                      "src": "3831:11:55"
                    },
                    "referencedDeclaration": 53524,
                    "src": "3831:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$53524_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3830:32:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53095,
            "nodeType": "FunctionDefinition",
            "src": "4155:271:55",
            "nodes": [],
            "body": {
              "id": 53094,
              "nodeType": "Block",
              "src": "4225:201:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53071,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "4258:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53094,
                      "src": "4235:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53069,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "4235:8:55",
                            "4244:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53959,
                          "src": "4235:14:55"
                        },
                        "referencedDeclaration": 53959,
                        "src": "4235:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53076,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53074,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53062,
                        "src": "4286:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53072,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "4266:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53073,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4277:8:55",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60235,
                      "src": "4266:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$returns$_t_struct$_Vault_$53959_storage_ptr_$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4266:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4235:59:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53077,
                      "name": "recepient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53064,
                      "src": "4309:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 53080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4330:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 53079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4322:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 53078,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4322:7:55",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 53081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4322:10:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4309:23:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53087,
                  "nodeType": "IfStatement",
                  "src": "4305:77:55",
                  "trueBody": {
                    "id": 53086,
                    "nodeType": "Block",
                    "src": "4334:48:55",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53083,
                            "name": "InvalidAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53495,
                            "src": "4355:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4355:16:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53085,
                        "nodeType": "RevertStatement",
                        "src": "4348:23:55"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 53088,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53071,
                        "src": "4392:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                          "typeString": "struct DataType.Vault storage pointer"
                        }
                      },
                      "id": 53090,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4398:9:55",
                      "memberName": "recepient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53953,
                      "src": "4392:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53091,
                      "name": "recepient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53064,
                      "src": "4410:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4392:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53093,
                  "nodeType": "ExpressionStatement",
                  "src": "4392:27:55"
                }
              ]
            },
            "baseFunctions": [
              53576
            ],
            "functionSelector": "ab4db360",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRecepient",
            "nameLocation": "4164:15:55",
            "parameters": {
              "id": 53065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53062,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4188:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53095,
                  "src": "4180:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53064,
                  "mutability": "mutable",
                  "name": "recepient",
                  "nameLocation": "4205:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53095,
                  "src": "4197:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4197:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4179:36:55"
            },
            "returnParameters": {
              "id": 53066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4225:0:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53118,
            "nodeType": "FunctionDefinition",
            "src": "4813:285:55",
            "nodes": [],
            "body": {
              "id": 53117,
              "nodeType": "Block",
              "src": "4999:99:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53111,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53098,
                        "src": "5043:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53112,
                        "name": "closeRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53100,
                        "src": "5052:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53113,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5064:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53114,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53103,
                        "src": "5076:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53109,
                        "name": "LiquidationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61475,
                        "src": "5016:16:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidationLogic_$61475_$",
                          "typeString": "type(library LiquidationLogic)"
                        }
                      },
                      "id": 53110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5033:9:55",
                      "memberName": "liquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61275,
                      "src": "5016:26:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_GlobalData_$64021_storage_ptr_$_t_struct$_SettlementData_$53647_memory_ptr_$returns$_t_struct$_TradeResult_$53524_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct GlobalDataLibrary.GlobalData storage pointer,struct ISettlement.SettlementData memory) returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 53115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:75:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$53524_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 53108,
                  "id": 53116,
                  "nodeType": "Return",
                  "src": "5009:82:55"
                }
              ]
            },
            "baseFunctions": [
              53569
            ],
            "documentation": {
              "id": 53096,
              "nodeType": "StructuredDocumentation",
              "src": "4432:376:55",
              "text": " @notice Executes a liquidation call to close an unsafe vault.\n @param vaultId The identifier of the vault to be liquidated.\n @param closeRatio The ratio at which the position will be closed.\n @param settlementData SettlementData struct for trade settlement.\n @return tradeResult TradeResult struct with the result of the liquidation."
            },
            "functionSelector": "91d0370f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "4822:19:55",
            "parameters": {
              "id": 53104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53098,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4850:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53118,
                  "src": "4842:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4842:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53100,
                  "mutability": "mutable",
                  "name": "closeRatio",
                  "nameLocation": "4867:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53118,
                  "src": "4859:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53103,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "4913:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53118,
                  "src": "4879:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$53647_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 53102,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53101,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "4879:11:55",
                        "4891:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53647,
                      "src": "4879:26:55"
                    },
                    "referencedDeclaration": 53647,
                    "src": "4879:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$53647_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4841:87:55"
            },
            "returnParameters": {
              "id": 53108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53107,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "4982:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53118,
                  "src": "4963:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$53524_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 53106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53105,
                      "name": "TradeResult",
                      "nameLocations": [
                        "4963:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53524,
                      "src": "4963:11:55"
                    },
                    "referencedDeclaration": 53524,
                    "src": "4963:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$53524_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4962:32:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53139,
            "nodeType": "FunctionDefinition",
            "src": "5195:141:55",
            "nodes": [],
            "body": {
              "id": 53138,
              "nodeType": "Block",
              "src": "5278:58:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53133,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53121,
                        "src": "5304:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 53134,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53123,
                        "src": "5318:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53135,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53125,
                        "src": "5322:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53130,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5288:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5299:4:55",
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64206,
                      "src": "5288:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_bool_$_t_address_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,bool,address,uint256)"
                      }
                    },
                    "id": 53136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5288:41:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53137,
                  "nodeType": "ExpressionStatement",
                  "src": "5288:41:55"
                }
              ]
            },
            "baseFunctions": [
              53585
            ],
            "documentation": {
              "id": 53119,
              "nodeType": "StructuredDocumentation",
              "src": "5104:86:55",
              "text": " @notice Takes tokens\n @dev Only locker can call this function"
            },
            "functionSelector": "c6b6d340",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 53128,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53127,
                  "name": "onlyByLocker",
                  "nameLocations": [
                    "5265:12:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52855,
                  "src": "5265:12:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "5265:12:55"
              }
            ],
            "name": "take",
            "nameLocation": "5204:4:55",
            "parameters": {
              "id": 53126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53121,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "5214:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53139,
                  "src": "5209:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53120,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5209:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53123,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5236:2:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53139,
                  "src": "5228:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53125,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5248:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53139,
                  "src": "5240:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5240:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5208:47:55"
            },
            "returnParameters": {
              "id": 53129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5278:0:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53162,
            "nodeType": "FunctionDefinition",
            "src": "5484:184:55",
            "nodes": [],
            "body": {
              "id": 53161,
              "nodeType": "Block",
              "src": "5553:115:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53150,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53142,
                        "src": "5583:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53147,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5563:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53149,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5574:8:55",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60235,
                      "src": "5563:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$returns$_t_struct$_Vault_$53959_storage_ptr_$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5563:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "id": 53152,
                  "nodeType": "ExpressionStatement",
                  "src": "5563:28:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53156,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5627:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53157,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53142,
                        "src": "5639:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53158,
                        "name": "marginAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53144,
                        "src": "5648:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 53153,
                        "name": "MarginLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61601,
                        "src": "5602:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarginLogic_$61601_$",
                          "typeString": "type(library MarginLogic)"
                        }
                      },
                      "id": 53155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5614:12:55",
                      "memberName": "updateMargin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61600,
                      "src": "5602:24:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,int256)"
                      }
                    },
                    "id": 53159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5602:59:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53160,
                  "nodeType": "ExpressionStatement",
                  "src": "5602:59:55"
                }
              ]
            },
            "baseFunctions": [
              53592
            ],
            "documentation": {
              "id": 53140,
              "nodeType": "StructuredDocumentation",
              "src": "5342:137:55",
              "text": " @notice Deposits margin to the vault or withdraws margin from the vault\n @dev Only locker can call this function"
            },
            "functionSelector": "5393e780",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMargin",
            "nameLocation": "5493:12:55",
            "parameters": {
              "id": 53145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53142,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "5514:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53162,
                  "src": "5506:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53144,
                  "mutability": "mutable",
                  "name": "marginAmount",
                  "nameLocation": "5530:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53162,
                  "src": "5523:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 53143,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5523:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5505:38:55"
            },
            "returnParameters": {
              "id": 53146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5553:0:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53192,
            "nodeType": "FunctionDefinition",
            "src": "5674:237:55",
            "nodes": [],
            "body": {
              "id": 53191,
              "nodeType": "Block",
              "src": "5755:156:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53174,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53166,
                        "src": "5785:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53171,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5765:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5776:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64067,
                      "src": "5765:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view"
                      }
                    },
                    "id": 53175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5765:27:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53176,
                  "nodeType": "ExpressionStatement",
                  "src": "5765:27:55"
                },
                {
                  "assignments": [
                    53181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53181,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "5826:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53191,
                      "src": "5803:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53179,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "5803:8:55",
                            "5812:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53959,
                          "src": "5803:14:55"
                        },
                        "referencedDeclaration": 53959,
                        "src": "5803:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53187,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53184,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53164,
                        "src": "5862:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53185,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53166,
                        "src": "5871:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53182,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "5834:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5845:16:55",
                      "memberName": "createOrGetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60350,
                      "src": "5834:27:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$64021_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Vault_$53959_storage_ptr_$attached_to$_t_struct$_GlobalData_$64021_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256) returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5834:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5803:75:55"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 53188,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53181,
                      "src": "5896:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                        "typeString": "struct DataType.Vault storage pointer"
                      }
                    },
                    "id": 53189,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5902:2:55",
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53947,
                    "src": "5896:8:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53170,
                  "id": 53190,
                  "nodeType": "Return",
                  "src": "5889:15:55"
                }
              ]
            },
            "baseFunctions": [
              53601
            ],
            "functionSelector": "e5fbab85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "5683:11:55",
            "parameters": {
              "id": 53167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53164,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "5703:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53192,
                  "src": "5695:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5695:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53166,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "5720:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53192,
                  "src": "5712:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5712:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5694:33:55"
            },
            "returnParameters": {
              "id": 53170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53192,
                  "src": "5746:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5745:9:55"
            },
            "scope": 53305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53218,
            "nodeType": "FunctionDefinition",
            "src": "5917:271:55",
            "nodes": [],
            "body": {
              "id": 53217,
              "nodeType": "Block",
              "src": "5987:201:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 53203,
                                    "name": "globalData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52832,
                                    "src": "6067:10:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                                      "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                                    }
                                  },
                                  "id": 53204,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6078:5:55",
                                  "memberName": "pairs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 64007,
                                  "src": "6067:16:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$54123_storage_$",
                                    "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                                  }
                                },
                                "id": 53206,
                                "indexExpression": {
                                  "id": 53205,
                                  "name": "pairId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53194,
                                  "src": "6084:6:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6067:24:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                                  "typeString": "struct Perp.PairStatus storage ref"
                                }
                              },
                              "id": 53207,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6092:15:55",
                              "memberName": "sqrtAssetStatus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54114,
                              "src": "6067:40:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SqrtPerpAssetStatus_$54210_storage",
                                "typeString": "struct Perp.SqrtPerpAssetStatus storage ref"
                              }
                            },
                            "id": 53208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6108:11:55",
                            "memberName": "uniswapPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54175,
                            "src": "6067:52:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53201,
                            "name": "UniHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60196,
                            "src": "6044:9:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UniHelper_$60196_$",
                              "typeString": "type(library UniHelper)"
                            }
                          },
                          "id": 53202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6054:12:55",
                          "memberName": "getSqrtPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59704,
                          "src": "6044:22:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint160_$",
                            "typeString": "function (address) view returns (uint160)"
                          }
                        },
                        "id": 53209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6044:76:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 53210,
                              "name": "globalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52832,
                              "src": "6134:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                                "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                              }
                            },
                            "id": 53211,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6145:5:55",
                            "memberName": "pairs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64007,
                            "src": "6134:16:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$54123_storage_$",
                              "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                            }
                          },
                          "id": 53213,
                          "indexExpression": {
                            "id": 53212,
                            "name": "pairId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53194,
                            "src": "6151:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6134:24:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                            "typeString": "struct Perp.PairStatus storage ref"
                          }
                        },
                        "id": 53214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6159:12:55",
                        "memberName": "isMarginZero",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54118,
                        "src": "6134:37:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53199,
                        "name": "UniHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60196,
                        "src": "6004:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniHelper_$60196_$",
                          "typeString": "type(library UniHelper)"
                        }
                      },
                      "id": 53200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6014:16:55",
                      "memberName": "convertSqrtPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59752,
                      "src": "6004:26:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_bool_$returns$_t_uint160_$",
                        "typeString": "function (uint160,bool) pure returns (uint160)"
                      }
                    },
                    "id": 53215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6004:177:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "functionReturnParameters": 53198,
                  "id": 53216,
                  "nodeType": "Return",
                  "src": "5997:184:55"
                }
              ]
            },
            "baseFunctions": [
              53608
            ],
            "functionSelector": "18e80749",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSqrtPrice",
            "nameLocation": "5926:12:55",
            "parameters": {
              "id": 53195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53194,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "5947:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53218,
                  "src": "5939:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5939:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5938:16:55"
            },
            "returnParameters": {
              "id": 53198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53218,
                  "src": "5978:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 53196,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:9:55"
            },
            "scope": 53305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53234,
            "nodeType": "FunctionDefinition",
            "src": "6194:161:55",
            "nodes": [],
            "body": {
              "id": 53233,
              "nodeType": "Block",
              "src": "6269:86:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 53227,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52832,
                            "src": "6323:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 53228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6334:5:55",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64007,
                          "src": "6323:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$54123_storage_$",
                            "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                          }
                        },
                        "id": 53230,
                        "indexExpression": {
                          "id": 53229,
                          "name": "pairId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53220,
                          "src": "6340:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6323:24:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      ],
                      "expression": {
                        "id": 53225,
                        "name": "PositionCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57771,
                        "src": "6286:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionCalculator_$57771_$",
                          "typeString": "type(library PositionCalculator)"
                        }
                      },
                      "id": 53226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6305:17:55",
                      "memberName": "getSqrtIndexPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57445,
                      "src": "6286:36:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PairStatus_$54123_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Perp.PairStatus memory) view returns (uint256)"
                      }
                    },
                    "id": 53231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6286:62:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53224,
                  "id": 53232,
                  "nodeType": "Return",
                  "src": "6279:69:55"
                }
              ]
            },
            "baseFunctions": [
              53615
            ],
            "functionSelector": "acfcd9fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSqrtIndexPrice",
            "nameLocation": "6203:17:55",
            "parameters": {
              "id": 53221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53220,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "6229:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53234,
                  "src": "6221:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6221:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6220:16:55"
            },
            "returnParameters": {
              "id": 53224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53234,
                  "src": "6260:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6260:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6259:9:55"
            },
            "scope": 53305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53248,
            "nodeType": "FunctionDefinition",
            "src": "6361:134:55",
            "nodes": [],
            "body": {
              "id": 53247,
              "nodeType": "Block",
              "src": "6447:48:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 53242,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "6464:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6475:5:55",
                      "memberName": "pairs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64007,
                      "src": "6464:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$54123_storage_$",
                        "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                      }
                    },
                    "id": 53245,
                    "indexExpression": {
                      "id": 53244,
                      "name": "pairId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53236,
                      "src": "6481:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6464:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                      "typeString": "struct Perp.PairStatus storage ref"
                    }
                  },
                  "functionReturnParameters": 53241,
                  "id": 53246,
                  "nodeType": "Return",
                  "src": "6457:31:55"
                }
              ]
            },
            "baseFunctions": [
              53639
            ],
            "functionSelector": "c92af3ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairStatus",
            "nameLocation": "6370:13:55",
            "parameters": {
              "id": 53237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53236,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "6392:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "6384:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6384:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6383:16:55"
            },
            "returnParameters": {
              "id": 53241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53248,
                  "src": "6423:22:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PairStatus_$54123_memory_ptr",
                    "typeString": "struct Perp.PairStatus"
                  },
                  "typeName": {
                    "id": 53239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53238,
                      "name": "Perp.PairStatus",
                      "nameLocations": [
                        "6423:4:55",
                        "6428:10:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54123,
                      "src": "6423:15:55"
                    },
                    "referencedDeclaration": 54123,
                    "src": "6423:15:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$54123_storage_ptr",
                      "typeString": "struct Perp.PairStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6422:24:55"
            },
            "scope": 53305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53262,
            "nodeType": "FunctionDefinition",
            "src": "6501:131:55",
            "nodes": [],
            "body": {
              "id": 53261,
              "nodeType": "Block",
              "src": "6582:50:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 53256,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52832,
                        "src": "6599:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6610:6:55",
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64017,
                      "src": "6599:17:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$53959_storage_$",
                        "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                      }
                    },
                    "id": 53259,
                    "indexExpression": {
                      "id": 53258,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53250,
                      "src": "6617:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6599:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage",
                      "typeString": "struct DataType.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 53255,
                  "id": 53260,
                  "nodeType": "Return",
                  "src": "6592:33:55"
                }
              ]
            },
            "baseFunctions": [
              53623
            ],
            "functionSelector": "9403b634",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "6510:8:55",
            "parameters": {
              "id": 53251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53250,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "6527:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53262,
                  "src": "6519:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6519:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:17:55"
            },
            "returnParameters": {
              "id": 53255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53254,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53262,
                  "src": "6559:21:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$53959_memory_ptr",
                    "typeString": "struct DataType.Vault"
                  },
                  "typeName": {
                    "id": 53253,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53252,
                      "name": "DataType.Vault",
                      "nameLocations": [
                        "6559:8:55",
                        "6568:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53959,
                      "src": "6559:14:55"
                    },
                    "referencedDeclaration": 53959,
                    "src": "6559:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$53959_storage_ptr",
                      "typeString": "struct DataType.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6558:23:55"
            },
            "scope": 53305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53304,
            "nodeType": "FunctionDefinition",
            "src": "6638:428:55",
            "nodes": [],
            "body": {
              "id": 53303,
              "nodeType": "Block",
              "src": "6722:344:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53271,
                      "mutability": "mutable",
                      "name": "pairId",
                      "nameLocation": "6740:6:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53303,
                      "src": "6732:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6732:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53278,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "id": 53272,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52832,
                            "src": "6749:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 53273,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6760:6:55",
                          "memberName": "vaults",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64017,
                          "src": "6749:17:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$53959_storage_$",
                            "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                          }
                        },
                        "id": 53275,
                        "indexExpression": {
                          "id": 53274,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53264,
                          "src": "6767:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6749:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      },
                      "id": 53276,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6776:12:55",
                      "memberName": "openPosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53958,
                      "src": "6749:39:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStatus_$54231_storage",
                        "typeString": "struct Perp.UserStatus storage ref"
                      }
                    },
                    "id": 53277,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6789:6:55",
                    "memberName": "pairId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54212,
                    "src": "6749:46:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6732:63:55"
                },
                {
                  "assignments": [
                    53280,
                    53282,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53280,
                      "mutability": "mutable",
                      "name": "minMargin",
                      "nameLocation": "6814:9:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53303,
                      "src": "6807:16:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 53279,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6807:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53282,
                      "mutability": "mutable",
                      "name": "vaultValue",
                      "nameLocation": "6832:10:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53303,
                      "src": "6825:17:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 53281,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6825:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 53296,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 53285,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52832,
                            "src": "6900:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 53286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6911:5:55",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64007,
                          "src": "6900:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$54123_storage_$",
                            "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                          }
                        },
                        "id": 53288,
                        "indexExpression": {
                          "id": 53287,
                          "name": "pairId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53271,
                          "src": "6917:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6900:24:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 53289,
                          "name": "globalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52832,
                          "src": "6926:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                            "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                          }
                        },
                        "id": 53290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6937:23:55",
                        "memberName": "rebalanceFeeGrowthCache",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64012,
                        "src": "6926:34:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$53964_storage_$",
                          "typeString": "mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref)"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 53291,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52832,
                            "src": "6962:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$64021_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 53292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6973:6:55",
                          "memberName": "vaults",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64017,
                          "src": "6962:17:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$53959_storage_$",
                            "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                          }
                        },
                        "id": 53294,
                        "indexExpression": {
                          "id": 53293,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53264,
                          "src": "6980:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6962:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PairStatus_$54123_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$53964_storage_$",
                          "typeString": "mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref)"
                        },
                        {
                          "typeIdentifier": "t_struct$_Vault_$53959_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      ],
                      "expression": {
                        "id": 53283,
                        "name": "PositionCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57771,
                        "src": "6848:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionCalculator_$57771_$",
                          "typeString": "type(library PositionCalculator)"
                        }
                      },
                      "id": 53284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6867:19:55",
                      "memberName": "calculateMinDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57296,
                      "src": "6848:38:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PairStatus_$54123_memory_ptr_$_t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$53964_storage_$_$_t_struct$_Vault_$53959_memory_ptr_$returns$_t_int256_$_t_int256_$_t_bool_$_t_uint256_$",
                        "typeString": "function (struct Perp.PairStatus memory,mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref),struct DataType.Vault memory) view returns (int256,int256,bool,uint256)"
                      }
                    },
                    "id": 53295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6848:150:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(int256,int256,bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6806:192:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53298,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53264,
                        "src": "7028:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53299,
                        "name": "vaultValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53282,
                        "src": "7037:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 53300,
                        "name": "minMargin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53280,
                        "src": "7049:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 53297,
                      "name": "VaultStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53544,
                      "src": "7016:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_VaultStatus_$53544_storage_ptr_$",
                        "typeString": "type(struct IPredyPool.VaultStatus storage pointer)"
                      }
                    },
                    "id": 53301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7016:43:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$53544_memory_ptr",
                      "typeString": "struct IPredyPool.VaultStatus memory"
                    }
                  },
                  "functionReturnParameters": 53269,
                  "id": 53302,
                  "nodeType": "Return",
                  "src": "7009:50:55"
                }
              ]
            },
            "baseFunctions": [
              53631
            ],
            "functionSelector": "49ebb77d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultStatus",
            "nameLocation": "6647:14:55",
            "parameters": {
              "id": 53265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53264,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "6670:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53304,
                  "src": "6662:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6662:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6661:17:55"
            },
            "returnParameters": {
              "id": 53269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53304,
                  "src": "6702:18:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultStatus_$53544_memory_ptr",
                    "typeString": "struct IPredyPool.VaultStatus"
                  },
                  "typeName": {
                    "id": 53267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53266,
                      "name": "VaultStatus",
                      "nameLocations": [
                        "6702:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 53544,
                      "src": "6702:11:55"
                    },
                    "referencedDeclaration": 53544,
                    "src": "6702:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$53544_storage_ptr",
                      "typeString": "struct IPredyPool.VaultStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6701:20:55"
            },
            "scope": 53305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 52814,
              "name": "IPredyPool",
              "nameLocations": [
                "959:10:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53640,
              "src": "959:10:55"
            },
            "id": 52815,
            "nodeType": "InheritanceSpecifier",
            "src": "959:10:55"
          },
          {
            "baseName": {
              "id": 52816,
              "name": "IUniswapV3MintCallback",
              "nameLocations": [
                "971:22:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48038,
              "src": "971:22:55"
            },
            "id": 52817,
            "nodeType": "InheritanceSpecifier",
            "src": "971:22:55"
          }
        ],
        "canonicalName": "PredyPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 52813,
          "nodeType": "StructuredDocumentation",
          "src": "877:59:55",
          "text": " @notice Holds the state for all pairs and vaults"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53305,
          48038,
          53640
        ],
        "name": "PredyPool",
        "nameLocation": "946:9:55",
        "scope": 53306,
        "usedErrors": [
          48692,
          53487,
          53489,
          53491,
          53493,
          53495,
          53497,
          60202,
          60204,
          60206
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 55
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "uniswapFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotVaultOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyNotSettled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPairId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        }
      ],
      "name": "LockedBy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "T",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultAlreadyHasAnotherMarginId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultAlreadyHasAnotherPair",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultIsNotDanger",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedUniswapPools",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closeRatio",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "execLiquidationCall",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getPairStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "quotePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "basePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "riskRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rangeSize",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceThreshold",
                  "type": "int24"
                }
              ],
              "internalType": "struct Perp.AssetRiskParams",
              "name": "riskParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "uniswapPool",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint64",
                  "name": "numRebalance",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRebalanceTotalSquartAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee1Growth",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionUnderlying",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionStable",
                  "type": "tuple"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthStable",
                  "type": "int256"
                }
              ],
              "internalType": "struct Perp.SqrtPerpAssetStatus",
              "name": "sqrtAssetStatus",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isMarginZero",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "feeRatio",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Perp.PairStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getPositionWithUnrealizedFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "amountStable",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amountSqrt",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amountUnderlying",
              "type": "int256"
            }
          ],
          "internalType": "struct PositionCalculator.PositionParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getSqrtIndexPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "getSqrtPrice",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recepient",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "margin",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceLastTickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceLastTickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint64",
                  "name": "lastNumRebalance",
                  "type": "uint64"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "entryValue",
                      "type": "int256"
                    }
                  ],
                  "internalType": "struct Perp.PositionStatus",
                  "name": "perp",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "amount",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "entryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "quoteRebalanceEntryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "baseRebalanceEntryValue",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "entryTradeFee0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "entryTradeFee1",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Perp.SqrtPositionStatus",
                  "name": "sqrtPerp",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "underlying",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "stable",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Perp.UserStatus",
              "name": "openPosition",
              "type": "tuple"
            }
          ],
          "internalType": "struct DataType.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVaultStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "vaultValue",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            }
          ],
          "internalType": "struct IPredyPool.VaultStatus",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pairsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "uniswapFactory",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "locker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quoteReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "internalType": "struct LockDataLibrary.LockData",
          "name": "lockData",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "reallocate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "relocationOccurred",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "uniswapPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "fee",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "riskRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rangeSize",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceThreshold",
                  "type": "int24"
                }
              ],
              "internalType": "struct Perp.AssetRiskParams",
              "name": "assetRiskParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "baseRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "kinkRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope2",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InterestRateModel.IRMParams",
              "name": "stableIrmParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "baseRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "kinkRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slope2",
                  "type": "uint256"
                }
              ],
              "internalType": "struct InterestRateModel.IRMParams",
              "name": "underlyingIrmParams",
              "type": "tuple"
            }
          ],
          "internalType": "struct AddPairLogic.AddPairParams",
          "name": "addPairParam",
          "type": "tuple"
        }
      ],
      "name": "registerPair",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "revertPairStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "revertVaultStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "supplyAmount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "finalSuppliedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "take",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "trade",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3MintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "marginAmount",
          "type": "int256"
        }
      ],
      "name": "updateMargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recepient",
          "type": "address"
        }
      ],
      "name": "updateRecepient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isQuoteAsset",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "finalBurnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalWithdrawAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162004971380380620049718339810160408190526200003491620000bb565b600280546001600160a01b0319166001600160a01b03831617905560405163743b521360e11b81526000600482015273__$95910b7b93a5208ca27f4262a74795a535$__9063e876a4269060240160006040518083038186803b1580156200009b57600080fd5b505af4158015620000b0573d6000803e3d6000fd5b5050505050620000ed565b600060208284031215620000ce57600080fd5b81516001600160a01b0381168114620000e657600080fd5b9392505050565b61487480620000fd6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806391d0370f116100b8578063acfcd9fd1161007c578063acfcd9fd146103dd578063c6b6d340146103f0578063c92af3ec14610403578063d348799714610423578063db9d4a1914610436578063f3eb8cd81461044957600080fd5b806391d0370f146102f45780639403b634146103845780639abbdf4b146103a45780639b819b30146103b7578063ab4db360146103ca57600080fd5b80634e20a76e116100ff5780634e20a76e146101ea5780635393e7801461020d578063613ce410146102205780637f223b4c146102b95780639174e1a1146102e157600080fd5b806318e807491461013c5780631daf2c191461016c578063360125f1146101815780633b39b99d1461019457806349ebb77d146101b5575b600080fd5b61014f61014a366004613686565b61046c565b6040516001600160a01b0390911681526020015b60405180910390f35b61017f61017a366004613686565b6104bb565b005b61017f61018f366004613686565b610529565b6101a76101a2366004613893565b610568565b604051908152602001610163565b6101c86101c3366004613686565b6105e8565b6040805182518152602080840151908201529181015190820152606001610163565b6101fd6101f8366004613a24565b610d53565b6040519015158152602001610163565b61017f61021b366004613a6a565b610dd9565b600054600154600254604080516080810182526006546001600160a01b039081168252600754602083015260085492820192909252600954606082015261026b949392919091169084565b604080519485526020808601949094526001600160a01b039283168582015281519092166060808601919091529281015160808501529081015160a0840152015160c082015260e001610163565b6102cc6102c7366004613a9a565b610e5a565b60408051928352602083019190915201610163565b6101c86102ef366004613686565b610ef4565b610307610302366004613ad2565b610f99565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e085015285015161010084015284015161012083015283015161014082015291015161016082015261018001610163565b610397610392366004613686565b611029565b6040516101639190613b21565b6101a76103b2366004613686565b611182565b6103076103c5366004613c35565b6111a3565b61017f6103d8366004613ce4565b611215565b6101a76103eb366004613686565b61126e565b61017f6103fe366004613d14565b61157b565b610416610411366004613686565b6115ca565b6040516101639190613eec565b61017f610431366004613fd4565b6118da565b6101a7610444366004613a9a565b6119db565b6101fd610457366004614053565b600a6020526000908152604090205460ff1681565b6000818152600360205260408120602101546104b590610494906001600160a01b0316611a68565b600084815260036020526040902060320154600160a01b900460ff16611ad9565b92915050565b604051636e903d2560e11b8152600060048201526024810182905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063dd207a4a906044015b60006040518083038186803b15801561050e57600080fd5b505af4158015610522573d6000803e3d6000fd5b5050505050565b60405163919c1b6160e01b8152600060048201526024810182905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063919c1b61906044016104f6565b604051635641324160e11b815260009073__$95910b7b93a5208ca27f4262a74795a535$__9063ac826482906105a7908490600a908790600401614070565b602060405180830381865af41580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190614165565b61060c60405180606001604052806000815260200160008152602001600081525090565b6000806005016000848152602001908152602001600020600501600001549050600080610d306000600301600085815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601182016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601f8201604051806060016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81525050815260200160218201604051806102200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460020b60020b60020b81526020016001820160009054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201604051806040016040529081600082015481526020016001820154815250508152602001600d8201604051806040016040529081600082015481526020016001820154815250508152602001600f820154815260200160108201548152505081526020016032820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016032820160149054906101000a900460ff161515151581526020016032820160159054906101000a900460ff1660ff1660ff1681526020016033820154815250506000600401600060050160008981526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820160405180610100016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81526020016001820160069054906101000a90046001600160401b03166001600160401b03166001600160401b0316815260200160028201604051806040016040529081600082015481526020016001820154815250508152602001600482016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600a8201604051806040016040529081600082015481526020016001820154815250508152602001600c8201604051806040016040529081600082015481526020016001820154815250508152505081525050611b06565b505060408051606081018252978852602088019190915286015250929392505050565b60405163f78c1fb560e01b815260009073__$82e740bfb21403018c74028207d6b78a82$__9063f78c1fb590610d91908490879087906004016141f5565b602060405180830381865af4158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd2919061421d565b9392505050565b610de4600083611bad565b5060405163f66f5cc760e01b815260006004820152602481018390526044810182905273__$dce61b2ba8cb2bacc386287dc451d94595$__9063f66f5cc79060640160006040518083038186803b158015610e3e57600080fd5b505af4158015610e52573d6000803e3d6000fd5b505050505050565b604051633e16468d60e01b81526000600482018190526024820185905260448201839052831515606483015290819073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633e16468d906084016040805180830381865af4158015610ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee8919061423a565b91509150935093915050565b610f1860405180606001604052806000815260200160008152602001600081525090565b60405163315e381560e01b8152600060048201526024810183905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063315e381590604401606060405180830381865af4158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f93919061425e565b50919050565b610fa1613304565b60405163fe8473e160e01b815273__$a1fa80d38d689cae49e54718da49b6432c$__9063fe8473e190610fdf9087908790600090889060040161429a565b61018060405180830381865af4158015610ffd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102191906142c9565b949350505050565b611031613378565b50600090815260056020818152604092839020835160c080820186528254825260018301546001600160a01b039081168386015260028085015482168489015260038501549091166060808501919091526004850154608080860191909152885161010081018a52978601548852600686015480840b898901526301000000810490930b888a015266010000000000009092046001600160401b0316878201528751808901895260078601548152600886015481880152878301528751808401895260098601548152600a86015481880152600b860154818a0152600c86015491810191909152600d85015491810191909152600e84015460a0808301919091528087019190915286518088018852600f8501548152601085015481870152918601919091528551808701909652601183015486526012909201549285019290925260e08301939093529182015290565b600061118e8183611bea565b600061119b818085611c1a565b549392505050565b6111ab613304565b82516111b990600090611bea565b602083015183516000916111cf91839190611c1a565b8054602086015260405163010bcadf60e21b815290915073__$bc9f384c073b2381249378965b2d698cf3$__9063042f2b7c90610fdf9060009088908890600401614381565b60006112218184611bad565b90506001600160a01b03821661124a5760405163e6c4247b60e01b815260040160405180910390fd5b60030180546001600160a01b0319166001600160a01b039290921691909117905550565b6000818152600360208181526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060828101919091526009880154608080840191909152600a89015460a080850191909152848b019390935289518082018b52600b8a01548152600c8a0154818d0152600d8a0154818c0152600e8a01548184015284830152600f89015481850152601089015483850152818801939093528851808c018a5260118901548616815260128901548616818c01528951808d018b5260138a0154815260148a0154818d015260158a0154818c015260168a01548184015260178a01548186015260188a015481850152818b015289518085018b5260198a01548152601a8a0154818d0152601b8a0154818c0152601c8a01548184015281830152601d89015481850152601e890154818401528388015288518082018a52601f8901548152888b015480860b828d015263010000009004850b818b015282880152885161022081018a5260218901548087168252600160a01b808204870b838e0152600160b81b90910490950b818b015260228901546001600160401b0316918101919091526023880154928101929092526024870154908201526025860154818a0152602686015460e080830191909152602787015461010083810191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528951808b018b52602c8a01548152602d8a0154818d01526101a08501528951808b01909a52602e8901548a52602f8901549a8a019a909a526101c083019890985260308701546101e083015260318701546102008301529885015260328501549182169784019790975260ff9681048716151594830194909452600160a81b90930490941692840192909252603390910154908201526104b590611d53565b6006546001600160a01b03163381146115b7576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b6115c46000858585611dde565b50505050565b6115d26133ce565b50600090815260036020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160c08082018a529786015483168152600486015483168188015288518089018a52600587015481526006870154818901526007870154818b015260088701546060808301919091526009880154608080840191909152600a89015460a080850191909152848d01939093528b518082018d52600b8a01548152600c8a0154818c0152600d8a0154818e0152600e8a01548184015282850152600f89015481850152601089015483850152818801939093528a51808b018c5260118901548616815260128901548616818b01528b51808c018d5260138a0154815260148a0154818c015260158a0154818e015260168a01548184015260178a01548186015260188a015481850152818d01528b518085018d5260198a01548152601a8a0154818c0152601b8a0154818e0152601c8a01548184015281830152601d89015481850152601e89015481840152838801528a518082018c52601f8901548152888a015480860b828c015263010000009004850b818d0152828801528a5161022081018c5260218901548087168252600160a01b808204870b838d0152600160b81b90910490950b818d015260228901546001600160401b031691810191909152602388015492810192909252602487015490820152602586015481890152602686015460e080830191909152602787015461010080840191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528b51808d018d52602c8a01548152602d8a0154818c01526101a08501528b51808d01909c52602e8901548c52602f890154998c01999099526101c083019a909a5260308701546101e083015260318701546102008301529785015260328501549182169684019690965294850460ff908116151596830196909652600160a81b90940490941691840191909152603301549082015290565b336000908152600a602052604090205460ff166118f657600080fd5b33841561196957611969816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196291906143e0565b3387612185565b831561052257610522816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d491906143e0565b3386612185565b604051633ec463bf60e01b8152600060048201819052602482018590526044820183905283151560648301529073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633ec463bf90608401602060405180830381865af4158015611a44573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110219190614165565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acc919061440f565b5094979650505050505050565b60008115611aff57611af86001600160a01b038416600160c01b6144cd565b90506104b5565b50816104b5565b600080600080600080611b1889611d53565b9250611b3e8760800151611b318b8b8b60a0015161227e565b60a08c0151518690612316565b91975090955090925090506000611b6d620f4240611b5e846107d06144e1565b611b6891906144cd565b612394565b905080611b7a84886144f8565b611b849190614518565b9650848015611b955750620f424087125b15611ba157620f424096505b50505093509350935093565b6000818152600583016020526040902060028101546001600160a01b031633146104b557604051631b65793760e01b815260040160405180910390fd5b801580611bf8575081548110155b15611c165760405163a8c399e560e01b815260040160405180910390fd5b5050565b60008181526003840160205260408120600101546001600160a01b0316838203611cb7576001858101805460008181526005808a0160205260408220838155600281018054336001600160a01b03199182168117909255600383018054821690921790915591810189905594850180549091166001600160a01b038716179055825493955090929190611cac83614540565b919050555050611d4b565b6000848152600586016020526040902060028101549092506001600160a01b03163314611cf757604051631b65793760e01b815260040160405180910390fd5b60018201546001600160a01b03828116911614611d2757604051630b89b31360e21b815260040160405180910390fd5b60058201548314611d4b576040516324d0239560e11b815260040160405180910390fd5b509392505050565b60e08101516000906001600160a01b031615611dab578160e001516001600160a01b03166386e6862d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c4573d6000803e3d6000fd5b611dca611dbf8360c0015160000151612402565b836101000151611ad9565b6001600160a01b031692915050565b919050565b6009848101546000908152600380870160209081526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060808301919091529b870154608080830191909152600a88015460a080840191909152838a019290925288518082018a52600b8901548152600c890154818c0152600d890154818b0152600e890154818f01528d840152600f880154818401526010880154828401528c8701929092528751808b01895260118801548516815260128801548516818b01528851808c018a52601389015481526014890154818c01526015890154818b01526016890154818f0152601789015481850152601889015481840152818a015288518084018a5260198901548152601a890154818c0152601b890154818b0152601c890154818f0152818e0152601d88015481840152601e88015481830152828701528751808d018952601f8801548152878a015480850b828c015263010000009004840b818a01528187015287516102208101895260218801548086168252600160a01b808204860b838d0152600160b81b90910490940b818a015260228801546001600160401b03169c81019c909c526023870154918c01919091526024860154908b015260258501548a890152602685015460e0808c01919091526027860154610100808d01919091526028870154610120808e01919091526029880154610140808f0191909152602a890154968e0196909652602b8801546101808e01528851808a018a52602c8901548152602d890154818c01526101a08e01528851808a01909952602e8801548952602f880154998901999099526101c08c019790975260308601546101e08c015260318601546102008c01529784019990995260328401549081169683019690965296850460ff908116151593820193909352600160a81b90940490911691830191909152603301549281019290925284156121015750606081015151612109565b506080810151515b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905282169063a9059cbb906044016020604051808303816000875af1158015612158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217c919061421d565b50505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916121e19190614559565b6000604051808303816000865af19150503d806000811461221e576040519150601f19603f3d011682016040523d82523d6000602084013e612223565b606091505b509150915081801561224d57508051158061224d57508080602001905181019061224d919061421d565b6105225760405162461bcd60e51b815260206004820152600260248201526114d560f21b60448201526064016115ae565b6122a260405180606001604052806000815260200160008152602001600081525090565b6000806122b0868686612417565b915091506040518060600160405280828660a00151602001518760800151602001516122dc9190614518565b6122e69190614518565b815260a086015151602082015260808601515160409091019061230a908590614518565b90529695505050505050565b6000806000806123278688876124ca565b6123319085614518565b935061233d86886125c9565b6123479084614518565b9250612353868861264b565b61235d9083614575565b9150808061236f575061236f87612690565b905061237b8885614518565b93506123878884614518565b9250945094509450949050565b60006001600160ff1b038211156123fe5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016115ae565b5090565b6000612410826107086126ab565b5092915050565b6000806124398360c00151866080015160400151612b3890919063ffffffff16565b915061245a8360e00151866060015160400151612b3890919063ffffffff16565b905060008061247387600001518860c001518888612b63565b90925090506124828285614518565b935061248e8184614518565b925050506000806124a3878660a00151612c2b565b90925090506124b28285614518565b93506124be8184614518565b92505050935093915050565b6001600160ff1b0360006305f5e1006124e384876144e1565b6124ed91906144cd565b90506000836125006305f5e100886144e1565b61250a91906144cd565b9050600061251883876125c9565b905083811215612526578093505b50600061253382876125c9565b905083811215612541578093505b506000856020015112801561255a575060008560400151135b156125c05760008560400151600160601b876020015161257990614588565b61258391906144e1565b61258d91906144cd565b9050808210801561259d57508281105b156125be5760006125ae82886125c9565b9050848112156125bc578094505b505b505b50509392505050565b60008060606125d885806144e1565b8451911c9150600160601b6125ec86612394565b85602001516125fb91906145a4565b6126069060026145a4565b61261091906145d4565b600160601b61261e84612394565b866040015161262d91906145a4565b61263791906145d4565b6126419190614518565b6110219190614518565b6020810151600090818113156126655760009150506104b5565b60608461267183614588565b61267b91906144e1565b6126869060026144e1565b901c949350505050565b6000816020015160001415806104b557505060400151151590565b60408051600280825260608201835260009283928392909160208301908036833701905050905083816000815181106126e6576126e6614602565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061271557612715614602565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd60e01b846040516024016127559190614618565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516127939190614559565b600060405180830381855afa9150503d80600081146127ce576040519150601f19603f3d011682016040523d82523d6000602084013e6127d3565b606091505b509150915081612ab35760405160206024820152600360448201526213d31160ea1b606482015260840160408051601f19818403018152919052602080820180516001600160e01b031662461bcd60e51b1781529151909120825191830191909120146128435761284381612d14565b600080886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a8919061440f565b5050509350935050506000808a6001600160a01b031663252c09d7848660016128d19190614662565b6128db919061467d565b6040516001600160e01b031960e084901b16815261ffff9091166004820152602401608060405180830381865afa15801561291a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061293e91906146b0565b935050509150806129b95760405163252c09d760e01b8152600060048201526001600160a01b038c169063252c09d790602401608060405180830381865afa15801561298e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129b291906146b0565b5091935050505b6129c963ffffffff831642614714565b995089876000815181106129df576129df614602565b602002602001019063ffffffff16908163ffffffff16815250508a6001600160a01b031663883bdbfd60e01b88604051602401612a1c9190614618565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612a5a9190614559565b600060405180830381855afa9150503d8060008114612a95576040519150601f19603f3d011682016040523d82523d6000602084013e612a9a565b606091505b50909650945085612aae57612aae85612d14565b505050505b600081806020019051810190612ac99190614727565b905060008782600081518110612ae157612ae1614602565b602002602001015183600181518110612afc57612afc614602565b6020026020010151612b0e91906147d3565b612b189190614800565b90506000612b2582612d5b565b97508896505050505050505b9250929050565b60008082600001511315612b5057611af8838361307e565b612b5a83836130e0565b610dd290614588565b60a081015151600090819015801590612b95575084606001516001600160401b031683606001516001600160401b0316105b15612c22576000612baa87856060015161314b565b90506000612bbf8560a001516000015161316d565b6000838152602088905260409020600101546101e0890151919250612bf791612be891906144f8565b82670de0b6b3a7640000613185565b600083815260208890526040902054610200890151919550612c1d91612be891906144f8565b925050505b94509492505050565b600080600080600085600001511315612c795784608001518660c001516101600151612c579190614714565b91508460a001518660c001516101800151612c729190614714565b9050612cbe565b845160001315612cb75784608001518660c001516101200151612c9c9190614714565b91508460a001518660c001516101400151612c729190614714565b5050612b31565b6000612cd3866000015184600160801b613185565b90506000612cea876000015184600160801b613185565b905087610100015115612d0257819450809550612d09565b8195508094505b505050509250929050565b805115612d2357805181602001fd5b60405162461bcd60e51b815260206004820152600d60248201526c3297b2b6b83a3c96b2b93937b960991b60448201526064016115ae565b60008060008360020b12612d72578260020b612d7a565b8260020b6000035b9050620d89e8811115612da0576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003612db757600160801b612dc9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612dfd576ffff97272373d413259a46990580e213a0260801c5b6004821615612e1c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612e3b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612e5a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612e79576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612e98576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612eb7576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612ed7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615612ef7576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612f17576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612f37576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612f57576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612f77576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612f97576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612fb7576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615612fd8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615612ff8576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613017576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613034576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613055578060001981613051576130516144a1565b0490505b64010000000081061561306957600161306c565b60005b60ff16602082901c0192505050919050565b600080826000015112156130b95760405162461bcd60e51b8152602060048201526002602482015261533160f01b60448201526064016115ae565b610dd2826020015184608001516130d09190614714565b8351670de0b6b3a76400006131ce565b6000808260000151131561311b5760405162461bcd60e51b8152602060048201526002602482015261533160f01b60448201526064016115ae565b610dd282602001518460a001516131329190614714565b835161313d90614588565b670de0b6b3a76400006131ec565b60006001600160401b038083169061316390856144e1565b610dd29190614575565b6000808212156123fe5761318082614588565b6104b5565b60008360000361319757506000610dd2565b60008413156131b2576131ab848484613212565b9050610dd2565b6131c56131be85614588565b84846132c4565b6131ab90614588565b60008260001904841183021582026131e557600080fd5b5091020490565b600082600019048411830215820261320357600080fd5b50910281810615159190040190565b600080806000198587098587029250828110838203039150508060000361324b576000841161324057600080fd5b508290049050610dd2565b80841161325757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006132d1848484613212565b9050600082806132e3576132e36144a1565b8486091115610dd25760001981106132fa57600080fd5b6001019392505050565b6040518060e001604052806133486040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016133c9613465565b905290565b6040518061016001604052806000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001613409613520565b8152602001613416613520565b815260408051606081018252600080825260208281018290529282015291019081526020016134436135c8565b8152600060208201819052604082018190526060820181905260809091015290565b60408051610100810182526000808252602080830182905282840182905260608301829052835180850190945281845283015290608082019081526020016134dc6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016134fe604051806040016040528060008152602001600081525090565b81526020016133c9604051806040016040528060008152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016135846040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016135b46040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081525090565b60405180610220016040528060006001600160a01b03168152602001600060020b8152602001600060020b815260200160006001600160401b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001613664604051806040016040528060008152602001600081525090565b81526020016135b4604051806040016040528060008152602001600081525090565b60006020828403121561369857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156136d7576136d761369f565b60405290565b60405161010081016001600160401b03811182821017156136d7576136d761369f565b60405160a081016001600160401b03811182821017156136d7576136d761369f565b60405160e081016001600160401b03811182821017156136d7576136d761369f565b60405160c081016001600160401b03811182821017156136d7576136d761369f565b604051601f8201601f191681016001600160401b038111828210171561378e5761378e61369f565b604052919050565b6001600160a01b03811681146137ab57600080fd5b50565b8035611dd981613796565b60ff811681146137ab57600080fd5b8035611dd9816137b9565b8060020b81146137ab57600080fd5b6000606082840312156137f457600080fd5b6137fc6136b5565b9050813581526020820135613810816137d3565b60208201526040820135613823816137d3565b604082015292915050565b60006080828403121561384057600080fd5b604051608081018181106001600160401b03821117156138625761386261369f565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b600061020082840312156138a657600080fd5b6138ae6136dd565b6138b7836137ae565b81526138c5602084016137ae565b60208201526138d6604084016137ae565b60408201526138e7606084016137ae565b60608201526138f8608084016137c8565b608082015261390a8460a085016137e2565b60a082015261391d84610100850161382e565b60c082015261393084610180850161382e565b60e08201529392505050565b600082601f83011261394d57600080fd5b81356001600160401b038111156139665761396661369f565b613979601f8201601f1916602001613766565b81815284602083860101111561398e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156139bd57600080fd5b604051604081016001600160401b0382821081831117156139e0576139e061369f565b81604052829350843591506139f482613796565b90825260208401359080821115613a0a57600080fd5b50613a178582860161393c565b6020830152505092915050565b60008060408385031215613a3757600080fd5b8235915060208301356001600160401b03811115613a5457600080fd5b613a60858286016139ab565b9150509250929050565b60008060408385031215613a7d57600080fd5b50508035926020909101359150565b80151581146137ab57600080fd5b600080600060608486031215613aaf57600080fd5b833592506020840135613ac181613a8c565b929592945050506040919091013590565b600080600060608486031215613ae757600080fd5b833592506020840135915060408401356001600160401b03811115613b0b57600080fd5b613b17868287016139ab565b9150509250925092565b60006102a08201905082518252602083015160018060a01b03808216602085015280604086015116604085015280606086015116606085015250506080830151608083015260a0830151805160a0840152602081015160020b60c0840152604081015160020b60e08401526001600160401b036060820151166101008401526080810151613bbd61012085018280518252602090810151910152565b5060a081810151805161016086015260208082015161018087015260408201516101a087015260608201516101c087015260808201516101e087015291015161020085015260c0820151805161022086015281015161024085015260e090910151805161026085015290810151610280840152612410565b60008060408385031215613c4857600080fd5b82356001600160401b0380821115613c5f57600080fd5b9084019060a08287031215613c7357600080fd5b613c7b613700565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115613caf57600080fd5b613cbb8882860161393c565b60808301525093506020850135915080821115613cd757600080fd5b50613a60858286016139ab565b60008060408385031215613cf757600080fd5b823591506020830135613d0981613796565b809150509250929050565b600080600060608486031215613d2957600080fd5b8335613d3481613a8c565b92506020840135613ac181613796565b60018060a01b03808251168352806020830151166020840152506040810151805160408401526020810151606084015260408101516080840152606081015160a0840152608081015160c084015260a081015160e0840152506060810151613dd1610100840182805182526020810151602083015260408101516040830152606081015160608301525050565b50608081015161018083015260a001516101a090910152565b80516001600160a01b031682526020810151613e0b602084018260020b9052565b506040810151613e20604084018260020b9052565b506060810151613e3b60608401826001600160401b03169052565b506080818101519083015260a0808201519083015260c0808201519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a08082015180518285015260208101516101c085015250506101c08101516101e0613ed48185018380518252602090810151910152565b82015161022084015250610200015161024090910152565b81518152602080830151610720830191613f10908401826001600160a01b03169052565b506040830151613f2b60408401826001600160a01b03169052565b506060830151613f3e6060840182613d44565b506080830151613f52610220840182613d44565b5060a083015180516103e08401526020810151600290810b6104008501526040820151900b6104208401525060c0830151613f91610440840182613dea565b5060e08301516001600160a01b03166106a083015261010083015115156106c083015261012083015160ff166106e0830152610140909201516107009091015290565b60008060008060608587031215613fea57600080fd5b843593506020850135925060408501356001600160401b038082111561400f57600080fd5b818701915087601f83011261402357600080fd5b81358181111561403257600080fd5b88602082850101111561404457600080fd5b95989497505060200194505050565b60006020828403121561406557600080fd5b8135610dd281613796565b60006102408201905084825283602083015260018060a01b038084511660408401528060208501511660608401528060408501511660808401525060608301516140c560a08401826001600160a01b03169052565b50608083015160ff811660c08401525060a0830151805160e08401526020810151600290810b6101008501526040820151900b6101208401525060c083015180516101408401526020810151610160840152604081015161018084015260608101516101a08401525060e083015180516101c084015260208101516101e08401526040810151610200840152606081015161022084015250949350505050565b60006020828403121561417757600080fd5b5051919050565b60005b83811015614199578181015183820152602001614181565b50506000910152565b600081518084526141ba81602086016020860161417e565b601f01601f19169290920160200192915050565b60018060a01b038151168252600060208201516040602085015261102160408501826141a2565b83815282602082015260606040820152600061421460608301846141ce565b95945050505050565b60006020828403121561422f57600080fd5b8151610dd281613a8c565b6000806040838503121561424d57600080fd5b505080516020909101519092909150565b60006060828403121561427057600080fd5b6142786136b5565b8251815260208301516020820152604083015160408201528091505092915050565b8481528360208201528260408201526080606082015260006142bf60808301846141ce565b9695505050505050565b60008183036101808112156142dd57600080fd5b6142e5613722565b60c08212156142f357600080fd5b6142fb613744565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b838152606060208201528251606082015260208301516080820152604083015160a0820152606083015160c08201526000608084015160a060e08401526143cc6101008401826141a2565b905082810360408401526142bf81856141ce565b6000602082840312156143f257600080fd5b8151610dd281613796565b805161ffff81168114611dd957600080fd5b600080600080600080600060e0888a03121561442a57600080fd5b875161443581613796565b6020890151909750614446816137d3565b9550614454604089016143fd565b9450614462606089016143fd565b9350614470608089016143fd565b925060a0880151614480816137b9565b60c089015190925061449181613a8c565b8091505092959891949750929550565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826144dc576144dc6144a1565b500490565b80820281158282048414176104b5576104b56144b7565b8181036000831280158383131683831282161715612410576124106144b7565b8082018281126000831280158216821582161715614538576145386144b7565b505092915050565b600060018201614552576145526144b7565b5060010190565b6000825161456b81846020870161417e565b9190910192915050565b808201808211156104b5576104b56144b7565b6000600160ff1b820161459d5761459d6144b7565b5060000390565b80820260008212600160ff1b841416156145c0576145c06144b7565b81810583148215176104b5576104b56144b7565b6000826145e3576145e36144a1565b600160ff1b8214600019841416156145fd576145fd6144b7565b500590565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561465657835163ffffffff1683529284019291840191600101614634565b50909695505050505050565b61ffff818116838216019080821115612410576124106144b7565b600061ffff80841680614692576146926144a1565b92169190910692915050565b8051600681900b8114611dd957600080fd5b600080600080608085870312156146c657600080fd5b845163ffffffff811681146146da57600080fd5b93506146e86020860161469e565b925060408501516146f881613796565b606086015190925061470981613a8c565b939692955090935050565b818103818111156104b5576104b56144b7565b6000602080838503121561473a57600080fd5b82516001600160401b038082111561475157600080fd5b818501915085601f83011261476557600080fd5b8151818111156147775761477761369f565b8060051b9150614788848301613766565b81815291830184019184810190888411156147a257600080fd5b938501935b838510156147c7576147b88561469e565b825293850193908501906147a7565b98975050505050505050565b600682810b9082900b03667fffffffffffff198112667fffffffffffff821317156104b5576104b56144b7565b60008160060b8360060b80614817576148176144a1565b667fffffffffffff19821460001982141615614835576148356144b7565b9005939250505056fea2646970667358221220527c0cfc9aa8162061e959b0318c3b022bea30aaaf703a4bb31a7fef89ed37bc64736f6c63430008130033",
    "sourceMap": "981:6977:55:-:0;;;1487:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1533:25;:42;;-1:-1:-1;;;;;;1533:42:55;-1:-1:-1;;;;;1533:42:55;;;;;1585:45;;-1:-1:-1;;;1585:45:55;;-1:-1:-1;1585:45:55;;;489:25:129;1585:12:55;;:33;;462:18:129;;1585:45:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:150;981:6977;;14:290:129;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:129;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:129:o;309:211::-;981:6977:55;;;;;;",
    "linkReferences": {
      "src/libraries/logic/AddPairLogic.sol": {
        "AddPairLogic": [
          {
            "start": 101,
            "length": 20
          },
          {
            "start": 1655,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "LiquidationLogic": [
          {
            "start": 4269,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/MarginLogic.sol": {
        "MarginLogic": [
          {
            "start": 3846,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReaderLogic.sol": {
        "ReaderLogic": [
          {
            "start": 1493,
            "length": 20
          },
          {
            "start": 1603,
            "length": 20
          },
          {
            "start": 4146,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "ReallocationLogic": [
          {
            "start": 3682,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "SupplyLogic": [
          {
            "start": 3976,
            "length": 20
          },
          {
            "start": 6919,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/TradeLogic.sol": {
        "TradeLogic": [
          {
            "start": 4837,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806391d0370f116100b8578063acfcd9fd1161007c578063acfcd9fd146103dd578063c6b6d340146103f0578063c92af3ec14610403578063d348799714610423578063db9d4a1914610436578063f3eb8cd81461044957600080fd5b806391d0370f146102f45780639403b634146103845780639abbdf4b146103a45780639b819b30146103b7578063ab4db360146103ca57600080fd5b80634e20a76e116100ff5780634e20a76e146101ea5780635393e7801461020d578063613ce410146102205780637f223b4c146102b95780639174e1a1146102e157600080fd5b806318e807491461013c5780631daf2c191461016c578063360125f1146101815780633b39b99d1461019457806349ebb77d146101b5575b600080fd5b61014f61014a366004613686565b61046c565b6040516001600160a01b0390911681526020015b60405180910390f35b61017f61017a366004613686565b6104bb565b005b61017f61018f366004613686565b610529565b6101a76101a2366004613893565b610568565b604051908152602001610163565b6101c86101c3366004613686565b6105e8565b6040805182518152602080840151908201529181015190820152606001610163565b6101fd6101f8366004613a24565b610d53565b6040519015158152602001610163565b61017f61021b366004613a6a565b610dd9565b600054600154600254604080516080810182526006546001600160a01b039081168252600754602083015260085492820192909252600954606082015261026b949392919091169084565b604080519485526020808601949094526001600160a01b039283168582015281519092166060808601919091529281015160808501529081015160a0840152015160c082015260e001610163565b6102cc6102c7366004613a9a565b610e5a565b60408051928352602083019190915201610163565b6101c86102ef366004613686565b610ef4565b610307610302366004613ad2565b610f99565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e085015285015161010084015284015161012083015283015161014082015291015161016082015261018001610163565b610397610392366004613686565b611029565b6040516101639190613b21565b6101a76103b2366004613686565b611182565b6103076103c5366004613c35565b6111a3565b61017f6103d8366004613ce4565b611215565b6101a76103eb366004613686565b61126e565b61017f6103fe366004613d14565b61157b565b610416610411366004613686565b6115ca565b6040516101639190613eec565b61017f610431366004613fd4565b6118da565b6101a7610444366004613a9a565b6119db565b6101fd610457366004614053565b600a6020526000908152604090205460ff1681565b6000818152600360205260408120602101546104b590610494906001600160a01b0316611a68565b600084815260036020526040902060320154600160a01b900460ff16611ad9565b92915050565b604051636e903d2560e11b8152600060048201526024810182905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063dd207a4a906044015b60006040518083038186803b15801561050e57600080fd5b505af4158015610522573d6000803e3d6000fd5b5050505050565b60405163919c1b6160e01b8152600060048201526024810182905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063919c1b61906044016104f6565b604051635641324160e11b815260009073__$95910b7b93a5208ca27f4262a74795a535$__9063ac826482906105a7908490600a908790600401614070565b602060405180830381865af41580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190614165565b61060c60405180606001604052806000815260200160008152602001600081525090565b6000806005016000848152602001908152602001600020600501600001549050600080610d306000600301600085815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601182016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601f8201604051806060016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81525050815260200160218201604051806102200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460020b60020b60020b81526020016001820160009054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201604051806040016040529081600082015481526020016001820154815250508152602001600d8201604051806040016040529081600082015481526020016001820154815250508152602001600f820154815260200160108201548152505081526020016032820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016032820160149054906101000a900460ff161515151581526020016032820160159054906101000a900460ff1660ff1660ff1681526020016033820154815250506000600401600060050160008981526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820160405180610100016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81526020016001820160069054906101000a90046001600160401b03166001600160401b03166001600160401b0316815260200160028201604051806040016040529081600082015481526020016001820154815250508152602001600482016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600a8201604051806040016040529081600082015481526020016001820154815250508152602001600c8201604051806040016040529081600082015481526020016001820154815250508152505081525050611b06565b505060408051606081018252978852602088019190915286015250929392505050565b60405163f78c1fb560e01b815260009073__$82e740bfb21403018c74028207d6b78a82$__9063f78c1fb590610d91908490879087906004016141f5565b602060405180830381865af4158015610dae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd2919061421d565b9392505050565b610de4600083611bad565b5060405163f66f5cc760e01b815260006004820152602481018390526044810182905273__$dce61b2ba8cb2bacc386287dc451d94595$__9063f66f5cc79060640160006040518083038186803b158015610e3e57600080fd5b505af4158015610e52573d6000803e3d6000fd5b505050505050565b604051633e16468d60e01b81526000600482018190526024820185905260448201839052831515606483015290819073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633e16468d906084016040805180830381865af4158015610ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee8919061423a565b91509150935093915050565b610f1860405180606001604052806000815260200160008152602001600081525090565b60405163315e381560e01b8152600060048201526024810183905273__$4278c074fd6acd31e7e5f642d169fef5d3$__9063315e381590604401606060405180830381865af4158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f93919061425e565b50919050565b610fa1613304565b60405163fe8473e160e01b815273__$a1fa80d38d689cae49e54718da49b6432c$__9063fe8473e190610fdf9087908790600090889060040161429a565b61018060405180830381865af4158015610ffd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102191906142c9565b949350505050565b611031613378565b50600090815260056020818152604092839020835160c080820186528254825260018301546001600160a01b039081168386015260028085015482168489015260038501549091166060808501919091526004850154608080860191909152885161010081018a52978601548852600686015480840b898901526301000000810490930b888a015266010000000000009092046001600160401b0316878201528751808901895260078601548152600886015481880152878301528751808401895260098601548152600a86015481880152600b860154818a0152600c86015491810191909152600d85015491810191909152600e84015460a0808301919091528087019190915286518088018852600f8501548152601085015481870152918601919091528551808701909652601183015486526012909201549285019290925260e08301939093529182015290565b600061118e8183611bea565b600061119b818085611c1a565b549392505050565b6111ab613304565b82516111b990600090611bea565b602083015183516000916111cf91839190611c1a565b8054602086015260405163010bcadf60e21b815290915073__$bc9f384c073b2381249378965b2d698cf3$__9063042f2b7c90610fdf9060009088908890600401614381565b60006112218184611bad565b90506001600160a01b03821661124a5760405163e6c4247b60e01b815260040160405180910390fd5b60030180546001600160a01b0319166001600160a01b039290921691909117905550565b6000818152600360208181526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060828101919091526009880154608080840191909152600a89015460a080850191909152848b019390935289518082018b52600b8a01548152600c8a0154818d0152600d8a0154818c0152600e8a01548184015284830152600f89015481850152601089015483850152818801939093528851808c018a5260118901548616815260128901548616818c01528951808d018b5260138a0154815260148a0154818d015260158a0154818c015260168a01548184015260178a01548186015260188a015481850152818b015289518085018b5260198a01548152601a8a0154818d0152601b8a0154818c0152601c8a01548184015281830152601d89015481850152601e890154818401528388015288518082018a52601f8901548152888b015480860b828d015263010000009004850b818b015282880152885161022081018a5260218901548087168252600160a01b808204870b838e0152600160b81b90910490950b818b015260228901546001600160401b0316918101919091526023880154928101929092526024870154908201526025860154818a0152602686015460e080830191909152602787015461010083810191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528951808b018b52602c8a01548152602d8a0154818d01526101a08501528951808b01909a52602e8901548a52602f8901549a8a019a909a526101c083019890985260308701546101e083015260318701546102008301529885015260328501549182169784019790975260ff9681048716151594830194909452600160a81b90930490941692840192909252603390910154908201526104b590611d53565b6006546001600160a01b03163381146115b7576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b6115c46000858585611dde565b50505050565b6115d26133ce565b50600090815260036020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160c08082018a529786015483168152600486015483168188015288518089018a52600587015481526006870154818901526007870154818b015260088701546060808301919091526009880154608080840191909152600a89015460a080850191909152848d01939093528b518082018d52600b8a01548152600c8a0154818c0152600d8a0154818e0152600e8a01548184015282850152600f89015481850152601089015483850152818801939093528a51808b018c5260118901548616815260128901548616818b01528b51808c018d5260138a0154815260148a0154818c015260158a0154818e015260168a01548184015260178a01548186015260188a015481850152818d01528b518085018d5260198a01548152601a8a0154818c0152601b8a0154818e0152601c8a01548184015281830152601d89015481850152601e89015481840152838801528a518082018c52601f8901548152888a015480860b828c015263010000009004850b818d0152828801528a5161022081018c5260218901548087168252600160a01b808204870b838d0152600160b81b90910490950b818d015260228901546001600160401b031691810191909152602388015492810192909252602487015490820152602586015481890152602686015460e080830191909152602787015461010080840191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528b51808d018d52602c8a01548152602d8a0154818c01526101a08501528b51808d01909c52602e8901548c52602f890154998c01999099526101c083019a909a5260308701546101e083015260318701546102008301529785015260328501549182169684019690965294850460ff908116151596830196909652600160a81b90940490941691840191909152603301549082015290565b336000908152600a602052604090205460ff166118f657600080fd5b33841561196957611969816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561193e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196291906143e0565b3387612185565b831561052257610522816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d491906143e0565b3386612185565b604051633ec463bf60e01b8152600060048201819052602482018590526044820183905283151560648301529073__$22e71cc2a9e9de4b2967c224ed91c7d01e$",
    "sourceMap": "981:6977:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5992:271;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;472:32:129;;;454:51;;442:2;427:18;5992:271:55;;;;;;;;7633:113;;;;;;:::i;:::-;;:::i;:::-;;7839:117;;;;;;:::i;:::-;;:::i;2303:188::-;;;;;;:::i;:::-;;:::i;:::-;;;4996:25:129;;;4984:2;4969:18;2303:188:55;4850:177:129;7117:428:55;;;;;;:::i;:::-;;:::i;:::-;;;;5256:13:129;;5238:32;;5326:4;5314:17;;;5308:24;5286:20;;;5279:54;5377:17;;;5371:24;5349:20;;;5342:54;5226:2;5211:18;7117:428:55;5032:370:129;3242:237:55;;;;;;:::i;:::-;;:::i;:::-;;;7329:14:129;;7322:22;7304:41;;7292:2;7277:18;3242:237:55;7164:187:129;5528:184:55;;;;;;:::i;:::-;;:::i;1216:46::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1216:46:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7893:25:129;;;7949:2;7934:18;;;7927:34;;;;-1:-1:-1;;;;;8035:15:129;;;8015:18;;;8008:43;8091:13;;8087:22;;;8082:2;8067:18;;;8060:50;;;;8153:15;;;8147:22;8141:3;8126:19;;8119:51;8213:15;;;8207:22;7988:3;8186:19;;8179:51;8273:15;8267:22;8261:3;8246:19;;8239:51;7880:3;7865:19;1216:46:55;7608:688:129;2876:263:55;;;;;;:::i;:::-;;:::i;:::-;;;;8980:25:129;;;9036:2;9021:18;;9014:34;;;;8953:18;2876:263:55;8806:248:129;6492:226:55;;;;;;:::i;:::-;;:::i;4857:285::-;;;;;;:::i;:::-;;:::i;:::-;;;;10158:13:129;;10198:9;;10180:28;;10260:4;10252:13;;;10246:20;10224;;;10217:50;10311:13;;;10305:20;10283;;;10276:50;10378:4;10370:13;;;10364:20;10342;;;10335:50;10437:4;10429:13;;;10423:20;10401;;;10394:50;10496:4;10488:13;;;10482:20;10460;;;10453:50;10547:17;;;10541:24;10534:4;10519:20;;;10512:54;;;;10610:17;;;10604:24;10597:4;10582:20;;10575:54;10675:17;;10669:24;10660:6;10645:22;;10638:56;10740:17;;10734:24;10725:6;10710:22;;10703:56;10805:17;;10799:24;10790:6;10775:22;;10768:56;10870:17;;10864:24;10855:6;10840:22;;10833:56;10135:3;10120:19;4857:285:55;9941:954:129;6935:131:55;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5718:214::-;;;;;;:::i;:::-;;:::i;3744:449::-;;;;;;:::i;:::-;;:::i;4199:271::-;;;;;;:::i;:::-;;:::i;6325:161::-;;;;;;:::i;:::-;;:::i;5239:141::-;;;;;;:::i;:::-;;:::i;6764:134::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1701:463::-;;;;;;:::i;:::-;;:::i;2567:230::-;;;;;;:::i;:::-;;:::i;1269:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5992:271;6053:7;6142:24;;;:16;:24;;;;;:40;;:52;6079:177;;6119:76;;-1:-1:-1;;;;;6142:52:55;6119:22;:76::i;:::-;6209:10;:24;;;:16;:24;;;;;:37;;;-1:-1:-1;;;6209:37:55;;;;6079:26;:177::i;:::-;6072:184;5992:271;-1:-1:-1;;5992:271:55:o;7633:113::-;7694:45;;-1:-1:-1;;;7694:45:55;;7720:10;7694:45;;;8980:25:129;9021:18;;;9014:34;;;7694:11:55;;:25;;8953:18:129;;7694:45:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7633:113;:::o;7839:117::-;7902:47;;-1:-1:-1;;;7902:47:55;;7929:10;7902:47;;;8980:25:129;9021:18;;;9014:34;;;7902:11:55;;:26;;8953:18:129;;7902:47:55;8806:248:129;2303:188:55;2417:67;;-1:-1:-1;;;2417:67:55;;2391:7;;2417:12;;:20;;:67;;2391:7;;2450:19;;2471:12;;2417:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7117:428::-;7181:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;7181:18:55;7211:14;7228:10;:17;;:26;7246:7;7228:26;;;;;;;;;;;:39;;:46;;;7211:63;;7286:16;7304:17;7327:150;7379:10;:16;;:24;7396:6;7379:24;;;;;;;;;;;7327:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7405:10;:34;;7441:10;:17;;:26;7459:7;7441:26;;;;;;;;;;;7327:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;-1:-1:-1;;;;;7327:150:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;:150::i;:::-;-1:-1:-1;;7495:43:55;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7495:43:55;;7117:428;-1:-1:-1;;;7117:428:55:o;3242:237::-;3408:64;;-1:-1:-1;;;3408:64:55;;3362:23;;3408:17;;:28;;:64;;3362:23;;3449:6;;3457:14;;3408:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3401:71;3242:237;-1:-1:-1;;;3242:237:55:o;5528:184::-;5607:28;:10;5627:7;5607:19;:28::i;:::-;-1:-1:-1;5646:59:55;;-1:-1:-1;;;5646:59:55;;5671:10;5646:59;;;23933:25:129;23974:18;;;23967:34;;;24017:18;;;24010:34;;;5646:11:55;;:24;;23906:18:129;;5646:59:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5528:184;;:::o;2876:263::-;3062:70;;-1:-1:-1;;;3062:70:55;;2987:23;3062:70;;;24314:25:129;;;24355:18;;;24348:34;;;24398:18;;;24391:34;;;24468:14;;24461:22;24441:18;;;24434:50;2987:23:55;;;3062:11;;:20;;24286:19:129;;3062:70:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3055:77;;;;2876:263;;;;;;:::o;6492:226::-;6594:40;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;6594:40:55;6650:61;;-1:-1:-1;;;6650:61:55;;6691:10;6650:61;;;8980:25:129;9021:18;;;9014:34;;;6650:11:55;;:40;;8953:18:129;;6650:61:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6492:226;;;:::o;4857:285::-;5007:30;;:::i;:::-;5060:75;;-1:-1:-1;;;5060:75:55;;:16;;:26;;:75;;5087:7;;5096:10;;5108;;5120:14;;5060:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5053:82;4857:285;-1:-1:-1;;;;4857:285:55:o;6935:131::-;6993:21;;:::i;:::-;-1:-1:-1;7033:10:55;:26;;;:17;:26;;;;;;;;;7026:33;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7026:33:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7026:33:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6935:131::o;5718:214::-;5773:7;5792:27;5773:7;5812:6;5792:19;:27::i;:::-;5830:28;5861:38;5830:28;;5892:6;5861:27;:38::i;:::-;5917:8;;5718:214;-1:-1:-1;;;5718:214:55:o;3744:449::-;3875:30;;:::i;:::-;3941:18;;3921:39;;3941:18;;3921:19;:39::i;:::-;4030:19;;;;4051:18;;3971:28;;4002:68;;3971:28;;4030:19;4002:27;:68::i;:::-;4103:8;;4081:19;;;:30;4129:57;;-1:-1:-1;;;4129:57:55;;3971:99;;-1:-1:-1;4129:10:55;;:16;;:57;;4103:8;;4081:11;;4171:14;;4129:57;;;:::i;4199:271::-;4279:28;4310;4279;4330:7;4310:19;:28::i;:::-;4279:59;-1:-1:-1;;;;;;4353:23:55;;4349:77;;4399:16;;-1:-1:-1;;;4399:16:55;;;;;;;;;;;4349:77;4436:15;;:27;;-1:-1:-1;;;;;;4436:27:55;-1:-1:-1;;;;;4436:27:55;;;;;;;;;;-1:-1:-1;4199:271:55:o;6325:161::-;6391:7;6454:24;;;:16;:24;;;;;;;;6417:62;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6417:62:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6417:62:55;;;;;;;;;-1:-1:-1;;;6417:62:55;;;;;;;;;;;;;;-1:-1:-1;;;;;6417:62:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6417:62:55;;;;;;;;;;;;;;;;;;;;;;;;:36;:62::i;5239:141::-;1378:19;:26;-1:-1:-1;;;;;1378:26:55;1418:10;:20;;1414:49;;1447:16;;-1:-1:-1;;;1447:16:55;;-1:-1:-1;;;;;472:32:129;;1447:16:55;;;454:51:129;427:18;;1447:16:55;;;;;;;;1414:49;5332:41:::1;:10;5348:12:::0;5362:2;5366:6;5332:15:::1;:41::i;:::-;1351:130:::0;5239:141;;;:::o;6764:134::-;6826:22;;:::i;:::-;-1:-1:-1;6867:10:55;:24;;;:16;:24;;;;;;;;;6860:31;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6860:31:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6860:31:55;;;;;;;;;-1:-1:-1;;;6860:31:55;;;;;;;;;;;;;;-1:-1:-1;;;;;6860:31:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6860:31:55;;;;;;;;;;;;;;;;;;;;;6764:134::o;1701:463::-;1838:10;1818:31;;;;:19;:31;;;;;;;;1810:40;;;;;;1904:10;1929:11;;1925:112;;1956:70;1984:11;-1:-1:-1;;;;;1984:18:55;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2006:10;2018:7;1956:27;:70::i;:::-;2050:11;;2046:112;;2077:70;2105:11;-1:-1:-1;;;;;2105:18:55;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2127:10;2139:7;2077:27;:70::i;2567:230::-;2724:66;;-1:-1:-1;;;2724:66:55;;2674:27;2724:66;;;24314:25:129;;;24355:18;;;24348:34;;;24398:18;;;24391:34;;;24468:14;;24461:22;24441:18;;;24434:50;2674:27:55;2724:11;;:18;;24286:19:129;;2724:66:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;416:159:77:-;483:17;547:12;-1:-1:-1;;;;;532:34:77;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;512:56:77;;416:159;-1:-1:-1;;;;;;;416:159:77:o;893:283::-;985:7;1008:13;1004:166;;;1052:55;-1:-1:-1;;;;;1052:55:77;;-1:-1:-1;;;1052:55:77;:::i;:::-;1037:71;;;;1004:166;-1:-1:-1;1146:13:77;1139:20;;2313:982:72;2546:16;2564:17;2583:16;2601:12;2625:15;2650:17;2685:29;2703:10;2685:17;:29::i;:::-;2678:36;;2774:216;2805:5;:12;;;2831:86;2860:10;2872:24;2898:5;:18;;;2831:28;:86::i;:::-;2949:21;;;;:31;2931:4;;2774:17;:216::i;:::-;2725:265;;-1:-1:-1;2725:265:72;;-1:-1:-1;2725:265:72;;-1:-1:-1;2725:265:72;-1:-1:-1;3001:18:72;3022:74;3092:3;3040:49;2725:265;800:4:66;3040:49:72;:::i;:::-;:55;;;;:::i;:::-;3022:17;:74::i;:::-;3001:95;-1:-1:-1;3001:95:72;3119:21;3132:8;3119:10;:21;:::i;:::-;:35;;;;:::i;:::-;3107:47;;3169:11;:54;;;;;326:3:66;3184:9:72;:39;3169:54;3165:124;;;326:3:66;3239:39:72;;3165:124;2615:680;;;2313:982;;;;;;;:::o;282:376:78:-;413:28;465:26;;;:17;;;:26;;;;;570:11;;;;-1:-1:-1;;;;;570:11:78;585:10;570:25;566:86;;618:23;;-1:-1:-1;;;618:23:78;;;;;;;;;;;834:199:98;945:11;;;:46;;-1:-1:-1;960:21:98;;:31;-1:-1:-1;960:31:98;945:46;941:85;;;1000:26;;-1:-1:-1;;;1000:26:98;;;;;;;;;;;941:85;834:199;;:::o;664:1159:78:-;806:28;869:24;;;:16;;;:24;;;;;:33;;;-1:-1:-1;;;;;869:33:78;917:12;;;913:904;;968:21;;;;;;945:20;1050:31;;;:17;;;;:31;;;;;1096:23;;;1133:11;;;:24;;1147:10;-1:-1:-1;;;;;;1133:24:78;;;;;;;;1171:15;;;:28;;;;;;;;;;1213:18;;;:34;;;1261:14;;;:25;;;;;-1:-1:-1;;;;;1261:25:78;;;;;1301:23;;1050:31;;-1:-1:-1;968:21:78;;1301:23;968:21;1301:23;;;:::i;:::-;;;;;;931:404;913:904;;;1363:26;;;;:17;;;:26;;;;;1476:11;;;;1363:26;;-1:-1:-1;;;;;;1476:11:78;1491:10;1476:25;1472:94;;1528:23;;-1:-1:-1;;;1528:23:78;;;;;;;;;;;1472:94;1584:14;;;;-1:-1:-1;;;;;1584:26:78;;;:14;;:26;1580:104;;1637:32;;-1:-1:-1;;;1637:32:78;;;;;;;;;;;1580:104;1702:18;;;:25;:35;;1698:109;;1764:28;;-1:-1:-1;;;1764:28:78;;;;;;;;;;;1698:109;840:983;664:1159;;;;;:::o;4633:423:72:-;4754:20;;;;4718;;-1:-1:-1;;;;;4754:34:72;;4750:300;;4821:10;:20;;;-1:-1:-1;;;;;4811:44:72;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4750:300;4895:144;4939:61;4961:10;:26;;;:38;;;4939:21;:61::i;:::-;5002:10;:23;;;4895:26;:144::i;:::-;-1:-1:-1;;;;;4888:151:72;;4633:423;-1:-1:-1;;4633:423:72:o;4750:300::-;4633:423;;;:::o;1625:460:98:-;1819:26;;;;;1766:33;1802:44;;;:16;;;;:44;;;;;;;;1766:80;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:80:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:19;1766:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1766:80:98;;;;;;;;;-1:-1:-1;;;1766:80:98;;;;;;;;;;;;;;-1:-1:-1;;;;;1766:80:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1766:80:98;;;;;;;;;;;;;;;;;;;;;;;1884:147;;;;-1:-1:-1;1927:20:98;;;;:26;1884:147;;;-1:-1:-1;1995:19:98;;;;:25;1884:147;2041:37;;-1:-1:-1;;;2041:37:98;;-1:-1:-1;;;;;30559:32:129;;;2041:37:98;;;30541:51:129;30608:18;;;30601:34;;;2041:25:98;;;;;30514:18:129;;2041:37:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1756:329;;1625:460;;;;:::o;1221:309:51:-;1381:59;;;-1:-1:-1;;;;;30559:32:129;;;1381:59:51;;;30541:51:129;30608:18;;;;30601:34;;;1381:59:51;;;;;;;;;;30514:18:129;;;;1381:59:51;;;;;;;-1:-1:-1;;;;;1381:59:51;-1:-1:-1;;;1381:59:51;;;1370:71;;-1:-1:-1;;;;1370:10:51;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:51;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:51;;31140:2:129;1451:72:51;;;31122:21:129;31179:1;31159:18;;;31152:29;-1:-1:-1;;;31197:18:129;;;31190:32;31239:18;;1451:72:51;30938:325:129;5062:719:72;5315:36;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5315:36:72;5364:30;5396:26;5438:77;5461:10;5473:24;5499:15;5438:22;:77::i;:::-;5363:152;;;;5533:241;;;;;;;;5633:19;5595:15;:24;;;:35;;;5561:15;:20;;;:31;;;:69;;;;:::i;:::-;:91;;;;:::i;:::-;5533:241;;5666:24;;;;:31;5533:241;;;;-1:-1:-1;5711:20:72;;;:27;5533:241;;;;;5711:53;;5741:23;;5711:53;:::i;:::-;5533:241;;5526:248;5062:719;-1:-1:-1;;;;;;5062:719:72:o;3743:628::-;3928:15;3945:17;3964;3983:16;4023:55;4041:9;4052:14;4068:9;4023:17;:55::i;:::-;4011:67;;;;:::i;:::-;;;4103:41;4118:9;4129:14;4103;:41::i;:::-;4089:55;;;;:::i;:::-;;;4168:51;4193:9;4204:14;4168:24;:51::i;:::-;4155:64;;;;:::i;:::-;;;4244:11;:49;;;;4259:34;4278:14;4259:18;:34::i;:::-;4230:63;-1:-1:-1;4304:24:72;4316:12;4304:24;;:::i;:::-;;-1:-1:-1;4338:26:72;4352:12;4338:26;;:::i;:::-;;;3743:628;;;;;;;;;:::o;34781:297:25:-;34837:6;-1:-1:-1;;;;;34962:5:25;:34;;34954:87;;;;-1:-1:-1;;;34954:87:25;;31600:2:129;34954:87:25;;;31582:21:129;31639:2;31619:18;;;31612:30;31678:34;31658:18;;;31651:62;-1:-1:-1;;;31729:18:129;;;31722:38;31777:19;;34954:87:25;31398:404:129;34954:87:25;-1:-1:-1;35065:5:25;34781:297::o;653:184:77:-;719:19;767:63;801:12;399:10;767:18;:63::i;:::-;-1:-1:-1;750:80:77;653:184;-1:-1:-1;;653:184:77:o;298:1095:71:-;535:30;567:26;631:72;680:11;:22;;;631:12;:21;;;:33;;;:48;;:72;;;;:::i;:::-;605:98;;735:69;785:11;:18;;;735:12;:22;;;:34;;;:49;;:69;;;;:::i;:::-;713:91;;830:29;861:25;890:140;932:12;:15;;;949:12;:28;;;979:24;1005:11;890:24;:140::i;:::-;829:201;;-1:-1:-1;829:201:71;-1:-1:-1;1044:49:71;829:201;1044:49;;:::i;:::-;;-1:-1:-1;1107:41:71;1130:18;1107:41;;:::i;:::-;;;815:344;;1184:20;1206:16;1226:50;1241:12;1255:11;:20;;;1226:14;:50::i;:::-;1183:93;;-1:-1:-1;1183:93:71;-1:-1:-1;1290:40:71;1183:93;1290:40;;:::i;:::-;;-1:-1:-1;1344:32:71;1367:9;1344:32;;:::i;:::-;;;1169:218;;298:1095;;;;;;:::o;6633:1191:72:-;-1:-1:-1;;;;;6786:15:72;578:3;6876:23;6889:10;6876;:23;:::i;:::-;:40;;;;:::i;:::-;6855:61;-1:-1:-1;6926:18:72;6977:10;6947:27;578:3;6947:10;:27;:::i;:::-;:40;;;;:::i;:::-;6926:61;;7012:8;7023:43;7038:10;7050:15;7023:14;:43::i;:::-;7012:54;;7088:8;7084:1;:12;7080:63;;;7127:1;7116:12;;7080:63;6998:155;7177:8;7188:43;7203:10;7215:15;7188:14;:43::i;:::-;7177:54;;7253:8;7249:1;:12;7245:63;;;7292:1;7281:12;;7245:63;7163:155;7361:1;7332:15;:26;;;:30;:70;;;;;7401:1;7366:15;:32;;;:36;7332:70;7328:490;;;7418:20;7522:15;:32;;;-1:-1:-1;;;7467:15:72;:26;;;7466:27;;;:::i;:::-;7458:52;;;;:::i;:::-;7457:98;;;;:::i;:::-;7418:137;;7587:12;7574:10;:25;:54;;;;;7618:10;7603:12;:25;7574:54;7570:238;;;7648:8;7659:45;7674:12;7688:15;7659:14;:45::i;:::-;7648:56;;7731:8;7727:1;:12;7723:71;;;7774:1;7763:12;;7723:71;7630:178;7570:238;7404:414;7328:490;6807:1017;;6633:1191;;;;;:::o;8064:433::-;8170:6;;582:2:66;8205:23:72;8218:10;;8205:23;:::i;:::-;8462:28;;8204:49;;;-1:-1:-1;;;;8400:21:72;:10;:19;:21::i;:::-;8371:15;:26;;;:50;;;;:::i;:::-;8366:56;;:1;:56;:::i;:::-;:80;;;;:::i;:::-;-1:-1:-1;;;8308:16:72;:5;:14;:16::i;:::-;8273:15;:32;;;:51;;;;:::i;:::-;8272:77;;;;:::i;:::-;8271:176;;;;:::i;:::-;:219;;;;:::i;8503:372::-;8689:25;;;;8642:7;;8729:18;;;8725:57;;;8770:1;8763:8;;;;;8725:57;582:2:66;8832:10:72;8813:15;8814:14;8813:15;:::i;:::-;8805:37;;;;:::i;:::-;8800:43;;:1;:43;:::i;:::-;:67;;;8503:372;-1:-1:-1;;;;8503:372:72:o;6160:192::-;6250:4;6273:15;:26;;;6303:1;6273:31;;:72;;;-1:-1:-1;;6308:32:72;;;:37;;;6160:192::o;1182:1511:77:-;1332:15;;;1345:1;1332:15;;;;;;;;1274:7;;;;;;1332:15;;;;;;;;;;;;-1:-1:-1;1332:15:77;1302:45;;1382:3;1358:11;1370:1;1358:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;;;;;1413:1;1396:11;1408:1;1396:14;;;;;;;;:::i;:::-;;;;;;:18;;;;;;;;;;;1426:12;1440:17;1481:11;-1:-1:-1;;;;;1473:31:77;1528:37;;;1567:11;1505:74;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1505:74:77;;;;;;;;;;;;;;-1:-1:-1;;;;;1505:74:77;-1:-1:-1;;;;;;1505:74:77;;;;;;;;;;1473:107;;;;1505:74;1473:107;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1425:155;;;;1596:7;1591:828;;1652:47;;33374:2:129;1652:47:77;;;33356:21:129;33413:1;33393:18;;;33386:29;-1:-1:-1;;;33431:18:129;;;33424:33;33474:18;;1652:47:77;;;-1:-1:-1;;1652:47:77;;;;;;;;;;;;;;;-1:-1:-1;;;;;1652:47:77;-1:-1:-1;;;1652:47:77;;;1642:58;;;;;1623:15;;;;;;;;;:77;1619:133;;1720:17;1732:4;1720:11;:17::i;:::-;1770:12;1784:18;1809:11;-1:-1:-1;;;;;1809:17:77;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1766:62;;;;;;;;;1844:25;1873:16;1893:11;-1:-1:-1;;;;;1893:24:77;;1932:11;1919:5;1927:1;1919:9;;;;:::i;:::-;1918:25;;;;:::i;:::-;1893:51;;-1:-1:-1;;;;;;1893:51:77;;;;;;;34035:6:129;34023:19;;;1893:51:77;;;34005:38:129;33978:18;;1893:51:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1843:101;;;;;;1964:11;1959:104;;2021:27;;-1:-1:-1;;;2021:27:77;;2046:1;2021:27;;;4996:25:129;-1:-1:-1;;;;;2021:24:77;;;;;4969:18:129;;2021:27:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1995:53:77;;-1:-1:-1;;;1959:104:77;2083:36;;;;:15;:36;:::i;:::-;2077:42;;2157:3;2133:11;2145:1;2133:14;;;;;;;;:::i;:::-;;;;;;:28;;;;;;;;;;;2202:11;-1:-1:-1;;;;;2194:31:77;2266:37;;;2305:11;2243:74;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2243:74:77;;;;;;;;;;;;;;-1:-1:-1;;;;;2243:74:77;-1:-1:-1;;;;;;2243:74:77;;;;;;;;;;2194:137;;;;2243:74;2194:137;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2176:155:77;;-1:-1:-1;2176:155:77;-1:-1:-1;2176:155:77;2345:64;;2377:17;2389:4;2377:11;:17::i;:::-;1605:814;;;;1591:828;2429:30;2473:4;2462:27;;;;;;;;;;;;:::i;:::-;2429:60;;2500:10;2576:3;2541:15;2557:1;2541:18;;;;;;;;:::i;:::-;;;;;;;2520:15;2536:1;2520:18;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;2519:62;;;;:::i;:::-;2500:82;;2593:20;2616:33;2644:4;2616:27;:33::i;:::-;2593:56;-1:-1:-1;2682:3:77;;-1:-1:-1;;;;;;;1182:1511:77;;;;;;:::o;3990:411:75:-;4149:18;4216:1;4187:11;:26;;;:30;4183:212;;;4254:38;4266:12;4280:11;4254;:38::i;4183:212::-;4346:37;4357:12;4371:11;4346:10;:37::i;:::-;4338:46;;;:::i;4496:1143:71:-;4850:20;;;;:27;4778:29;;;;4850:32;;;;:92;;;4917:12;:25;;;-1:-1:-1;;;;;4886:56:71;:11;:28;;;-1:-1:-1;;;;;4886:56:71;;4850:92;4846:787;;;4958:19;4980:67;5008:8;5018:11;:28;;;4980:27;:67::i;:::-;4958:89;;5062:23;5088:37;5097:11;:20;;;:27;;;5088:8;:37::i;:::-;5248;;;;;;;;;;;:54;;;5204:41;;;;5062:63;;-1:-1:-1;5165:215:71;;5204:98;;5248:54;5204:98;:::i;:::-;5320:15;119:4:66;5165:21:71;:215::i;:::-;5494:37;;;;;;;;;;;:50;5454:37;;;;5140:240;;-1:-1:-1;5415:207:71;;5454:90;;5494:50;5454:90;:::i;5415:207::-;5394:228;;4944:689;;4846:787;4496:1143;;;;;;;:::o;2455:1251::-;2615:20;2637:16;2669:19;2698;2751:1;2732:9;:16;;;:20;2728:580;;;2834:9;:24;;;2782:22;:38;;;:49;;;:76;;;;:::i;:::-;2768:90;;2938:9;:24;;;2886:22;:38;;;:49;;;:76;;;;:::i;:::-;2872:90;;2728:580;;;2983:16;;3002:1;-1:-1:-1;2979:329:71;;;3095:9;:24;;;3033:22;:38;;;:59;;;:86;;;;:::i;:::-;3019:100;;3209:9;:24;;;3147:22;:38;;;:59;;;:86;;;;:::i;2979:329::-;3264:33;;;;2979:329;3318:11;3332:68;3354:9;:16;;;3372:11;-1:-1:-1;;;3332:21:71;:68::i;:::-;3318:82;;3410:11;3424:68;3446:9;:16;;;3464:11;-1:-1:-1;;;3424:21:71;:68::i;:::-;3410:82;;3507:22;:35;;;3503:197;;;3570:4;3558:16;;3604:4;3588:20;;3503:197;;;3655:4;3639:20;;3685:4;3673:16;;3503:197;2659:1047;;;;2455:1251;;;;;:::o;2699:232:77:-;2769:13;;:17;2765:126;;2859:6;2853:13;2844:6;2840:2;2836:15;2829:38;2765:126;2901:23;;-1:-1:-1;;;2901:23:77;;36842:2:129;2901:23:77;;;36824:21:129;36881:2;36861:18;;;36854:30;-1:-1:-1;;;36900:18:129;;;36893:43;36953:18;;2901:23:77;36640:337:129;1385:2759:46;1448:20;1504:15;1529:1;1522:4;:8;;;:57;;1573:4;1566:12;;1522:57;;;1549:4;1542:12;;1541:13;;1522:57;1504:75;-1:-1:-1;667:9:46;1597:35;;1593:51;;;1641:3;;-1:-1:-1;;;1641:3:46;;;;;;;;;;;1593:51;1659:13;1675:7;1685:3;1675:13;1692:1;1675:18;:125;;-1:-1:-1;;;1675:125:46;;;1712:34;1675:125;1659:141;;;-1:-1:-1;1828:3:46;1818:13;;:18;1814:83;;1855:34;1847:42;1894:3;1846:51;1814:83;1925:3;1915:13;;:18;1911:83;;1952:34;1944:42;1991:3;1943:51;1911:83;2022:3;2012:13;;:18;2008:83;;2049:34;2041:42;2088:3;2040:51;2008:83;2119:4;2109:14;;:19;2105:84;;2147:34;2139:42;2186:3;2138:51;2105:84;2217:4;2207:14;;:19;2203:84;;2245:34;2237:42;2284:3;2236:51;2203:84;2315:4;2305:14;;:19;2301:84;;2343:34;2335:42;2382:3;2334:51;2301:84;2413:4;2403:14;;:19;2399:84;;2441:34;2433:42;2480:3;2432:51;2399:84;2511:5;2501:15;;:20;2497:85;;2540:34;2532:42;2579:3;2531:51;2497:85;2610:5;2600:15;;:20;2596:85;;2639:34;2631:42;2678:3;2630:51;2596:85;2709:5;2699:15;;:20;2695:85;;2738:34;2730:42;2777:3;2729:51;2695:85;2808:5;2798:15;;:20;2794:85;;2837:34;2829:42;2876:3;2828:51;2794:85;2907:6;2897:16;;:21;2893:86;;2937:34;2929:42;2976:3;2928:51;2893:86;3007:6;2997:16;;:21;2993:86;;3037:34;3029:42;3076:3;3028:51;2993:86;3107:6;3097:16;;:21;3093:86;;3137:34;3129:42;3176:3;3128:51;3093:86;3207:6;3197:16;;:21;3193:86;;3237:34;3229:42;3276:3;3228:51;3193:86;3307:7;3297:17;;:22;3293:86;;3338:33;3330:41;3376:3;3329:50;3293:86;3407:7;3397:17;;:22;3393:85;;3438:32;3430:40;3475:3;3429:49;3393:85;3506:7;3496:17;;:22;3492:83;;3537:30;3529:38;3572:3;3528:47;3492:83;3603:7;3593:17;;:22;3589:78;;3634:25;3626:33;3664:3;3625:42;3589:78;3693:1;3686:4;:8;;;3682:47;;;3724:5;-1:-1:-1;;3704:25:46;;;;;:::i;:::-;;3696:33;;3682:47;4104:7;4095:5;:17;:22;:30;;4124:1;4095:30;;;4120:1;4095:30;4078:48;;4088:2;4079:5;:11;;4078:48;4055:72;;1480:2658;;1385:2759;;;:::o;4860:436:75:-;4991:7;5053:1;5022:12;:27;;;:32;;5014:47;;;;-1:-1:-1;;;5014:47:75;;37184:2:129;5014:47:75;;;37166:21:129;37223:1;37203:18;;;37196:29;-1:-1:-1;;;37241:18:129;;;37234:32;37283:18;;5014:47:75;36982:325:129;5014:47:75;5079:210;5146:12;:26;;;5121:10;:22;;;:51;;;;:::i;:::-;5224:27;;119:4:66;5079:28:75;:210::i;5302:433::-;5432:7;5494:1;5463:12;:27;;;:32;;5455:47;;;;-1:-1:-1;;;5455:47:75;;37184:2:129;5455:47:75;;;37166:21:129;37223:1;37203:18;;;37196:29;-1:-1:-1;;;37241:18:129;;;37234:32;37283:18;;5455:47:75;36982:325:129;5455:47:75;5520:208;5584:12;:26;;;5560:10;:21;;;:50;;;;:::i;:::-;5663:27;;5662:28;;;:::i;:::-;119:4:66;5520:26:75;:208::i;85:164:69:-;175:7;-1:-1:-1;;;;;201:41:69;;;;:26;;:7;:26;:::i;:::-;:41;;;;:::i;143:103:87:-;189:7;228:1;223;:6;;:15;;236:2;237:1;236:2;:::i;:::-;223:15;;472:342;556:6;578:2;584:1;578:7;574:234;;-1:-1:-1;608:1:87;601:8;;574:234;635:1;630:2;:6;626:182;;;666:36;690:2;695;699;666:15;:36::i;:::-;652:51;;;;626:182;749:47;783:3;784:2;783:3;:::i;:::-;789:2;793;749:25;:47::i;:::-;741:56;;;:::i;1564:526:31:-;1680:9;1928:1;-1:-1:-1;;1911:19:31;1908:1;1905:26;1902:1;1898:34;1891:42;1878:11;1874:60;1864:116;;1964:1;1961;1954:12;1864:116;-1:-1:-1;2051:9:31;;2047:27;;1564:526::o;2096:672::-;2210:9;2458:1;-1:-1:-1;;2441:19:31;2438:1;2435:26;2432:1;2428:34;2421:42;2408:11;2404:60;2394:116;;2494:1;2491;2484:12;2394:116;-1:-1:-1;2728:9:31;;2691:27;;;2688:34;;2724:27;;;2684:68;;2096:672::o;741:4127:45:-;853:14;;;-1:-1:-1;;1416:1:45;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;;1615:5;1624:1;1615:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;-1:-1:-1;1728:23:45;;;;-1:-1:-1;1786:13:45;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2736:12;2752:15;;;2751:31;;2888:22;;;;;3763:1;3744;:15;;3743:21;;4006:17;;;4002:21;;3995:28;4068:17;;;4064:21;;4057:28;4131:17;;;4127:21;;4120:28;4194:17;;;4190:21;;4183:28;4257:17;;;4253:21;;4246:28;4321:17;;;4317:21;;;4310:28;3300:12;;;;3296:23;;;3321:1;3292:31;2489:20;;;2478:32;;;3359:12;;;;2536:21;;;;3032:16;;;;3350:21;;;;4813:11;;;;;-1:-1:-1;;741:4127:45;;;;;:::o;5150:365::-;5272:14;5331:25;5338:1;5341;5344:11;5331:6;:25::i;:::-;5322:34;;5402:1;5387:11;5374:25;;;;;:::i;:::-;5384:1;5381;5374:25;:29;5370:129;;;-1:-1:-1;;5431:6:45;:26;5423:35;;;;;;5476:8;;5150:365;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:129;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:129;;14:180;-1:-1:-1;14:180:129:o;516:127::-;577:10;572:3;568:20;565:1;558:31;608:4;605:1;598:15;632:4;629:1;622:15;648:253;720:2;714:9;762:4;750:17;;-1:-1:-1;;;;;782:34:129;;818:22;;;779:62;776:88;;;844:18;;:::i;:::-;880:2;873:22;648:253;:::o;906:255::-;978:2;972:9;1020:6;1008:19;;-1:-1:-1;;;;;1042:34:129;;1078:22;;;1039:62;1036:88;;;1104:18;;:::i;1166:253::-;1238:2;1232:9;1280:4;1268:17;;-1:-1:-1;;;;;1300:34:129;;1336:22;;;1297:62;1294:88;;;1362:18;;:::i;1424:253::-;1496:2;1490:9;1538:4;1526:17;;-1:-1:-1;;;;;1558:34:129;;1594:22;;;1555:62;1552:88;;;1620:18;;:::i;1682:253::-;1754:2;1748:9;1796:4;1784:17;;-1:-1:-1;;;;;1816:34:129;;1852:22;;;1813:62;1810:88;;;1878:18;;:::i;1940:275::-;2011:2;2005:9;2076:2;2057:13;;-1:-1:-1;;2053:27:129;2041:40;;-1:-1:-1;;;;;2096:34:129;;2132:22;;;2093:62;2090:88;;;2158:18;;:::i;:::-;2194:2;2187:22;1940:275;;-1:-1:-1;1940:275:129:o;2220:131::-;-1:-1:-1;;;;;2295:31:129;;2285:42;;2275:70;;2341:1;2338;2331:12;2275:70;2220:131;:::o;2356:134::-;2424:20;;2453:31;2424:20;2453:31;:::i;2495:114::-;2579:4;2572:5;2568:16;2561:5;2558:27;2548:55;;2599:1;2596;2589:12;2614:130;2680:20;;2709:29;2680:20;2709:29;:::i;2749:118::-;2836:5;2833:1;2822:20;2815:5;2812:31;2802:59;;2857:1;2854;2847:12;2872:497;2934:5;2982:4;2970:9;2965:3;2961:19;2957:30;2954:50;;;3000:1;2997;2990:12;2954:50;3022:22;;:::i;:::-;3013:31;;3080:9;3067:23;3060:5;3053:38;3143:2;3132:9;3128:18;3115:32;3156:31;3179:7;3156:31;:::i;:::-;3214:2;3203:14;;3196:31;3279:2;3264:18;;3251:32;3292:31;3251:32;3292:31;:::i;:::-;3350:2;3339:14;;3332:31;3343:5;2872:497;-1:-1:-1;;2872:497:129:o;3374:606::-;3430:5;3478:4;3466:9;3461:3;3457:19;3453:30;3450:50;;;3496:1;3493;3486:12;3450:50;3529:2;3523:9;3571:4;3563:6;3559:17;3642:6;3630:10;3627:22;-1:-1:-1;;;;;3594:10:129;3591:34;3588:62;3585:88;;;3653:18;;:::i;:::-;3693:10;3689:2;3682:22;;3722:6;3713:15;;3765:9;3752:23;3744:6;3737:39;3837:2;3826:9;3822:18;3809:32;3804:2;3796:6;3792:15;3785:57;3903:2;3892:9;3888:18;3875:32;3870:2;3862:6;3858:15;3851:57;3969:2;3958:9;3954:18;3941:32;3936:2;3928:6;3924:15;3917:57;;3374:606;;;;:::o;3985:860::-;4076:6;4129:3;4117:9;4108:7;4104:23;4100:33;4097:53;;;4146:1;4143;4136:12;4097:53;4172:22;;:::i;:::-;4217:29;4236:9;4217:29;:::i;:::-;4210:5;4203:44;4279:38;4313:2;4302:9;4298:18;4279:38;:::i;:::-;4274:2;4267:5;4263:14;4256:62;4350:38;4384:2;4373:9;4369:18;4350:38;:::i;:::-;4345:2;4338:5;4334:14;4327:62;4421:38;4455:2;4444:9;4440:18;4421:38;:::i;:::-;4416:2;4409:5;4405:14;4398:62;4493:37;4525:3;4514:9;4510:19;4493:37;:::i;:::-;4487:3;4480:5;4476:15;4469:62;4564:63;4619:7;4613:3;4602:9;4598:19;4564:63;:::i;:::-;4558:3;4551:5;4547:15;4540:88;4662:60;4714:7;4705:6;4694:9;4690:22;4662:60;:::i;:::-;4655:4;4648:5;4644:16;4637:86;4757:57;4806:7;4800:3;4789:9;4785:19;4757:57;:::i;:::-;4750:4;4739:16;;4732:83;4743:5;3985:860;-1:-1:-1;;;3985:860:129:o;5407:530::-;5449:5;5502:3;5495:4;5487:6;5483:17;5479:27;5469:55;;5520:1;5517;5510:12;5469:55;5556:6;5543:20;-1:-1:-1;;;;;5578:2:129;5575:26;5572:52;;;5604:18;;:::i;:::-;5648:55;5691:2;5672:13;;-1:-1:-1;;5668:27:129;5697:4;5664:38;5648:55;:::i;:::-;5728:2;5719:7;5712:19;5774:3;5767:4;5762:2;5754:6;5750:15;5746:26;5743:35;5740:55;;;5791:1;5788;5781:12;5740:55;5856:2;5849:4;5841:6;5837:17;5830:4;5821:7;5817:18;5804:55;5904:1;5879:16;;;5897:4;5875:27;5868:38;;;;5883:7;5407:530;-1:-1:-1;;;5407:530:129:o;5942:688::-;6003:5;6051:4;6039:9;6034:3;6030:19;6026:30;6023:50;;;6069:1;6066;6059:12;6023:50;6102:4;6096:11;6146:4;6138:6;6134:17;-1:-1:-1;;;;;6238:6:129;6226:10;6223:22;6218:2;6206:10;6203:18;6200:46;6197:72;;;6249:18;;:::i;:::-;6291:10;6285:4;6278:24;6320:6;6311:15;;6363:9;6350:23;6335:38;;6382:33;6407:7;6382:33;:::i;:::-;6424:23;;;6498:2;6483:18;;6470:32;;6514:14;;;6511:34;;;6541:1;6538;6531:12;6511:34;;6578:45;6619:3;6610:6;6599:9;6595:22;6578:45;:::i;:::-;6573:2;6565:6;6561:15;6554:70;;;5942:688;;;;:::o;6635:428::-;6736:6;6744;6797:2;6785:9;6776:7;6772:23;6768:32;6765:52;;;6813:1;6810;6803:12;6765:52;6849:9;6836:23;6826:33;;6910:2;6899:9;6895:18;6882:32;-1:-1:-1;;;;;6929:6:129;6926:30;6923:50;;;6969:1;6966;6959:12;6923:50;6992:65;7049:7;7040:6;7029:9;7025:22;6992:65;:::i;:::-;6982:75;;;6635:428;;;;;:::o;7356:247::-;7423:6;7431;7484:2;7472:9;7463:7;7459:23;7455:32;7452:52;;;7500:1;7497;7490:12;7452:52;-1:-1:-1;;7523:23:129;;;7593:2;7578:18;;;7565:32;;-1:-1:-1;7356:247:129:o;8301:118::-;8387:5;8380:13;8373:21;8366:5;8363:32;8353:60;;8409:1;8406;8399:12;8424:377;8498:6;8506;8514;8567:2;8555:9;8546:7;8542:23;8538:32;8535:52;;;8583:1;8580;8573:12;8535:52;8619:9;8606:23;8596:33;;8679:2;8668:9;8664:18;8651:32;8692:28;8714:5;8692:28;:::i;:::-;8424:377;;8739:5;;-1:-1:-1;;;8791:2:129;8776:18;;;;8763:32;;8424:377::o;9440:496::-;9550:6;9558;9566;9619:2;9607:9;9598:7;9594:23;9590:32;9587:52;;;9635:1;9632;9625:12;9587:52;9671:9;9658:23;9648:33;;9728:2;9717:9;9713:18;9700:32;9690:42;;9783:2;9772:9;9768:18;9755:32;-1:-1:-1;;;;;9802:6:129;9799:30;9796:50;;;9842:1;9839;9832:12;9796:50;9865:65;9922:7;9913:6;9902:9;9898:22;9865:65;:::i;:::-;9855:75;;;9440:496;;;;;:::o;11651:1537::-;11791:4;11833:3;11822:9;11818:19;11810:27;;11870:6;11864:13;11853:9;11846:32;11925:4;11917:6;11913:17;11907:24;11967:1;11963;11958:3;11954:11;11950:19;12025:2;12011:12;12007:21;12000:4;11989:9;11985:20;11978:51;12097:2;12089:4;12081:6;12077:17;12071:24;12067:33;12060:4;12049:9;12045:20;12038:63;12169:2;12161:4;12153:6;12149:17;12143:24;12139:33;12132:4;12121:9;12117:20;12110:63;;;12229:4;12221:6;12217:17;12211:24;12204:4;12193:9;12189:20;12182:54;12285:4;12277:6;12273:17;12267:24;12335:14;12329:21;12322:4;12311:9;12307:20;12300:51;12428:4;12412:14;12408:25;12402:32;12399:1;12388:47;12382:3;12371:9;12367:19;12360:76;12513:4;12497:14;12493:25;12487:32;12484:1;12473:47;12467:3;12456:9;12452:19;12445:76;-1:-1:-1;;;;;12588:4:129;12572:14;12568:25;12562:32;12558:57;12552:3;12541:9;12537:19;12530:86;12673:4;12657:14;12653:25;12647:32;12688:69;12752:3;12741:9;12737:19;12721:14;11183:12;;11171:25;;11245:4;11234:16;;;11228:23;11212:14;;11205:47;11103:155;12688:69;-1:-1:-1;12814:4:129;12794:25;;;12788:32;11347:12;;12897:3;12882:19;;11335:25;11409:4;11398:16;;;11392:23;11376:14;;;11369:47;11465:4;11454:16;;11448:23;11432:14;;;11425:47;11521:4;11510:16;;11504:23;11488:14;;;11481:47;11577:4;11566:16;;11560:23;11544:14;;;11537:47;11622:16;;11616:23;11600:14;;;11593:47;12959:3;12939:24;;12933:31;11183:12;;13037:3;13022:19;;11171:25;11234:16;;11228:23;11212:14;;;11205:47;13099:3;13079:24;;;13073:31;11183:12;;13177:3;13162:19;;11171:25;11234:16;;;11228:23;11212:14;;;11205:47;13113:69;11103:155;13193:1085;13324:6;13332;13385:2;13373:9;13364:7;13360:23;13356:32;13353:52;;;13401:1;13398;13391:12;13353:52;13441:9;13428:23;-1:-1:-1;;;;;13511:2:129;13503:6;13500:14;13497:34;;;13527:1;13524;13517:12;13497:34;13550:22;;;;13606:4;13588:16;;;13584:27;13581:47;;;13624:1;13621;13614:12;13581:47;13650:22;;:::i;:::-;13708:2;13695:16;13688:5;13681:31;13765:2;13761;13757:11;13744:25;13739:2;13732:5;13728:14;13721:49;13823:2;13819;13815:11;13802:25;13797:2;13790:5;13786:14;13779:49;13881:2;13877;13873:11;13860:25;13855:2;13848:5;13844:14;13837:49;13932:3;13928:2;13924:12;13911:26;13962:2;13952:8;13949:16;13946:36;;;13978:1;13975;13968:12;13946:36;14015:44;14051:7;14040:8;14036:2;14032:17;14015:44;:::i;:::-;14009:3;13998:15;;13991:69;-1:-1:-1;14002:5:129;-1:-1:-1;14137:2:129;14122:18;;14109:32;;-1:-1:-1;14153:16:129;;;14150:36;;;14182:1;14179;14172:12;14150:36;;14205:67;14264:7;14253:8;14242:9;14238:24;14205:67;:::i;14283:315::-;14351:6;14359;14412:2;14400:9;14391:7;14387:23;14383:32;14380:52;;;14428:1;14425;14418:12;14380:52;14464:9;14451:23;14441:33;;14524:2;14513:9;14509:18;14496:32;14537:31;14562:5;14537:31;:::i;:::-;14587:5;14577:15;;;14283:315;;;;;:::o;14603:450::-;14677:6;14685;14693;14746:2;14734:9;14725:7;14721:23;14717:32;14714:52;;;14762:1;14759;14752:12;14714:52;14801:9;14788:23;14820:28;14842:5;14820:28;:::i;:::-;14867:5;-1:-1:-1;14924:2:129;14909:18;;14896:32;14937:33;14896:32;14937:33;:::i;15325:857::-;15421:1;15417;15412:3;15408:11;15404:19;15462:2;15454:5;15448:12;15444:21;15439:3;15432:34;15527:2;15519:4;15512:5;15508:16;15502:23;15498:32;15491:4;15486:3;15482:14;15475:56;;15577:4;15570:5;15566:16;15560:23;15621:12;15615:19;15608:4;15603:3;15599:14;15592:43;15689:4;15675:12;15671:23;15665:30;15660:2;15655:3;15651:12;15644:52;15751:4;15737:12;15733:23;15727:30;15721:3;15716;15712:13;15705:53;15813:2;15799:12;15795:21;15789:28;15783:3;15778;15774:13;15767:51;15873:3;15859:12;15855:22;15849:29;15843:3;15838;15834:13;15827:52;15934:3;15920:12;15916:22;15910:29;15904:3;15899;15895:13;15888:52;;15988:2;15981:5;15977:14;15971:21;16001:61;16054:6;16049:3;16045:16;16029:14;15139:5;15133:12;15128:3;15121:25;15195:4;15188:5;15184:16;15178:23;15171:4;15166:3;15162:14;15155:47;15251:4;15244:5;15240:16;15234:23;15227:4;15222:3;15218:14;15211:47;15307:4;15300:5;15296:16;15290:23;15283:4;15278:3;15274:14;15267:47;;;15058:262;16001:61;-1:-1:-1;16113:3:129;16102:15;;16096:22;16087:6;16078:16;;16071:48;16170:3;16159:15;16153:22;16144:6;16135:16;;;16128:48;15325:857::o;16434:1471::-;16526:12;;-1:-1:-1;;;;;265:31:129;253:44;;16590:4;16583:5;16579:16;16573:23;16605:46;16645:4;16640:3;16636:14;16622:12;10975:1;10964:20;10952:33;;10900:91;16605:46;;16699:4;16692:5;16688:16;16682:23;16714:48;16756:4;16751:3;16747:14;16731;10975:1;10964:20;10952:33;;10900:91;16714:48;;16810:4;16803:5;16799:16;16793:23;16825:49;16868:4;16863:3;16859:14;16843;-1:-1:-1;;;;;11061:30:129;11049:43;;10996:102;16825:49;-1:-1:-1;16923:4:129;16912:16;;;16906:23;16890:14;;;16883:47;16979:4;16968:16;;;16962:23;16946:14;;;16939:47;17035:4;17024:16;;;17018:23;17002:14;;;16995:47;17091:4;17080:16;;;17074:23;17058:14;;;17051:47;17117:6;17159:14;;;17153:21;17139:12;;;17132:43;17194:6;17236:14;;;17230:21;17216:12;;;17209:43;17271:6;17313:14;;;17307:21;17293:12;;;17286:43;17348:6;17390:14;;;17384:21;17370:12;;;17363:43;17425:6;17467:14;;;17461:21;17447:12;;;17440:43;17502:6;17545:14;;;17539:21;11183:12;;17618;;;11171:25;11245:4;11234:16;;11228:23;11212:14;;;11205:47;17569:62;;17679:6;17672:5;17668:18;17662:25;17706:6;17721:62;17779:2;17774:3;17770:12;17754:14;11183:12;;11171:25;;11245:4;11234:16;;;11228:23;11212:14;;11205:47;11103:155;17721:62;17823:14;;17817:21;17808:6;17799:16;;17792:47;-1:-1:-1;17890:6:129;17879:18;17873:25;17864:6;17855:16;;;17848:51;16434:1471::o;17990:1462::-;18214:13;;18196:32;;18275:4;18263:17;;;18257:24;18182:4;18167:20;;;18290:54;;18323:20;;18257:24;-1:-1:-1;;;;;265:31:129;253:44;;199:104;18290:54;;18393:4;18385:6;18381:17;18375:24;18408:56;18458:4;18447:9;18443:20;18427:14;-1:-1:-1;;;;;265:31:129;253:44;;199:104;18408:56;;18513:4;18505:6;18501:17;18495:24;18528:71;18593:4;18582:9;18578:20;18562:14;18528:71;:::i;:::-;;18648:4;18640:6;18636:17;18630:24;18663:73;18728:6;18717:9;18713:22;18697:14;18663:73;:::i;:::-;-1:-1:-1;18785:4:129;18773:17;;18767:24;16268:12;;18865:6;18850:22;;16256:25;16344:4;16333:16;;16327:23;16324:1;16313:38;;;16297:14;;;16290:62;16415:4;16404:16;;16398:23;16384:38;;16368:14;;;16361:62;18800:73;18922:4;18914:6;18910:17;18904:24;18937:77;19006:6;18995:9;18991:22;18975:14;18937:77;:::i;:::-;-1:-1:-1;19063:4:129;19051:17;;19045:24;-1:-1:-1;;;;;265:31:129;19128:6;19113:22;;253:44;19185:6;19173:19;;19167:26;7138:13;7131:21;19249:6;19234:22;;7119:34;19306:6;19294:19;;19288:26;17977:4;17966:16;19371:6;19356:22;;17954:29;19437:6;19425:19;;;19419:26;19410:6;19395:22;;;19388:58;17990:1462;:::o;19457:727::-;19545:6;19553;19561;19569;19622:2;19610:9;19601:7;19597:23;19593:32;19590:52;;;19638:1;19635;19628:12;19590:52;19674:9;19661:23;19651:33;;19731:2;19720:9;19716:18;19703:32;19693:42;;19786:2;19775:9;19771:18;19758:32;-1:-1:-1;;;;;19850:2:129;19842:6;19839:14;19836:34;;;19866:1;19863;19856:12;19836:34;19904:6;19893:9;19889:22;19879:32;;19949:7;19942:4;19938:2;19934:13;19930:27;19920:55;;19971:1;19968;19961:12;19920:55;20011:2;19998:16;20037:2;20029:6;20026:14;20023:34;;;20053:1;20050;20043:12;20023:34;20098:7;20093:2;20084:6;20080:2;20076:15;20072:24;20069:37;20066:57;;;20119:1;20116;20109:12;20066:57;19457:727;;;;-1:-1:-1;;20150:2:129;20142:11;;-1:-1:-1;;;19457:727:129:o;20189:247::-;20248:6;20301:2;20289:9;20280:7;20276:23;20272:32;20269:52;;;20317:1;20314;20307:12;20269:52;20356:9;20343:23;20375:31;20400:5;20375:31;:::i;20728:1247::-;20996:4;21038:3;21027:9;21023:19;21015:27;;21069:6;21058:9;21051:25;21112:6;21107:2;21096:9;21092:18;21085:34;21155:1;21151;21146:3;21142:11;21138:19;21212:2;21203:6;21197:13;21193:22;21188:2;21177:9;21173:18;21166:50;21280:2;21274;21266:6;21262:15;21256:22;21252:31;21247:2;21236:9;21232:18;21225:59;21349:2;21343;21335:6;21331:15;21325:22;21321:31;21315:3;21304:9;21300:19;21293:60;;21400:2;21392:6;21388:15;21382:22;21413:53;21461:3;21450:9;21446:19;21432:12;-1:-1:-1;;;;;265:31:129;253:44;;199:104;21413:53;-1:-1:-1;21515:3:129;21503:16;;21497:23;17977:4;17966:16;;21577:3;21562:19;;17954:29;-1:-1:-1;21631:3:129;21619:16;;21613:23;16268:12;;21710:3;21695:19;;16256:25;16344:4;16333:16;;16327:23;16324:1;16313:38;;;16297:14;;;16290:62;16415:4;16404:16;;16398:23;16384:38;;16368:14;;;16361:62;-1:-1:-1;21764:3:129;21752:16;;21746:23;15133:12;;21837:3;21822:19;;15121:25;15195:4;15184:16;;15178:23;15162:14;;;15155:47;15251:4;15240:16;;15234:23;15218:14;;;15211:47;15307:4;15296:16;;15290:23;15274:14;;;15267:47;-1:-1:-1;21891:3:129;21879:16;;21873:23;15133:12;;21964:3;21949:19;;15121:25;15195:4;15184:16;;15178:23;15162:14;;;15155:47;15251:4;15240:16;;15234:23;15218:14;;;15211:47;15307:4;15296:16;;15290:23;15274:14;;;15267:47;21905:64;20728:1247;;;;;;:::o;21980:184::-;22050:6;22103:2;22091:9;22082:7;22078:23;22074:32;22071:52;;;22119:1;22116;22109:12;22071:52;-1:-1:-1;22142:16:129;;21980:184;-1:-1:-1;21980:184:129:o;22169:250::-;22254:1;22264:113;22278:6;22275:1;22272:13;22264:113;;;22354:11;;;22348:18;22335:11;;;22328:39;22300:2;22293:10;22264:113;;;-1:-1:-1;;22411:1:129;22393:16;;22386:27;22169:250::o;22424:270::-;22465:3;22503:5;22497:12;22530:6;22525:3;22518:19;22546:76;22615:6;22608:4;22603:3;22599:14;22592:4;22585:5;22581:16;22546:76;:::i;:::-;22676:2;22655:15;-1:-1:-1;;22651:29:129;22642:39;;;;22683:4;22638:50;;22424:270;-1:-1:-1;;22424:270:129:o;22699:283::-;22821:1;22817;22812:3;22808:11;22804:19;22796:5;22790:12;22786:38;22781:3;22774:51;22756:3;22871:4;22864:5;22860:16;22854:23;22909:4;22902;22897:3;22893:14;22886:28;22930:46;22970:4;22965:3;22961:14;22947:12;22930:46;:::i;22987:457::-;23272:6;23261:9;23254:25;23315:6;23310:2;23299:9;23295:18;23288:34;23358:2;23353;23342:9;23338:18;23331:30;23235:4;23378:60;23434:2;23423:9;23419:18;23411:6;23378:60;:::i;:::-;23370:68;22987:457;-1:-1:-1;;;;;22987:457:129:o;23449:245::-;23516:6;23569:2;23557:9;23548:7;23544:23;23540:32;23537:52;;;23585:1;23582;23575:12;23537:52;23617:9;23611:16;23636:28;23658:5;23636:28;:::i;24495:245::-;24574:6;24582;24635:2;24623:9;24614:7;24610:23;24606:32;24603:52;;;24651:1;24648;24641:12;24603:52;-1:-1:-1;;24674:16:129;;24730:2;24715:18;;;24709:25;24674:16;;24709:25;;-1:-1:-1;24495:245:129:o;24745:406::-;24848:6;24901:2;24889:9;24880:7;24876:23;24872:32;24869:52;;;24917:1;24914;24907:12;24869:52;24943:22;;:::i;:::-;24994:9;24988:16;24981:5;24974:31;25058:2;25047:9;25043:18;25037:25;25032:2;25025:5;25021:14;25014:49;25116:2;25105:9;25101:18;25095:25;25090:2;25083:5;25079:14;25072:49;25140:5;25130:15;;;24745:406;;;;:::o;25156:530::-;25469:6;25458:9;25451:25;25512:6;25507:2;25496:9;25492:18;25485:34;25555:6;25550:2;25539:9;25535:18;25528:34;25598:3;25593:2;25582:9;25578:18;25571:31;25432:4;25619:61;25675:3;25664:9;25660:19;25652:6;25619:61;:::i;:::-;25611:69;25156:530;-1:-1:-1;;;;;;25156:530:129:o;25691:1094::-;25791:6;25835:9;25826:7;25822:23;25865:3;25861:2;25857:12;25854:32;;;25882:1;25879;25872:12;25854:32;25908:22;;:::i;:::-;25950:4;25946:2;25942:13;25939:33;;;25968:1;25965;25958:12;25939:33;25996:22;;:::i;:::-;25981:37;;26049:9;26043:16;26034:7;26027:33;26115:2;26104:9;26100:18;26094:25;26089:2;26080:7;26076:16;26069:51;26175:2;26164:9;26160:18;26154:25;26149:2;26140:7;26136:16;26129:51;26235:2;26224:9;26220:18;26214:25;26209:2;26200:7;26196:16;26189:51;26296:3;26285:9;26281:19;26275:26;26269:3;26260:7;26256:17;26249:53;26358:3;26347:9;26343:19;26337:26;26331:3;26322:7;26318:17;26311:53;26387:7;26380:5;26373:22;26448:4;26437:9;26433:20;26427:27;26422:2;26415:5;26411:14;26404:51;26508:4;26497:9;26493:20;26487:27;26482:2;26475:5;26471:14;26464:51;26568:3;26557:9;26553:19;26547:26;26542:2;26535:5;26531:14;26524:50;26628:3;26617:9;26613:19;26607:26;26601:3;26594:5;26590:15;26583:51;26688:3;26677:9;26673:19;26667:26;26661:3;26654:5;26650:15;26643:51;26749:3;26738:9;26734:19;26728:26;26721:4;26714:5;26710:16;26703:52;26774:5;26764:15;;;;25691:1094;;;;:::o;26790:915::-;27135:6;27124:9;27117:25;27178:2;27173;27162:9;27158:18;27151:30;27223:6;27217:13;27212:2;27201:9;27197:18;27190:41;27286:2;27278:6;27274:15;27268:22;27262:3;27251:9;27247:19;27240:51;27347:4;27339:6;27335:17;27329:24;27322:4;27311:9;27307:20;27300:54;27409:2;27401:6;27397:15;27391:22;27385:3;27374:9;27370:19;27363:51;27098:4;27461:3;27453:6;27449:16;27443:23;27503:4;27497:3;27486:9;27482:19;27475:33;27528:51;27574:3;27563:9;27559:19;27545:12;27528:51;:::i;:::-;27517:62;;27626:9;27621:3;27617:19;27610:4;27599:9;27595:20;27588:49;27654:45;27695:3;27687:6;27654:45;:::i;27918:251::-;27988:6;28041:2;28029:9;28020:7;28016:23;28012:32;28009:52;;;28057:1;28054;28047:12;28009:52;28089:9;28083:16;28108:31;28133:5;28108:31;:::i;28174:163::-;28252:13;;28305:6;28294:18;;28284:29;;28274:57;;28327:1;28324;28317:12;28342:892;28456:6;28464;28472;28480;28488;28496;28504;28557:3;28545:9;28536:7;28532:23;28528:33;28525:53;;;28574:1;28571;28564:12;28525:53;28606:9;28600:16;28625:31;28650:5;28625:31;:::i;:::-;28725:2;28710:18;;28704:25;28675:5;;-1:-1:-1;28738:31:129;28704:25;28738:31;:::i;:::-;28788:7;-1:-1:-1;28814:48:129;28858:2;28843:18;;28814:48;:::i;:::-;28804:58;;28881:48;28925:2;28914:9;28910:18;28881:48;:::i;:::-;28871:58;;28948:49;28992:3;28981:9;28977:19;28948:49;:::i;:::-;28938:59;;29042:3;29031:9;29027:19;29021:26;29056:31;29079:7;29056:31;:::i;:::-;29158:3;29143:19;;29137:26;29106:7;;-1:-1:-1;29172:30:129;29137:26;29172:30;:::i;:::-;29221:7;29211:17;;;28342:892;;;;;;;;;;:::o;29239:127::-;29300:10;29295:3;29291:20;29288:1;29281:31;29331:4;29328:1;29321:15;29355:4;29352:1;29345:15;29371:127;29432:10;29427:3;29423:20;29420:1;29413:31;29463:4;29460:1;29453:15;29487:4;29484:1;29477:15;29503:120;29543:1;29569;29559:35;;29574:18;;:::i;:::-;-1:-1:-1;29608:9:129;;29503:120::o;29628:168::-;29701:9;;;29732;;29749:15;;;29743:22;;29729:37;29719:71;;29770:18;;:::i;29801:200::-;29867:9;;;29840:4;29895:9;;29923:10;;29935:12;;;29919:29;29958:12;;;29950:21;;29916:56;29913:82;;;29975:18;;:::i;30006:216::-;30070:9;;;30098:11;;;30045:3;30128:9;;30156:10;;30152:19;;30181:10;;30173:19;;30149:44;30146:70;;;30196:18;;:::i;:::-;30146:70;;30006:216;;;;:::o;30227:135::-;30266:3;30287:17;;;30284:43;;30307:18;;:::i;:::-;-1:-1:-1;30354:1:129;30343:13;;30227:135::o;30646:287::-;30775:3;30813:6;30807:13;30829:66;30888:6;30883:3;30876:4;30868:6;30864:17;30829:66;:::i;:::-;30911:16;;;;;30646:287;-1:-1:-1;;30646:287:129:o;31268:125::-;31333:9;;;31354:10;;;31351:36;;;31367:18;;:::i;31807:136::-;31842:3;-1:-1:-1;;;31863:22:129;;31860:48;;31888:18;;:::i;:::-;-1:-1:-1;31928:1:129;31924:13;;31807:136::o;31948:237::-;32020:9;;;31987:7;32045:9;;-1:-1:-1;;;32056:18:129;;32041:34;32038:60;;;32078:18;;:::i;:::-;32151:1;32142:7;32137:16;32134:1;32131:23;32127:1;32120:9;32117:38;32107:72;;32159:18;;:::i;32190:193::-;32229:1;32255;32245:35;;32260:18;;:::i;:::-;-1:-1:-1;;;32296:18:129;;-1:-1:-1;;32316:13:129;;32292:38;32289:64;;;32333:18;;:::i;:::-;-1:-1:-1;32367:10:129;;32190:193::o;32388:127::-;32449:10;32444:3;32440:20;32437:1;32430:31;32480:4;32477:1;32470:15;32504:4;32501:1;32494:15;32520:647;32689:2;32741:21;;;32811:13;;32714:18;;;32833:22;;;32660:4;;32689:2;32912:15;;;;32886:2;32871:18;;;32660:4;32955:186;32969:6;32966:1;32963:13;32955:186;;;33034:13;;33049:10;33030:30;33018:43;;33116:15;;;;33081:12;;;;32991:1;32984:9;32955:186;;;-1:-1:-1;33158:3:129;;32520:647;-1:-1:-1;;;;;;32520:647:129:o;33503:168::-;33570:6;33596:10;;;33608;;;33592:27;;33631:11;;;33628:37;;;33645:18;;:::i;33676:179::-;33707:1;33733:6;33766:2;33763:1;33759:10;33788:3;33778:37;;33795:18;;:::i;:::-;33833:10;;33829:20;;;;;33676:179;-1:-1:-1;;33676:179:129:o;34054:164::-;34131:13;;34184:1;34173:20;;;34163:31;;34153:59;;34208:1;34205;34198:12;34223:624;34314:6;34322;34330;34338;34391:3;34379:9;34370:7;34366:23;34362:33;34359:53;;;34408:1;34405;34398:12;34359:53;34440:9;34434:16;34490:10;34483:5;34479:22;34472:5;34469:33;34459:61;;34516:1;34513;34506:12;34459:61;34539:5;-1:-1:-1;34563:47:129;34606:2;34591:18;;34563:47;:::i;:::-;34553:57;;34655:2;34644:9;34640:18;34634:25;34668:33;34693:7;34668:33;:::i;:::-;34772:2;34757:18;;34751:25;34720:7;;-1:-1:-1;34785:30:129;34751:25;34785:30;:::i;:::-;34223:624;;;;-1:-1:-1;34223:624:129;;-1:-1:-1;;34223:624:129:o;35042:128::-;35109:9;;;35130:11;;;35127:37;;;35144:18;;:::i;35175:956::-;35268:6;35299:2;35342;35330:9;35321:7;35317:23;35313:32;35310:52;;;35358:1;35355;35348:12;35310:52;35391:9;35385:16;-1:-1:-1;;;;;35461:2:129;35453:6;35450:14;35447:34;;;35477:1;35474;35467:12;35447:34;35515:6;35504:9;35500:22;35490:32;;35560:7;35553:4;35549:2;35545:13;35541:27;35531:55;;35582:1;35579;35572:12;35531:55;35611:2;35605:9;35633:2;35629;35626:10;35623:36;;;35639:18;;:::i;:::-;35685:2;35682:1;35678:10;35668:20;;35708:28;35732:2;35728;35724:11;35708:28;:::i;:::-;35770:15;;;35840:11;;;35836:20;;;35801:12;;;;35868:19;;;35865:39;;;35900:1;35897;35890:12;35865:39;35924:11;;;;35944:157;35960:6;35955:3;35952:15;35944:157;;;36026:32;36054:3;36026:32;:::i;:::-;36014:45;;35977:12;;;;36079;;;;35944:157;;;36120:5;35175:956;-1:-1:-1;;;;;;;;35175:956:129:o;36136:210::-;36234:1;36223:16;;;36205;;;;36201:39;-1:-1:-1;;36255:32:129;;36299:16;36289:27;;36252:65;36249:91;;;36320:18;;:::i;36351:284::-;36389:1;36430;36427;36416:16;36466:1;36463;36452:16;36487:3;36477:37;;36494:18;;:::i;:::-;-1:-1:-1;;36530:30:129;;-1:-1:-1;;36562:15:129;;36526:52;36523:78;;;36581:18;;:::i;:::-;36615:14;;;36351:284;-1:-1:-1;;;36351:284:129:o",
    "linkReferences": {
      "src/libraries/logic/AddPairLogic.sol": {
        "AddPairLogic": [
          {
            "start": 1402,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "LiquidationLogic": [
          {
            "start": 4016,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/MarginLogic.sol": {
        "MarginLogic": [
          {
            "start": 3593,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReaderLogic.sol": {
        "ReaderLogic": [
          {
            "start": 1240,
            "length": 20
          },
          {
            "start": 1350,
            "length": 20
          },
          {
            "start": 3893,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "ReallocationLogic": [
          {
            "start": 3429,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "SupplyLogic": [
          {
            "start": 3723,
            "length": 20
          },
          {
            "start": 6666,
            "length": 20
          }
        ]
      },
      "src/libraries/logic/TradeLogic.sol": {
        "TradeLogic": [
          {
            "start": 4584,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "allowedUniswapPools(address)": "f3eb8cd8",
    "createVault(uint256)": "9abbdf4b",
    "execLiquidationCall(uint256,uint256,(address,bytes))": "91d0370f",
    "getPairStatus(uint256)": "c92af3ec",
    "getPositionWithUnrealizedFee(uint256)": "9174e1a1",
    "getSqrtIndexPrice(uint256)": "acfcd9fd",
    "getSqrtPrice(uint256)": "18e80749",
    "getVault(uint256)": "9403b634",
    "getVaultStatus(uint256)": "49ebb77d",
    "globalData()": "613ce410",
    "reallocate(uint256,(address,bytes))": "4e20a76e",
    "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": "3b39b99d",
    "revertPairStatus(uint256)": "1daf2c19",
    "revertVaultStatus(uint256)": "360125f1",
    "supply(uint256,bool,uint256)": "db9d4a19",
    "take(bool,address,uint256)": "c6b6d340",
    "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": "9b819b30",
    "uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997",
    "updateMargin(uint256,int256)": "5393e780",
    "updateRecepient(uint256,address)": "ab4db360",
    "withdraw(uint256,bool,uint256)": "7f223b4c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"uniswapFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotVaultOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPairId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"}],\"name\":\"LockedBy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"T\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultAlreadyHasAnotherMarginId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultAlreadyHasAnotherPair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultIsNotDanger\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedUniswapPools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeRatio\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"execLiquidationCall\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getPairStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"quotePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"basePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"riskRatio\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rangeSize\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceThreshold\",\"type\":\"int24\"}],\"internalType\":\"struct Perp.AssetRiskParams\",\"name\":\"riskParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"uniswapPool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint64\",\"name\":\"numRebalance\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebalanceTotalSquartAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1Growth\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionUnderlying\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionStable\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthStable\",\"type\":\"int256\"}],\"internalType\":\"struct Perp.SqrtPerpAssetStatus\",\"name\":\"sqrtAssetStatus\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isMarginZero\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"feeRatio\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.PairStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getPositionWithUnrealizedFee\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"amountStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amountSqrt\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amountUnderlying\",\"type\":\"int256\"}],\"internalType\":\"struct PositionCalculator.PositionParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getSqrtIndexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"getSqrtPrice\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rebalanceLastTickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceLastTickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint64\",\"name\":\"lastNumRebalance\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"entryValue\",\"type\":\"int256\"}],\"internalType\":\"struct Perp.PositionStatus\",\"name\":\"perp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"entryValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"quoteRebalanceEntryValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"baseRebalanceEntryValue\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"entryTradeFee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entryTradeFee1\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.SqrtPositionStatus\",\"name\":\"sqrtPerp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"underlying\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"stable\",\"type\":\"tuple\"}],\"internalType\":\"struct Perp.UserStatus\",\"name\":\"openPosition\",\"type\":\"tuple\"}],\"internalType\":\"struct DataType.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"getVaultStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"vaultValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.VaultStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pairsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniswapFactory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quoteReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"internalType\":\"struct LockDataLibrary.LockData\",\"name\":\"lockData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"reallocate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"relocationOccurred\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"fee\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"riskRatio\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rangeSize\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceThreshold\",\"type\":\"int24\"}],\"internalType\":\"struct Perp.AssetRiskParams\",\"name\":\"assetRiskParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"stableIrmParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"underlyingIrmParams\",\"type\":\"tuple\"}],\"internalType\":\"struct AddPairLogic.AddPairParams\",\"name\":\"addPairParam\",\"type\":\"tuple\"}],\"name\":\"registerPair\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"revertPairStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"revertVaultStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supplyAmount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalSuppliedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"trade\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"marginAmount\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"}],\"name\":\"updateRecepient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isQuoteAsset\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"finalBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalWithdrawAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execLiquidationCall(uint256,uint256,(address,bytes))\":{\"params\":{\"closeRatio\":\"The ratio at which the position will be closed.\",\"settlementData\":\"SettlementData struct for trade settlement.\",\"vaultId\":\"The identifier of the vault to be liquidated.\"},\"returns\":{\"tradeResult\":\"TradeResult struct with the result of the liquidation.\"}},\"registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))\":{\"params\":{\"addPairParam\":\"AddPairParams struct containing pair information.\"}},\"revertPairStatus(uint256)\":{\"details\":\"This function always reverts\"},\"revertVaultStatus(uint256)\":{\"details\":\"This function always reverts\"},\"take(bool,address,uint256)\":{\"details\":\"Only locker can call this function\"},\"trade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"params\":{\"settlementData\":\"byte data for settlement contract.\",\"tradeParams\":\"trade details\"},\"returns\":{\"tradeResult\":\"The result of the trade.\"}},\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"Callback for Uniswap V3 pool.\"},\"updateMargin(uint256,int256)\":{\"details\":\"Only locker can call this function\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execLiquidationCall(uint256,uint256,(address,bytes))\":{\"notice\":\"Executes a liquidation call to close an unsafe vault.\"},\"getPairStatus(uint256)\":{\"notice\":\"Gets the status of pair\"},\"getSqrtIndexPrice(uint256)\":{\"notice\":\"Gets the square root of the index price\"},\"getSqrtPrice(uint256)\":{\"notice\":\"Gets the square root of the AMM price\"},\"getVault(uint256)\":{\"notice\":\"Gets the vault\"},\"getVaultStatus(uint256)\":{\"notice\":\"Gets the status of the vault\"},\"reallocate(uint256,(address,bytes))\":{\"notice\":\"Reallocated the range of concentrated liquidity provider position\"},\"registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))\":{\"notice\":\"Adds a new trading pair.\"},\"revertPairStatus(uint256)\":{\"notice\":\"Gets the status of pair\"},\"revertVaultStatus(uint256)\":{\"notice\":\"Gets the status of the vault\"},\"supply(uint256,bool,uint256)\":{\"notice\":\"Supplies liquidity to the lending pool\"},\"take(bool,address,uint256)\":{\"notice\":\"Takes tokens\"},\"trade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"notice\":\"This function allows users to open or close perpetual future positions.\"},\"updateMargin(uint256,int256)\":{\"notice\":\"Deposits margin to the vault or withdraws margin from the vault\"},\"withdraw(uint256,bool,uint256)\":{\"notice\":\"Withdraws liquidity from the lending pool\"}},\"notice\":\"Holds the state for all pairs and vaults\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PredyPool.sol\":\"PredyPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7\",\"dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/PredyPool.sol\":{\"keccak256\":\"0x97e64e99a955e40df98ba2c822629da5e6a48498c508ce51479303cbd64c48e9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74ce2a4f23c424de301133dbd9ae857595aca29b88469cf8f5498ac8ec379113\",\"dweb:/ipfs/QmcxcP38bwVevRJX1wrTmyvmbka29zHJcAmhvJQDyuKNnv\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2\",\"dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0\",\"dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/interfaces/ISupplyToken.sol\":{\"keccak256\":\"0xbc722f52efe85caaec0a7b4a2bb13a8293ee289f5954da4c9916811226ce2610\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://dd9bb7cf669fa851b63a6e68dec99b4bd631accbb281504aad212ef65b8fe1aa\",\"dweb:/ipfs/QmY8WVzitNHFdHPkTC7me8JXkJ6kRTURh3q8fnnhFFnSyf\"]},\"src/libraries/ApplyInterestLib.sol\":{\"keccak256\":\"0x2fdaf3bfea0abf7064ff3a856b762711db5ddbdb3687cc5396e8f52c8b754182\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f5a2eb701b301cf06773001cf856955bb17acea8a5ca2edd10e490ac9a96b27a\",\"dweb:/ipfs/QmbLmpm9vYnd1eeRiaMG7cSma8JPdiesMV5rxD7ZUKbQUf\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2\",\"dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/Trade.sol\":{\"keccak256\":\"0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330\",\"dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/VaultLib.sol\":{\"keccak256\":\"0x10232527e7a500c90bb6c0c7353b6a450db5921c95edcfa6d17a8cb3b3975a2f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://91821b3f7fe9d16e7db025b04d36e35ddcbc61c2bead356fd921091dedea0947\",\"dweb:/ipfs/QmU2CXUKP98b8HaRVHrvBf4BFXhjudJGefTHu1u6cTZazN\"]},\"src/libraries/logic/AddPairLogic.sol\":{\"keccak256\":\"0x22e26e8b5726ea10259820bb2046b964a6932a3073fa8bb7f62536098e110a71\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://b0d5df526e6c7723de61c31653931ea0e283704a83daea512ff2d039bacafda2\",\"dweb:/ipfs/QmWEi9yxYXPzsNwbStn8oayp1b34FHPQkeZKc8G67TKWYC\"]},\"src/libraries/logic/LiquidationLogic.sol\":{\"keccak256\":\"0xaaa362e16ef9c1508d9fbe71f917589ed59c6efc7e5e8a2c7c2f3177dccdfd20\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4eadf6b5831f012d0eb1a8ae6fa26901611a572e69f5d35b2ef3f733ccc1db7f\",\"dweb:/ipfs/QmTwwHPNFxD6nZ89neTJs1mTwm81pvMoGsnPgcD3fEqRdo\"]},\"src/libraries/logic/MarginLogic.sol\":{\"keccak256\":\"0x3b96fc20f13a5ac12f036703e115a0aa3d00ce65c9bdd33813771bff35e53b8f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5eee457ce666022a5868625c0eddc28d23dada6cb3469afb4188528bae7b620\",\"dweb:/ipfs/Qmc3Lfs59SajZbDrZNt7TzKzGwG2hhggt3HfM7DPtBFtc4\"]},\"src/libraries/logic/ReaderLogic.sol\":{\"keccak256\":\"0x7c41fa36d53ea3ee395c472591a5a2c95acff045883d7a16e9ff934bbf16a025\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://81b5eb1df53f218c45204b22a1a985f07afd4ffd83174b0e47cb921e3d738152\",\"dweb:/ipfs/QmScxTHiox2zwofvjS849n3BPaqKSTWHjs3ak8dNrHmgWi\"]},\"src/libraries/logic/ReallocationLogic.sol\":{\"keccak256\":\"0x91816ab69d750ee9f3ef8237f87fa3e95bbc3395eb58f0eeba72e07218d4ff19\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://65f3f716cb37c4958504a4df198b0ac5999f2432eb6892810fb77412b266ec6f\",\"dweb:/ipfs/QmdW69VWqPtLQ88jsAwdATaaM7s5HqbRBmL9gnEeefM1rq\"]},\"src/libraries/logic/SupplyLogic.sol\":{\"keccak256\":\"0x5f53e5f382757c67842cffd2f9d37a98375f1e99a7b73bc76bfa37a6d41fe676\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c0cb83a6f0e79041e09d110964b4904d5871b27b1605ffa3447863e33aa01aa1\",\"dweb:/ipfs/QmQacVsk8hbBAPR4wjkMHoeKfZ7MFvoUgcpn2c9sMC6qxi\"]},\"src/libraries/logic/TradeLogic.sol\":{\"keccak256\":\"0xbc8d878f0269f0a1145701c0189df1819ba670d713f5a2986e7a2ca67f44580b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://32a88ef57a17be3a32b075374bb32dc960371f87019383e7fb92f2197b127a24\",\"dweb:/ipfs/QmbriVA4BnyoFtso6fxv6Wds9fyxY7Spfm4u8fDJoGSFwZ\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/tokenization/SupplyToken.sol\":{\"keccak256\":\"0x1347b9c7ab2d8aaeceec8521dc43c7ce35b124fc41c89fca582b774c4c0022fd\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://175a6a29d1cd9469dc4cf30347a3ce4bbde63d6222124ae7ee1534d6b5dcd6c0\",\"dweb:/ipfs/QmbjstzkLjpRmNPCsuouGha3YgeqgGL7zYqYdcBQbnGBaT\"]},\"src/types/GlobalData.sol\":{\"keccak256\":\"0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a\",\"dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC\"]},\"src/types/LockData.sol\":{\"keccak256\":\"0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418\",\"dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "uniswapFactory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotVaultOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrencyNotSettled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPairId"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "locker",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "LockedBy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "T"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultAlreadyHasAnotherMarginId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultAlreadyHasAnotherPair"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultIsNotDanger"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowedUniswapPools",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeRatio",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execLiquidationCall",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPairStatus",
          "outputs": [
            {
              "internalType": "struct Perp.PairStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolOwner",
                  "type": "address"
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "quotePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "basePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetRiskParams",
                  "name": "riskParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "riskRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rangeSize",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceThreshold",
                      "type": "int24"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.SqrtPerpAssetStatus",
                  "name": "sqrtAssetStatus",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "uniswapPool",
                      "type": "address"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint64",
                      "name": "numRebalance",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastRebalanceTotalSquartAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionUnderlying",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionStable",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthStable",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isMarginZero",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "feeRatio",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPositionWithUnrealizedFee",
          "outputs": [
            {
              "internalType": "struct PositionCalculator.PositionParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "amountStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "amountUnderlying",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSqrtIndexPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSqrtPrice",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVault",
          "outputs": [
            {
              "internalType": "struct DataType.Vault",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recepient",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "margin",
                  "type": "int256"
                },
                {
                  "internalType": "struct Perp.UserStatus",
                  "name": "openPosition",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "pairId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceLastTickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceLastTickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint64",
                      "name": "lastNumRebalance",
                      "type": "uint64"
                    },
                    {
                      "internalType": "struct Perp.PositionStatus",
                      "name": "perp",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "entryValue",
                          "type": "int256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Perp.SqrtPositionStatus",
                      "name": "sqrtPerp",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "amount",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "entryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "quoteRebalanceEntryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "int256",
                          "name": "baseRebalanceEntryValue",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "entryTradeFee0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "entryTradeFee1",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "underlying",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "stable",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultStatus",
          "outputs": [
            {
              "internalType": "struct IPredyPool.VaultStatus",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "vaultValue",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalData",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pairsCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "uniswapFactory",
              "type": "address"
            },
            {
              "internalType": "struct LockDataLibrary.LockData",
              "name": "lockData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "locker",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteReserve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseReserve",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reallocate",
          "outputs": [
            {
              "internalType": "bool",
              "name": "relocationOccurred",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AddPairLogic.AddPairParams",
              "name": "addPairParam",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolOwner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "uniswapPool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "fee",
                  "type": "uint8"
                },
                {
                  "internalType": "struct Perp.AssetRiskParams",
                  "name": "assetRiskParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "riskRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rangeSize",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceThreshold",
                      "type": "int24"
                    }
                  ]
                },
                {
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "stableIrmParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "underlyingIrmParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerPair",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revertPairStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revertVaultStatus"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "supplyAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "supply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finalSuppliedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "take"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trade",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "uniswapV3MintCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "marginAmount",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMargin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recepient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRecepient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isQuoteAsset",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "withdrawAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "finalBurnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finalWithdrawAmount",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execLiquidationCall(uint256,uint256,(address,bytes))": {
            "params": {
              "closeRatio": "The ratio at which the position will be closed.",
              "settlementData": "SettlementData struct for trade settlement.",
              "vaultId": "The identifier of the vault to be liquidated."
            },
            "returns": {
              "tradeResult": "TradeResult struct with the result of the liquidation."
            }
          },
          "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": {
            "params": {
              "addPairParam": "AddPairParams struct containing pair information."
            }
          },
          "revertPairStatus(uint256)": {
            "details": "This function always reverts"
          },
          "revertVaultStatus(uint256)": {
            "details": "This function always reverts"
          },
          "take(bool,address,uint256)": {
            "details": "Only locker can call this function"
          },
          "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "params": {
              "settlementData": "byte data for settlement contract.",
              "tradeParams": "trade details"
            },
            "returns": {
              "tradeResult": "The result of the trade."
            }
          },
          "uniswapV3MintCallback(uint256,uint256,bytes)": {
            "details": "Callback for Uniswap V3 pool."
          },
          "updateMargin(uint256,int256)": {
            "details": "Only locker can call this function"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execLiquidationCall(uint256,uint256,(address,bytes))": {
            "notice": "Executes a liquidation call to close an unsafe vault."
          },
          "getPairStatus(uint256)": {
            "notice": "Gets the status of pair"
          },
          "getSqrtIndexPrice(uint256)": {
            "notice": "Gets the square root of the index price"
          },
          "getSqrtPrice(uint256)": {
            "notice": "Gets the square root of the AMM price"
          },
          "getVault(uint256)": {
            "notice": "Gets the vault"
          },
          "getVaultStatus(uint256)": {
            "notice": "Gets the status of the vault"
          },
          "reallocate(uint256,(address,bytes))": {
            "notice": "Reallocated the range of concentrated liquidity provider position"
          },
          "registerPair((address,address,address,address,uint8,(uint256,int24,int24),(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256)))": {
            "notice": "Adds a new trading pair."
          },
          "revertPairStatus(uint256)": {
            "notice": "Gets the status of pair"
          },
          "revertVaultStatus(uint256)": {
            "notice": "Gets the status of the vault"
          },
          "supply(uint256,bool,uint256)": {
            "notice": "Supplies liquidity to the lending pool"
          },
          "take(bool,address,uint256)": {
            "notice": "Takes tokens"
          },
          "trade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "notice": "This function allows users to open or close perpetual future positions."
          },
          "updateMargin(uint256,int256)": {
            "notice": "Deposits margin to the vault or withdraws margin from the vault"
          },
          "withdraw(uint256,bool,uint256)": {
            "notice": "Withdraws liquidity from the lending pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PredyPool.sol": "PredyPool"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol": {
        "keccak256": "0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a",
        "urls": [
          "bzz-raw://7c37ca742c643ca4ba6baadff72b8450c6e340a30f7fea0863dba74030a9bbc7",
          "dweb:/ipfs/QmeKBR6a7tQSX85Q7Lb2wrAWSEFqhC4tTmLo4SzcN3kFmp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PredyPool.sol": {
        "keccak256": "0x97e64e99a955e40df98ba2c822629da5e6a48498c508ce51479303cbd64c48e9",
        "urls": [
          "bzz-raw://74ce2a4f23c424de301133dbd9ae857595aca29b88469cf8f5498ac8ec379113",
          "dweb:/ipfs/QmcxcP38bwVevRJX1wrTmyvmbka29zHJcAmhvJQDyuKNnv"
        ],
        "license": "UNLICENSED"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3",
        "urls": [
          "bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2",
          "dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648",
        "urls": [
          "bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0",
          "dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISupplyToken.sol": {
        "keccak256": "0xbc722f52efe85caaec0a7b4a2bb13a8293ee289f5954da4c9916811226ce2610",
        "urls": [
          "bzz-raw://dd9bb7cf669fa851b63a6e68dec99b4bd631accbb281504aad212ef65b8fe1aa",
          "dweb:/ipfs/QmY8WVzitNHFdHPkTC7me8JXkJ6kRTURh3q8fnnhFFnSyf"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ApplyInterestLib.sol": {
        "keccak256": "0x2fdaf3bfea0abf7064ff3a856b762711db5ddbdb3687cc5396e8f52c8b754182",
        "urls": [
          "bzz-raw://f5a2eb701b301cf06773001cf856955bb17acea8a5ca2edd10e490ac9a96b27a",
          "dweb:/ipfs/QmbLmpm9vYnd1eeRiaMG7cSma8JPdiesMV5rxD7ZUKbQUf"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897",
        "urls": [
          "bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2",
          "dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Trade.sol": {
        "keccak256": "0xcb52c931db17d0d840d2e62d1924436dc6c548edea0fe476fe80c26ca8092daf",
        "urls": [
          "bzz-raw://0ca1c0b0e09ffc01e9c7ab0063f2b39a0ae821ce877efcc2a9817f5a99bc0330",
          "dweb:/ipfs/QmcvyMPeNQtY6SWJn87NRCvgG1qBjmwkMJC3CqgAhiBsQb"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/VaultLib.sol": {
        "keccak256": "0x10232527e7a500c90bb6c0c7353b6a450db5921c95edcfa6d17a8cb3b3975a2f",
        "urls": [
          "bzz-raw://91821b3f7fe9d16e7db025b04d36e35ddcbc61c2bead356fd921091dedea0947",
          "dweb:/ipfs/QmU2CXUKP98b8HaRVHrvBf4BFXhjudJGefTHu1u6cTZazN"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/AddPairLogic.sol": {
        "keccak256": "0x22e26e8b5726ea10259820bb2046b964a6932a3073fa8bb7f62536098e110a71",
        "urls": [
          "bzz-raw://b0d5df526e6c7723de61c31653931ea0e283704a83daea512ff2d039bacafda2",
          "dweb:/ipfs/QmWEi9yxYXPzsNwbStn8oayp1b34FHPQkeZKc8G67TKWYC"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/LiquidationLogic.sol": {
        "keccak256": "0xaaa362e16ef9c1508d9fbe71f917589ed59c6efc7e5e8a2c7c2f3177dccdfd20",
        "urls": [
          "bzz-raw://4eadf6b5831f012d0eb1a8ae6fa26901611a572e69f5d35b2ef3f733ccc1db7f",
          "dweb:/ipfs/QmTwwHPNFxD6nZ89neTJs1mTwm81pvMoGsnPgcD3fEqRdo"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/MarginLogic.sol": {
        "keccak256": "0x3b96fc20f13a5ac12f036703e115a0aa3d00ce65c9bdd33813771bff35e53b8f",
        "urls": [
          "bzz-raw://c5eee457ce666022a5868625c0eddc28d23dada6cb3469afb4188528bae7b620",
          "dweb:/ipfs/Qmc3Lfs59SajZbDrZNt7TzKzGwG2hhggt3HfM7DPtBFtc4"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/ReaderLogic.sol": {
        "keccak256": "0x7c41fa36d53ea3ee395c472591a5a2c95acff045883d7a16e9ff934bbf16a025",
        "urls": [
          "bzz-raw://81b5eb1df53f218c45204b22a1a985f07afd4ffd83174b0e47cb921e3d738152",
          "dweb:/ipfs/QmScxTHiox2zwofvjS849n3BPaqKSTWHjs3ak8dNrHmgWi"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/logic/ReallocationLogic.sol": {
        "keccak256": "0x91816ab69d750ee9f3ef8237f87fa3e95bbc3395eb58f0eeba72e07218d4ff19",
        "urls": [
          "bzz-raw://65f3f716cb37c4958504a4df198b0ac5999f2432eb6892810fb77412b266ec6f",
          "dweb:/ipfs/QmdW69VWqPtLQ88jsAwdATaaM7s5HqbRBmL9gnEeefM1rq"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/SupplyLogic.sol": {
        "keccak256": "0x5f53e5f382757c67842cffd2f9d37a98375f1e99a7b73bc76bfa37a6d41fe676",
        "urls": [
          "bzz-raw://c0cb83a6f0e79041e09d110964b4904d5871b27b1605ffa3447863e33aa01aa1",
          "dweb:/ipfs/QmQacVsk8hbBAPR4wjkMHoeKfZ7MFvoUgcpn2c9sMC6qxi"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/logic/TradeLogic.sol": {
        "keccak256": "0xbc8d878f0269f0a1145701c0189df1819ba670d713f5a2986e7a2ca67f44580b",
        "urls": [
          "bzz-raw://32a88ef57a17be3a32b075374bb32dc960371f87019383e7fb92f2197b127a24",
          "dweb:/ipfs/QmbriVA4BnyoFtso6fxv6Wds9fyxY7Spfm4u8fDJoGSFwZ"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/tokenization/SupplyToken.sol": {
        "keccak256": "0x1347b9c7ab2d8aaeceec8521dc43c7ce35b124fc41c89fca582b774c4c0022fd",
        "urls": [
          "bzz-raw://175a6a29d1cd9469dc4cf30347a3ce4bbde63d6222124ae7ee1534d6b5dcd6c0",
          "dweb:/ipfs/QmbjstzkLjpRmNPCsuouGha3YgeqgGL7zYqYdcBQbnGBaT"
        ],
        "license": "agpl-3.0"
      },
      "src/types/GlobalData.sol": {
        "keccak256": "0x3913d58286849ab2a0942fe712a5cb843d431b1b2a315b0bf04d7cc7164c030c",
        "urls": [
          "bzz-raw://dfcf22700b807bd5b1d37e7e9ada8d9258de4ebf7ffbc1f40ba82c7c6804784a",
          "dweb:/ipfs/QmUHTuNM4Tprejjqy3MEKG7DP8ooDhckP89hV6ZyiJpvSC"
        ],
        "license": "UNLICENSED"
      },
      "src/types/LockData.sol": {
        "keccak256": "0x7d964c64996a4297fc3692473f291eb595e9ecbe5a2922437f6d82f52a3339c4",
        "urls": [
          "bzz-raw://412c860838e80db6265e46d8d47b0eefe24605268356f22f98a05f94903a4418",
          "dweb:/ipfs/QmZqhKU3XvDX4nArtD2bRSGJx1QFZ2kQtCfEzsboMtirV6"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PredyPool.sol",
    "id": 54084,
    "exportedSymbols": {
      "AddPairLogic": [
        61895
      ],
      "AggregatorV3Interface": [
        65493
      ],
      "ApplyInterestLib": [
        54952
      ],
      "Constants": [
        55002
      ],
      "Context": [
        43564
      ],
      "DataType": [
        55025
      ],
      "ERC20": [
        43439
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "GlobalDataLibrary": [
        65434
      ],
      "IERC20": [
        43517
      ],
      "IERC20Metadata": [
        43542
      ],
      "IHooks": [
        54242
      ],
      "IPredyPool": [
        54435
      ],
      "ISettlement": [
        54450
      ],
      "ISupplyToken": [
        54467
      ],
      "IUniswapV3Factory": [
        47992
      ],
      "IUniswapV3MintCallback": [
        48038
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        65548
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        55100
      ],
      "LPMath": [
        63804
      ],
      "LiquidationLogic": [
        62388
      ],
      "LiquidityAmounts": [
        49693
      ],
      "LockDataLibrary": [
        65447
      ],
      "MarginLogic": [
        62514
      ],
      "Math": [
        63945
      ],
      "PairLib": [
        55123
      ],
      "Perp": [
        57585
      ],
      "PerpFee": [
        58087
      ],
      "PositionCalculator": [
        58808
      ],
      "PositionKey": [
        49718
      ],
      "PredyPool": [
        54083
      ],
      "PremiumCurveModel": [
        58850
      ],
      "PriceFeed": [
        54172
      ],
      "ReaderLogic": [
        62685
      ],
      "Reallocation": [
        59393
      ],
      "ReallocationLogic": [
        62839
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        60122
      ],
      "SupplyLogic": [
        63136
      ],
      "SupplyToken": [
        65117
      ],
      "TickMath": [
        49233
      ],
      "Trade": [
        60590
      ],
      "TradeLogic": [
        63360
      ],
      "TransferHelper": [
        49889
      ],
      "UniHelper": [
        61109
      ],
      "UnsafeMath": [
        49249
      ],
      "VaultLib": [
        61264
      ],
      "console": [
        21489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7920:55",
    "nodes": [
      {
        "id": 53524,
        "nodeType": "PragmaDirective",
        "src": "39:24:55",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 53525,
        "nodeType": "ImportDirective",
        "src": "65:56:55",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 43518,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53526,
        "nodeType": "ImportDirective",
        "src": "122:66:55",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 48025,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53527,
        "nodeType": "ImportDirective",
        "src": "189:83:55",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 48039,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53529,
        "nodeType": "ImportDirective",
        "src": "273:92:55",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53528,
              "name": "TransferHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "281:14:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53530,
        "nodeType": "ImportDirective",
        "src": "366:37:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "./interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 54436,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53531,
        "nodeType": "ImportDirective",
        "src": "404:33:55",
        "nodes": [],
        "absolutePath": "src/interfaces/IHooks.sol",
        "file": "./interfaces/IHooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 54243,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53532,
        "nodeType": "ImportDirective",
        "src": "438:38:55",
        "nodes": [],
        "absolutePath": "src/interfaces/ISettlement.sol",
        "file": "./interfaces/ISettlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 54451,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53533,
        "nodeType": "ImportDirective",
        "src": "477:30:55",
        "nodes": [],
        "absolutePath": "src/libraries/Perp.sol",
        "file": "./libraries/Perp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 57586,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53534,
        "nodeType": "ImportDirective",
        "src": "508:34:55",
        "nodes": [],
        "absolutePath": "src/libraries/VaultLib.sol",
        "file": "./libraries/VaultLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 61265,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53535,
        "nodeType": "ImportDirective",
        "src": "543:44:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/AddPairLogic.sol",
        "file": "./libraries/logic/AddPairLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 61896,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53536,
        "nodeType": "ImportDirective",
        "src": "588:48:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/LiquidationLogic.sol",
        "file": "./libraries/logic/LiquidationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 62389,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53537,
        "nodeType": "ImportDirective",
        "src": "637:49:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/ReallocationLogic.sol",
        "file": "./libraries/logic/ReallocationLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 62840,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53538,
        "nodeType": "ImportDirective",
        "src": "687:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/SupplyLogic.sol",
        "file": "./libraries/logic/SupplyLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 63137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53539,
        "nodeType": "ImportDirective",
        "src": "731:42:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/TradeLogic.sol",
        "file": "./libraries/logic/TradeLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 63361,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53540,
        "nodeType": "ImportDirective",
        "src": "774:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/MarginLogic.sol",
        "file": "./libraries/logic/MarginLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 62515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53541,
        "nodeType": "ImportDirective",
        "src": "818:43:55",
        "nodes": [],
        "absolutePath": "src/libraries/logic/ReaderLogic.sol",
        "file": "./libraries/logic/ReaderLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 62686,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 53543,
        "nodeType": "ImportDirective",
        "src": "862:57:55",
        "nodes": [],
        "absolutePath": "src/types/GlobalData.sol",
        "file": "./types/GlobalData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54084,
        "sourceUnit": 65435,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53542,
              "name": "GlobalDataLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65434,
              "src": "870:17:55",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54083,
        "nodeType": "ContractDefinition",
        "src": "981:6977:55",
        "nodes": [
          {
            "id": 53552,
            "nodeType": "UsingForDirective",
            "src": "1044:57:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53549,
              "name": "GlobalDataLibrary",
              "nameLocations": [
                "1050:17:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65434,
              "src": "1050:17:55"
            },
            "typeName": {
              "id": 53551,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53550,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1072:17:55",
                  "1090:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65149,
                "src": "1072:28:55"
              },
              "referencedDeclaration": 65149,
              "src": "1072:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$65149_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            }
          },
          {
            "id": 53556,
            "nodeType": "UsingForDirective",
            "src": "1106:51:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53553,
              "name": "LockDataLibrary",
              "nameLocations": [
                "1112:15:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65447,
              "src": "1112:15:55"
            },
            "typeName": {
              "id": 53555,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53554,
                "name": "LockDataLibrary.LockData",
                "nameLocations": [
                  "1132:15:55",
                  "1148:8:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65446,
                "src": "1132:24:55"
              },
              "referencedDeclaration": 65446,
              "src": "1132:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LockData_$65446_storage_ptr",
                "typeString": "struct LockDataLibrary.LockData"
              }
            }
          },
          {
            "id": 53560,
            "nodeType": "UsingForDirective",
            "src": "1162:48:55",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53557,
              "name": "VaultLib",
              "nameLocations": [
                "1168:8:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61264,
              "src": "1168:8:55"
            },
            "typeName": {
              "id": 53559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53558,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1181:17:55",
                  "1199:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65149,
                "src": "1181:28:55"
              },
              "referencedDeclaration": 65149,
              "src": "1181:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$65149_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            }
          },
          {
            "id": 53563,
            "nodeType": "VariableDeclaration",
            "src": "1216:46:55",
            "nodes": [],
            "constant": false,
            "functionSelector": "613ce410",
            "mutability": "mutable",
            "name": "globalData",
            "nameLocation": "1252:10:55",
            "scope": 54083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
              "typeString": "struct GlobalDataLibrary.GlobalData"
            },
            "typeName": {
              "id": 53562,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53561,
                "name": "GlobalDataLibrary.GlobalData",
                "nameLocations": [
                  "1216:17:55",
                  "1234:10:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65149,
                "src": "1216:28:55"
              },
              "referencedDeclaration": 65149,
              "src": "1216:28:55",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_GlobalData_$65149_storage_ptr",
                "typeString": "struct GlobalDataLibrary.GlobalData"
              }
            },
            "visibility": "public"
          },
          {
            "id": 53567,
            "nodeType": "VariableDeclaration",
            "src": "1269:51:55",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3eb8cd8",
            "mutability": "mutable",
            "name": "allowedUniswapPools",
            "nameLocation": "1301:19:55",
            "scope": 54083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 53566,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 53564,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1277:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1269:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 53565,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1288:4:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 53586,
            "nodeType": "ModifierDefinition",
            "src": "1327:154:55",
            "nodes": [],
            "body": {
              "id": 53585,
              "nodeType": "Block",
              "src": "1351:130:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53570,
                      "mutability": "mutable",
                      "name": "locker",
                      "nameLocation": "1369:6:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53585,
                      "src": "1361:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53569,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1361:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53574,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 53571,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "1378:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53572,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1389:8:55",
                      "memberName": "lockData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65148,
                      "src": "1378:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockData_$65446_storage",
                        "typeString": "struct LockDataLibrary.LockData storage ref"
                      }
                    },
                    "id": 53573,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1398:6:55",
                    "memberName": "locker",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 65439,
                    "src": "1378:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1361:43:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 53575,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1418:3:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1422:6:55",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1418:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53577,
                      "name": "locker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53570,
                      "src": "1432:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1418:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53583,
                  "nodeType": "IfStatement",
                  "src": "1414:49:55",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 53580,
                          "name": "locker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53570,
                          "src": "1456:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53579,
                        "name": "LockedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54266,
                        "src": "1447:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 53581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:16:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 53582,
                    "nodeType": "RevertStatement",
                    "src": "1440:23:55"
                  }
                },
                {
                  "id": 53584,
                  "nodeType": "PlaceholderStatement",
                  "src": "1473:1:55"
                }
              ]
            },
            "name": "onlyByLocker",
            "nameLocation": "1336:12:55",
            "parameters": {
              "id": 53568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:2:55"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53604,
            "nodeType": "FunctionDefinition",
            "src": "1487:150:55",
            "nodes": [],
            "body": {
              "id": 53603,
              "nodeType": "Block",
              "src": "1523:114:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 53591,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "1533:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53593,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1544:14:55",
                      "memberName": "uniswapFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65130,
                      "src": "1533:25:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53594,
                      "name": "uniswapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53588,
                      "src": "1561:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1533:42:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53596,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:42:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53600,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "1619:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      ],
                      "expression": {
                        "id": 53597,
                        "name": "AddPairLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61895,
                        "src": "1585:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddPairLogic_$61895_$",
                          "typeString": "type(library AddPairLogic)"
                        }
                      },
                      "id": 53599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1598:20:55",
                      "memberName": "initializeGlobalData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61361,
                      "src": "1585:33:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer)"
                      }
                    },
                    "id": 53601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:45:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53602,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:45:55"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53588,
                  "mutability": "mutable",
                  "name": "uniswapFactory",
                  "nameLocation": "1507:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53604,
                  "src": "1499:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:24:55"
            },
            "returnParameters": {
              "id": 53590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53663,
            "nodeType": "FunctionDefinition",
            "src": "1701:463:55",
            "nodes": [],
            "body": {
              "id": 53662,
              "nodeType": "Block",
              "src": "1800:364:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 53616,
                          "name": "allowedUniswapPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53567,
                          "src": "1818:19:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 53619,
                        "indexExpression": {
                          "expression": {
                            "id": 53617,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1838:3:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1842:6:55",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1838:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1818:31:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 53615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1810:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 53620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:40:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53621,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:40:55"
                },
                {
                  "assignments": [
                    53624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53624,
                      "mutability": "mutable",
                      "name": "uniswapPool",
                      "nameLocation": "1875:11:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53662,
                      "src": "1860:26:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 53623,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53622,
                          "name": "IUniswapV3Pool",
                          "nameLocations": [
                            "1860:14:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 48024,
                          "src": "1860:14:55"
                        },
                        "referencedDeclaration": 48024,
                        "src": "1860:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53629,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53626,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1904:3:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1908:6:55",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1904:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53625,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48024,
                      "src": "1889:14:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$48024_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 53628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:26:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1860:55:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53630,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53607,
                      "src": "1929:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1939:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1929:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53645,
                  "nodeType": "IfStatement",
                  "src": "1925:112:55",
                  "trueBody": {
                    "id": 53644,
                    "nodeType": "Block",
                    "src": "1942:95:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 53636,
                                  "name": "uniswapPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53624,
                                  "src": "1984:11:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                                    "typeString": "contract IUniswapV3Pool"
                                  }
                                },
                                "id": 53637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1996:6:55",
                                "memberName": "token0",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48341,
                                "src": "1984:18:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 53638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1984:20:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 53639,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2006:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 53640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2010:6:55",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2006:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53641,
                              "name": "amount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53607,
                              "src": "2018:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 53633,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "1956:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 53635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1971:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "1956:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 53642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1956:70:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53643,
                        "nodeType": "ExpressionStatement",
                        "src": "1956:70:55"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53646,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53609,
                      "src": "2050:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2060:1:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2050:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53661,
                  "nodeType": "IfStatement",
                  "src": "2046:112:55",
                  "trueBody": {
                    "id": 53660,
                    "nodeType": "Block",
                    "src": "2063:95:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 53652,
                                  "name": "uniswapPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53624,
                                  "src": "2105:11:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$48024",
                                    "typeString": "contract IUniswapV3Pool"
                                  }
                                },
                                "id": 53653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2117:6:55",
                                "memberName": "token1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48347,
                                "src": "2105:18:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 53654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2105:20:55",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 53655,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2127:3:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 53656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2131:6:55",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2127:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53657,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53609,
                              "src": "2139:7:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 53649,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49889,
                              "src": "2077:14:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$49889_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 53651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2092:12:55",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49816,
                            "src": "2077:27:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 53658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2077:70:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53659,
                        "nodeType": "ExpressionStatement",
                        "src": "2077:70:55"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              48037
            ],
            "documentation": {
              "id": 53605,
              "nodeType": "StructuredDocumentation",
              "src": "1643:53:55",
              "text": " @dev Callback for Uniswap V3 pool."
            },
            "functionSelector": "d3487997",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3MintCallback",
            "nameLocation": "1710:21:55",
            "overrides": {
              "id": 53613,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1791:8:55"
            },
            "parameters": {
              "id": 53612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53607,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1740:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53663,
                  "src": "1732:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1732:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53609,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1757:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53663,
                  "src": "1749:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53663,
                  "src": "1766:14:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53610,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1731:50:55"
            },
            "returnParameters": {
              "id": 53614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53680,
            "nodeType": "FunctionDefinition",
            "src": "2303:188:55",
            "nodes": [],
            "body": {
              "id": 53679,
              "nodeType": "Block",
              "src": "2400:91:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53674,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "2438:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53675,
                        "name": "allowedUniswapPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53567,
                        "src": "2450:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      {
                        "id": 53676,
                        "name": "addPairParam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53667,
                        "src": "2471:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddPairParams_$61296_memory_ptr",
                          "typeString": "struct AddPairLogic.AddPairParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        {
                          "typeIdentifier": "t_struct$_AddPairParams_$61296_memory_ptr",
                          "typeString": "struct AddPairLogic.AddPairParams memory"
                        }
                      ],
                      "expression": {
                        "id": 53672,
                        "name": "AddPairLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61895,
                        "src": "2417:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddPairLogic_$61895_$",
                          "typeString": "type(library AddPairLogic)"
                        }
                      },
                      "id": 53673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2430:7:55",
                      "memberName": "addPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61492,
                      "src": "2417:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_mapping$_t_address_$_t_bool_$_$_t_struct$_AddPairParams_$61296_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,mapping(address => bool),struct AddPairLogic.AddPairParams memory) returns (uint256)"
                      }
                    },
                    "id": 53677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:67:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53671,
                  "id": 53678,
                  "nodeType": "Return",
                  "src": "2410:74:55"
                }
              ]
            },
            "documentation": {
              "id": 53664,
              "nodeType": "StructuredDocumentation",
              "src": "2170:128:55",
              "text": " @notice Adds a new trading pair.\n @param addPairParam AddPairParams struct containing pair information."
            },
            "functionSelector": "3b39b99d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerPair",
            "nameLocation": "2312:12:55",
            "parameters": {
              "id": 53668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53667,
                  "mutability": "mutable",
                  "name": "addPairParam",
                  "nameLocation": "2359:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53680,
                  "src": "2325:46:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AddPairParams_$61296_memory_ptr",
                    "typeString": "struct AddPairLogic.AddPairParams"
                  },
                  "typeName": {
                    "id": 53666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53665,
                      "name": "AddPairLogic.AddPairParams",
                      "nameLocations": [
                        "2325:12:55",
                        "2338:13:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61296,
                      "src": "2325:26:55"
                    },
                    "referencedDeclaration": 61296,
                    "src": "2325:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddPairParams_$61296_storage_ptr",
                      "typeString": "struct AddPairLogic.AddPairParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2324:48:55"
            },
            "returnParameters": {
              "id": 53671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53680,
                  "src": "2391:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2391:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2390:9:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53701,
            "nodeType": "FunctionDefinition",
            "src": "2567:230:55",
            "nodes": [],
            "body": {
              "id": 53700,
              "nodeType": "Block",
              "src": "2707:90:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53694,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "2743:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53695,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53683,
                        "src": "2755:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53696,
                        "name": "supplyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53687,
                        "src": "2763:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53697,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53685,
                        "src": "2777:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53692,
                        "name": "SupplyLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63136,
                        "src": "2724:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SupplyLogic_$63136_$",
                          "typeString": "type(library SupplyLogic)"
                        }
                      },
                      "id": 53693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2736:6:55",
                      "memberName": "supply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62957,
                      "src": "2724:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 53698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:66:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53691,
                  "id": 53699,
                  "nodeType": "Return",
                  "src": "2717:73:55"
                }
              ]
            },
            "documentation": {
              "id": 53681,
              "nodeType": "StructuredDocumentation",
              "src": "2497:65:55",
              "text": " @notice Supplies liquidity to the lending pool"
            },
            "functionSelector": "db9d4a19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supply",
            "nameLocation": "2576:6:55",
            "parameters": {
              "id": 53688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53683,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "2591:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53701,
                  "src": "2583:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53685,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "2604:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53701,
                  "src": "2599:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53684,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53687,
                  "mutability": "mutable",
                  "name": "supplyAmount",
                  "nameLocation": "2626:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53701,
                  "src": "2618:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2582:57:55"
            },
            "returnParameters": {
              "id": 53691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53690,
                  "mutability": "mutable",
                  "name": "finalSuppliedAmount",
                  "nameLocation": "2682:19:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53701,
                  "src": "2674:27:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2674:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2673:29:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53724,
            "nodeType": "FunctionDefinition",
            "src": "2876:263:55",
            "nodes": [],
            "body": {
              "id": 53723,
              "nodeType": "Block",
              "src": "3045:94:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53717,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "3083:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53718,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53704,
                        "src": "3095:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53719,
                        "name": "withdrawAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53708,
                        "src": "3103:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53720,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53706,
                        "src": "3119:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53715,
                        "name": "SupplyLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63136,
                        "src": "3062:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SupplyLogic_$63136_$",
                          "typeString": "type(library SupplyLogic)"
                        }
                      },
                      "id": 53716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3074:8:55",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63081,
                      "src": "3062:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256,bool) returns (uint256,uint256)"
                      }
                    },
                    "id": 53721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3062:70:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 53714,
                  "id": 53722,
                  "nodeType": "Return",
                  "src": "3055:77:55"
                }
              ]
            },
            "documentation": {
              "id": 53702,
              "nodeType": "StructuredDocumentation",
              "src": "2803:68:55",
              "text": " @notice Withdraws liquidity from the lending pool"
            },
            "functionSelector": "7f223b4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2885:8:55",
            "parameters": {
              "id": 53709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53704,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "2902:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53724,
                  "src": "2894:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53703,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2894:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53706,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "2915:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53724,
                  "src": "2910:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53705,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53708,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "2937:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53724,
                  "src": "2929:22:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2893:59:55"
            },
            "returnParameters": {
              "id": 53714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53711,
                  "mutability": "mutable",
                  "name": "finalBurnAmount",
                  "nameLocation": "2995:15:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53724,
                  "src": "2987:23:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53713,
                  "mutability": "mutable",
                  "name": "finalWithdrawAmount",
                  "nameLocation": "3020:19:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53724,
                  "src": "3012:27:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3012:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:54:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53743,
            "nodeType": "FunctionDefinition",
            "src": "3242:237:55",
            "nodes": [],
            "body": {
              "id": 53742,
              "nodeType": "Block",
              "src": "3391:88:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53737,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "3437:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53738,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53727,
                        "src": "3449:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53739,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53730,
                        "src": "3457:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53735,
                        "name": "ReallocationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62839,
                        "src": "3408:17:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReallocationLogic_$62839_$",
                          "typeString": "type(library ReallocationLogic)"
                        }
                      },
                      "id": 53736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3426:10:55",
                      "memberName": "reallocate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62838,
                      "src": "3408:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_struct$_SettlementData_$54442_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,struct ISettlement.SettlementData memory) returns (bool)"
                      }
                    },
                    "id": 53740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3408:64:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 53734,
                  "id": 53741,
                  "nodeType": "Return",
                  "src": "3401:71:55"
                }
              ]
            },
            "documentation": {
              "id": 53725,
              "nodeType": "StructuredDocumentation",
              "src": "3145:92:55",
              "text": " @notice Reallocated the range of concentrated liquidity provider position"
            },
            "functionSelector": "4e20a76e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reallocate",
            "nameLocation": "3251:10:55",
            "parameters": {
              "id": 53731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53727,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "3270:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53743,
                  "src": "3262:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53730,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3312:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53743,
                  "src": "3278:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 53729,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53728,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3278:11:55",
                        "3290:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54442,
                      "src": "3278:26:55"
                    },
                    "referencedDeclaration": 54442,
                    "src": "3278:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$54442_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:66:55"
            },
            "returnParameters": {
              "id": 53734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53733,
                  "mutability": "mutable",
                  "name": "relocationOccurred",
                  "nameLocation": "3367:18:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53743,
                  "src": "3362:23:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53732,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3362:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3361:25:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53791,
            "nodeType": "FunctionDefinition",
            "src": "3744:449:55",
            "nodes": [],
            "body": {
              "id": 53790,
              "nodeType": "Block",
              "src": "3911:282:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53759,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53747,
                          "src": "3941:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3953:6:55",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54278,
                        "src": "3941:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53756,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "3921:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3932:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65195,
                      "src": "3921:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view"
                      }
                    },
                    "id": 53761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:39:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53762,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:39:55"
                },
                {
                  "assignments": [
                    53767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53767,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3994:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53790,
                      "src": "3971:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53765,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "3971:8:55",
                            "3980:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55019,
                          "src": "3971:14:55"
                        },
                        "referencedDeclaration": 55019,
                        "src": "3971:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53775,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53770,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53747,
                          "src": "4030:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4042:7:55",
                        "memberName": "vaultId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54280,
                        "src": "4030:19:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 53772,
                          "name": "tradeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53747,
                          "src": "4051:11:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                            "typeString": "struct IPredyPool.TradeParams memory"
                          }
                        },
                        "id": 53773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4063:6:55",
                        "memberName": "pairId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54278,
                        "src": "4051:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53768,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "4002:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4013:16:55",
                      "memberName": "createOrGetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61263,
                      "src": "4002:27:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Vault_$55019_storage_ptr_$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256) returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4002:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3971:99:55"
                },
                {
                  "expression": {
                    "id": 53781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 53776,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53747,
                        "src": "4081:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      "id": 53778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4093:7:55",
                      "memberName": "vaultId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54280,
                      "src": "4081:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 53779,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53767,
                        "src": "4103:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                          "typeString": "struct DataType.Vault storage pointer"
                        }
                      },
                      "id": 53780,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4109:2:55",
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55007,
                      "src": "4103:8:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4081:30:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 53782,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:30:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53785,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "4146:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53786,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53747,
                        "src": "4158:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 53787,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53750,
                        "src": "4171:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53783,
                        "name": "TradeLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63360,
                        "src": "4129:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TradeLogic_$63360_$",
                          "typeString": "type(library TradeLogic)"
                        }
                      },
                      "id": 53784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4140:5:55",
                      "memberName": "trade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63293,
                      "src": "4129:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_struct$_TradeParams_$54287_memory_ptr_$_t_struct$_SettlementData_$54442_memory_ptr_$returns$_t_struct$_TradeResult_$54303_memory_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 53788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4129:57:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54303_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 53755,
                  "id": 53789,
                  "nodeType": "Return",
                  "src": "4122:64:55"
                }
              ]
            },
            "baseFunctions": [
              54335
            ],
            "documentation": {
              "id": 53744,
              "nodeType": "StructuredDocumentation",
              "src": "3485:254:55",
              "text": " @notice This function allows users to open or close perpetual future positions.\n @param tradeParams trade details\n @param settlementData byte data for settlement contract.\n @return tradeResult The result of the trade."
            },
            "functionSelector": "9b819b30",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "trade",
            "nameLocation": "3753:5:55",
            "parameters": {
              "id": 53751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53747,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "3778:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53791,
                  "src": "3759:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$54287_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 53746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53745,
                      "name": "TradeParams",
                      "nameLocations": [
                        "3759:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54287,
                      "src": "3759:11:55"
                    },
                    "referencedDeclaration": 54287,
                    "src": "3759:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$54287_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53750,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "3825:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53791,
                  "src": "3791:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 53749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53748,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "3791:11:55",
                        "3803:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54442,
                      "src": "3791:26:55"
                    },
                    "referencedDeclaration": 54442,
                    "src": "3791:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$54442_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3758:82:55"
            },
            "returnParameters": {
              "id": 53755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53754,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "3894:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53791,
                  "src": "3875:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54303_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 53753,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53752,
                      "name": "TradeResult",
                      "nameLocations": [
                        "3875:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54303,
                      "src": "3875:11:55"
                    },
                    "referencedDeclaration": 54303,
                    "src": "3875:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54303_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3874:32:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53826,
            "nodeType": "FunctionDefinition",
            "src": "4199:271:55",
            "nodes": [],
            "body": {
              "id": 53825,
              "nodeType": "Block",
              "src": "4269:201:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53802,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "4302:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53825,
                      "src": "4279:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53801,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53800,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "4279:8:55",
                            "4288:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55019,
                          "src": "4279:14:55"
                        },
                        "referencedDeclaration": 55019,
                        "src": "4279:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53807,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53805,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53793,
                        "src": "4330:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53803,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "4310:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4321:8:55",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61148,
                      "src": "4310:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$_t_struct$_Vault_$55019_storage_ptr_$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4279:59:55"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 53813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53808,
                      "name": "recepient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53795,
                      "src": "4353:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 53811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4374:1:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 53810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4366:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 53809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4366:7:55",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 53812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4366:10:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4353:23:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53818,
                  "nodeType": "IfStatement",
                  "src": "4349:77:55",
                  "trueBody": {
                    "id": 53817,
                    "nodeType": "Block",
                    "src": "4378:48:55",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53814,
                            "name": "InvalidAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54274,
                            "src": "4399:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 53815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4399:16:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53816,
                        "nodeType": "RevertStatement",
                        "src": "4392:23:55"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 53819,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53802,
                        "src": "4436:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                          "typeString": "struct DataType.Vault storage pointer"
                        }
                      },
                      "id": 53821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4442:9:55",
                      "memberName": "recepient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55013,
                      "src": "4436:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53822,
                      "name": "recepient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53795,
                      "src": "4454:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4436:27:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53824,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:27:55"
                }
              ]
            },
            "baseFunctions": [
              54355
            ],
            "functionSelector": "ab4db360",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRecepient",
            "nameLocation": "4208:15:55",
            "parameters": {
              "id": 53796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53793,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4232:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53826,
                  "src": "4224:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4224:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53795,
                  "mutability": "mutable",
                  "name": "recepient",
                  "nameLocation": "4249:9:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53826,
                  "src": "4241:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4223:36:55"
            },
            "returnParameters": {
              "id": 53797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4269:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53849,
            "nodeType": "FunctionDefinition",
            "src": "4857:285:55",
            "nodes": [],
            "body": {
              "id": 53848,
              "nodeType": "Block",
              "src": "5043:99:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53842,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53829,
                        "src": "5087:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53843,
                        "name": "closeRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53831,
                        "src": "5096:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53844,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5108:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53845,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53834,
                        "src": "5120:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 53840,
                        "name": "LiquidationLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62388,
                        "src": "5060:16:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidationLogic_$62388_$",
                          "typeString": "type(library LiquidationLogic)"
                        }
                      },
                      "id": 53841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5077:9:55",
                      "memberName": "liquidate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62188,
                      "src": "5060:26:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_GlobalData_$65149_storage_ptr_$_t_struct$_SettlementData_$54442_memory_ptr_$returns$_t_struct$_TradeResult_$54303_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct GlobalDataLibrary.GlobalData storage pointer,struct ISettlement.SettlementData memory) returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 53846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5060:75:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54303_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "functionReturnParameters": 53839,
                  "id": 53847,
                  "nodeType": "Return",
                  "src": "5053:82:55"
                }
              ]
            },
            "baseFunctions": [
              54348
            ],
            "documentation": {
              "id": 53827,
              "nodeType": "StructuredDocumentation",
              "src": "4476:376:55",
              "text": " @notice Executes a liquidation call to close an unsafe vault.\n @param vaultId The identifier of the vault to be liquidated.\n @param closeRatio The ratio at which the position will be closed.\n @param settlementData SettlementData struct for trade settlement.\n @return tradeResult TradeResult struct with the result of the liquidation."
            },
            "functionSelector": "91d0370f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execLiquidationCall",
            "nameLocation": "4866:19:55",
            "parameters": {
              "id": 53835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53829,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4894:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53849,
                  "src": "4886:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4886:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53831,
                  "mutability": "mutable",
                  "name": "closeRatio",
                  "nameLocation": "4911:10:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53849,
                  "src": "4903:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4903:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53834,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "4957:14:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53849,
                  "src": "4923:48:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$54442_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 53833,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53832,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "4923:11:55",
                        "4935:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54442,
                      "src": "4923:26:55"
                    },
                    "referencedDeclaration": 54442,
                    "src": "4923:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$54442_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4885:87:55"
            },
            "returnParameters": {
              "id": 53839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53838,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "5026:11:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53849,
                  "src": "5007:30:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54303_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 53837,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53836,
                      "name": "TradeResult",
                      "nameLocations": [
                        "5007:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54303,
                      "src": "5007:11:55"
                    },
                    "referencedDeclaration": 54303,
                    "src": "5007:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54303_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:32:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53870,
            "nodeType": "FunctionDefinition",
            "src": "5239:141:55",
            "nodes": [],
            "body": {
              "id": 53869,
              "nodeType": "Block",
              "src": "5322:58:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53864,
                        "name": "isQuoteAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53852,
                        "src": "5348:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 53865,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53854,
                        "src": "5362:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53866,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53856,
                        "src": "5366:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53861,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5332:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53863,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5343:4:55",
                      "memberName": "take",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65334,
                      "src": "5332:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_bool_$_t_address_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,bool,address,uint256)"
                      }
                    },
                    "id": 53867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5332:41:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53868,
                  "nodeType": "ExpressionStatement",
                  "src": "5332:41:55"
                }
              ]
            },
            "baseFunctions": [
              54364
            ],
            "documentation": {
              "id": 53850,
              "nodeType": "StructuredDocumentation",
              "src": "5148:86:55",
              "text": " @notice Takes tokens\n @dev Only locker can call this function"
            },
            "functionSelector": "c6b6d340",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 53859,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53858,
                  "name": "onlyByLocker",
                  "nameLocations": [
                    "5309:12:55"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53586,
                  "src": "5309:12:55"
                },
                "nodeType": "ModifierInvocation",
                "src": "5309:12:55"
              }
            ],
            "name": "take",
            "nameLocation": "5248:4:55",
            "parameters": {
              "id": 53857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53852,
                  "mutability": "mutable",
                  "name": "isQuoteAsset",
                  "nameLocation": "5258:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53870,
                  "src": "5253:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53854,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5280:2:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53870,
                  "src": "5272:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53856,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5292:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53870,
                  "src": "5284:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5284:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5252:47:55"
            },
            "returnParameters": {
              "id": 53860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5322:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53893,
            "nodeType": "FunctionDefinition",
            "src": "5528:184:55",
            "nodes": [],
            "body": {
              "id": 53892,
              "nodeType": "Block",
              "src": "5597:115:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53881,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53873,
                        "src": "5627:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53878,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5607:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53880,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5618:8:55",
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61148,
                      "src": "5607:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$_t_struct$_Vault_$55019_storage_ptr_$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "id": 53883,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:28:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53887,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5671:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53888,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53873,
                        "src": "5683:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53889,
                        "name": "marginAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53875,
                        "src": "5692:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 53884,
                        "name": "MarginLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62514,
                        "src": "5646:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MarginLogic_$62514_$",
                          "typeString": "type(library MarginLogic)"
                        }
                      },
                      "id": 53886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5658:12:55",
                      "memberName": "updateMargin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62513,
                      "src": "5646:24:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,int256)"
                      }
                    },
                    "id": 53890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5646:59:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53891,
                  "nodeType": "ExpressionStatement",
                  "src": "5646:59:55"
                }
              ]
            },
            "baseFunctions": [
              54371
            ],
            "documentation": {
              "id": 53871,
              "nodeType": "StructuredDocumentation",
              "src": "5386:137:55",
              "text": " @notice Deposits margin to the vault or withdraws margin from the vault\n @dev Only locker can call this function"
            },
            "functionSelector": "5393e780",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateMargin",
            "nameLocation": "5537:12:55",
            "parameters": {
              "id": 53876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53873,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "5558:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53893,
                  "src": "5550:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5550:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53875,
                  "mutability": "mutable",
                  "name": "marginAmount",
                  "nameLocation": "5574:12:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53893,
                  "src": "5567:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 53874,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:6:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5549:38:55"
            },
            "returnParameters": {
              "id": 53877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5597:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53921,
            "nodeType": "FunctionDefinition",
            "src": "5718:214:55",
            "nodes": [],
            "body": {
              "id": 53920,
              "nodeType": "Block",
              "src": "5782:150:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53903,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53895,
                        "src": "5812:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53900,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5792:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5803:8:55",
                      "memberName": "validate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65195,
                      "src": "5792:19:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view"
                      }
                    },
                    "id": 53904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5792:27:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53905,
                  "nodeType": "ExpressionStatement",
                  "src": "5792:27:55"
                },
                {
                  "assignments": [
                    53910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53910,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "5853:5:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 53920,
                      "src": "5830:28:55",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                        "typeString": "struct DataType.Vault"
                      },
                      "typeName": {
                        "id": 53909,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53908,
                          "name": "DataType.Vault",
                          "nameLocations": [
                            "5830:8:55",
                            "5839:5:55"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55019,
                          "src": "5830:14:55"
                        },
                        "referencedDeclaration": 55019,
                        "src": "5830:14:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                          "typeString": "struct DataType.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53916,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 53913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5889:1:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 53914,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53895,
                        "src": "5892:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53911,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "5861:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53912,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5872:16:55",
                      "memberName": "createOrGetVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61263,
                      "src": "5861:27:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_Vault_$55019_storage_ptr_$attached_to$_t_struct$_GlobalData_$65149_storage_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256,uint256) returns (struct DataType.Vault storage pointer)"
                      }
                    },
                    "id": 53915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5861:38:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                      "typeString": "struct DataType.Vault storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5830:69:55"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 53917,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53910,
                      "src": "5917:5:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                        "typeString": "struct DataType.Vault storage pointer"
                      }
                    },
                    "id": 53918,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5923:2:55",
                    "memberName": "id",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55007,
                    "src": "5917:8:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53899,
                  "id": 53919,
                  "nodeType": "Return",
                  "src": "5910:15:55"
                }
              ]
            },
            "baseFunctions": [
              54378
            ],
            "functionSelector": "9abbdf4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "5727:11:55",
            "parameters": {
              "id": 53896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53895,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "5747:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53921,
                  "src": "5739:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5739:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5738:16:55"
            },
            "returnParameters": {
              "id": 53899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53898,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53921,
                  "src": "5773:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5772:9:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53948,
            "nodeType": "FunctionDefinition",
            "src": "5992:271:55",
            "nodes": [],
            "body": {
              "id": 53947,
              "nodeType": "Block",
              "src": "6062:201:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 53933,
                                    "name": "globalData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53563,
                                    "src": "6142:10:55",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                                      "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                                    }
                                  },
                                  "id": 53934,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6153:5:55",
                                  "memberName": "pairs",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65135,
                                  "src": "6142:16:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$55183_storage_$",
                                    "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                                  }
                                },
                                "id": 53936,
                                "indexExpression": {
                                  "id": 53935,
                                  "name": "pairId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53924,
                                  "src": "6159:6:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6142:24:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                                  "typeString": "struct Perp.PairStatus storage ref"
                                }
                              },
                              "id": 53937,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6167:15:55",
                              "memberName": "sqrtAssetStatus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55174,
                              "src": "6142:40:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SqrtPerpAssetStatus_$55270_storage",
                                "typeString": "struct Perp.SqrtPerpAssetStatus storage ref"
                              }
                            },
                            "id": 53938,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6183:11:55",
                            "memberName": "uniswapPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55235,
                            "src": "6142:52:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 53931,
                            "name": "UniHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61109,
                            "src": "6119:9:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_UniHelper_$61109_$",
                              "typeString": "type(library UniHelper)"
                            }
                          },
                          "id": 53932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6129:12:55",
                          "memberName": "getSqrtPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60617,
                          "src": "6119:22:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint160_$",
                            "typeString": "function (address) view returns (uint160)"
                          }
                        },
                        "id": 53939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6119:76:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 53940,
                              "name": "globalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53563,
                              "src": "6209:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                                "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                              }
                            },
                            "id": 53941,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6220:5:55",
                            "memberName": "pairs",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65135,
                            "src": "6209:16:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$55183_storage_$",
                              "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                            }
                          },
                          "id": 53943,
                          "indexExpression": {
                            "id": 53942,
                            "name": "pairId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53924,
                            "src": "6226:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6209:24:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                            "typeString": "struct Perp.PairStatus storage ref"
                          }
                        },
                        "id": 53944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6234:12:55",
                        "memberName": "isMarginZero",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55178,
                        "src": "6209:37:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 53929,
                        "name": "UniHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61109,
                        "src": "6079:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniHelper_$61109_$",
                          "typeString": "type(library UniHelper)"
                        }
                      },
                      "id": 53930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6089:16:55",
                      "memberName": "convertSqrtPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60665,
                      "src": "6079:26:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_bool_$returns$_t_uint160_$",
                        "typeString": "function (uint160,bool) pure returns (uint160)"
                      }
                    },
                    "id": 53945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6079:177:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "functionReturnParameters": 53928,
                  "id": 53946,
                  "nodeType": "Return",
                  "src": "6072:184:55"
                }
              ]
            },
            "baseFunctions": [
              54385
            ],
            "documentation": {
              "id": 53922,
              "nodeType": "StructuredDocumentation",
              "src": "5938:49:55",
              "text": "@notice Gets the square root of the AMM price"
            },
            "functionSelector": "18e80749",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSqrtPrice",
            "nameLocation": "6001:12:55",
            "parameters": {
              "id": 53925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53924,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "6022:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53948,
                  "src": "6014:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6013:16:55"
            },
            "returnParameters": {
              "id": 53928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53948,
                  "src": "6053:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 53926,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "6053:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6052:9:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53965,
            "nodeType": "FunctionDefinition",
            "src": "6325:161:55",
            "nodes": [],
            "body": {
              "id": 53964,
              "nodeType": "Block",
              "src": "6400:86:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 53958,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53563,
                            "src": "6454:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 53959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6465:5:55",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65135,
                          "src": "6454:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$55183_storage_$",
                            "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                          }
                        },
                        "id": 53961,
                        "indexExpression": {
                          "id": 53960,
                          "name": "pairId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53951,
                          "src": "6471:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6454:24:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      ],
                      "expression": {
                        "id": 53956,
                        "name": "PositionCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58808,
                        "src": "6417:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionCalculator_$58808_$",
                          "typeString": "type(library PositionCalculator)"
                        }
                      },
                      "id": 53957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6436:17:55",
                      "memberName": "getSqrtIndexPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58491,
                      "src": "6417:36:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PairStatus_$55183_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Perp.PairStatus memory) view returns (uint256)"
                      }
                    },
                    "id": 53962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6417:62:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 53955,
                  "id": 53963,
                  "nodeType": "Return",
                  "src": "6410:69:55"
                }
              ]
            },
            "baseFunctions": [
              54392
            ],
            "documentation": {
              "id": 53949,
              "nodeType": "StructuredDocumentation",
              "src": "6269:51:55",
              "text": "@notice Gets the square root of the index price"
            },
            "functionSelector": "acfcd9fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSqrtIndexPrice",
            "nameLocation": "6334:17:55",
            "parameters": {
              "id": 53952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53951,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "6360:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53965,
                  "src": "6352:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6352:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6351:16:55"
            },
            "returnParameters": {
              "id": 53955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53965,
                  "src": "6391:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6391:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6390:9:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53981,
            "nodeType": "FunctionDefinition",
            "src": "6492:226:55",
            "nodes": [],
            "body": {
              "id": 53980,
              "nodeType": "Block",
              "src": "6640:78:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53976,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "6691:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 53977,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53967,
                        "src": "6703:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53973,
                        "name": "ReaderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62685,
                        "src": "6650:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReaderLogic_$62685_$",
                          "typeString": "type(library ReaderLogic)"
                        }
                      },
                      "id": 53975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6662:28:55",
                      "memberName": "getPositionWithUnrealizedFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62654,
                      "src": "6650:40:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$_t_struct$_PositionParams_$58118_memory_ptr_$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256) view returns (struct PositionCalculator.PositionParams memory)"
                      }
                    },
                    "id": 53978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6650:61:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PositionParams_$58118_memory_ptr",
                      "typeString": "struct PositionCalculator.PositionParams memory"
                    }
                  },
                  "id": 53979,
                  "nodeType": "ExpressionStatement",
                  "src": "6650:61:55"
                }
              ]
            },
            "baseFunctions": [
              54400
            ],
            "functionSelector": "9174e1a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPositionWithUnrealizedFee",
            "nameLocation": "6501:28:55",
            "parameters": {
              "id": 53968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53967,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "6538:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53981,
                  "src": "6530:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6530:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6529:17:55"
            },
            "returnParameters": {
              "id": 53972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53971,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53981,
                  "src": "6594:40:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PositionParams_$58118_memory_ptr",
                    "typeString": "struct PositionCalculator.PositionParams"
                  },
                  "typeName": {
                    "id": 53970,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53969,
                      "name": "PositionCalculator.PositionParams",
                      "nameLocations": [
                        "6594:18:55",
                        "6613:14:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58118,
                      "src": "6594:33:55"
                    },
                    "referencedDeclaration": 58118,
                    "src": "6594:33:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PositionParams_$58118_storage_ptr",
                      "typeString": "struct PositionCalculator.PositionParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6593:42:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53996,
            "nodeType": "FunctionDefinition",
            "src": "6764:134:55",
            "nodes": [],
            "body": {
              "id": 53995,
              "nodeType": "Block",
              "src": "6850:48:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 53990,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "6867:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 53991,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6878:5:55",
                      "memberName": "pairs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65135,
                      "src": "6867:16:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$55183_storage_$",
                        "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                      }
                    },
                    "id": 53993,
                    "indexExpression": {
                      "id": 53992,
                      "name": "pairId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53984,
                      "src": "6884:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6867:24:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                      "typeString": "struct Perp.PairStatus storage ref"
                    }
                  },
                  "functionReturnParameters": 53989,
                  "id": 53994,
                  "nodeType": "Return",
                  "src": "6860:31:55"
                }
              ]
            },
            "baseFunctions": [
              54424
            ],
            "documentation": {
              "id": 53982,
              "nodeType": "StructuredDocumentation",
              "src": "6724:35:55",
              "text": "@notice Gets the status of pair"
            },
            "functionSelector": "c92af3ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPairStatus",
            "nameLocation": "6773:13:55",
            "parameters": {
              "id": 53985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53984,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "6795:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 53996,
                  "src": "6787:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6787:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6786:16:55"
            },
            "returnParameters": {
              "id": 53989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53996,
                  "src": "6826:22:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PairStatus_$55183_memory_ptr",
                    "typeString": "struct Perp.PairStatus"
                  },
                  "typeName": {
                    "id": 53987,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53986,
                      "name": "Perp.PairStatus",
                      "nameLocations": [
                        "6826:4:55",
                        "6831:10:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55183,
                      "src": "6826:15:55"
                    },
                    "referencedDeclaration": 55183,
                    "src": "6826:15:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$55183_storage_ptr",
                      "typeString": "struct Perp.PairStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6825:24:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54011,
            "nodeType": "FunctionDefinition",
            "src": "6935:131:55",
            "nodes": [],
            "body": {
              "id": 54010,
              "nodeType": "Block",
              "src": "7016:50:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 54005,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "7033:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      "id": 54006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7044:6:55",
                      "memberName": "vaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65145,
                      "src": "7033:17:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$55019_storage_$",
                        "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                      }
                    },
                    "id": 54008,
                    "indexExpression": {
                      "id": 54007,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53999,
                      "src": "7051:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7033:26:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage",
                      "typeString": "struct DataType.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 54004,
                  "id": 54009,
                  "nodeType": "Return",
                  "src": "7026:33:55"
                }
              ]
            },
            "baseFunctions": [
              54408
            ],
            "documentation": {
              "id": 53997,
              "nodeType": "StructuredDocumentation",
              "src": "6904:26:55",
              "text": "@notice Gets the vault"
            },
            "functionSelector": "9403b634",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "6944:8:55",
            "parameters": {
              "id": 54000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53999,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "6961:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 54011,
                  "src": "6953:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6953:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6952:17:55"
            },
            "returnParameters": {
              "id": 54004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54011,
                  "src": "6993:21:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$55019_memory_ptr",
                    "typeString": "struct DataType.Vault"
                  },
                  "typeName": {
                    "id": 54002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54001,
                      "name": "DataType.Vault",
                      "nameLocations": [
                        "6993:8:55",
                        "7002:5:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55019,
                      "src": "6993:14:55"
                    },
                    "referencedDeclaration": 55019,
                    "src": "6993:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$55019_storage_ptr",
                      "typeString": "struct DataType.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6992:23:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54054,
            "nodeType": "FunctionDefinition",
            "src": "7117:428:55",
            "nodes": [],
            "body": {
              "id": 54053,
              "nodeType": "Block",
              "src": "7201:344:55",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54021,
                      "mutability": "mutable",
                      "name": "pairId",
                      "nameLocation": "7219:6:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 54053,
                      "src": "7211:14:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7211:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54028,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "id": 54022,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53563,
                            "src": "7228:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 54023,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7239:6:55",
                          "memberName": "vaults",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65145,
                          "src": "7228:17:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$55019_storage_$",
                            "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                          }
                        },
                        "id": 54025,
                        "indexExpression": {
                          "id": 54024,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54014,
                          "src": "7246:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7228:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      },
                      "id": 54026,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7255:12:55",
                      "memberName": "openPosition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55018,
                      "src": "7228:39:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserStatus_$55291_storage",
                        "typeString": "struct Perp.UserStatus storage ref"
                      }
                    },
                    "id": 54027,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7268:6:55",
                    "memberName": "pairId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 55272,
                    "src": "7228:46:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7211:63:55"
                },
                {
                  "assignments": [
                    54030,
                    54032,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54030,
                      "mutability": "mutable",
                      "name": "minMargin",
                      "nameLocation": "7293:9:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 54053,
                      "src": "7286:16:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 54029,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7286:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54032,
                      "mutability": "mutable",
                      "name": "vaultValue",
                      "nameLocation": "7311:10:55",
                      "nodeType": "VariableDeclaration",
                      "scope": 54053,
                      "src": "7304:17:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 54031,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7304:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 54046,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 54035,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53563,
                            "src": "7379:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 54036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7390:5:55",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65135,
                          "src": "7379:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PairStatus_$55183_storage_$",
                            "typeString": "mapping(uint256 => struct Perp.PairStatus storage ref)"
                          }
                        },
                        "id": 54038,
                        "indexExpression": {
                          "id": 54037,
                          "name": "pairId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54021,
                          "src": "7396:6:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7379:24:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 54039,
                          "name": "globalData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53563,
                          "src": "7405:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                            "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                          }
                        },
                        "id": 54040,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7416:23:55",
                        "memberName": "rebalanceFeeGrowthCache",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65140,
                        "src": "7405:34:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$55024_storage_$",
                          "typeString": "mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref)"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 54041,
                            "name": "globalData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53563,
                            "src": "7441:10:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                              "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                            }
                          },
                          "id": 54042,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7452:6:55",
                          "memberName": "vaults",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65145,
                          "src": "7441:17:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$55019_storage_$",
                            "typeString": "mapping(uint256 => struct DataType.Vault storage ref)"
                          }
                        },
                        "id": 54044,
                        "indexExpression": {
                          "id": 54043,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54014,
                          "src": "7459:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7441:26:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PairStatus_$55183_storage",
                          "typeString": "struct Perp.PairStatus storage ref"
                        },
                        {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$55024_storage_$",
                          "typeString": "mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref)"
                        },
                        {
                          "typeIdentifier": "t_struct$_Vault_$55019_storage",
                          "typeString": "struct DataType.Vault storage ref"
                        }
                      ],
                      "expression": {
                        "id": 54033,
                        "name": "PositionCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58808,
                        "src": "7327:18:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionCalculator_$58808_$",
                          "typeString": "type(library PositionCalculator)"
                        }
                      },
                      "id": 54034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7346:19:55",
                      "memberName": "calculateMinDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58357,
                      "src": "7327:38:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PairStatus_$55183_memory_ptr_$_t_mapping$_t_uint256_$_t_struct$_RebalanceFeeGrowthCache_$55024_storage_$_$_t_struct$_Vault_$55019_memory_ptr_$returns$_t_int256_$_t_int256_$_t_bool_$_t_uint256_$",
                        "typeString": "function (struct Perp.PairStatus memory,mapping(uint256 => struct DataType.RebalanceFeeGrowthCache storage ref),struct DataType.Vault memory) view returns (int256,int256,bool,uint256)"
                      }
                    },
                    "id": 54045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7327:150:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(int256,int256,bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7285:192:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54048,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54014,
                        "src": "7507:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 54049,
                        "name": "vaultValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54032,
                        "src": "7516:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 54050,
                        "name": "minMargin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54030,
                        "src": "7528:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 54047,
                      "name": "VaultStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54323,
                      "src": "7495:11:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_VaultStatus_$54323_storage_ptr_$",
                        "typeString": "type(struct IPredyPool.VaultStatus storage pointer)"
                      }
                    },
                    "id": 54051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7495:43:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$54323_memory_ptr",
                      "typeString": "struct IPredyPool.VaultStatus memory"
                    }
                  },
                  "functionReturnParameters": 54019,
                  "id": 54052,
                  "nodeType": "Return",
                  "src": "7488:50:55"
                }
              ]
            },
            "baseFunctions": [
              54416
            ],
            "documentation": {
              "id": 54012,
              "nodeType": "StructuredDocumentation",
              "src": "7072:40:55",
              "text": "@notice Gets the status of the vault"
            },
            "functionSelector": "49ebb77d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultStatus",
            "nameLocation": "7126:14:55",
            "parameters": {
              "id": 54015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54014,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "7149:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 54054,
                  "src": "7141:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7141:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7140:17:55"
            },
            "returnParameters": {
              "id": 54019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54054,
                  "src": "7181:18:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultStatus_$54323_memory_ptr",
                    "typeString": "struct IPredyPool.VaultStatus"
                  },
                  "typeName": {
                    "id": 54017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54016,
                      "name": "VaultStatus",
                      "nameLocations": [
                        "7181:11:55"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54323,
                      "src": "7181:11:55"
                    },
                    "referencedDeclaration": 54323,
                    "src": "7181:11:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$54323_storage_ptr",
                      "typeString": "struct IPredyPool.VaultStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7180:20:55"
            },
            "scope": 54083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54068,
            "nodeType": "FunctionDefinition",
            "src": "7633:113:55",
            "nodes": [],
            "body": {
              "id": 54067,
              "nodeType": "Block",
              "src": "7684:62:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54063,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "7720:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 54064,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54057,
                        "src": "7732:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54060,
                        "name": "ReaderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62685,
                        "src": "7694:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReaderLogic_$62685_$",
                          "typeString": "type(library ReaderLogic)"
                        }
                      },
                      "id": 54062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7706:13:55",
                      "memberName": "getPairStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62565,
                      "src": "7694:25:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256)"
                      }
                    },
                    "id": 54065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7694:45:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54066,
                  "nodeType": "ExpressionStatement",
                  "src": "7694:45:55"
                }
              ]
            },
            "baseFunctions": [
              54429
            ],
            "documentation": {
              "id": 54055,
              "nodeType": "StructuredDocumentation",
              "src": "7551:77:55",
              "text": "@notice Gets the status of pair\n @dev This function always reverts"
            },
            "functionSelector": "1daf2c19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revertPairStatus",
            "nameLocation": "7642:16:55",
            "parameters": {
              "id": 54058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54057,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "7667:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 54068,
                  "src": "7659:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7659:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7658:16:55"
            },
            "returnParameters": {
              "id": 54059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7684:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54082,
            "nodeType": "FunctionDefinition",
            "src": "7839:117:55",
            "nodes": [],
            "body": {
              "id": 54081,
              "nodeType": "Block",
              "src": "7892:64:55",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54077,
                        "name": "globalData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53563,
                        "src": "7929:10:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        }
                      },
                      {
                        "id": 54078,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54071,
                        "src": "7941:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_GlobalData_$65149_storage",
                          "typeString": "struct GlobalDataLibrary.GlobalData storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54074,
                        "name": "ReaderLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62685,
                        "src": "7902:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReaderLogic_$62685_$",
                          "typeString": "type(library ReaderLogic)"
                        }
                      },
                      "id": 54076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7914:14:55",
                      "memberName": "getVaultStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62618,
                      "src": "7902:26:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_GlobalData_$65149_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct GlobalDataLibrary.GlobalData storage pointer,uint256)"
                      }
                    },
                    "id": 54079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7902:47:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54080,
                  "nodeType": "ExpressionStatement",
                  "src": "7902:47:55"
                }
              ]
            },
            "baseFunctions": [
              54434
            ],
            "documentation": {
              "id": 54069,
              "nodeType": "StructuredDocumentation",
              "src": "7752:82:55",
              "text": "@notice Gets the status of the vault\n @dev This function always reverts"
            },
            "functionSelector": "360125f1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revertVaultStatus",
            "nameLocation": "7848:17:55",
            "parameters": {
              "id": 54072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54071,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "7874:7:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 54082,
                  "src": "7866:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7866:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7865:17:55"
            },
            "returnParameters": {
              "id": 54073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7892:0:55"
            },
            "scope": 54083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53545,
              "name": "IPredyPool",
              "nameLocations": [
                "1003:10:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54435,
              "src": "1003:10:55"
            },
            "id": 53546,
            "nodeType": "InheritanceSpecifier",
            "src": "1003:10:55"
          },
          {
            "baseName": {
              "id": 53547,
              "name": "IUniswapV3MintCallback",
              "nameLocations": [
                "1015:22:55"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48038,
              "src": "1015:22:55"
            },
            "id": 53548,
            "nodeType": "InheritanceSpecifier",
            "src": "1015:22:55"
          }
        ],
        "canonicalName": "PredyPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53544,
          "nodeType": "StructuredDocumentation",
          "src": "921:59:55",
          "text": " @notice Holds the state for all pairs and vaults"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54083,
          48038,
          54435
        ],
        "name": "PredyPool",
        "nameLocation": "990:9:55",
        "scope": 54084,
        "usedErrors": [
          48692,
          54266,
          54268,
          54270,
          54272,
          54274,
          54276,
          61115,
          61117,
          61119
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 55
}
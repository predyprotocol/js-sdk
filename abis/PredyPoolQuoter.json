{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPredyPool",
          "name": "_predyPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "revertSettlement",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerIsNotPredyPool",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "name": "predyTradeAfterCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        }
      ],
      "name": "quoteBaseAmountDelta",
      "outputs": [
        {
          "internalType": "int256",
          "name": "baseAmountDelta",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pairId",
          "type": "uint256"
        }
      ],
      "name": "quotePairStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "marginId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolOwner",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "quotePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "supplyTokenAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalCompoundDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalDeposited",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalNormalBorrowed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetScaler",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetGrowth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "debtGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.AssetStatus",
                  "name": "tokenStatus",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "baseRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "kinkRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slope2",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct InterestRateModel.IRMParams",
                  "name": "irmParams",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedProtocolRevenue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accumulatedCreatorRevenue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Perp.AssetPoolStatus",
              "name": "basePool",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "riskRatio",
                  "type": "uint256"
                },
                {
                  "internalType": "int24",
                  "name": "rangeSize",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "rebalanceThreshold",
                  "type": "int24"
                }
              ],
              "internalType": "struct Perp.AssetRiskParams",
              "name": "riskParams",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "uniswapPool",
                  "type": "address"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint64",
                  "name": "numRebalance",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRebalanceTotalSquartAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastFee1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "borrowPremium1Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee0Growth",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee1Growth",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionUnderlying",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "positionAmount",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFeeGrowth",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ScaledAsset.UserStatus",
                  "name": "rebalancePositionStable",
                  "type": "tuple"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "rebalanceFeeGrowthStable",
                  "type": "int256"
                }
              ],
              "internalType": "struct Perp.SqrtPerpAssetStatus",
              "name": "sqrtAssetStatus",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isMarginZero",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "feeRatio",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastUpdateTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Perp.PairStatus",
          "name": "pairStatus",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "tradeAmountSqrt",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IPredyPool.TradeParams",
          "name": "tradeParams",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "quoteTrade",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "int256",
                  "name": "perpEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtEntryUpdate",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateUnderlying",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtRebalanceEntryUpdateStable",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "perpPayoff",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "sqrtPayoff",
                  "type": "int256"
                }
              ],
              "internalType": "struct IPredyPool.Payoff",
              "name": "payoff",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "fee",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "averagePrice",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtTwap",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sqrtPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPredyPool.TradeResult",
          "name": "tradeResult",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "quoteVaultStatus",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "vaultValue",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "minMargin",
              "type": "int256"
            }
          ],
          "internalType": "struct IPredyPool.VaultStatus",
          "name": "vaultStatus",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "193:3641:65:-:0;;;276:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;298:10:57;:22;;-1:-1:-1;;;;;298:22:57;;;-1:-1:-1;;;;;;298:22:57;;;;;;;;376:36:65;;;;;::::1;::::0;::::1;;::::0;;193:3641;;14:143:147;-1:-1:-1;;;;;101:31:147;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:429::-;261:6;269;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;370:9;364:16;389:43;426:5;389:43;:::i;:::-;501:2;486:18;;480:25;451:5;;-1:-1:-1;514:45:147;480:25;514:45;:::i;:::-;578:7;568:17;;;162:429;;;;;:::o;:::-;193:3641:65;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "193:3641:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1651:265;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:377;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1922:279::-;;;;;;:::i;:::-;;:::i;:::-;;;;10668:13:147;;10650:32;;10738:4;10726:17;;;10720:24;10698:20;;;10691:54;10789:17;;;10783:24;10761:20;;;10754:54;10638:2;10623:18;1922:279:65;10444:370:147;425:322:65;;;;;;:::i;:::-;;:::i;:::-;;1295:350;;;;;;:::i;:::-;;:::i;:::-;;;12836:25:147;;;12824:2;12809:18;1295:350:65;12692:175:147;1651:265:65;1710:33;;:::i;:::-;1759:10;;:35;;-1:-1:-1;;;1759:35:65;;;;;12836:25:147;;;-1:-1:-1;;;;;1759:10:65;;;;:27;;12809:18:147;;1759:35:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1755:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1861:38;1892:6;1861:30;:38::i;:::-;1848:51;;1806:104;1755:155;1651:265;;;:::o;912:377::-;1059:41;;:::i;:::-;1120:10;;:45;;-1:-1:-1;;;1120:45:65;;-1:-1:-1;;;;;1120:10:65;;;;:16;;:45;;1137:11;;1150:14;;1120:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1120:45:65;;;;;;;;-1:-1:-1;;1120:45:65;;;;;;;;;;;;:::i;:::-;;;1116:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:39;1265:6;1233:31;:39::i;:::-;1219:53;;1177:106;1116:167;;;;;912:377;;;;:::o;1922:279::-;1983:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1983:41:65;2040:10;;:37;;-1:-1:-1;;;2040:37:65;;;;;12836:25:147;;;-1:-1:-1;;;;;2040:10:65;;;;:28;;12809:18:147;;2040:37:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:39;2177:6;2145:31;:39::i;425:322::-;394:10:57;;-1:-1:-1;;;;;394:10:57;372;:33;368:68;;414:22;;-1:-1:-1;;;414:22:57;;;;;;;;;;;368:68;620:17:65::1;651:11;640:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;620:43;;725:4;719:11;712:4;708:2;704:13;697:34;1295:350:::0;1402:22;1444:10;;1474:49;;;;;;;;1444:10;1501:17;-1:-1:-1;;;;;1501:17:65;;;1474:49;;;;;;;;;;;;;;;;1444:80;;-1:-1:-1;;;1444:80:65;;:10;;;;;:16;;:80;;1461:11;;1444:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1444:80:65;;;;;;;;-1:-1:-1;;1444:80:65;;;;;;;;;;;;:::i;:::-;;;1440:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:43;1621:6;1585:35;:43::i;:::-;1578:50;1295:350;-1:-1:-1;;;1295:350:65:o;1440:199::-;;1295:350;;;:::o;3080:365::-;3187:33;;:::i;:::-;3256:3;3240:6;:13;:19;3236:203;;;3332:6;3326:13;3317:6;3313:2;3309:15;3302:38;3236:203;3402:6;3391:37;;;;;;;;;;;;:::i;2381:381::-;2489:41;;:::i;:::-;2566:3;2550:6;:13;:19;2546:210;;;2642:6;2636:13;2627:6;2623:2;2619:15;2612:38;2546:210;2712:6;2701:44;;;;;;;;;;;;:::i;3451:381::-;3559:41;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3559:41:65;3636:3;3620:6;:13;:19;3616:210;;;3712:6;3706:13;3697:6;3693:2;3689:15;3682:38;3616:210;3782:6;3771:44;;;;;;;;;;;;:::i;2768:306::-;2856:6;2894:3;2878:6;:13;:19;2874:194;;;2970:6;2964:13;2955:6;2951:2;2947:15;2940:38;2874:194;3040:6;3029:28;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:147;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:147;;14:180;-1:-1:-1;14:180:147:o;575:857::-;671:1;667;662:3;658:11;654:19;712:2;704:5;698:12;694:21;689:3;682:34;777:2;769:4;762:5;758:16;752:23;748:32;741:4;736:3;732:14;725:56;;827:4;820:5;816:16;810:23;871:12;865:19;858:4;853:3;849:14;842:43;939:4;925:12;921:23;915:30;910:2;905:3;901:12;894:52;1001:4;987:12;983:23;977:30;971:3;966;962:13;955:53;1063:2;1049:12;1045:21;1039:28;1033:3;1028;1024:13;1017:51;1123:3;1109:12;1105:22;1099:29;1093:3;1088;1084:13;1077:52;1184:3;1170:12;1166:22;1160:29;1154:3;1149;1145:13;1138:52;;1238:2;1231:5;1227:14;1221:21;1251:61;1304:6;1299:3;1295:16;1279:14;389:5;383:12;378:3;371:25;445:4;438:5;434:16;428:23;421:4;416:3;412:14;405:47;501:4;494:5;490:16;484:23;477:4;472:3;468:14;461:47;557:4;550:5;546:16;540:23;533:4;528:3;524:14;517:47;;;308:262;1251:61;-1:-1:-1;1363:3:147;1352:15;;1346:22;1337:6;1328:16;;1321:48;1420:3;1409:15;1403:22;1394:6;1385:16;;;1378:48;575:857::o;2043:1463::-;2135:12;;-1:-1:-1;;;;;265:31:147;253:44;;2199:4;2192:5;2188:16;2182:23;2214:46;2254:4;2249:3;2245:14;2231:12;1512:1;1501:20;1489:33;;1437:91;2214:46;;2308:4;2301:5;2297:16;2291:23;2323:48;2365:4;2360:3;2356:14;2340;1512:1;1501:20;1489:33;;1437:91;2323:48;;2419:4;2412:5;2408:16;2402:23;2434:49;2477:4;2472:3;2468:14;2452;-1:-1:-1;;;;;1845:30:147;1833:43;;1780:102;2434:49;-1:-1:-1;2532:4:147;2521:16;;;2515:23;2499:14;;;2492:47;2588:4;2577:16;;;2571:23;2555:14;;;2548:47;2644:4;2633:16;;;2627:23;2611:14;;;2604:47;2700:4;2689:16;;;2683:23;2667:14;;;2660:47;2726:6;2768:14;;;2762:21;2748:12;;;2741:43;2803:6;2845:14;;;2839:21;2825:12;;;2818:43;2880:6;2922:14;;;2916:21;2902:12;;;2895:43;2957:6;2999:14;;;2993:21;2979:12;;;2972:43;3034:6;3076:14;;;3070:21;3056:12;;;3049:43;3111:6;3154:14;;;3148:21;1963:12;;3223;;;1951:25;2025:4;2014:16;;2008:23;1992:14;;;1985:47;3178:58;;3284:6;3277:5;3273:18;3267:25;3311:6;3326:58;3380:2;3375:3;3371:12;3355:14;1963:12;;1951:25;;2025:4;2014:16;;;2008:23;1992:14;;1985:47;1887:151;3326:58;3424:14;;3418:21;3409:6;3400:16;;3393:47;-1:-1:-1;3491:6:147;3480:18;3474:25;3465:6;3456:16;;;3449:51;2043:1463::o;3687:1462::-;3911:13;;3893:32;;3972:4;3960:17;;;3954:24;3879:4;3864:20;;;3987:54;;4020:20;;3954:24;-1:-1:-1;;;;;265:31:147;253:44;;199:104;3987:54;;4090:4;4082:6;4078:17;4072:24;4105:56;4155:4;4144:9;4140:20;4124:14;-1:-1:-1;;;;;265:31:147;253:44;;199:104;4105:56;;4210:4;4202:6;4198:17;4192:24;4225:71;4290:4;4279:9;4275:20;4259:14;4225:71;:::i;:::-;;4345:4;4337:6;4333:17;4327:24;4360:73;4425:6;4414:9;4410:22;4394:14;4360:73;:::i;:::-;-1:-1:-1;4482:4:147;4470:17;;4464:24;1614:12;;4562:6;4547:22;;1602:25;1690:4;1679:16;;1673:23;1670:1;1659:38;;;1643:14;;;1636:62;1761:4;1750:16;;1744:23;1730:38;;1714:14;;;1707:62;4497:73;4619:4;4611:6;4607:17;4601:24;4634:77;4703:6;4692:9;4688:22;4672:14;4634:77;:::i;:::-;-1:-1:-1;4760:4:147;4748:17;;4742:24;-1:-1:-1;;;;;265:31:147;4825:6;4810:22;;253:44;4882:6;4870:19;;4864:26;3581:13;3574:21;4946:6;4931:22;;3562:34;5003:6;4991:19;;4985:26;3674:4;3663:16;5068:6;5053:22;;3651:29;5134:6;5122:19;;;5116:26;5107:6;5092:22;;;5085:58;3687:1462;:::o;5154:127::-;5215:10;5210:3;5206:20;5203:1;5196:31;5246:4;5243:1;5236:15;5270:4;5267:1;5260:15;5286:251;5358:2;5352:9;;;5388:15;;-1:-1:-1;;;;;5418:34:147;;5454:22;;;5415:62;5412:88;;;5480:18;;:::i;:::-;5516:2;5509:22;5286:251;:::o;5542:253::-;5614:2;5608:9;5656:4;5644:17;;-1:-1:-1;;;;;5676:34:147;;5712:22;;;5673:62;5670:88;;;5738:18;;:::i;5800:253::-;5872:2;5866:9;5914:4;5902:17;;-1:-1:-1;;;;;5934:34:147;;5970:22;;;5931:62;5928:88;;;5996:18;;:::i;6058:253::-;6130:2;6124:9;6172:4;6160:17;;-1:-1:-1;;;;;6192:34:147;;6228:22;;;6189:62;6186:88;;;6254:18;;:::i;6316:255::-;6388:2;6382:9;6430:6;6418:19;;-1:-1:-1;;;;;6452:34:147;;6488:22;;;6449:62;6446:88;;;6514:18;;:::i;6576:250::-;6643:2;6637:9;6685:6;6673:19;;-1:-1:-1;;;;;6707:34:147;;6743:22;;;6704:62;6701:88;;;6769:18;;:::i;6831:718::-;6873:5;6926:3;6919:4;6911:6;6907:17;6903:27;6893:55;;6944:1;6941;6934:12;6893:55;6980:6;6967:20;-1:-1:-1;;;;;7043:2:147;7039;7036:10;7033:36;;;7049:18;;:::i;:::-;7124:2;7118:9;7092:2;7178:13;;-1:-1:-1;;7174:22:147;;;7198:2;7170:31;7166:40;7154:53;;;7222:18;;;7242:22;;;7219:46;7216:72;;;7268:18;;:::i;:::-;7308:10;7304:2;7297:22;7343:2;7335:6;7328:18;7389:3;7382:4;7377:2;7369:6;7365:15;7361:26;7358:35;7355:55;;;7406:1;7403;7396:12;7355:55;7470:2;7463:4;7455:6;7451:17;7444:4;7436:6;7432:17;7419:54;7517:1;7510:4;7505:2;7497:6;7493:15;7489:26;7482:37;7537:6;7528:15;;;;;;6831:718;;;;:::o;7554:808::-;7612:5;7660:4;7648:9;7643:3;7639:19;7635:30;7632:50;;;7678:1;7675;7668:12;7632:50;7711:2;7705:9;7753:4;7745:6;7741:17;-1:-1:-1;;;;;7845:6:147;7833:10;7830:22;7825:2;7813:10;7810:18;7807:46;7804:72;;;7856:18;;:::i;:::-;7896:10;7892:2;7885:22;7925:6;7916:15;;7968:9;7955:23;7947:6;7940:39;8040:2;8029:9;8025:18;8012:32;8007:2;7999:6;7995:15;7988:57;8106:2;8095:9;8091:18;8078:32;8073:2;8065:6;8061:15;8054:57;8172:2;8161:9;8157:18;8144:32;8139:2;8131:6;8127:15;8120:57;8228:3;8217:9;8213:19;8200:33;8186:47;;8256:2;8248:6;8245:14;8242:34;;;8272:1;8269;8262:12;8242:34;;8310:45;8351:3;8342:6;8331:9;8327:22;8310:45;:::i;:::-;8304:3;8296:6;8292:16;8285:71;;;7554:808;;;;:::o;8367:131::-;-1:-1:-1;;;;;8442:31:147;;8432:42;;8422:70;;8488:1;8485;8478:12;8422:70;8367:131;:::o;8503:977::-;8634:6;8642;8695:2;8683:9;8674:7;8670:23;8666:32;8663:52;;;8711:1;8708;8701:12;8663:52;8751:9;8738:23;-1:-1:-1;;;;;8821:2:147;8813:6;8810:14;8807:34;;;8837:1;8834;8827:12;8807:34;8860:62;8914:7;8905:6;8894:9;8890:22;8860:62;:::i;:::-;8850:72;;8975:2;8964:9;8960:18;8947:32;8931:48;;9004:2;8994:8;8991:16;8988:36;;;9020:1;9017;9010:12;8988:36;9043:24;;;;9101:2;9083:16;;;9079:25;9076:45;;;9117:1;9114;9107:12;9076:45;9143:22;;:::i;:::-;9202:2;9189:16;9214:33;9239:7;9214:33;:::i;:::-;9256:22;;9324:2;9316:11;;9303:25;9340:16;;;9337:36;;;9369:1;9366;9359:12;9337:36;9405:44;9441:7;9430:8;9426:2;9422:17;9405:44;:::i;:::-;9400:2;9393:5;9389:14;9382:68;;9469:5;9459:15;;;;;8503:977;;;;;:::o;9485:954::-;9637:4;9679:3;9668:9;9664:19;9656:27;;9708:6;9702:13;9748:2;9742:9;9731;9724:28;9804:4;9800:2;9796:13;9790:20;9783:4;9772:9;9768:20;9761:50;9863:4;9859:2;9855:13;9849:20;9842:4;9831:9;9827:20;9820:50;9922:4;9918:2;9914:13;9908:20;9901:4;9890:9;9886:20;9879:50;9981:4;9977:2;9973:13;9967:20;9960:4;9949:9;9945:20;9938:50;10040:4;10036:2;10032:13;10026:20;10019:4;10008:9;10004:20;9997:50;;10103:4;10095:6;10091:17;10085:24;10078:4;10067:9;10063:20;10056:54;10166:4;10158:6;10154:17;10148:24;10141:4;10130:9;10126:20;10119:54;10231:4;10223:6;10219:17;10213:24;10204:6;10193:9;10189:22;10182:56;10296:4;10288:6;10284:17;10278:24;10269:6;10258:9;10254:22;10247:56;10361:4;10353:6;10349:17;10343:24;10334:6;10323:9;10319:22;10312:56;10426:4;10418:6;10414:17;10408:24;10399:6;10388:9;10384:22;10377:56;9485:954;;;;:::o;10819:1509::-;10947:6;10955;10999:9;10990:7;10986:23;11029:3;11025:2;11021:12;11018:32;;;11046:1;11043;11036:12;11018:32;11086:9;11073:23;-1:-1:-1;;;;;11111:6:147;11108:30;11105:50;;;11151:1;11148;11141:12;11105:50;11174:62;11228:7;11219:6;11208:9;11204:22;11174:62;:::i;:::-;11164:72;-1:-1:-1;;;;11255:16:147;11290:6;11308:11;;;11305:31;;;11332:1;11329;11322:12;11305:31;11358:22;;:::i;:::-;11400:4;11396:2;11392:13;11389:33;;;11418:1;11415;11408:12;11389:33;11446:22;;:::i;:::-;11431:37;;11521:2;11510:9;11506:18;11493:32;11484:7;11477:49;11588:2;11577:9;11573:18;11560:32;11555:2;11546:7;11542:16;11535:58;11655:2;11644:9;11640:18;11627:32;11622:2;11613:7;11609:16;11602:58;11722:3;11711:9;11707:19;11694:33;11689:2;11680:7;11676:16;11669:59;11791:3;11780:9;11776:19;11763:33;11757:3;11748:7;11744:17;11737:60;11860:4;11849:9;11845:20;11832:34;11826:3;11817:7;11813:17;11806:61;11890:7;11883:5;11876:22;11958:4;11947:9;11943:20;11930:34;11925:2;11918:5;11914:14;11907:58;12025:3;12014:9;12010:19;11997:33;11992:2;11985:5;11981:14;11974:57;12091:3;12080:9;12076:19;12063:33;12058:2;12051:5;12047:14;12040:57;12158:3;12147:9;12143:19;12130:33;12124:3;12117:5;12113:15;12106:58;12225:3;12214:9;12210:19;12197:33;12191:3;12184:5;12180:15;12173:58;12293:2;12282:9;12278:18;12265:32;12258:4;12251:5;12247:16;12240:58;12317:5;12307:15;;;;;10819:1509;;;;;:::o;12333:354::-;12422:6;12475:2;12463:9;12454:7;12450:23;12446:32;12443:52;;;12491:1;12488;12481:12;12443:52;12531:9;12518:23;-1:-1:-1;;;;;12556:6:147;12553:30;12550:50;;;12596:1;12593;12586:12;12550:50;12619:62;12673:7;12664:6;12653:9;12649:22;12619:62;:::i;:::-;12609:72;12333:354;-1:-1:-1;;;;12333:354:147:o;13054:422::-;13095:3;13133:5;13127:12;13160:6;13155:3;13148:19;13185:1;13195:162;13209:6;13206:1;13203:13;13195:162;;;13271:4;13327:13;;;13323:22;;13317:29;13299:11;;;13295:20;;13288:59;13224:12;13195:162;;;13199:3;13402:1;13395:4;13386:6;13381:3;13377:16;13373:27;13366:38;13465:4;13458:2;13454:7;13449:2;13441:6;13437:15;13433:29;13428:3;13424:39;13420:50;13413:57;;;13054:422;;;;:::o;13481:961::-;13764:2;13753:9;13746:21;13809:6;13803:13;13798:2;13787:9;13783:18;13776:41;13871:4;13863:6;13859:17;13853:24;13848:2;13837:9;13833:18;13826:52;13933:2;13925:6;13921:15;13915:22;13909:3;13898:9;13894:19;13887:51;13994:2;13986:6;13982:15;13976:22;13969:4;13958:9;13954:20;13947:52;13727:4;14046:3;14038:6;14034:16;14028:23;14088:4;14082:3;14071:9;14067:19;14060:33;14113:51;14159:3;14148:9;14144:19;14130:12;14113:51;:::i;:::-;14102:62;;14211:9;14206:3;14202:19;14195:4;14184:9;14180:20;14173:49;14279:1;14275;14270:3;14266:11;14262:19;14253:6;14247:13;14243:39;14238:3;14231:52;14332:4;14324:6;14320:17;14314:24;14370:2;14363:4;14358:3;14354:14;14347:26;14390:46;14432:2;14427:3;14423:12;14407:14;14390:46;:::i;:::-;14382:54;13481:961;-1:-1:-1;;;;;;13481:961:147:o;14447:1094::-;14547:6;14591:9;14582:7;14578:23;14621:3;14617:2;14613:12;14610:32;;;14638:1;14635;14628:12;14610:32;14664:22;;:::i;:::-;14706:4;14702:2;14698:13;14695:33;;;14724:1;14721;14714:12;14695:33;14752:22;;:::i;:::-;14737:37;;14805:9;14799:16;14790:7;14783:33;14871:2;14860:9;14856:18;14850:25;14845:2;14836:7;14832:16;14825:51;14931:2;14920:9;14916:18;14910:25;14905:2;14896:7;14892:16;14885:51;14991:2;14980:9;14976:18;14970:25;14965:2;14956:7;14952:16;14945:51;15052:3;15041:9;15037:19;15031:26;15025:3;15016:7;15012:17;15005:53;15114:3;15103:9;15099:19;15093:26;15087:3;15078:7;15074:17;15067:53;15143:7;15136:5;15129:22;15204:4;15193:9;15189:20;15183:27;15178:2;15171:5;15167:14;15160:51;15264:4;15253:9;15249:20;15243:27;15238:2;15231:5;15227:14;15220:51;15324:3;15313:9;15309:19;15303:26;15298:2;15291:5;15287:14;15280:50;15384:3;15373:9;15369:19;15363:26;15357:3;15350:5;15346:15;15339:51;15444:3;15433:9;15429:19;15423:26;15417:3;15410:5;15406:15;15399:51;15505:3;15494:9;15490:19;15484:26;15477:4;15470:5;15466:16;15459:52;15530:5;15520:15;;;;14447:1094;;;;:::o;15546:138::-;15625:13;;15647:31;15625:13;15647:31;:::i;15689:589::-;15756:5;15804:4;15792:9;15787:3;15783:19;15779:30;15776:50;;;15822:1;15819;15812:12;15776:50;15855:2;15849:9;15897:4;15889:6;15885:17;15968:6;15956:10;15953:22;-1:-1:-1;;;;;15920:10:147;15917:34;15914:62;15911:88;;;15979:18;;:::i;:::-;16019:10;16015:2;16008:22;;16048:6;16039:15;;16084:9;16078:16;16070:6;16063:32;16149:2;16138:9;16134:18;16128:25;16123:2;16115:6;16111:15;16104:50;16208:2;16197:9;16193:18;16187:25;16182:2;16174:6;16170:15;16163:50;16267:2;16256:9;16252:18;16246:25;16241:2;16233:6;16229:15;16222:50;;15689:589;;;;:::o;16283:1173::-;16356:5;16395:9;16390:3;16386:19;16425:6;16421:2;16417:15;16414:35;;;16445:1;16442;16435:12;16414:35;16467:22;;:::i;:::-;16458:31;;16519:9;16513:16;16538:33;16563:7;16538:33;:::i;:::-;16580:22;;16647:2;16632:18;;16626:25;16660:33;16626:25;16660:33;:::i;:::-;16720:2;16709:14;;16702:31;16767:4;-1:-1:-1;;16749:16:147;;16745:27;16742:47;;;16785:1;16782;16775:12;16742:47;;16813:22;;:::i;:::-;16881:2;16870:9;16866:18;16860:25;16851:7;16844:42;16941:2;16930:9;16926:18;16920:25;16915:2;16906:7;16902:16;16895:51;17001:3;16990:9;16986:19;16980:26;16975:2;16966:7;16962:16;16955:52;17062:3;17051:9;17047:19;17041:26;17036:2;17027:7;17023:16;17016:52;17124:4;17113:9;17109:20;17103:27;17097:3;17088:7;17084:17;17077:54;17187:3;17176:9;17172:19;17166:26;17160:3;17151:7;17147:17;17140:53;17225:7;17220:2;17213:5;17209:14;17202:31;;17265:64;17325:3;17319;17308:9;17304:19;17265:64;:::i;:::-;17260:2;17253:5;17249:14;17242:88;17384:3;17373:9;17369:19;17363:26;17357:3;17350:5;17346:15;17339:51;17444:3;17433:9;17429:19;17423:26;17417:3;17410:5;17406:15;17399:51;16283:1173;;;;:::o;17461:164::-;17538:13;;17591:1;17580:20;;;17570:31;;17560:59;;17615:1;17612;17605:12;17630:389;17703:5;17751:4;17739:9;17734:3;17730:19;17726:30;17723:50;;;17769:1;17766;17759:12;17723:50;17791:22;;:::i;:::-;17782:31;;17842:9;17836:16;17829:5;17822:31;17885:47;17928:2;17917:9;17913:18;17885:47;:::i;:::-;17880:2;17873:5;17869:14;17862:71;17965:47;18008:2;17997:9;17993:18;17965:47;:::i;:::-;17960:2;17953:5;17949:14;17942:71;17630:389;;;;:::o;18024:175::-;18102:13;;-1:-1:-1;;;;;18144:30:147;;18134:41;;18124:69;;18189:1;18186;18179:12;18204:282;18272:5;18320:4;18308:9;18303:3;18299:19;18295:30;18292:50;;;18338:1;18335;18328:12;18292:50;18360:22;;:::i;:::-;18351:31;;18411:9;18405:16;18398:5;18391:31;18475:2;18464:9;18460:18;18454:25;18449:2;18442:5;18438:14;18431:49;18204:282;;;;:::o;18491:1507::-;18568:5;18616:6;18604:9;18599:3;18595:19;18591:32;18588:52;;;18636:1;18633;18626:12;18588:52;18658:22;;:::i;:::-;18649:31;;18703:40;18733:9;18703:40;:::i;:::-;18696:5;18689:55;18776:47;18819:2;18808:9;18804:18;18776:47;:::i;:::-;18771:2;18764:5;18760:14;18753:71;18856:47;18899:2;18888:9;18884:18;18856:47;:::i;:::-;18851:2;18844:5;18840:14;18833:71;18936:48;18980:2;18969:9;18965:18;18936:48;:::i;:::-;18931:2;18920:14;;18913:72;19039:3;19024:19;;;19018:26;19001:15;;;18994:51;19099:3;19084:19;;;19078:26;19061:15;;;19054:51;19159:3;19144:19;;;19138:26;19121:15;;;19114:51;19219:3;19204:19;;;19198:26;19181:15;;;19174:51;19244:3;19285:18;;;19279:25;19263:14;;;19256:49;19324:3;19365:18;;;19359:25;19343:14;;;19336:49;19404:3;19445:18;;;19439:25;19423:14;;;19416:49;19484:3;19525:18;;;19519:25;19503:14;;;19496:49;19564:3;19605:18;;;19599:25;19583:14;;;19576:49;19644:3;19679:64;19739:3;19719:18;;;19679:64;:::i;:::-;19663:14;;;19656:88;19763:3;19802:64;19862:3;19842:18;;;19802:64;:::i;:::-;19793:6;19782:18;;19775:92;19920:6;19905:22;;19899:29;19883:14;;;19876:53;19986:3;19971:19;;;19965:26;19956:6;19945:18;;19938:54;19786:5;18491:1507;-1:-1:-1;18491:1507:147:o;20003:164::-;20079:13;;20128;;20121:21;20111:32;;20101:60;;20157:1;20154;20147:12;20172:160;20249:13;;20302:4;20291:16;;20281:27;;20271:55;;20322:1;20319;20312:12;20337:1206;20436:6;20489:4;20477:9;20468:7;20464:23;20460:34;20457:54;;;20507:1;20504;20497:12;20457:54;20533:17;;:::i;:::-;20579:9;20573:16;20566:5;20559:31;20622:49;20667:2;20656:9;20652:18;20622:49;:::i;:::-;20617:2;20610:5;20606:14;20599:73;20704:49;20749:2;20738:9;20734:18;20704:49;:::i;:::-;20699:2;20692:5;20688:14;20681:73;20786;20851:7;20846:2;20835:9;20831:18;20786:73;:::i;:::-;20781:2;20774:5;20770:14;20763:97;20894:74;20960:7;20954:3;20943:9;20939:19;20894:74;:::i;:::-;20887:4;20880:5;20876:16;20869:100;21003:74;21069:7;21063:3;21052:9;21048:19;21003:74;:::i;:::-;20996:4;20989:5;20985:16;20978:100;21112:79;21183:7;21176:4;21165:9;21161:20;21112:79;:::i;:::-;21105:4;21098:5;21094:16;21087:105;21226:51;21271:4;21260:9;21256:20;21226:51;:::i;:::-;21219:4;21212:5;21208:16;21201:77;21314:48;21356:4;21345:9;21341:20;21314:48;:::i;:::-;21305:6;21298:5;21294:18;21287:76;21399:49;21442:4;21431:9;21427:20;21399:49;:::i;:::-;21390:6;21379:18;;21372:77;21506:4;21491:20;;;;21485:27;21476:6;21465:18;;21458:55;-1:-1:-1;21383:5:147;20337:1206;-1:-1:-1;20337:1206:147:o;21548:403::-;21648:6;21701:2;21689:9;21680:7;21676:23;21672:32;21669:52;;;21717:1;21714;21707:12;21669:52;21743:22;;:::i;:::-;21794:9;21788:16;21781:5;21774:31;21858:2;21847:9;21843:18;21837:25;21832:2;21825:5;21821:14;21814:49;21916:2;21905:9;21901:18;21895:25;21890:2;21883:5;21879:14;21872:49;21940:5;21930:15;;;21548:403;;;;:::o;21956:183::-;22025:6;22078:2;22066:9;22057:7;22053:23;22049:32;22046:52;;;22094:1;22091;22084:12;22046:52;-1:-1:-1;22117:16:147;;21956:183;-1:-1:-1;21956:183:147:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "predyTradeAfterCallback((uint256,uint256,int256,int256,bytes),((int256,int256,int256,int256,int256,int256),uint256,int256,int256,int256,uint256,uint256))": "944b560b",
    "quoteBaseAmountDelta((uint256,uint256,int256,int256,bytes))": "9b46f7ef",
    "quotePairStatus(uint256)": "255b5086",
    "quoteTrade((uint256,uint256,int256,int256,bytes),(address,bytes))": "2882d8b4",
    "quoteVaultStatus(uint256)": "70577e20"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPredyPool\",\"name\":\"_predyPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"revertSettlement\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerIsNotPredyPool\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"name\":\"predyTradeAfterCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"}],\"name\":\"quoteBaseAmountDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"baseAmountDelta\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"}],\"name\":\"quotePairStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"marginId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolOwner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"quotePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"supplyTokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalCompoundDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalDeposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNormalBorrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetScaler\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGrowth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.AssetStatus\",\"name\":\"tokenStatus\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"baseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kinkRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slope2\",\"type\":\"uint256\"}],\"internalType\":\"struct InterestRateModel.IRMParams\",\"name\":\"irmParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedProtocolRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedCreatorRevenue\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.AssetPoolStatus\",\"name\":\"basePool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"riskRatio\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"rangeSize\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"rebalanceThreshold\",\"type\":\"int24\"}],\"internalType\":\"struct Perp.AssetRiskParams\",\"name\":\"riskParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"uniswapPool\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint64\",\"name\":\"numRebalance\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRebalanceTotalSquartAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastFee1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowPremium1Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee0Growth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1Growth\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionUnderlying\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"positionAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"lastFeeGrowth\",\"type\":\"uint256\"}],\"internalType\":\"struct ScaledAsset.UserStatus\",\"name\":\"rebalancePositionStable\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"rebalanceFeeGrowthStable\",\"type\":\"int256\"}],\"internalType\":\"struct Perp.SqrtPerpAssetStatus\",\"name\":\"sqrtAssetStatus\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isMarginZero\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"feeRatio\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Perp.PairStatus\",\"name\":\"pairStatus\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pairId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradeAmountSqrt\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPredyPool.TradeParams\",\"name\":\"tradeParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"quoteTrade\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"perpEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtEntryUpdate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateUnderlying\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtRebalanceEntryUpdateStable\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"perpPayoff\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"sqrtPayoff\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.Payoff\",\"name\":\"payoff\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"fee\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"averagePrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtTwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sqrtPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IPredyPool.TradeResult\",\"name\":\"tradeResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"quoteVaultStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"vaultValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMargin\",\"type\":\"int256\"}],\"internalType\":\"struct IPredyPool.VaultStatus\",\"name\":\"vaultStatus\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"quoteTrade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"params\":{\"settlementData\":\"The route of settlement created by filler\",\"tradeParams\":\"The trade details\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteTrade((uint256,uint256,int256,int256,bytes),(address,bytes))\":{\"notice\":\"Quotes trade\"}},\"notice\":\"Quoter contract for PredyPool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/PredyPoolQuoter.sol\":\"PredyPoolQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"src/PriceFeed.sol\":{\"keccak256\":\"0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2\",\"dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg\"]},\"src/base/BaseHookCallback.sol\":{\"keccak256\":\"0x3f0457636c928df099087d919bbe9f352a0607eaf2ce8afa18eec0bc974e40f0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://238ab7485cf8f47e7ab5096165d410ce058610f1704ffeca0b095328e4d1bed1\",\"dweb:/ipfs/Qmc514M6AGu7p6cF28LSKLCQm4YbjW9VPYYCs5K8UGYNA9\"]},\"src/interfaces/IHooks.sol\":{\"keccak256\":\"0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695\",\"dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0\",\"dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69\",\"dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS\"]},\"src/lens/PredyPoolQuoter.sol\":{\"keccak256\":\"0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab\",\"dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973\",\"dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946\",\"dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo\"]},\"src/libraries/PairLib.sol\":{\"keccak256\":\"0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6\",\"dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442\",\"dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99\"]},\"src/libraries/PerpFee.sol\":{\"keccak256\":\"0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2\",\"dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda\"]},\"src/libraries/PositionCalculator.sol\":{\"keccak256\":\"0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1\",\"dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def\",\"dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405\",\"dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a\",\"dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f\",\"dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449\",\"dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0\",\"dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD\"]},\"src/vendors/AggregatorV3Interface.sol\":{\"keccak256\":\"0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98\",\"dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPredyPool",
              "name": "_predyPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "revertSettlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerIsNotPredyPool"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "predyTradeAfterCallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteBaseAmountDelta",
          "outputs": [
            {
              "internalType": "int256",
              "name": "baseAmountDelta",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pairId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quotePairStatus",
          "outputs": [
            {
              "internalType": "struct Perp.PairStatus",
              "name": "pairStatus",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "marginId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "poolOwner",
                  "type": "address"
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "quotePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetPoolStatus",
                  "name": "basePool",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "supplyTokenAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "struct ScaledAsset.AssetStatus",
                      "name": "tokenStatus",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "totalCompoundDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalDeposited",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalNormalBorrowed",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetScaler",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetGrowth",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "debtGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct InterestRateModel.IRMParams",
                      "name": "irmParams",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "baseRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "kinkRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "slope2",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedProtocolRevenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "accumulatedCreatorRevenue",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.AssetRiskParams",
                  "name": "riskParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "riskRatio",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int24",
                      "name": "rangeSize",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "rebalanceThreshold",
                      "type": "int24"
                    }
                  ]
                },
                {
                  "internalType": "struct Perp.SqrtPerpAssetStatus",
                  "name": "sqrtAssetStatus",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "uniswapPool",
                      "type": "address"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickLower",
                      "type": "int24"
                    },
                    {
                      "internalType": "int24",
                      "name": "tickUpper",
                      "type": "int24"
                    },
                    {
                      "internalType": "uint64",
                      "name": "numRebalance",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowedAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastRebalanceTotalSquartAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastFee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowPremium1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee0Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee1Growth",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionUnderlying",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ScaledAsset.UserStatus",
                      "name": "rebalancePositionStable",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "int256",
                          "name": "positionAmount",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastFeeGrowth",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "rebalanceFeeGrowthStable",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isMarginZero",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "feeRatio",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPredyPool.TradeParams",
              "name": "tradeParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "pairId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmount",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "tradeAmountSqrt",
                  "type": "int256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteTrade",
          "outputs": [
            {
              "internalType": "struct IPredyPool.TradeResult",
              "name": "tradeResult",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IPredyPool.Payoff",
                  "name": "payoff",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "int256",
                      "name": "perpEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtEntryUpdate",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateUnderlying",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtRebalanceEntryUpdateStable",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "perpPayoff",
                      "type": "int256"
                    },
                    {
                      "internalType": "int256",
                      "name": "sqrtPayoff",
                      "type": "int256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "vaultId",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "fee",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "averagePrice",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtTwap",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sqrtPrice",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteVaultStatus",
          "outputs": [
            {
              "internalType": "struct IPredyPool.VaultStatus",
              "name": "vaultStatus",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "vaultValue",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "minMargin",
                  "type": "int256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "quoteTrade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "params": {
              "settlementData": "The route of settlement created by filler",
              "tradeParams": "The trade details"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "quoteTrade((uint256,uint256,int256,int256,bytes),(address,bytes))": {
            "notice": "Quotes trade"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/PredyPoolQuoter.sol": "PredyPoolQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88",
        "urls": [
          "bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496",
          "dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/LiquidityAmounts.sol": {
        "keccak256": "0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb",
        "urls": [
          "bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d",
          "dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/PriceFeed.sol": {
        "keccak256": "0x57317d8037e3c2a80386af3023b53cd86ee91767e992ec465cd735349ba199e3",
        "urls": [
          "bzz-raw://4168b07797dfb0198caade1a6760df7a68f0eacb10fe2ab6b41de4b537df08c2",
          "dweb:/ipfs/QmPgDZ7pLAEvtuHbGuEzmH6Qr6hSH3fTCPEvpFHVK6d6tg"
        ],
        "license": "UNLICENSED"
      },
      "src/base/BaseHookCallback.sol": {
        "keccak256": "0x3f0457636c928df099087d919bbe9f352a0607eaf2ce8afa18eec0bc974e40f0",
        "urls": [
          "bzz-raw://238ab7485cf8f47e7ab5096165d410ce058610f1704ffeca0b095328e4d1bed1",
          "dweb:/ipfs/Qmc514M6AGu7p6cF28LSKLCQm4YbjW9VPYYCs5K8UGYNA9"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IHooks.sol": {
        "keccak256": "0x281243a0bb17f601878acbe6c1c34499cbcaf55c2853877312c996620e3563d9",
        "urls": [
          "bzz-raw://fdd4846cedba24d2a4cd0210100d7e33a3fd6b1f5e493fc90c42c22d80817695",
          "dweb:/ipfs/QmZmFYAjNmWUNWurozwicwqSrFEYBNsrvBUjobA7uyxrnb"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x227aabd03bc3175ee4b6b1a95e7dcfe75cbe5ee408c506c3884078e287930648",
        "urls": [
          "bzz-raw://dc85a4315e795c8f0fc7411e318fb79882c91f10dfbf629df5215a279802e8f0",
          "dweb:/ipfs/QmdJrypGS9BC8YJWkbxQ2VxQYHuKkRvEeq5r1rpQUU7x9y"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0xd7168a5b7a92132fe9257c83264dd61f68337a32a5ce22a6fa6d31eb992caaff",
        "urls": [
          "bzz-raw://dece24c7c5cf99a94420229dba882768e3c4078b1c4e7634feb7fbd1ee451e69",
          "dweb:/ipfs/QmPBJ75QQftkADRLTF8ktwonweBeJonYLYpHrpg7b8DUBS"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/PredyPoolQuoter.sol": {
        "keccak256": "0xf0506fb352a97654d3ea028f752ff490733747d12c70d3ec59c4e1c271544cab",
        "urls": [
          "bzz-raw://deb78ce234271db96953f52ff1869090e4e4e0d0ba5ccb5970041d4c77789eab",
          "dweb:/ipfs/QmYV7RF2RiVH3hTno2qkGdDfD4X6vPV5s3C916JQroGkQ6"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0x801a059e90076b5abf7873f0145b62af6add33194632395afecab4a7e636d688",
        "urls": [
          "bzz-raw://0217b5ce60e532f539db0c131fd7c88a362c10046a73da7f0cead90cdbab6973",
          "dweb:/ipfs/Qma1WbVtpoZpCDHuZxjyPoKxGEwGS9vTpXxHgLyNkrB5qX"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x42ff17eeef30ccf106f9a0ee10a688171316ac44223a827cf2a0e7e85d655eb5",
        "urls": [
          "bzz-raw://e2514dabe397ed089a416d9757ac77f760b13d31ff8e312eadf3a460597f1946",
          "dweb:/ipfs/QmXorosDrBdGKKMJxguQ6fhbuquiAYBWKYMXmVa24tqXJo"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PairLib.sol": {
        "keccak256": "0x87069c4536a68c823d327e51727b9cfac83d6ff7589a19e2adb0f30a5ce8db2c",
        "urls": [
          "bzz-raw://9618f98c2250dc8af1c5dd286b04703a595b8a46607089ba7ab1fa071c6a09e6",
          "dweb:/ipfs/QmXedF7dKoqEJucpuhWMV27r8JUcoFo8pC3V4QvVUnqTpK"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0xaa2e9ffc7a35b4ad9b3753852e8cd8337c0da1ef0ca0ef9e96c7275ca1149991",
        "urls": [
          "bzz-raw://aa54987a7a1f2ce31d84d04605f3c7594d2538886996077144a7b1f492a5a442",
          "dweb:/ipfs/Qme7WuYSTNdxSMaNmSpUDPyp7attzrUyuc2URUH29u6S99"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PerpFee.sol": {
        "keccak256": "0x41d35b12c908a6622607fc9060606a1d564c763c35b9fc686e5d9bfe898f8897",
        "urls": [
          "bzz-raw://770f41f16a4e2056b49664f17451084263026d32909182188ce910e4a317b0a2",
          "dweb:/ipfs/QmcRZ8Cm8LTs6GcoPeAWVcunHcPxtrUN7MFcAYh7bXnHda"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PositionCalculator.sol": {
        "keccak256": "0x82d5d0c1f36866f81a55ca178a47ff27aa972aa33bb5fe414cbbbcee7d52ca81",
        "urls": [
          "bzz-raw://934540b2b0379ca5691cee61ccb3cd0c0438f38d69b2357c6e06d692dbe551e1",
          "dweb:/ipfs/QmNxajxTVh6eLnSNHH36gh6ubM6gskbVJAWTe2dhHyg5tV"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x4c95b7d89a934276794ce69f0423a8ab8cb68df73eecbab4523c7942ce8faa1e",
        "urls": [
          "bzz-raw://6aff6c5619f193a6c495578734e9988011a548cb9a7c5bb3216ea58050204def",
          "dweb:/ipfs/QmRXQdbA1SZLtbAoUDKbXdk3rC4AqvV66Yn6ZEZjDxicok"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0xa89d2ac6aa7d527b7660f3358399c68358314b1c3f51ecf66ed20c48c99808a2",
        "urls": [
          "bzz-raw://f026158d2776997272f02d3cdfadf544f9fcb893e7cede151743f28fd6bdc405",
          "dweb:/ipfs/QmQZRtNNhibJZNTsyZwxAntbAkCZWMNRa59shPN6s36poQ"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0x0cbb31967af1e2dd71cbb9bc45e35c9273170fd41e31a91a56afcd5a250ff138",
        "urls": [
          "bzz-raw://8bb4949d666fd70953da8f9ece8f28ea9c76526cc5bdfeb1a6cadbfaa0aa0f7a",
          "dweb:/ipfs/QmcNU8CEHZ7nR9i49nFAc9V7UbD6Zd5BNALSmn6b4UX7Sd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6ae287e5337e835565d4171f38e6d001319cf83014e5faf583663ae0e081d072",
        "urls": [
          "bzz-raw://73879077d6b5c98803a52888ffa59467ceaf2aca12563701f0f82ed66683213f",
          "dweb:/ipfs/QmacqHUSyqTeN7Xm2tNuB7Dz6J8rifxzwKRrXumSEXaARE"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0xce99f98dde724a206fb96da07f0d71f189554b1aa1fcc18fc980a612ff9fda5e",
        "urls": [
          "bzz-raw://7b7139f38d3b5dc075ae18e00a9590377f7d9b5f8281a976fc2c8965fd3d9449",
          "dweb:/ipfs/QmTatv8xptiZceUWeDSvvgfWKnBQ9oCSzDTyjxdgXVjbNh"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x557f6481e090c6da50fcf003b93818610f2f79cb5ff822e41d58891dbc50d45d",
        "urls": [
          "bzz-raw://db68e3f6b727307b85e19f4d7afbc9966fb161e7705cfbe21e4d7c7bc45a18f0",
          "dweb:/ipfs/QmTdQsnUGGdhBpdoxsSzejoUjvHzJndJBBAuKJe7RNcWeD"
        ],
        "license": "agpl-3.0"
      },
      "src/vendors/AggregatorV3Interface.sol": {
        "keccak256": "0x54e9d9b1c158b4a9991657fbce34f7e71c0378806484799f3645657c6f28a5bc",
        "urls": [
          "bzz-raw://341eb39c86f9309ad50ec26187b88875510877f3599cc3cfdb1502ba32325a98",
          "dweb:/ipfs/QmSpHkeLfQmFN1SZD1xtDY4YQpqw9VWumW4Pv71SEQ9e4F"
        ],
        "license": "MIT"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/PredyPoolQuoter.sol",
    "id": 54673,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        65642
      ],
      "BaseHookCallback": [
        54018
      ],
      "Constants": [
        54942
      ],
      "DataType": [
        54965
      ],
      "FixedPoint96": [
        48510
      ],
      "FixedPointMathLib": [
        47192
      ],
      "FullMath": [
        48687
      ],
      "IHooks": [
        54041
      ],
      "IPredyPool": [
        54234
      ],
      "ISettlement": [
        54249
      ],
      "IUniswapV3Pool": [
        48024
      ],
      "IUniswapV3PoolActions": [
        48148
      ],
      "IUniswapV3PoolDerivedState": [
        48179
      ],
      "IUniswapV3PoolErrors": [
        48207
      ],
      "IUniswapV3PoolEvents": [
        48326
      ],
      "IUniswapV3PoolImmutables": [
        48366
      ],
      "IUniswapV3PoolOracle": [
        65697
      ],
      "IUniswapV3PoolOwnerActions": [
        48392
      ],
      "IUniswapV3PoolState": [
        48500
      ],
      "InterestRateModel": [
        55040
      ],
      "LPMath": [
        63744
      ],
      "LiquidityAmounts": [
        49693
      ],
      "Math": [
        63885
      ],
      "PairLib": [
        55063
      ],
      "Perp": [
        57525
      ],
      "PerpFee": [
        58027
      ],
      "PositionCalculator": [
        58748
      ],
      "PositionKey": [
        49718
      ],
      "PredyPoolQuoter": [
        54672
      ],
      "PremiumCurveModel": [
        58790
      ],
      "PriceFeed": [
        53971
      ],
      "Reallocation": [
        59333
      ],
      "SafeCast": [
        46566
      ],
      "SafeCastLib": [
        47909
      ],
      "ScaledAsset": [
        60062
      ],
      "TickMath": [
        49233
      ],
      "UniHelper": [
        61049
      ],
      "UnsafeMath": [
        49249
      ],
      "console": [
        21489
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3796:65",
    "nodes": [
      {
        "id": 54409,
        "nodeType": "PragmaDirective",
        "src": "39:24:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 54410,
        "nodeType": "ImportDirective",
        "src": "65:38:65",
        "nodes": [],
        "absolutePath": "src/interfaces/IPredyPool.sol",
        "file": "../interfaces/IPredyPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54673,
        "sourceUnit": 54235,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54411,
        "nodeType": "ImportDirective",
        "src": "104:38:65",
        "nodes": [],
        "absolutePath": "src/base/BaseHookCallback.sol",
        "file": "../base/BaseHookCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54673,
        "sourceUnit": 54019,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54672,
        "nodeType": "ContractDefinition",
        "src": "193:3641:65",
        "nodes": [
          {
            "id": 54416,
            "nodeType": "VariableDeclaration",
            "src": "244:25:65",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_revertSettlement",
            "nameLocation": "252:17:65",
            "scope": 54672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54415,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:65",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54432,
            "nodeType": "FunctionDefinition",
            "src": "276:143:65",
            "nodes": [],
            "body": {
              "id": 54431,
              "nodeType": "Block",
              "src": "366:53:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 54429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 54427,
                      "name": "_revertSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54416,
                      "src": "376:17:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 54428,
                      "name": "revertSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54421,
                      "src": "396:16:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "376:36:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54430,
                  "nodeType": "ExpressionStatement",
                  "src": "376:36:65"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 54424,
                    "name": "_predyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 54419,
                    "src": "354:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$54234",
                      "typeString": "contract IPredyPool"
                    }
                  }
                ],
                "id": 54425,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 54423,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "337:16:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54018,
                  "src": "337:16:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "337:28:65"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54419,
                  "mutability": "mutable",
                  "name": "_predyPool",
                  "nameLocation": "299:10:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54432,
                  "src": "288:21:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPredyPool_$54234",
                    "typeString": "contract IPredyPool"
                  },
                  "typeName": {
                    "id": 54418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54417,
                      "name": "IPredyPool",
                      "nameLocations": [
                        "288:10:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54234,
                      "src": "288:10:65"
                    },
                    "referencedDeclaration": 54234,
                    "src": "288:10:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPredyPool_$54234",
                      "typeString": "contract IPredyPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54421,
                  "mutability": "mutable",
                  "name": "revertSettlement",
                  "nameLocation": "319:16:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54432,
                  "src": "311:24:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "287:49:65"
            },
            "returnParameters": {
              "id": 54426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "366:0:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54454,
            "nodeType": "FunctionDefinition",
            "src": "425:322:65",
            "nodes": [],
            "body": {
              "id": 54453,
              "nodeType": "Block",
              "src": "610:137:65",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54446,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "633:4:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 54453,
                      "src": "620:17:65",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 54445,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "620:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 54449,
                        "name": "tradeResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54438,
                        "src": "651:11:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                          "typeString": "struct IPredyPool.TradeResult memory"
                        }
                      ],
                      "expression": {
                        "id": 54447,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "640:3:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 54448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "644:6:65",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "640:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 54450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "640:23:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "620:43:65"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "683:58:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "708:2:65",
                                  "type": "",
                                  "value": "32"
                                },
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "712:4:65"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "704:3:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "704:13:65"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "725:4:65"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "719:5:65"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "719:11:65"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "697:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "697:34:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "697:34:65"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 54446,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "712:4:65",
                      "valueSize": 1
                    },
                    {
                      "declaration": 54446,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "725:4:65",
                      "valueSize": 1
                    }
                  ],
                  "id": 54452,
                  "nodeType": "InlineAssembly",
                  "src": "674:67:65"
                }
              ]
            },
            "baseFunctions": [
              54017
            ],
            "functionSelector": "944b560b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 54443,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 54442,
                  "name": "onlyPredyPool",
                  "nameLocations": [
                    "592:13:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54008,
                  "src": "592:13:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "592:13:65"
              }
            ],
            "name": "predyTradeAfterCallback",
            "nameLocation": "434:23:65",
            "overrides": {
              "id": 54441,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 54440,
                  "name": "BaseHookCallback",
                  "nameLocations": [
                    "566:16:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54018,
                  "src": "566:16:65"
                }
              ],
              "src": "557:26:65"
            },
            "parameters": {
              "id": 54439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54454,
                  "src": "458:29:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 54434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54433,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "458:10:65",
                        "469:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54086,
                      "src": "458:22:65"
                    },
                    "referencedDeclaration": 54086,
                    "src": "458:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$54086_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54438,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "519:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54454,
                  "src": "489:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 54437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54436,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "489:10:65",
                        "500:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54102,
                      "src": "489:22:65"
                    },
                    "referencedDeclaration": 54102,
                    "src": "489:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54102_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:74:65"
            },
            "returnParameters": {
              "id": 54444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54487,
            "nodeType": "FunctionDefinition",
            "src": "912:377:65",
            "nodes": [],
            "body": {
              "id": 54486,
              "nodeType": "Block",
              "src": "1106:183:65",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54472,
                        "nodeType": "Block",
                        "src": "1166:2:65",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 54473,
                      "nodeType": "TryCatchClause",
                      "src": "1166:2:65"
                    },
                    {
                      "block": {
                        "id": 54483,
                        "nodeType": "Block",
                        "src": "1205:78:65",
                        "statements": [
                          {
                            "expression": {
                              "id": 54481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 54477,
                                "name": "tradeResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54465,
                                "src": "1219:11:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 54479,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54475,
                                    "src": "1265:6:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 54478,
                                  "name": "_parseRevertReasonAsTradeResult",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54597,
                                  "src": "1233:31:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_TradeResult_$54102_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct IPredyPool.TradeResult memory)"
                                  }
                                },
                                "id": 54480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1233:39:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                                  "typeString": "struct IPredyPool.TradeResult memory"
                                }
                              },
                              "src": "1219:53:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                                "typeString": "struct IPredyPool.TradeResult memory"
                              }
                            },
                            "id": 54482,
                            "nodeType": "ExpressionStatement",
                            "src": "1219:53:65"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54484,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54476,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54475,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1197:6:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 54484,
                            "src": "1184:19:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54474,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1184:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1183:21:65"
                      },
                      "src": "1177:106:65"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 54469,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54458,
                        "src": "1137:11:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "id": 54470,
                        "name": "settlementData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54461,
                        "src": "1150:14:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54241_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54241_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 54467,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53980,
                        "src": "1120:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$54234",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 54468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1131:5:65",
                      "memberName": "trade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54134,
                      "src": "1120:16:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$54086_memory_ptr_$_t_struct$_SettlementData_$54241_memory_ptr_$returns$_t_struct$_TradeResult_$54102_memory_ptr_$",
                        "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 54471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:45:65",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 54485,
                  "nodeType": "TryStatement",
                  "src": "1116:167:65"
                }
              ]
            },
            "documentation": {
              "id": 54455,
              "nodeType": "StructuredDocumentation",
              "src": "753:154:65",
              "text": " @notice Quotes trade\n @param tradeParams The trade details\n @param settlementData The route of settlement created by filler"
            },
            "functionSelector": "2882d8b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteTrade",
            "nameLocation": "921:10:65",
            "parameters": {
              "id": 54462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54458,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "962:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54487,
                  "src": "932:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 54457,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54456,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "932:10:65",
                        "943:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54086,
                      "src": "932:22:65"
                    },
                    "referencedDeclaration": 54086,
                    "src": "932:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$54086_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54461,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "1009:14:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54487,
                  "src": "975:48:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$54241_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 54460,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54459,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "975:11:65",
                        "987:14:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54241,
                      "src": "975:26:65"
                    },
                    "referencedDeclaration": 54241,
                    "src": "975:26:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$54241_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:93:65"
            },
            "returnParameters": {
              "id": 54466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54465,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "1089:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54487,
                  "src": "1059:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 54464,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54463,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "1059:10:65",
                        "1070:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54102,
                      "src": "1059:22:65"
                    },
                    "referencedDeclaration": 54102,
                    "src": "1059:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54102_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1058:43:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54517,
            "nodeType": "FunctionDefinition",
            "src": "1295:350:65",
            "nodes": [],
            "body": {
              "id": 54516,
              "nodeType": "Block",
              "src": "1430:215:65",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54504,
                        "nodeType": "Block",
                        "src": "1525:2:65",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 54505,
                      "nodeType": "TryCatchClause",
                      "src": "1525:2:65"
                    },
                    {
                      "block": {
                        "id": 54513,
                        "nodeType": "Block",
                        "src": "1564:75:65",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 54510,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54507,
                                  "src": "1621:6:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 54509,
                                "name": "_parseRevertReasonAsBaseAmountDelta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54621,
                                "src": "1585:35:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_int256_$",
                                  "typeString": "function (bytes memory) pure returns (int256)"
                                }
                              },
                              "id": 54511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1585:43:65",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "functionReturnParameters": 54494,
                            "id": 54512,
                            "nodeType": "Return",
                            "src": "1578:50:65"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54514,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54508,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54507,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1556:6:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 54514,
                            "src": "1543:19:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54506,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1543:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1542:21:65"
                      },
                      "src": "1536:103:65"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 54497,
                        "name": "tradeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54490,
                        "src": "1461:11:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 54500,
                            "name": "_revertSettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54416,
                            "src": "1501:17:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 54501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1520:2:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 54498,
                            "name": "ISettlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54249,
                            "src": "1474:11:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISettlement_$54249_$",
                              "typeString": "type(contract ISettlement)"
                            }
                          },
                          "id": 54499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1486:14:65",
                          "memberName": "SettlementData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54241,
                          "src": "1474:26:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SettlementData_$54241_storage_ptr_$",
                            "typeString": "type(struct ISettlement.SettlementData storage pointer)"
                          }
                        },
                        "id": 54502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1474:49:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SettlementData_$54241_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                          "typeString": "struct IPredyPool.TradeParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SettlementData_$54241_memory_ptr",
                          "typeString": "struct ISettlement.SettlementData memory"
                        }
                      ],
                      "expression": {
                        "id": 54495,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53980,
                        "src": "1444:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$54234",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 54496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1455:5:65",
                      "memberName": "trade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54134,
                      "src": "1444:16:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_TradeParams_$54086_memory_ptr_$_t_struct$_SettlementData_$54241_memory_ptr_$returns$_t_struct$_TradeResult_$54102_memory_ptr_$",
                        "typeString": "function (struct IPredyPool.TradeParams memory,struct ISettlement.SettlementData memory) external returns (struct IPredyPool.TradeResult memory)"
                      }
                    },
                    "id": 54503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:80:65",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                      "typeString": "struct IPredyPool.TradeResult memory"
                    }
                  },
                  "id": 54515,
                  "nodeType": "TryStatement",
                  "src": "1440:199:65"
                }
              ]
            },
            "functionSelector": "9b46f7ef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteBaseAmountDelta",
            "nameLocation": "1304:20:65",
            "parameters": {
              "id": 54491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54490,
                  "mutability": "mutable",
                  "name": "tradeParams",
                  "nameLocation": "1355:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54517,
                  "src": "1325:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeParams_$54086_memory_ptr",
                    "typeString": "struct IPredyPool.TradeParams"
                  },
                  "typeName": {
                    "id": 54489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54488,
                      "name": "IPredyPool.TradeParams",
                      "nameLocations": [
                        "1325:10:65",
                        "1336:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54086,
                      "src": "1325:22:65"
                    },
                    "referencedDeclaration": 54086,
                    "src": "1325:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$54086_storage_ptr",
                      "typeString": "struct IPredyPool.TradeParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:43:65"
            },
            "returnParameters": {
              "id": 54494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54493,
                  "mutability": "mutable",
                  "name": "baseAmountDelta",
                  "nameLocation": "1409:15:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54517,
                  "src": "1402:22:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54492,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:24:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54544,
            "nodeType": "FunctionDefinition",
            "src": "1651:265:65",
            "nodes": [],
            "body": {
              "id": 54543,
              "nodeType": "Block",
              "src": "1745:171:65",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54529,
                        "nodeType": "Block",
                        "src": "1795:2:65",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 54530,
                      "nodeType": "TryCatchClause",
                      "src": "1795:2:65"
                    },
                    {
                      "block": {
                        "id": 54540,
                        "nodeType": "Block",
                        "src": "1834:76:65",
                        "statements": [
                          {
                            "expression": {
                              "id": 54538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 54534,
                                "name": "pairStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54523,
                                "src": "1848:10:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                                  "typeString": "struct Perp.PairStatus memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 54536,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54532,
                                    "src": "1892:6:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 54535,
                                  "name": "_parseRevertReasonAsPairStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54646,
                                  "src": "1861:30:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_PairStatus_$55123_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct Perp.PairStatus memory)"
                                  }
                                },
                                "id": 54537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1861:38:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                                  "typeString": "struct Perp.PairStatus memory"
                                }
                              },
                              "src": "1848:51:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                                "typeString": "struct Perp.PairStatus memory"
                              }
                            },
                            "id": 54539,
                            "nodeType": "ExpressionStatement",
                            "src": "1848:51:65"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54541,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54533,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54532,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "1826:6:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 54541,
                            "src": "1813:19:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54531,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1813:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1812:21:65"
                      },
                      "src": "1806:104:65"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 54527,
                        "name": "pairId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54519,
                        "src": "1787:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54525,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53980,
                        "src": "1759:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$54234",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 54526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1770:16:65",
                      "memberName": "revertPairStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54228,
                      "src": "1759:27:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 54528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:35:65",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54542,
                  "nodeType": "TryStatement",
                  "src": "1755:155:65"
                }
              ]
            },
            "functionSelector": "255b5086",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quotePairStatus",
            "nameLocation": "1660:15:65",
            "parameters": {
              "id": 54520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54519,
                  "mutability": "mutable",
                  "name": "pairId",
                  "nameLocation": "1684:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54544,
                  "src": "1676:14:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:16:65"
            },
            "returnParameters": {
              "id": 54524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54523,
                  "mutability": "mutable",
                  "name": "pairStatus",
                  "nameLocation": "1733:10:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54544,
                  "src": "1710:33:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                    "typeString": "struct Perp.PairStatus"
                  },
                  "typeName": {
                    "id": 54522,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54521,
                      "name": "Perp.PairStatus",
                      "nameLocations": [
                        "1710:4:65",
                        "1715:10:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55123,
                      "src": "1710:15:65"
                    },
                    "referencedDeclaration": 55123,
                    "src": "1710:15:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$55123_storage_ptr",
                      "typeString": "struct Perp.PairStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1709:35:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54571,
            "nodeType": "FunctionDefinition",
            "src": "1922:279:65",
            "nodes": [],
            "body": {
              "id": 54570,
              "nodeType": "Block",
              "src": "2026:175:65",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 54556,
                        "nodeType": "Block",
                        "src": "2078:2:65",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 54557,
                      "nodeType": "TryCatchClause",
                      "src": "2078:2:65"
                    },
                    {
                      "block": {
                        "id": 54567,
                        "nodeType": "Block",
                        "src": "2117:78:65",
                        "statements": [
                          {
                            "expression": {
                              "id": 54565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 54561,
                                "name": "vaultStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54550,
                                "src": "2131:11:65",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                                  "typeString": "struct IPredyPool.VaultStatus memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 54563,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54559,
                                    "src": "2177:6:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 54562,
                                  "name": "_parseRevertReasonAsVaultStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54671,
                                  "src": "2145:31:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_VaultStatus_$54122_memory_ptr_$",
                                    "typeString": "function (bytes memory) pure returns (struct IPredyPool.VaultStatus memory)"
                                  }
                                },
                                "id": 54564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2145:39:65",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                                  "typeString": "struct IPredyPool.VaultStatus memory"
                                }
                              },
                              "src": "2131:53:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                                "typeString": "struct IPredyPool.VaultStatus memory"
                              }
                            },
                            "id": 54566,
                            "nodeType": "ExpressionStatement",
                            "src": "2131:53:65"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 54568,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 54560,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 54559,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "2109:6:65",
                            "nodeType": "VariableDeclaration",
                            "scope": 54568,
                            "src": "2096:19:65",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 54558,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2096:5:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2095:21:65"
                      },
                      "src": "2089:106:65"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 54554,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54546,
                        "src": "2069:7:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 54552,
                        "name": "_predyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53980,
                        "src": "2040:10:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPredyPool_$54234",
                          "typeString": "contract IPredyPool"
                        }
                      },
                      "id": 54553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2051:17:65",
                      "memberName": "revertVaultStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54233,
                      "src": "2040:28:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 54555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2040:37:65",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54569,
                  "nodeType": "TryStatement",
                  "src": "2036:159:65"
                }
              ]
            },
            "functionSelector": "70577e20",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteVaultStatus",
            "nameLocation": "1931:16:65",
            "parameters": {
              "id": 54547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54546,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "1956:7:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54571,
                  "src": "1948:15:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:17:65"
            },
            "returnParameters": {
              "id": 54551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54550,
                  "mutability": "mutable",
                  "name": "vaultStatus",
                  "nameLocation": "2013:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54571,
                  "src": "1983:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                    "typeString": "struct IPredyPool.VaultStatus"
                  },
                  "typeName": {
                    "id": 54549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54548,
                      "name": "IPredyPool.VaultStatus",
                      "nameLocations": [
                        "1983:10:65",
                        "1994:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54122,
                      "src": "1983:22:65"
                    },
                    "referencedDeclaration": 54122,
                    "src": "1983:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$54122_storage_ptr",
                      "typeString": "struct IPredyPool.VaultStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1982:43:65"
            },
            "scope": 54672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54597,
            "nodeType": "FunctionDefinition",
            "src": "2381:381:65",
            "nodes": [],
            "body": {
              "id": 54596,
              "nodeType": "Block",
              "src": "2536:226:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54580,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54574,
                        "src": "2550:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2557:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2550:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 54582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2566:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "2550:19:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54594,
                    "nodeType": "Block",
                    "src": "2680:76:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54588,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54574,
                              "src": "2712:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 54589,
                                    "name": "IPredyPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54234,
                                    "src": "2721:10:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IPredyPool_$54234_$",
                                      "typeString": "type(contract IPredyPool)"
                                    }
                                  },
                                  "id": 54590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2732:11:65",
                                  "memberName": "TradeResult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54102,
                                  "src": "2721:22:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_TradeResult_$54102_storage_ptr_$",
                                    "typeString": "type(struct IPredyPool.TradeResult storage pointer)"
                                  }
                                }
                              ],
                              "id": 54591,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2720:24:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_TradeResult_$54102_storage_ptr_$",
                                "typeString": "type(struct IPredyPool.TradeResult storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_TradeResult_$54102_storage_ptr_$",
                                "typeString": "type(struct IPredyPool.TradeResult storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 54586,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2701:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2705:6:65",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "2701:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:44:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                            "typeString": "struct IPredyPool.TradeResult memory"
                          }
                        },
                        "functionReturnParameters": 54579,
                        "id": 54593,
                        "nodeType": "Return",
                        "src": "2694:51:65"
                      }
                    ]
                  },
                  "id": 54595,
                  "nodeType": "IfStatement",
                  "src": "2546:210:65",
                  "trueBody": {
                    "id": 54585,
                    "nodeType": "Block",
                    "src": "2571:103:65",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2594:70:65",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2623:2:65",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2627:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2619:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2619:15:65"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2642:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2636:5:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2636:13:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2612:38:65"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2612:38:65"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 54574,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2627:6:65",
                            "valueSize": 1
                          },
                          {
                            "declaration": 54574,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2642:6:65",
                            "valueSize": 1
                          }
                        ],
                        "id": 54584,
                        "nodeType": "InlineAssembly",
                        "src": "2585:79:65"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 54572,
              "nodeType": "StructuredDocumentation",
              "src": "2207:169:65",
              "text": "@notice Return the tradeResult of given abi-encoded trade result\n @param tradeResult abi-encoded order, including `reactor` as the first encoded struct member"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsTradeResult",
            "nameLocation": "2390:31:65",
            "parameters": {
              "id": 54575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54574,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "2435:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54597,
                  "src": "2422:19:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2421:21:65"
            },
            "returnParameters": {
              "id": 54579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54578,
                  "mutability": "mutable",
                  "name": "tradeResult",
                  "nameLocation": "2519:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54597,
                  "src": "2489:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TradeResult_$54102_memory_ptr",
                    "typeString": "struct IPredyPool.TradeResult"
                  },
                  "typeName": {
                    "id": 54577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54576,
                      "name": "IPredyPool.TradeResult",
                      "nameLocations": [
                        "2489:10:65",
                        "2500:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54102,
                      "src": "2489:22:65"
                    },
                    "referencedDeclaration": 54102,
                    "src": "2489:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeResult_$54102_storage_ptr",
                      "typeString": "struct IPredyPool.TradeResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2488:43:65"
            },
            "scope": 54672,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 54621,
            "nodeType": "FunctionDefinition",
            "src": "2768:306:65",
            "nodes": [],
            "body": {
              "id": 54620,
              "nodeType": "Block",
              "src": "2864:210:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54604,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54599,
                        "src": "2878:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2885:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2878:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 54606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2894:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "2878:19:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54618,
                    "nodeType": "Block",
                    "src": "3008:60:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54612,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54599,
                              "src": "3040:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 54614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3049:6:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": {
                                    "id": 54613,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3049:6:65",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 54615,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3048:8:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              }
                            ],
                            "expression": {
                              "id": 54610,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3029:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3033:6:65",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3029:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3029:28:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 54603,
                        "id": 54617,
                        "nodeType": "Return",
                        "src": "3022:35:65"
                      }
                    ]
                  },
                  "id": 54619,
                  "nodeType": "IfStatement",
                  "src": "2874:194:65",
                  "trueBody": {
                    "id": 54609,
                    "nodeType": "Block",
                    "src": "2899:103:65",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2922:70:65",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2951:2:65",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2955:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2947:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2947:15:65"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "2970:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2964:5:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2964:13:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2940:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2940:38:65"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2940:38:65"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 54599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2955:6:65",
                            "valueSize": 1
                          },
                          {
                            "declaration": 54599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2970:6:65",
                            "valueSize": 1
                          }
                        ],
                        "id": 54608,
                        "nodeType": "InlineAssembly",
                        "src": "2913:79:65"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsBaseAmountDelta",
            "nameLocation": "2777:35:65",
            "parameters": {
              "id": 54600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54599,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "2826:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54621,
                  "src": "2813:19:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54598,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2813:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2812:21:65"
            },
            "returnParameters": {
              "id": 54603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54621,
                  "src": "2856:6:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54601,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2856:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2855:8:65"
            },
            "scope": 54672,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 54646,
            "nodeType": "FunctionDefinition",
            "src": "3080:365:65",
            "nodes": [],
            "body": {
              "id": 54645,
              "nodeType": "Block",
              "src": "3226:219:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54629,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54623,
                        "src": "3240:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3247:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3240:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 54631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3256:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "3240:19:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54643,
                    "nodeType": "Block",
                    "src": "3370:69:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54637,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54623,
                              "src": "3402:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 54638,
                                    "name": "Perp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57525,
                                    "src": "3411:4:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Perp_$57525_$",
                                      "typeString": "type(library Perp)"
                                    }
                                  },
                                  "id": 54639,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3416:10:65",
                                  "memberName": "PairStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55123,
                                  "src": "3411:15:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_PairStatus_$55123_storage_ptr_$",
                                    "typeString": "type(struct Perp.PairStatus storage pointer)"
                                  }
                                }
                              ],
                              "id": 54640,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3410:17:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_PairStatus_$55123_storage_ptr_$",
                                "typeString": "type(struct Perp.PairStatus storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_PairStatus_$55123_storage_ptr_$",
                                "typeString": "type(struct Perp.PairStatus storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 54635,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3391:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3395:6:65",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3391:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3391:37:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                            "typeString": "struct Perp.PairStatus memory"
                          }
                        },
                        "functionReturnParameters": 54628,
                        "id": 54642,
                        "nodeType": "Return",
                        "src": "3384:44:65"
                      }
                    ]
                  },
                  "id": 54644,
                  "nodeType": "IfStatement",
                  "src": "3236:203:65",
                  "trueBody": {
                    "id": 54634,
                    "nodeType": "Block",
                    "src": "3261:103:65",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3284:70:65",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3313:2:65",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "3317:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3309:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3309:15:65"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "3332:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3326:5:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3326:13:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3302:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3302:38:65"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3302:38:65"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 54623,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3317:6:65",
                            "valueSize": 1
                          },
                          {
                            "declaration": 54623,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3332:6:65",
                            "valueSize": 1
                          }
                        ],
                        "id": 54633,
                        "nodeType": "InlineAssembly",
                        "src": "3275:79:65"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsPairStatus",
            "nameLocation": "3089:30:65",
            "parameters": {
              "id": 54624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54623,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "3133:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54646,
                  "src": "3120:19:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54622,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3120:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3119:21:65"
            },
            "returnParameters": {
              "id": 54628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54627,
                  "mutability": "mutable",
                  "name": "pairStatus",
                  "nameLocation": "3210:10:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54646,
                  "src": "3187:33:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PairStatus_$55123_memory_ptr",
                    "typeString": "struct Perp.PairStatus"
                  },
                  "typeName": {
                    "id": 54626,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54625,
                      "name": "Perp.PairStatus",
                      "nameLocations": [
                        "3187:4:65",
                        "3192:10:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55123,
                      "src": "3187:15:65"
                    },
                    "referencedDeclaration": 55123,
                    "src": "3187:15:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PairStatus_$55123_storage_ptr",
                      "typeString": "struct Perp.PairStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3186:35:65"
            },
            "scope": 54672,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 54671,
            "nodeType": "FunctionDefinition",
            "src": "3451:381:65",
            "nodes": [],
            "body": {
              "id": 54670,
              "nodeType": "Block",
              "src": "3606:226:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54654,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54648,
                        "src": "3620:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 54655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3627:6:65",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3620:13:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313932",
                      "id": 54656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3636:3:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_192_by_1",
                        "typeString": "int_const 192"
                      },
                      "value": "192"
                    },
                    "src": "3620:19:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 54668,
                    "nodeType": "Block",
                    "src": "3750:76:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54662,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54648,
                              "src": "3782:6:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "expression": {
                                    "id": 54663,
                                    "name": "IPredyPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54234,
                                    "src": "3791:10:65",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IPredyPool_$54234_$",
                                      "typeString": "type(contract IPredyPool)"
                                    }
                                  },
                                  "id": 54664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3802:11:65",
                                  "memberName": "VaultStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54122,
                                  "src": "3791:22:65",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_VaultStatus_$54122_storage_ptr_$",
                                    "typeString": "type(struct IPredyPool.VaultStatus storage pointer)"
                                  }
                                }
                              ],
                              "id": 54665,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3790:24:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_VaultStatus_$54122_storage_ptr_$",
                                "typeString": "type(struct IPredyPool.VaultStatus storage pointer)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_struct$_VaultStatus_$54122_storage_ptr_$",
                                "typeString": "type(struct IPredyPool.VaultStatus storage pointer)"
                              }
                            ],
                            "expression": {
                              "id": 54660,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3771:3:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 54661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3775:6:65",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3771:10:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 54666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3771:44:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                            "typeString": "struct IPredyPool.VaultStatus memory"
                          }
                        },
                        "functionReturnParameters": 54653,
                        "id": 54667,
                        "nodeType": "Return",
                        "src": "3764:51:65"
                      }
                    ]
                  },
                  "id": 54669,
                  "nodeType": "IfStatement",
                  "src": "3616:210:65",
                  "trueBody": {
                    "id": 54659,
                    "nodeType": "Block",
                    "src": "3641:103:65",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "3664:70:65",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3693:2:65",
                                        "type": "",
                                        "value": "32"
                                      },
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "3697:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3689:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3689:15:65"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "reason",
                                        "nodeType": "YulIdentifier",
                                        "src": "3712:6:65"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3706:5:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3706:13:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3682:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3682:38:65"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3682:38:65"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 54648,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3697:6:65",
                            "valueSize": 1
                          },
                          {
                            "declaration": 54648,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3712:6:65",
                            "valueSize": 1
                          }
                        ],
                        "id": 54658,
                        "nodeType": "InlineAssembly",
                        "src": "3655:79:65"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReasonAsVaultStatus",
            "nameLocation": "3460:31:65",
            "parameters": {
              "id": 54649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54648,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "3505:6:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54671,
                  "src": "3492:19:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3491:21:65"
            },
            "returnParameters": {
              "id": 54653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54652,
                  "mutability": "mutable",
                  "name": "vaultStatus",
                  "nameLocation": "3589:11:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 54671,
                  "src": "3559:41:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_VaultStatus_$54122_memory_ptr",
                    "typeString": "struct IPredyPool.VaultStatus"
                  },
                  "typeName": {
                    "id": 54651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54650,
                      "name": "IPredyPool.VaultStatus",
                      "nameLocations": [
                        "3559:10:65",
                        "3570:11:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54122,
                      "src": "3559:22:65"
                    },
                    "referencedDeclaration": 54122,
                    "src": "3559:22:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultStatus_$54122_storage_ptr",
                      "typeString": "struct IPredyPool.VaultStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3558:43:65"
            },
            "scope": 54672,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54413,
              "name": "BaseHookCallback",
              "nameLocations": [
                "221:16:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54018,
              "src": "221:16:65"
            },
            "id": 54414,
            "nodeType": "InheritanceSpecifier",
            "src": "221:16:65"
          }
        ],
        "canonicalName": "PredyPoolQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54412,
          "nodeType": "StructuredDocumentation",
          "src": "144:48:65",
          "text": " @notice Quoter contract for PredyPool"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54672,
          54018,
          54041
        ],
        "name": "PredyPoolQuoter",
        "nameLocation": "202:15:65",
        "scope": 54673,
        "usedErrors": [
          53982
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 65
}
{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "market",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "trader",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OrderInfo",
              "name": "info",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "baseTokenAmount",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "quoteTokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "validatorAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "validationData",
              "type": "bytes"
            }
          ],
          "internalType": "struct SpotOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "settlementContractAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "encodedData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISettlement.SettlementData",
          "name": "settlementData",
          "type": "tuple"
        }
      ],
      "name": "quoteExecuteOrder",
      "outputs": [
        {
          "internalType": "int256",
          "name": "quoteTokenAmount",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061075a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063323dc08814610030575b600080fd5b61004361003e36600461041c565b610055565b60405190815260200160405180910390f35b606082015181516020830151600092916001600160a01b03169063d6f00ae99061007e8461050a565b6040518363ffffffff1660e01b815260040161009b929190610584565b600060405180830381600087803b1580156100b557600080fd5b505af19250505080156100c6575060015b610107573d8080156100f4576040519150601f19603f3d011682016040523d82523d6000602084013e6100f9565b606091505b5061010381610188565b9250505b60a08401516001600160a01b031615610181578360a001516001600160a01b0316637f75cb8a858385336040518563ffffffff1660e01b815260040161015094939291906105a6565b60006040518083038186803b15801561016857600080fd5b505afa15801561017c573d6000803e3d6000fd5b505050505b5092915050565b60008151602014610210576044825110156101dd5760405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b60448201526064015b60405180910390fd5b600482019150818060200190518101906101f79190610683565b60405162461bcd60e51b81526004016101d491906106f1565b81806020019051810190610224919061070b565b92915050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156102635761026361022a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102925761029261022a565b604052919050565b80356001600160a01b03811681146102b157600080fd5b919050565b6000608082840312156102c857600080fd5b6040516080810181811067ffffffffffffffff821117156102eb576102eb61022a565b6040529050806102fa8361029a565b81526103086020840161029a565b602082015260408301356040820152606083013560608201525092915050565b600067ffffffffffffffff8211156103425761034261022a565b50601f01601f191660200190565b600082601f83011261036157600080fd5b813561037461036f82610328565b610269565b81815284602083860101111561038957600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156103b857600080fd5b6040516040810167ffffffffffffffff82821081831117156103dc576103dc61022a565b816040528293506103ec8561029a565b8352602085013591508082111561040257600080fd5b5061040f85828601610350565b6020830152505092915050565b6000806040838503121561042f57600080fd5b823567ffffffffffffffff8082111561044757600080fd5b90840190610140828703121561045c57600080fd5b610464610240565b61046e87846102b6565b815261047c6080840161029a565b602082015261048d60a0840161029a565b604082015260c0830135606082015260e083013560808201526104b3610100840161029a565b60a0820152610120830135828111156104cb57600080fd5b6104d788828601610350565b60c083015250935060208501359150808211156104f357600080fd5b50610500858286016103a6565b9150509250929050565b6000600160ff1b820161052d57634e487b7160e01b600052601160045260246000fd5b5060000390565b60005b8381101561054f578181015183820152602001610537565b50506000910152565b60008151808452610570816020860160208601610534565b601f01601f19169290920160200192915050565b6040815260006105976040830185610558565b90508260208301529392505050565b608081526000855160018060a01b038082511660808501528060208301511660a085015250604081015160c0840152606081015160e08401525060208601516105fb6101008401826001600160a01b03169052565b5060408601516001600160a01b03908116610120840152606087015161014080850191909152608088015161016085015260a088015190911661018084015260c08701516101a08401919091526106566101c0840182610558565b91505084602083015283604083015261067a60608301846001600160a01b03169052565b95945050505050565b60006020828403121561069557600080fd5b815167ffffffffffffffff8111156106ac57600080fd5b8201601f810184136106bd57600080fd5b80516106cb61036f82610328565b8181528560208385010111156106e057600080fd5b61067a826020830160208601610534565b6020815260006107046020830184610558565b9392505050565b60006020828403121561071d57600080fd5b505191905056fea26469706673582212201a9a304948d24ab44350eae8b5e1a1a87fc11c6d45194cb9893c5b27a739821a64736f6c63430008130033",
    "sourceMap": "362:1210:70:-:0;;;394:16;;;;;;;;;;362:1210;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063323dc08814610030575b600080fd5b61004361003e36600461041c565b610055565b60405190815260200160405180910390f35b606082015181516020830151600092916001600160a01b03169063d6f00ae99061007e8461050a565b6040518363ffffffff1660e01b815260040161009b929190610584565b600060405180830381600087803b1580156100b557600080fd5b505af19250505080156100c6575060015b610107573d8080156100f4576040519150601f19603f3d011682016040523d82523d6000602084013e6100f9565b606091505b5061010381610188565b9250505b60a08401516001600160a01b031615610181578360a001516001600160a01b0316637f75cb8a858385336040518563ffffffff1660e01b815260040161015094939291906105a6565b60006040518083038186803b15801561016857600080fd5b505afa15801561017c573d6000803e3d6000fd5b505050505b5092915050565b60008151602014610210576044825110156101dd5760405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b21032b93937b960811b60448201526064015b60405180910390fd5b600482019150818060200190518101906101f79190610683565b60405162461bcd60e51b81526004016101d491906106f1565b81806020019051810190610224919061070b565b92915050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156102635761026361022a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102925761029261022a565b604052919050565b80356001600160a01b03811681146102b157600080fd5b919050565b6000608082840312156102c857600080fd5b6040516080810181811067ffffffffffffffff821117156102eb576102eb61022a565b6040529050806102fa8361029a565b81526103086020840161029a565b602082015260408301356040820152606083013560608201525092915050565b600067ffffffffffffffff8211156103425761034261022a565b50601f01601f191660200190565b600082601f83011261036157600080fd5b813561037461036f82610328565b610269565b81815284602083860101111561038957600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156103b857600080fd5b6040516040810167ffffffffffffffff82821081831117156103dc576103dc61022a565b816040528293506103ec8561029a565b8352602085013591508082111561040257600080fd5b5061040f85828601610350565b6020830152505092915050565b6000806040838503121561042f57600080fd5b823567ffffffffffffffff8082111561044757600080fd5b90840190610140828703121561045c57600080fd5b610464610240565b61046e87846102b6565b815261047c6080840161029a565b602082015261048d60a0840161029a565b604082015260c0830135606082015260e083013560808201526104b3610100840161029a565b60a0820152610120830135828111156104cb57600080fd5b6104d788828601610350565b60c083015250935060208501359150808211156104f357600080fd5b50610500858286016103a6565b9150509250929050565b6000600160ff1b820161052d57634e487b7160e01b600052601160045260246000fd5b5060000390565b60005b8381101561054f578181015183820152602001610537565b50506000910152565b60008151808452610570816020860160208601610534565b601f01601f19169290920160200192915050565b6040815260006105976040830185610558565b90508260208301529392505050565b608081526000855160018060a01b038082511660808501528060208301511660a085015250604081015160c0840152606081015160e08401525060208601516105fb6101008401826001600160a01b03169052565b5060408601516001600160a01b03908116610120840152606087015161014080850191909152608088015161016085015260a088015190911661018084015260c08701516101a08401919091526106566101c0840182610558565b91505084602083015283604083015261067a60608301846001600160a01b03169052565b95945050505050565b60006020828403121561069557600080fd5b815167ffffffffffffffff8111156106ac57600080fd5b8201601f810184136106bd57600080fd5b80516106cb61036f82610328565b8181528560208385010111156106e057600080fd5b61067a826020830160208601610534565b6020815260006107046020830184610558565b9392505050565b60006020828403121561071d57600080fd5b505191905056fea26469706673582212201a9a304948d24ab44350eae8b5e1a1a87fc11c6d45194cb9893c5b27a739821a64736f6c63430008130033",
    "sourceMap": "362:1210:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:663;;;;;;:::i;:::-;;:::i;:::-;;;4175:25:180;;;4163:2;4148:18;416:663:70;;;;;;;;615:21;;;;663:40;;734:26;;;;551:23;;615:21;-1:-1:-1;;;;;651:69:70;;;;762:16;615:21;762:16;:::i;:::-;651:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:26;872:6;853:18;:26::i;:::-;834:45;;792:98;647:243;904:22;;;;-1:-1:-1;;;;;904:36:70;;900:173;;976:5;:22;;;-1:-1:-1;;;;;956:52:70;;1009:5;1016:15;1033:16;1051:10;956:106;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:173;580:499;416:663;;;;:::o;1198:372::-;1269:6;1291;:13;1308:2;1291:19;1287:231;;1346:2;1330:6;:13;:18;1326:50;;;1350:26;;-1:-1:-1;;;1350:26:70;;7001:2:180;1350:26:70;;;6983:21:180;7040:2;7020:18;;;7013:30;-1:-1:-1;;;7059:18:180;;;7052:46;7115:18;;1350:26:70;;;;;;;;1326:50;1439:4;1431:6;1427:17;1417:27;;1489:6;1478:28;;;;;;;;;;;;:::i;:::-;1471:36;;-1:-1:-1;;;1471:36:70;;;;;;;;:::i;1287:231::-;1546:6;1535:28;;;;;;;;;;;;:::i;:::-;1528:35;1198:372;-1:-1:-1;;1198:372:70:o;14:127:180:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;295:18;280:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:180;505:40;;575:18;560:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:180:o;684:173::-;752:20;;-1:-1:-1;;;;;801:31:180;;791:42;;781:70;;847:1;844;837:12;781:70;684:173;;;:::o;862:618::-;918:5;966:4;954:9;949:3;945:19;941:30;938:50;;;984:1;981;974:12;938:50;1017:2;1011:9;1059:4;1051:6;1047:17;1130:6;1118:10;1115:22;1094:18;1082:10;1079:34;1076:62;1073:88;;;1141:18;;:::i;:::-;1177:2;1170:22;1210:6;-1:-1:-1;1210:6:180;1240:29;1259:9;1240:29;:::i;:::-;1232:6;1225:45;1303:38;1337:2;1326:9;1322:18;1303:38;:::i;:::-;1298:2;1290:6;1286:15;1279:63;1403:2;1392:9;1388:18;1375:32;1370:2;1362:6;1358:15;1351:57;1469:2;1458:9;1454:18;1441:32;1436:2;1428:6;1424:15;1417:57;;862:618;;;;:::o;1485:186::-;1533:4;1566:18;1558:6;1555:30;1552:56;;;1588:18;;:::i;:::-;-1:-1:-1;1654:2:180;1633:15;-1:-1:-1;;1629:29:180;1660:4;1625:40;;1485:186::o;1676:462::-;1718:5;1771:3;1764:4;1756:6;1752:17;1748:27;1738:55;;1789:1;1786;1779:12;1738:55;1825:6;1812:20;1856:48;1872:31;1900:2;1872:31;:::i;:::-;1856:48;:::i;:::-;1929:2;1920:7;1913:19;1975:3;1968:4;1963:2;1955:6;1951:15;1947:26;1944:35;1941:55;;;1992:1;1989;1982:12;1941:55;2057:2;2050:4;2042:6;2038:17;2031:4;2022:7;2018:18;2005:55;2105:1;2080:16;;;2098:4;2076:27;2069:38;;;;2084:7;1676:462;-1:-1:-1;;;1676:462:180:o;2143:621::-;2204:5;2252:4;2240:9;2235:3;2231:19;2227:30;2224:50;;;2270:1;2267;2260:12;2224:50;2303:4;2297:11;2347:4;2339:6;2335:17;2371:18;2439:6;2427:10;2424:22;2419:2;2407:10;2404:18;2401:46;2398:72;;;2450:18;;:::i;:::-;2492:10;2486:4;2479:24;2521:6;2512:15;;2551:29;2570:9;2551:29;:::i;:::-;2543:6;2536:45;2632:2;2621:9;2617:18;2604:32;2590:46;;2659:2;2651:6;2648:14;2645:34;;;2675:1;2672;2665:12;2645:34;;2712:45;2753:3;2744:6;2733:9;2729:22;2712:45;:::i;:::-;2707:2;2699:6;2695:15;2688:70;;;2143:621;;;;:::o;2769:1257::-;2898:6;2906;2959:2;2947:9;2938:7;2934:23;2930:32;2927:52;;;2975:1;2972;2965:12;2927:52;3015:9;3002:23;3044:18;3085:2;3077:6;3074:14;3071:34;;;3101:1;3098;3091:12;3071:34;3124:22;;;;3180:6;3162:16;;;3158:29;3155:49;;;3200:1;3197;3190:12;3155:49;3226:22;;:::i;:::-;3271:40;3303:7;3299:2;3271:40;:::i;:::-;3264:5;3257:55;3346:32;3373:3;3369:2;3365:12;3346:32;:::i;:::-;3339:4;3332:5;3328:16;3321:58;3411:32;3438:3;3434:2;3430:12;3411:32;:::i;:::-;3406:2;3399:5;3395:14;3388:56;3499:3;3495:2;3491:12;3478:26;3471:4;3464:5;3460:16;3453:52;3559:4;3555:2;3551:13;3538:27;3532:3;3525:5;3521:15;3514:52;3599:32;3626:3;3622:2;3618:12;3599:32;:::i;:::-;3593:3;3586:5;3582:15;3575:57;3678:3;3674:2;3670:12;3657:26;3708:2;3698:8;3695:16;3692:36;;;3724:1;3721;3714:12;3692:36;3761:44;3797:7;3786:8;3782:2;3778:17;3761:44;:::i;:::-;3755:3;3744:15;;3737:69;-1:-1:-1;3748:5:180;-1:-1:-1;3883:4:180;3868:20;;3855:34;;-1:-1:-1;3901:16:180;;;3898:36;;;3930:1;3927;3920:12;3898:36;;3953:67;4012:7;4001:8;3990:9;3986:24;3953:67;:::i;:::-;3943:77;;;2769:1257;;;;;:::o;4211:233::-;4246:3;-1:-1:-1;;;4267:22:180;;4264:145;;4331:10;4326:3;4322:20;4319:1;4312:31;4366:4;4363:1;4356:15;4394:4;4391:1;4384:15;4264:145;-1:-1:-1;4429:1:180;4425:13;;4211:233::o;4449:250::-;4534:1;4544:113;4558:6;4555:1;4552:13;4544:113;;;4634:11;;;4628:18;4615:11;;;4608:39;4580:2;4573:10;4544:113;;;-1:-1:-1;;4691:1:180;4673:16;;4666:27;4449:250::o;4704:270::-;4745:3;4783:5;4777:12;4810:6;4805:3;4798:19;4826:76;4895:6;4888:4;4883:3;4879:14;4872:4;4865:5;4861:16;4826:76;:::i;:::-;4956:2;4935:15;-1:-1:-1;;4931:29:180;4922:39;;;;4963:4;4918:50;;4704:270;-1:-1:-1;;4704:270:180:o;4979:286::-;5152:2;5141:9;5134:21;5115:4;5172:44;5212:2;5201:9;5197:18;5189:6;5172:44;:::i;:::-;5164:52;;5252:6;5247:2;5236:9;5232:18;5225:34;4979:286;;;;;:::o;5379:1415::-;5644:3;5633:9;5626:22;5607:4;5673:6;5667:13;5716:1;5712;5707:3;5703:11;5699:19;5770:2;5765;5759:9;5755:18;5749:3;5738:9;5734:19;5727:47;5837:2;5829:4;5825:2;5821:13;5815:20;5811:29;5805:3;5794:9;5790:19;5783:58;;5892:4;5888:2;5884:13;5878:20;5872:3;5861:9;5857:19;5850:49;5950:4;5946:2;5942:13;5936:20;5930:3;5919:9;5915:19;5908:49;;6004:4;5996:6;5992:17;5986:24;6019:53;6067:3;6056:9;6052:19;6038:12;-1:-1:-1;;;;;5336:31:180;5324:44;;5270:104;6019:53;-1:-1:-1;6121:4:180;6109:17;;6103:24;-1:-1:-1;;;;;5336:31:180;;;6186:3;6171:19;;5324:44;6228:4;6216:17;;6210:24;6253:6;6275:18;;;6268:30;;;;6353:3;6341:16;;6335:23;6329:3;6314:19;;6307:52;6408:3;6396:16;;6390:23;5336:31;;;6472:3;6457:19;;5324:44;6526:3;6514:16;;6508:23;6562:3;6547:19;;6540:31;;;;6588:53;6636:3;6621:19;;6508:23;6588:53;:::i;:::-;6580:61;;;6679:6;6672:4;6661:9;6657:20;6650:36;6724:6;6717:4;6706:9;6702:20;6695:36;6740:48;6782:4;6771:9;6767:20;6759:6;-1:-1:-1;;;;;5336:31:180;5324:44;;5270:104;6740:48;5379:1415;;;;;;;:::o;7144:648::-;7224:6;7277:2;7265:9;7256:7;7252:23;7248:32;7245:52;;;7293:1;7290;7283:12;7245:52;7326:9;7320:16;7359:18;7351:6;7348:30;7345:50;;;7391:1;7388;7381:12;7345:50;7414:22;;7467:4;7459:13;;7455:27;-1:-1:-1;7445:55:180;;7496:1;7493;7486:12;7445:55;7525:2;7519:9;7550:48;7566:31;7594:2;7566:31;:::i;7550:48::-;7621:2;7614:5;7607:17;7661:7;7656:2;7651;7647;7643:11;7639:20;7636:33;7633:53;;;7682:1;7679;7672:12;7633:53;7695:67;7759:2;7754;7747:5;7743:14;7738:2;7734;7730:11;7695:67;:::i;7797:219::-;7946:2;7935:9;7928:21;7909:4;7966:44;8006:2;7995:9;7991:18;7983:6;7966:44;:::i;:::-;7958:52;7797:219;-1:-1:-1;;;7797:219:180:o;8021:183::-;8090:6;8143:2;8131:9;8122:7;8118:23;8114:32;8111:52;;;8159:1;8156;8149:12;8111:52;-1:-1:-1;8182:16:180;;8021:183;-1:-1:-1;8021:183:180:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "quoteExecuteOrder(((address,address,uint256,uint256),address,address,int256,uint256,address,bytes),(address,bytes))": "323dc088"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"baseTokenAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"quoteTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"validationData\",\"type\":\"bytes\"}],\"internalType\":\"struct SpotOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"}],\"internalType\":\"struct ISettlement.SettlementData\",\"name\":\"settlementData\",\"type\":\"tuple\"}],\"name\":\"quoteExecuteOrder\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"quoteTokenAmount\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Quoter contract for SpotMarket\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lens/SpotMarketQuoter.sol\":\"SpotMarketQuoter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":@uniswap/permit2/=lib/permit2/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/permit2/\",\":solmate/=lib/solmate/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/permit2/src/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a\",\"dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24\"]},\"lib/permit2/src/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"lib/permit2/src/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"lib/permit2/src/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317\",\"dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0\",\"dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125\",\"dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/libraries/PositionKey.sol\":{\"keccak256\":\"0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f\",\"dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"src/interfaces/IFillerMarket.sol\":{\"keccak256\":\"0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401\",\"dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N\"]},\"src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af\",\"dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH\"]},\"src/interfaces/IOrderValidator.sol\":{\"keccak256\":\"0x022a9afc7ac32fd1a3f04d7f7f05fbc4fda978800ed090694980b7abd986a0c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://84410bfa41575afe3301db6cbb36817753673362a120d7cf377d6933ddec0474\",\"dweb:/ipfs/QmduFYB7wSGogd1ex4MYRRcQWndNANQh5CsGsCtw1ePMkf\"]},\"src/interfaces/IPredyPool.sol\":{\"keccak256\":\"0x94305b68e9716b420226c43bb77fb5791ddedb25df4d00f1fab4d3486b704ea6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e703a91c82ce335fd46a33b3a17b2407950fb5ca40f2b716b45cd0eeeeadffc2\",\"dweb:/ipfs/QmZQBMyd13iGg6jiFybUKfUX2wAjjeihbZ8DCg18fP2Pez\"]},\"src/interfaces/ISettlement.sol\":{\"keccak256\":\"0x34021b7c0d4d48e753f28c61a11842360b511c7ff86479a71d128743966337bd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://beebf4528dd275943e833cc27d7259de5f7ae19df8cf080f4f52f46c114c2721\",\"dweb:/ipfs/QmS6As52NBzt7dMju2sMF9Kjnxgdxc9DsTnbLFYKpQXWsm\"]},\"src/lens/SpotMarketQuoter.sol\":{\"keccak256\":\"0x62da81c376e8714c53a1d6eb0633d625e3b19bbdb83672b1a8b7e724a6761f5e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://39234ea1d2e8f612a4daed82a60375a76874c693a770e1366cddf48921b2eed9\",\"dweb:/ipfs/QmPuoy6AZtADmw19qetmcMJEYjAjW8jofPogQEtAgj1csw\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46\",\"dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8\"]},\"src/libraries/DataType.sol\":{\"keccak256\":\"0xc3231204e7e94218e18c57be00e65fef7b778953840c963d90bf6aba05c258e1\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://30e71328d505f5f285b2d45109a4e0cc1f8a4aeaf6fa2ea22309365c7a7d9721\",\"dweb:/ipfs/QmY3k5dg3PpmqnsiHYhukUqPdbp9rqJ4un8Ta5cda78b4y\"]},\"src/libraries/InterestRateModel.sol\":{\"keccak256\":\"0x1634b1fe23b76e2de8113c2443df26d85938ff6a2d50beec81aebeec6a2ebf2a\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://aaec1896bcbb776e7ec690f9d17eb4b1bd4ffd6e70be5267e356783bee86e7a6\",\"dweb:/ipfs/QmXsMhMYic1yJRe1opsaQkTmJrHFiFff2ganRGibcQtEkH\"]},\"src/libraries/Perp.sol\":{\"keccak256\":\"0x826339cadd4ccf1ff20cbef5b6a836c828b5e393786f21bfb6248a4e9a95bccb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2505680c6790ec526791ba1f50d6767f732c6ba5b1387542336ab188a9477271\",\"dweb:/ipfs/Qmb3BwLmygoT4QjZoeaz8ZsQf45Qvo8MvqrsYXLn4az9dd\"]},\"src/libraries/PremiumCurveModel.sol\":{\"keccak256\":\"0x74ae5a241e19d834a5704bafc2e0d9617628bd2620c7cdb0f09e2e39a6b923ce\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://009ced8306eb825cbabafe3ddd00ecc0d2af66c8b33cf7733eff5a839d9c131f\",\"dweb:/ipfs/QmZGhgckAQeLJweT6Hy99jNQocrYJ3SA4gGFmrPpzzmGeq\"]},\"src/libraries/Reallocation.sol\":{\"keccak256\":\"0x844feb35987bff8daf0de2f38161d71e8dc460b75681eb1d7ec546e53ed7e34f\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://1164364017972d32f14a275e2e22ded2eb774ed8d66cb17d4f595f7500a7e2dc\",\"dweb:/ipfs/QmYzSQBT3XrvT3NWM1dDLSL32Qs391V4eAyrPk4sWWh5xm\"]},\"src/libraries/ScaledAsset.sol\":{\"keccak256\":\"0xa613cf30a9ddfa07dbf39b524aefeba9439fbfeaa14d930f8c8ab0fd30705f03\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://303a843ef1ba75a7b3c526ac558a2c51f4ef6acda1dec23a98d0783face0f0c5\",\"dweb:/ipfs/QmQwrjy1py1oAraPoYjpg6TxejM8Dwg4udniHrw9Fm31Wx\"]},\"src/libraries/UniHelper.sol\":{\"keccak256\":\"0x6aea8c8d2d71601279612b9bf75bd28d72bbcfc8e064786be6bb6afb9c4f5f9b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://91777c185b0c0c5a18a016b7923a8fec162644b44fc2d3814062ec10a8a00303\",\"dweb:/ipfs/Qmedhw7Z9Kbkr7a5zGKyrou5dJ3W4MEei5bFZpYpApnHML\"]},\"src/libraries/math/LPMath.sol\":{\"keccak256\":\"0x1b71c9627beaf3339d8997852779accf043ee37562f883f35a6e3899d7fb7832\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://11c3417d172b534825bd710e2f62980d38e63e6acd9365ca69c2dc3a22d4e6f8\",\"dweb:/ipfs/QmWqkXbQZ8tKVSphjZn8RqAP9R5fddpNaSMf5pc18Na5hS\"]},\"src/libraries/math/Math.sol\":{\"keccak256\":\"0x8b5cc5d30d131a038085ad932d33c180daee58d8c5d8b0186cd68393571625a8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://acd400835f716a6c58f754bc10338b916d7e06ded5a89d012bfd940e3ae174e0\",\"dweb:/ipfs/QmZiEQw65ZRVkxh8zKP9td8PuDbAVRjCH8Bjp57rJd7beP\"]},\"src/libraries/orders/OrderInfoLib.sol\":{\"keccak256\":\"0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180\",\"dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA\"]},\"src/libraries/orders/Permit2Lib.sol\":{\"keccak256\":\"0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952\",\"dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY\"]},\"src/libraries/orders/ResolvedOrder.sol\":{\"keccak256\":\"0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9\",\"dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J\"]},\"src/markets/spot/SpotMarket.sol\":{\"keccak256\":\"0x685bdea06cbdb423d73fd47506c58015db86c9f9014603511aea31d9c225a33c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://248d53c88e38229320a568e152d93a87bdfc30b475d503eaaea81e8e5680c1f0\",\"dweb:/ipfs/Qmeomt5p7RVCtauRXoTbABWvwwg7EusfL1YmTWurJzwz1D\"]},\"src/markets/spot/SpotOrder.sol\":{\"keccak256\":\"0xcaf0de851d070b1a7f313d23370fddcf86f7a91d92324eb61652a43133503ef6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ef93984c9a4056f344d0ff460f92c67c43e8e17850b9a3f1593554888993198\",\"dweb:/ipfs/QmXZmkSJbQQU9ZH1uVLTfWqB6hkNm7sfJhvsdj4b1U24b2\"]},\"src/vendors/IUniswapV3PoolOracle.sol\":{\"keccak256\":\"0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7\",\"dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "struct SpotOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OrderInfo",
                  "name": "info",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "market",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "trader",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "quoteToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "baseToken",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "baseTokenAmount",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteTokenAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "validatorAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "validationData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ISettlement.SettlementData",
              "name": "settlementData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "settlementContractAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "encodedData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "quoteExecuteOrder",
          "outputs": [
            {
              "internalType": "int256",
              "name": "quoteTokenAmount",
              "type": "int256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":@uniswap/permit2/=lib/permit2/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":permit2/=lib/permit2/",
        ":solmate/=lib/solmate/",
        ":v3-core/=lib/v3-core/contracts/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/lens/SpotMarketQuoter.sol": "SpotMarketQuoter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IAllowanceTransfer.sol": {
        "keccak256": "0x2009e741b6acf7b6cf0c42d508119b2bc346c5e5ff5bad04cfe2d8645db09eac",
        "urls": [
          "bzz-raw://520ce056d0bdba4c08a88dce46f0c6b5febe0049c0a15ae7ffb5b4d74e77d02a",
          "dweb:/ipfs/QmcBoVDYUApcaY9KkNSznmAGKZX2BJGHiDuXqAJtsLJz24"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IEIP712.sol": {
        "keccak256": "0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138",
        "urls": [
          "bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72",
          "dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/IPermit2.sol": {
        "keccak256": "0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771",
        "urls": [
          "bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d",
          "dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96"
        ],
        "license": "MIT"
      },
      "lib/permit2/src/interfaces/ISignatureTransfer.sol": {
        "keccak256": "0xe6df9966f8841dc3958ee86169c89de97e7f614c81c28b9dc947b12d732df64e",
        "urls": [
          "bzz-raw://3d4eafdee7f48c3be8350a94eb6edd0bfb2af2c105df65787a77174f356c0317",
          "dweb:/ipfs/QmY1j2adeeAhNpn6cUuthemxGCdLXHTfyMh9yTKsY4mZ2d"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeCastLib.sol": {
        "keccak256": "0xd0a168ae8461bc72d16e54864d25bdc13acaaffe40719a5244e259281147ab99",
        "urls": [
          "bzz-raw://acb18884714d91f74921c00bbc7b2004f5d077b7ae35aa7da6c01e8a1059fca0",
          "dweb:/ipfs/QmXJPiLoLhaxzbSWc9FRuJE1YCtpuDbJxwUhz2ji3cSdkj"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032",
        "urls": [
          "bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d",
          "dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x7825565a4bb2a34a1dc96bbfead755785dfb0df8ef81bd934c43023689685645",
        "urls": [
          "bzz-raw://8f44f4614d31e3d4864c7eb13620555253b84f6a69180f8745b7c6e246a9d125",
          "dweb:/ipfs/QmfNQUcXj3KL8h9u5PqbtEC6yRtwDbKNb48uMPjdwxsKnd"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PositionKey.sol": {
        "keccak256": "0x1ef2fea641b75575e8e7621b90b23a8144fd22cb7013d82a592a72ab2af9527f",
        "urls": [
          "bzz-raw://5832baa9cccf9763fec921077daf760f6bf90605063e4ddbf21807e09d502b5f",
          "dweb:/ipfs/QmSdbgqjSnFCtBc6xkNCzff4f6KpBqjZ1LJJc6ZA9FboEJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFillerMarket.sol": {
        "keccak256": "0x14175a7c0c76f2aa9baaf84c78bb765ab504307b672a6afe383153008a7b66df",
        "urls": [
          "bzz-raw://51528d454eefbeda6c7484377a730b1c23b23a9147380d568885e8ac6fcc9401",
          "dweb:/ipfs/QmbCkhzK8gcbj3EN2nE2o1WNV7F281eBJFyGr5MparZc1N"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ILendingPool.sol": {
        "keccak256": "0xe9611615139533281a93234f5929200356452e4c33a21466011b5cfd04e8e6ec",
        "urls": [
          "bzz-raw://23e975dcadf3fabc2e939bc8c62a13eda7ef615c723c61e6481038ecc9ca86af",
          "dweb:/ipfs/QmX5JGCHcZkgReQEPNfV8ptDJmbTACVmTtJ6EANpYNekXH"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IOrderValidator.sol": {
        "keccak256": "0x022a9afc7ac32fd1a3f04d7f7f05fbc4fda978800ed090694980b7abd986a0c5",
        "urls": [
          "bzz-raw://84410bfa41575afe3301db6cbb36817753673362a120d7cf377d6933ddec0474",
          "dweb:/ipfs/QmduFYB7wSGogd1ex4MYRRcQWndNANQh5CsGsCtw1ePMkf"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IPredyPool.sol": {
        "keccak256": "0x94305b68e9716b420226c43bb77fb5791ddedb25df4d00f1fab4d3486b704ea6",
        "urls": [
          "bzz-raw://e703a91c82ce335fd46a33b3a17b2407950fb5ca40f2b716b45cd0eeeeadffc2",
          "dweb:/ipfs/QmZQBMyd13iGg6jiFybUKfUX2wAjjeihbZ8DCg18fP2Pez"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISettlement.sol": {
        "keccak256": "0x34021b7c0d4d48e753f28c61a11842360b511c7ff86479a71d128743966337bd",
        "urls": [
          "bzz-raw://beebf4528dd275943e833cc27d7259de5f7ae19df8cf080f4f52f46c114c2721",
          "dweb:/ipfs/QmS6As52NBzt7dMju2sMF9Kjnxgdxc9DsTnbLFYKpQXWsm"
        ],
        "license": "UNLICENSED"
      },
      "src/lens/SpotMarketQuoter.sol": {
        "keccak256": "0x62da81c376e8714c53a1d6eb0633d625e3b19bbdb83672b1a8b7e724a6761f5e",
        "urls": [
          "bzz-raw://39234ea1d2e8f612a4daed82a60375a76874c693a770e1366cddf48921b2eed9",
          "dweb:/ipfs/QmPuoy6AZtADmw19qetmcMJEYjAjW8jofPogQEtAgj1csw"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xfe6e52affc205dd2b994dfbe96305a0cbaf8131ce999804afa98e9dcb0a4092c",
        "urls": [
          "bzz-raw://895586a7a0693a0b28077f8f31f3689695167f1875d759777432ab50df3b6a46",
          "dweb:/ipfs/QmQMFoj5LRAZnNFsoHFTA84qCsWf4Z9Wcpd7ZdvJJCPuT8"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/DataType.sol": {
        "keccak256": "0xc3231204e7e94218e18c57be00e65fef7b778953840c963d90bf6aba05c258e1",
        "urls": [
          "bzz-raw://30e71328d505f5f285b2d45109a4e0cc1f8a4aeaf6fa2ea22309365c7a7d9721",
          "dweb:/ipfs/QmY3k5dg3PpmqnsiHYhukUqPdbp9rqJ4un8Ta5cda78b4y"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/InterestRateModel.sol": {
        "keccak256": "0x1634b1fe23b76e2de8113c2443df26d85938ff6a2d50beec81aebeec6a2ebf2a",
        "urls": [
          "bzz-raw://aaec1896bcbb776e7ec690f9d17eb4b1bd4ffd6e70be5267e356783bee86e7a6",
          "dweb:/ipfs/QmXsMhMYic1yJRe1opsaQkTmJrHFiFff2ganRGibcQtEkH"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Perp.sol": {
        "keccak256": "0x826339cadd4ccf1ff20cbef5b6a836c828b5e393786f21bfb6248a4e9a95bccb",
        "urls": [
          "bzz-raw://2505680c6790ec526791ba1f50d6767f732c6ba5b1387542336ab188a9477271",
          "dweb:/ipfs/Qmb3BwLmygoT4QjZoeaz8ZsQf45Qvo8MvqrsYXLn4az9dd"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/PremiumCurveModel.sol": {
        "keccak256": "0x74ae5a241e19d834a5704bafc2e0d9617628bd2620c7cdb0f09e2e39a6b923ce",
        "urls": [
          "bzz-raw://009ced8306eb825cbabafe3ddd00ecc0d2af66c8b33cf7733eff5a839d9c131f",
          "dweb:/ipfs/QmZGhgckAQeLJweT6Hy99jNQocrYJ3SA4gGFmrPpzzmGeq"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/Reallocation.sol": {
        "keccak256": "0x844feb35987bff8daf0de2f38161d71e8dc460b75681eb1d7ec546e53ed7e34f",
        "urls": [
          "bzz-raw://1164364017972d32f14a275e2e22ded2eb774ed8d66cb17d4f595f7500a7e2dc",
          "dweb:/ipfs/QmYzSQBT3XrvT3NWM1dDLSL32Qs391V4eAyrPk4sWWh5xm"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/ScaledAsset.sol": {
        "keccak256": "0xa613cf30a9ddfa07dbf39b524aefeba9439fbfeaa14d930f8c8ab0fd30705f03",
        "urls": [
          "bzz-raw://303a843ef1ba75a7b3c526ac558a2c51f4ef6acda1dec23a98d0783face0f0c5",
          "dweb:/ipfs/QmQwrjy1py1oAraPoYjpg6TxejM8Dwg4udniHrw9Fm31Wx"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/UniHelper.sol": {
        "keccak256": "0x6aea8c8d2d71601279612b9bf75bd28d72bbcfc8e064786be6bb6afb9c4f5f9b",
        "urls": [
          "bzz-raw://91777c185b0c0c5a18a016b7923a8fec162644b44fc2d3814062ec10a8a00303",
          "dweb:/ipfs/Qmedhw7Z9Kbkr7a5zGKyrou5dJ3W4MEei5bFZpYpApnHML"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/math/LPMath.sol": {
        "keccak256": "0x1b71c9627beaf3339d8997852779accf043ee37562f883f35a6e3899d7fb7832",
        "urls": [
          "bzz-raw://11c3417d172b534825bd710e2f62980d38e63e6acd9365ca69c2dc3a22d4e6f8",
          "dweb:/ipfs/QmWqkXbQZ8tKVSphjZn8RqAP9R5fddpNaSMf5pc18Na5hS"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/math/Math.sol": {
        "keccak256": "0x8b5cc5d30d131a038085ad932d33c180daee58d8c5d8b0186cd68393571625a8",
        "urls": [
          "bzz-raw://acd400835f716a6c58f754bc10338b916d7e06ded5a89d012bfd940e3ae174e0",
          "dweb:/ipfs/QmZiEQw65ZRVkxh8zKP9td8PuDbAVRjCH8Bjp57rJd7beP"
        ],
        "license": "agpl-3.0"
      },
      "src/libraries/orders/OrderInfoLib.sol": {
        "keccak256": "0x39ad592c624aa57ab2c4fc3a169a51fce4950f4711064a82e5615d47135ab946",
        "urls": [
          "bzz-raw://b779193ed0049ef09d4a770bebb640ca3f427be2a1faec88b719433fd2f2a180",
          "dweb:/ipfs/QmcAfqPwjg5SHEFs48QNynLxZGzNa1eSK3xBpJnXHbiNTA"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/Permit2Lib.sol": {
        "keccak256": "0x7f5ff19aeb20af21495c473704b983de7b36156207fa95c73582201e08b87e73",
        "urls": [
          "bzz-raw://a08e33ccbaaa3b1bc8ac7924af6466b5f6573c618daef5970a2888fa9a78b952",
          "dweb:/ipfs/Qmc1zUV5r7Vzfb8L4EMGnKRJKa27ZDknPDTHZz4UjNgdJY"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/orders/ResolvedOrder.sol": {
        "keccak256": "0x2b4b6ea1de1d2a8852cc7c77e1764811e5605b854cac1b914807c544752bec7c",
        "urls": [
          "bzz-raw://9a435bed577b24139801dc19411463da2f1279e8428ee66d636f404659ec16e9",
          "dweb:/ipfs/QmdtjgCRiqzhBfsxYR6D75CSzGxABCEkAyNEchLpttWe1J"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/spot/SpotMarket.sol": {
        "keccak256": "0x685bdea06cbdb423d73fd47506c58015db86c9f9014603511aea31d9c225a33c",
        "urls": [
          "bzz-raw://248d53c88e38229320a568e152d93a87bdfc30b475d503eaaea81e8e5680c1f0",
          "dweb:/ipfs/Qmeomt5p7RVCtauRXoTbABWvwwg7EusfL1YmTWurJzwz1D"
        ],
        "license": "UNLICENSED"
      },
      "src/markets/spot/SpotOrder.sol": {
        "keccak256": "0xcaf0de851d070b1a7f313d23370fddcf86f7a91d92324eb61652a43133503ef6",
        "urls": [
          "bzz-raw://4ef93984c9a4056f344d0ff460f92c67c43e8e17850b9a3f1593554888993198",
          "dweb:/ipfs/QmXZmkSJbQQU9ZH1uVLTfWqB6hkNm7sfJhvsdj4b1U24b2"
        ],
        "license": "UNLICENSED"
      },
      "src/vendors/IUniswapV3PoolOracle.sol": {
        "keccak256": "0x7aa42bdd472debc1cef2f368e9468bf4f2ec3197e0a1b0e526df02072fe4b0d8",
        "urls": [
          "bzz-raw://a4fb7035ceed4b52c957df5b3d9066180bf639f64f1c299c273edad34e0ce6a7",
          "dweb:/ipfs/QmdWgn7Bn3JuBVfmCHRo8RkEgfuLC5RrC3jadpFscAnSmF"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/lens/SpotMarketQuoter.sol",
    "id": 52253,
    "exportedSymbols": {
      "ISettlement": [
        51598
      ],
      "ISpotOrderValidator": [
        51399
      ],
      "SpotMarket": [
        65316
      ],
      "SpotMarketQuoter": [
        52252
      ],
      "SpotOrder": [
        65339
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1534:70",
    "nodes": [
      {
        "id": 52133,
        "nodeType": "PragmaDirective",
        "src": "39:24:70",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 52135,
        "nodeType": "ImportDirective",
        "src": "65:58:70",
        "nodes": [],
        "absolutePath": "src/markets/spot/SpotMarket.sol",
        "file": "../markets/spot/SpotMarket.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52253,
        "sourceUnit": 65317,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52134,
              "name": "SpotMarket",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65316,
              "src": "73:10:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52137,
        "nodeType": "ImportDirective",
        "src": "124:56:70",
        "nodes": [],
        "absolutePath": "src/markets/spot/SpotOrder.sol",
        "file": "../markets/spot/SpotOrder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52253,
        "sourceUnit": 65480,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52136,
              "name": "SpotOrder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65339,
              "src": "132:9:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52139,
        "nodeType": "ImportDirective",
        "src": "181:58:70",
        "nodes": [],
        "absolutePath": "src/interfaces/ISettlement.sol",
        "file": "../interfaces/ISettlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52253,
        "sourceUnit": 51599,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52138,
              "name": "ISettlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51598,
              "src": "189:11:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52141,
        "nodeType": "ImportDirective",
        "src": "240:70:70",
        "nodes": [],
        "absolutePath": "src/interfaces/IOrderValidator.sol",
        "file": "../interfaces/IOrderValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 52253,
        "sourceUnit": 51400,
        "symbolAliases": [
          {
            "foreign": {
              "id": 52140,
              "name": "ISpotOrderValidator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51399,
              "src": "248:19:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 52252,
        "nodeType": "ContractDefinition",
        "src": "362:1210:70",
        "nodes": [
          {
            "id": 52146,
            "nodeType": "FunctionDefinition",
            "src": "394:16:70",
            "nodes": [],
            "body": {
              "id": 52145,
              "nodeType": "Block",
              "src": "408:2:70",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 52143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:70"
            },
            "returnParameters": {
              "id": 52144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:70"
            },
            "scope": 52252,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 52208,
            "nodeType": "FunctionDefinition",
            "src": "416:663:70",
            "nodes": [],
            "body": {
              "id": 52207,
              "nodeType": "Block",
              "src": "580:499:70",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    52158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52158,
                      "mutability": "mutable",
                      "name": "baseTokenAmount",
                      "nameLocation": "597:15:70",
                      "nodeType": "VariableDeclaration",
                      "scope": 52207,
                      "src": "590:22:70",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 52157,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "590:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 52161,
                  "initialValue": {
                    "expression": {
                      "id": 52159,
                      "name": "order",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52149,
                      "src": "615:5:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                        "typeString": "struct SpotOrder memory"
                      }
                    },
                    "id": 52160,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "621:15:70",
                    "memberName": "baseTokenAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 65332,
                    "src": "615:21:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "590:46:70"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 52172,
                        "nodeType": "Block",
                        "src": "789:2:70",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 52173,
                      "nodeType": "TryCatchClause",
                      "src": "789:2:70"
                    },
                    {
                      "block": {
                        "id": 52183,
                        "nodeType": "Block",
                        "src": "820:70:70",
                        "statements": [
                          {
                            "expression": {
                              "id": 52181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 52177,
                                "name": "quoteTokenAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52155,
                                "src": "834:16:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 52179,
                                    "name": "reason",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52175,
                                    "src": "872:6:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 52178,
                                  "name": "_parseRevertReason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52251,
                                  "src": "853:18:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_int256_$",
                                    "typeString": "function (bytes memory) pure returns (int256)"
                                  }
                                },
                                "id": 52180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "853:26:70",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "834:45:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 52182,
                            "nodeType": "ExpressionStatement",
                            "src": "834:45:70"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 52184,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 52176,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 52175,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "812:6:70",
                            "nodeType": "VariableDeclaration",
                            "scope": 52184,
                            "src": "799:19:70",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 52174,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "799:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "798:21:70"
                      },
                      "src": "792:98:70"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 52167,
                          "name": "settlementData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52152,
                          "src": "734:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SettlementData_$51583_memory_ptr",
                            "typeString": "struct ISettlement.SettlementData memory"
                          }
                        },
                        "id": 52168,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "749:11:70",
                        "memberName": "encodedData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51582,
                        "src": "734:26:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 52170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "762:16:70",
                        "subExpression": {
                          "id": 52169,
                          "name": "baseTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52158,
                          "src": "763:15:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 52163,
                              "name": "settlementData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52152,
                              "src": "663:14:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SettlementData_$51583_memory_ptr",
                                "typeString": "struct ISettlement.SettlementData memory"
                              }
                            },
                            "id": 52164,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "678:25:70",
                            "memberName": "settlementContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51580,
                            "src": "663:40:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 52162,
                          "name": "ISettlement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51598,
                          "src": "651:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISettlement_$51598_$",
                            "typeString": "type(contract ISettlement)"
                          }
                        },
                        "id": 52165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "651:53:70",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISettlement_$51598",
                          "typeString": "contract ISettlement"
                        }
                      },
                      "id": 52166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "705:15:70",
                      "memberName": "quoteSettlement",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51597,
                      "src": "651:69:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_int256_$returns$__$",
                        "typeString": "function (bytes memory,int256) external"
                      }
                    },
                    "id": 52171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:137:70",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52185,
                  "nodeType": "TryStatement",
                  "src": "647:243:70"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 52192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 52186,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52149,
                        "src": "904:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                          "typeString": "struct SpotOrder memory"
                        }
                      },
                      "id": 52187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "910:16:70",
                      "memberName": "validatorAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65336,
                      "src": "904:22:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 52190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "938:1:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 52189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "930:7:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 52188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:70",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 52191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "930:10:70",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "904:36:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52206,
                  "nodeType": "IfStatement",
                  "src": "900:173:70",
                  "trueBody": {
                    "id": 52205,
                    "nodeType": "Block",
                    "src": "942:131:70",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 52198,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52149,
                              "src": "1009:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                                "typeString": "struct SpotOrder memory"
                              }
                            },
                            {
                              "id": 52199,
                              "name": "baseTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52158,
                              "src": "1016:15:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 52200,
                              "name": "quoteTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52155,
                              "src": "1033:16:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "expression": {
                                "id": 52201,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1051:3:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 52202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1055:6:70",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1051:10:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                                "typeString": "struct SpotOrder memory"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 52194,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52149,
                                    "src": "976:5:70",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                                      "typeString": "struct SpotOrder memory"
                                    }
                                  },
                                  "id": 52195,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "982:16:70",
                                  "memberName": "validatorAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65336,
                                  "src": "976:22:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 52193,
                                "name": "ISpotOrderValidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51399,
                                "src": "956:19:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISpotOrderValidator_$51399_$",
                                  "typeString": "type(contract ISpotOrderValidator)"
                                }
                              },
                              "id": 52196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "956:43:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISpotOrderValidator_$51399",
                                "typeString": "contract ISpotOrderValidator"
                              }
                            },
                            "id": 52197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1000:8:70",
                            "memberName": "validate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51398,
                            "src": "956:52:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_struct$_SpotOrder_$65339_memory_ptr_$_t_int256_$_t_int256_$_t_address_$returns$__$",
                              "typeString": "function (struct SpotOrder memory,int256,int256,address) pure external"
                            }
                          },
                          "id": 52203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "956:106:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52204,
                        "nodeType": "ExpressionStatement",
                        "src": "956:106:70"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "323dc088",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "quoteExecuteOrder",
            "nameLocation": "425:17:70",
            "parameters": {
              "id": 52153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52149,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "460:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 52208,
                  "src": "443:22:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SpotOrder_$65339_memory_ptr",
                    "typeString": "struct SpotOrder"
                  },
                  "typeName": {
                    "id": 52148,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52147,
                      "name": "SpotOrder",
                      "nameLocations": [
                        "443:9:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65339,
                      "src": "443:9:70"
                    },
                    "referencedDeclaration": 65339,
                    "src": "443:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SpotOrder_$65339_storage_ptr",
                      "typeString": "struct SpotOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52152,
                  "mutability": "mutable",
                  "name": "settlementData",
                  "nameLocation": "501:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 52208,
                  "src": "467:48:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SettlementData_$51583_memory_ptr",
                    "typeString": "struct ISettlement.SettlementData"
                  },
                  "typeName": {
                    "id": 52151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 52150,
                      "name": "ISettlement.SettlementData",
                      "nameLocations": [
                        "467:11:70",
                        "479:14:70"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51583,
                      "src": "467:26:70"
                    },
                    "referencedDeclaration": 51583,
                    "src": "467:26:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SettlementData_$51583_storage_ptr",
                      "typeString": "struct ISettlement.SettlementData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:74:70"
            },
            "returnParameters": {
              "id": 52156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52155,
                  "mutability": "mutable",
                  "name": "quoteTokenAmount",
                  "nameLocation": "558:16:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 52208,
                  "src": "551:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 52154,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "551:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "550:25:70"
            },
            "scope": 52252,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 52251,
            "nodeType": "FunctionDefinition",
            "src": "1198:372:70",
            "nodes": [],
            "body": {
              "id": 52250,
              "nodeType": "Block",
              "src": "1277:293:70",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 52219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 52216,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52211,
                        "src": "1291:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 52217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1298:6:70",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1291:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "3332",
                      "id": 52218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1308:2:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "1291:19:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 52241,
                  "nodeType": "IfStatement",
                  "src": "1287:231:70",
                  "trueBody": {
                    "id": 52240,
                    "nodeType": "Block",
                    "src": "1312:206:70",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 52223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 52220,
                              "name": "reason",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52211,
                              "src": "1330:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 52221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1337:6:70",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1330:13:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3638",
                            "id": 52222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1346:2:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_68_by_1",
                              "typeString": "int_const 68"
                            },
                            "value": "68"
                          },
                          "src": "1330:18:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 52228,
                        "nodeType": "IfStatement",
                        "src": "1326:50:70",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "556e6578706563746564206572726f72",
                                "id": 52225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1357:18:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
                                  "typeString": "literal_string \"Unexpected error\""
                                },
                                "value": "Unexpected error"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
                                  "typeString": "literal_string \"Unexpected error\""
                                }
                              ],
                              "id": 52224,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "1350:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 52226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1350:26:70",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 52227,
                          "nodeType": "ExpressionStatement",
                          "src": "1350:26:70"
                        }
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1399:59:70",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1417:27:70",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "reason",
                                    "nodeType": "YulIdentifier",
                                    "src": "1431:6:70"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1439:4:70",
                                    "type": "",
                                    "value": "0x04"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:3:70"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1427:17:70"
                              },
                              "variableNames": [
                                {
                                  "name": "reason",
                                  "nodeType": "YulIdentifier",
                                  "src": "1417:6:70"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 52211,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1417:6:70",
                            "valueSize": 1
                          },
                          {
                            "declaration": 52211,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1431:6:70",
                            "valueSize": 1
                          }
                        ],
                        "id": 52229,
                        "nodeType": "InlineAssembly",
                        "src": "1390:68:70"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 52233,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52211,
                                  "src": "1489:6:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 52235,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1498:6:70",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 52234,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1498:6:70",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 52236,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1497:8:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                ],
                                "expression": {
                                  "id": 52231,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1478:3:70",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 52232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1482:6:70",
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "1478:10:70",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 52237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1478:28:70",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 52230,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1471:6:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 52238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1471:36:70",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52239,
                        "nodeType": "ExpressionStatement",
                        "src": "1471:36:70"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52244,
                        "name": "reason",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52211,
                        "src": "1546:6:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 52246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1555:6:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int256_$",
                              "typeString": "type(int256)"
                            },
                            "typeName": {
                              "id": 52245,
                              "name": "int256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1555:6:70",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 52247,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1554:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        }
                      ],
                      "expression": {
                        "id": 52242,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1535:3:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 52243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1539:6:70",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1535:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 52248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:28:70",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 52215,
                  "id": 52249,
                  "nodeType": "Return",
                  "src": "1528:35:70"
                }
              ]
            },
            "documentation": {
              "id": 52209,
              "nodeType": "StructuredDocumentation",
              "src": "1085:108:70",
              "text": "@notice Return the trade result of abi-encoded bytes.\n @param reason abi-encoded quoteTokenAmount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseRevertReason",
            "nameLocation": "1207:18:70",
            "parameters": {
              "id": 52212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52211,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "1239:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 52251,
                  "src": "1226:19:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 52210,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1225:21:70"
            },
            "returnParameters": {
              "id": 52215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52251,
                  "src": "1269:6:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 52213,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1268:8:70"
            },
            "scope": 52252,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SpotMarketQuoter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 52142,
          "nodeType": "StructuredDocumentation",
          "src": "312:49:70",
          "text": " @notice Quoter contract for SpotMarket"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          52252
        ],
        "name": "SpotMarketQuoter",
        "nameLocation": "371:16:70",
        "scope": 52253,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 70
}
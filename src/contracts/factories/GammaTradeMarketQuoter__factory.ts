/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  GammaTradeMarketQuoter,
  GammaTradeMarketQuoterInterface
} from '../GammaTradeMarketQuoter'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract GammaTradeMarket',
        name: '_gammaTradeMarket',
        type: 'address'
      },
      {
        internalType: 'contract PredyPoolQuoter',
        name: '_predyPoolQuoter',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'gammaTradeMarket',
    outputs: [
      {
        internalType: 'contract GammaTradeMarket',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'predyPoolQuoter',
    outputs: [
      {
        internalType: 'contract PredyPoolQuoter',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'market',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'trader',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'filler',
                type: 'address'
              },
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256'
              }
            ],
            internalType: 'struct OrderInfo',
            name: 'info',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'positionId',
            type: 'uint256'
          },
          {
            internalType: 'uint64',
            name: 'pairId',
            type: 'uint64'
          },
          {
            internalType: 'address',
            name: 'entryTokenAddress',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'marginAmount',
            type: 'int256'
          },
          {
            internalType: 'address',
            name: 'validatorAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'validationData',
            type: 'bytes'
          }
        ],
        internalType: 'struct GammaOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'quoteExecuteOrder',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b506040516108dc3803806108dc83398101604081905261002f91610078565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b2565b6001600160a01b038116811461007557600080fd5b50565b6000806040838503121561008b57600080fd5b825161009681610060565b60208401519092506100a781610060565b809150509250929050565b61081b806100c16000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633f5903f9146100465780635369a7ce146100db57806388c2a40814610106575b600080fd5b6100596100543660046104ac565b610119565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e0850152850151610100840152840151610120830152830151610140820152910151610160820152610180015b60405180910390f35b6000546100ee906001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6001546100ee906001600160a01b031681565b6101216101fd565b6000546001546040516377f5f26d60e11b81526001600160a01b039283169263efebe4da9261015892889288921690600401610629565b600060405180830381600087803b15801561017257600080fd5b505af1925050508015610183575060015b6101c4573d8080156101b1576040519150601f19603f3d011682016040523d82523d6000602084013e6101b6565b606091505b506101c0816101ca565b9150505b92915050565b6101d26101fd565b60c0825110156101e457815182602001fd5b818060200190518101906101c4919061072d565b919050565b6040518060e001604052806102416040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156102ab576102ab610271565b60405290565b60405160e0810167ffffffffffffffff811182821017156102ab576102ab610271565b60405160c0810167ffffffffffffffff811182821017156102ab576102ab610271565b80356001600160a01b03811681146101f857600080fd5b600060a0828403121561032057600080fd5b60405160a0810181811067ffffffffffffffff8211171561034357610343610271565b604052905080610352836102f7565b8152610360602084016102f7565b6020820152610371604084016102f7565b604082015260608301356060820152608083013560808201525092915050565b803567ffffffffffffffff811681146101f857600080fd5b600082601f8301126103ba57600080fd5b813567ffffffffffffffff808211156103d5576103d5610271565b604051601f8301601f19908116603f011681019082821181831017156103fd576103fd610271565b8160405283815286602085880101111561041657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561044857600080fd5b6040516040810167ffffffffffffffff828210818311171561046c5761046c610271565b8160405282935061047c856102f7565b8352602085013591508082111561049257600080fd5b5061049f858286016103a9565b6020830152505092915050565b600080604083850312156104bf57600080fd5b823567ffffffffffffffff808211156104d757600080fd5b908401906101a082870312156104ec57600080fd5b6104f4610287565b6104fe878461030e565b815260a0830135602082015261051660c08401610391565b604082015261052760e084016102f7565b606082015261010080840135608083015261012084013560a083015261014084013560c083015261055b61016085016102f7565b60e08301526101808401358381111561057357600080fd5b61057f898287016103a9565b82840152505080945050602085013591508082111561059d57600080fd5b506105aa85828601610436565b9150509250929050565b6000815180845260005b818110156105da576020818501810151868301820152016105be565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038151168252600060208201516040602085015261062160408501826105b4565b949350505050565b6060808252845180516001600160a01b039081168484015260208201518116608080860191909152604083015190911660a08501529181015160c0840152015160e08201526000602085015161010081818501526040870151915061069b61012085018367ffffffffffffffff169052565b60608701516001600160a01b03908116610140860152608088015161016086015260a088015161018086015260c08801516101a08087019190915260e08901519091166101c0860152908701516101e085019190915290506107016102008401826105b4565b9050828103602084015261071581866105fa565b91505061062160408301846001600160a01b03169052565b600081830361018081121561074157600080fd5b6107496102b1565b60c082121561075757600080fd5b61075f6102d4565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c082015280925050509291505056fea26469706673582212209df07abe8c06c8e77dda5678a4238da65849cc2e13643f60b6293bcb5ee9326964736f6c63430008130033'

type GammaTradeMarketQuoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: GammaTradeMarketQuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class GammaTradeMarketQuoter__factory extends ContractFactory {
  constructor(...args: GammaTradeMarketQuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _gammaTradeMarket: PromiseOrValue<string>,
    _predyPoolQuoter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GammaTradeMarketQuoter> {
    return super.deploy(
      _gammaTradeMarket,
      _predyPoolQuoter,
      overrides || {}
    ) as Promise<GammaTradeMarketQuoter>
  }
  override getDeployTransaction(
    _gammaTradeMarket: PromiseOrValue<string>,
    _predyPoolQuoter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gammaTradeMarket,
      _predyPoolQuoter,
      overrides || {}
    )
  }
  override attach(address: string): GammaTradeMarketQuoter {
    return super.attach(address) as GammaTradeMarketQuoter
  }
  override connect(signer: Signer): GammaTradeMarketQuoter__factory {
    return super.connect(signer) as GammaTradeMarketQuoter__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): GammaTradeMarketQuoterInterface {
    return new utils.Interface(_abi) as GammaTradeMarketQuoterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaTradeMarketQuoter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GammaTradeMarketQuoter
  }
}

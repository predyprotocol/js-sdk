/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  GammaTradeMarket,
  GammaTradeMarketInterface
} from '../GammaTradeMarket'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IPredyPool',
        name: 'predyPool',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'permit2Address',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'whitelistFiller',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'quoterAddress',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'CallerIsNotFiller',
    type: 'error'
  },
  {
    inputs: [],
    name: 'CallerIsNotPredyPool',
    type: 'error'
  },
  {
    inputs: [],
    name: 'DeadlinePassed',
    type: 'error'
  },
  {
    inputs: [],
    name: 'HedgeTriggerNotMatched',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InvalidAveragePrice',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InvalidMarket',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OutOfAcceptablePriceRange',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SignerIsNotVaultOwner',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SlippageTooLarge',
    type: 'error'
  },
  {
    inputs: [],
    name: 'TooSmallHedgeInterval',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'trader',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sqrtPrice',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'delta',
        type: 'int256'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'perpEntryUpdate',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtEntryUpdate',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtRebalanceEntryUpdateUnderlying',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtRebalanceEntryUpdateStable',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'perpPayoff',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtPayoff',
            type: 'int256'
          }
        ],
        indexed: false,
        internalType: 'struct IPredyPool.Payoff',
        name: 'payoff',
        type: 'tuple'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'fee',
        type: 'int256'
      }
    ],
    name: 'GammaPositionHedged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'trader',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'hedgeInterval',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sqrtPriceTrigger',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'perpEntryUpdate',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtEntryUpdate',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtRebalanceEntryUpdateUnderlying',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtRebalanceEntryUpdateStable',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'perpPayoff',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'sqrtPayoff',
            type: 'int256'
          }
        ],
        indexed: false,
        internalType: 'struct IPredyPool.Payoff',
        name: 'payoff',
        type: 'tuple'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'fee',
        type: 'int256'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'marginAmount',
        type: 'int256'
      }
    ],
    name: 'GammaPositionTraded',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address'
      }
    ],
    name: 'OwnershipTransferred',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'execDeltaHedge',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'order',
            type: 'bytes'
          },
          {
            internalType: 'bytes',
            name: 'sig',
            type: 'bytes'
          }
        ],
        internalType: 'struct IFillerMarket.SignedOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'executeOrder',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'getUserPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lastHedgedTime',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'hedgeInterval',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'lastHedgedSqrtPrice',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPriceTrigger',
            type: 'uint256'
          },
          {
            internalType: 'uint64',
            name: 'maxSlippageTolerance',
            type: 'uint64'
          }
        ],
        internalType: 'struct GammaTradeMarket.UserPosition',
        name: 'userPosition',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'vaultValue',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'oraclePrice',
            type: 'uint256'
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'feeAmountBase',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'feeAmountQuote',
                type: 'int256'
              }
            ],
            internalType: 'struct DataType.FeeAmount',
            name: 'FeeAmount',
            type: 'tuple'
          }
        ],
        internalType: 'struct IPredyPool.VaultStatus',
        name: '',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'id',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'marginId',
            type: 'address'
          },
          {
            internalType: 'address',
            name: 'owner',
            type: 'address'
          },
          {
            internalType: 'address',
            name: 'recipient',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'margin',
            type: 'int256'
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'pairId',
                type: 'uint256'
              },
              {
                internalType: 'int24',
                name: 'rebalanceLastTickLower',
                type: 'int24'
              },
              {
                internalType: 'int24',
                name: 'rebalanceLastTickUpper',
                type: 'int24'
              },
              {
                internalType: 'uint64',
                name: 'lastNumRebalance',
                type: 'uint64'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'amount',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'entryValue',
                    type: 'int256'
                  }
                ],
                internalType: 'struct Perp.PositionStatus',
                name: 'perp',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'amount',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'entryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'quoteRebalanceEntryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'int256',
                    name: 'baseRebalanceEntryValue',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'entryTradeFee0',
                    type: 'uint256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'entryTradeFee1',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct Perp.SqrtPositionStatus',
                name: 'sqrtPerp',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'basePosition',
                type: 'tuple'
              },
              {
                components: [
                  {
                    internalType: 'int256',
                    name: 'positionAmount',
                    type: 'int256'
                  },
                  {
                    internalType: 'uint256',
                    name: 'lastFeeGrowth',
                    type: 'uint256'
                  }
                ],
                internalType: 'struct ScaledAsset.UserStatus',
                name: 'stablePosition',
                type: 'tuple'
              }
            ],
            internalType: 'struct Perp.UserStatus',
            name: 'openPosition',
            type: 'tuple'
          }
        ],
        internalType: 'struct DataType.Vault',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'pairId',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes'
          }
        ],
        internalType: 'struct IPredyPool.TradeParams',
        name: 'tradeParams',
        type: 'tuple'
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    name: 'predyTradeAfterCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'market',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'trader',
                type: 'address'
              },
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256'
              }
            ],
            internalType: 'struct OrderInfo',
            name: 'info',
            type: 'tuple'
          },
          {
            internalType: 'uint64',
            name: 'pairId',
            type: 'uint64'
          },
          {
            internalType: 'address',
            name: 'entryTokenAddress',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'marginAmount',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'hedgeInterval',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPriceTrigger',
            type: 'uint256'
          },
          {
            internalType: 'uint64',
            name: 'maxSlippageTolerance',
            type: 'uint64'
          },
          {
            internalType: 'address',
            name: 'validatorAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'validationData',
            type: 'bytes'
          }
        ],
        internalType: 'struct GammaOrder',
        name: 'gammaOrder',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'quoteExecuteOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address'
      }
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'updateQuoteTokenMap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newWhitelistFiller',
        type: 'address'
      }
    ],
    name: 'updateWhitelistFiller',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'userPositions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'lastHedgedTime',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'hedgeInterval',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'lastHedgedSqrtPrice',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'sqrtPriceTrigger',
        type: 'uint256'
      },
      {
        internalType: 'uint64',
        name: 'maxSlippageTolerance',
        type: 'uint64'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'whitelistFiller',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60e060405260016003553480156200001657600080fd5b50604051620035ab380380620035ab8339810160408190526200003991620000d9565b6001600160a01b038416608052600080546001600160a01b031916339081178255604051869285928592909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03938416179055811660a0529390931660c052506200014192505050565b6001600160a01b0381168114620000d657600080fd5b50565b60008060008060808587031215620000f057600080fd5b8451620000fd81620000c0565b60208601519094506200011081620000c0565b60408601519093506200012381620000c0565b60608601519092506200013681620000c0565b939692955090935050565b60805160a05160c0516133e6620001c560003960006113f801526000818161030c01526104970152600081816103920152818161059f01528181610635015281816106e6015281816107650152818161079a015281816109a501528181610b4001528181610e2a01528181610ec60152818161101d01526111f901526133e66000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639a962592116100715780639a962592146101b6578063a966d863146101c9578063e1c951ca146101e9578063ea2f788c146101fc578063f2fde38b1461020f578063fa54ecba1461022257600080fd5b80631c88ef1e146100ae5780635e1b4d99146100d95780637e1dcaa4146101635780638da5cb5b14610178578063944b560b146101a3575b600080fd5b6100c16100bc366004611c55565b610235565b6040516100d093929190611d98565b60405180910390f35b61012d6100e7366004611c55565b600460208181526000938452604080852090915291835291208054600182015460028301546003840154948401546005909401549294919390926001600160401b031686565b60408051968752602087019590955293850192909252606084015260808301526001600160401b031660a082015260c0016100d0565b6101766101713660046120f9565b610413565b005b60005461018b906001600160a01b031681565b6040516001600160a01b0390911681526020016100d0565b6101766101b13660046122d2565b610594565b6101766101c436600461237b565b610847565b6101dc6101d7366004612398565b6108b7565b6040516100d09190612487565b6101766101f7366004612496565b610cab565b60015461018b906001600160a01b031681565b61017661021d36600461237b565b610d00565b6101dc6102303660046124af565b610d94565b6102776040518060c00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160401b031681525090565b61027f611a67565b610287611ab0565b6001600160a01b038581166000908152600460208181526040808420898552825292839020835160c0810185528154808252600183015493820193909352600282015481860152600382015460608201528184015460808201526005909101546001600160401b031660a08201529251630382bbf160e51b81529182015290945084917f000000000000000000000000000000000000000000000000000000000000000016906370577e209060240160c0604051808303816000875af1158015610355573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103799190612537565b8451604051632500ed8d60e21b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639403b634906024016102a060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610406919061260c565b9250925092509250925092565b6040805160a081018252602084810180516001600160401b03908116845286518301516001600160a01b0390811660009081526004808652878220945190931681529284528583205484860152606080890151868801526080808a015191870191909152865194850187528385528501939093529351630a20b62d60e21b815290937f000000000000000000000000000000000000000000000000000000000000000090921692632882d8b4926104cc92879101612772565b610180604051808303816000875af11580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051091906127ef565b90508261012001516001600160a01b031663edb1dc8284606001518560800151866101400151856040518563ffffffff1660e01b815260040161055694939291906128a7565b60006040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b5050505061058f816111aa565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105dd57604051637542ed5d60e11b815260040160405180910390fd5b600082608001518060200190518101906105f791906128d7565b9050600061060884600001516111d6565b90508260600151600003610748576020840151604051632500ed8d60e21b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639403b6349161066c9160040190815260200190565b6102a060405180830381865afa15801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae919061260c565b8351608082015160405163031adb4d60e61b8152600160048201526001600160a01b03928316602482015260448101919091529192507f0000000000000000000000000000000000000000000000000000000000000000169063c6b6d34090606401600060405180830381600087803b15801561072a57600080fd5b505af115801561073e573d6000803e3d6000fd5b5050505050610841565b6020820151600081131561078f5761078a6001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083611271565b61083f565b600081121561083f577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c6b6d34060018560000151846107d890612927565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b505050505b505b50505050565b6000546001600160a01b031633146108955760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6108bf611b01565b6003546001146108fe5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161088c565b60026003558251805160009161091c918101602090810191016129e0565b9050600061092e8286602001516112f2565b905061094b82602001516001600160401b031683604001516113a1565b610954816113ed565b81516020908101516001600160a01b03166000908152600482526040808220838601516001600160401b031683529092522060c083015160e08401516101008501516109a392849290916115ac565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b819b306040518060a0016040528086602001516001600160401b0316815260200184600001548152602001866060015181526020018660800151815260200160405180604001604052808860000151602001516001600160a01b031681526020018860a00151815250604051602001610a63919081516001600160a01b031681526020918201519181019190915260400190565b604051602081830303815290604052815250876040518363ffffffff1660e01b8152600401610a93929190612772565b610180604051808303816000875af1158015610ab3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad791906127ef565b9350600084606001511315610b11576001546001600160a01b03163314610b1157604051638173c76360e01b815260040160405180910390fd5b8054600003610bb85760208085015180835584519091015160405163055a6d9b60e51b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263ab4db36092610b85926004019182526001600160a01b0316602082015260400190565b600060405180830381600087803b158015610b9f57600080fd5b505af1158015610bb3573d6000803e3d6000fd5b505050505b8261012001516001600160a01b031663edb1dc8284606001518560800151866101400151886040518563ffffffff1660e01b8152600401610bfc94939291906128a7565b60006040518083038186803b158015610c1457600080fd5b505afa158015610c28573d6000803e3d6000fd5b505050508260000151602001516001600160a01b03167fe98018c76c6c99e913318a2ccd4a024b6fa0e119c9e33c33fba37b246ee263bf846020015186602001518660c001518760e0015189600001518a604001518a60a00151604051610c959796959493929190612adf565b60405180910390a2505050600160035592915050565b6000818152600260205260409020546001600160a01b0316610cfd57610cd0816111d6565b600082815260026020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6000546001600160a01b03163314610d495760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161088c565b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b610d9c611b01565b600354600114610ddb5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161088c565b60026003556001600160a01b038416600090815260046020908152604080832086845290915290208054610e0e57600080fd5b8054604051632500ed8d60e21b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639403b63491610e619160040190815260200190565b6102a060405180830381865afa158015610e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea3919061260c565b60a08101515160405163acfcd9fd60e01b815260048101919091529091506000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063acfcd9fd90602401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f399190612b2a565b90506000610f60828460a0015160a00151600001518560a001516080015160000151611651565b6040805160c0810182528654815260018701546020820152600287015491810191909152600386015460608201526004860154608082015260058601546001600160401b031660a0820152909150610fb89083611680565b610fd557604051637597f42d60e11b815260040160405180910390fd5b600084600201548560010154610feb9190612b43565b600386018490554260018701556040805160a08082018352870151518152875460208201529192506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639b819b3091810161104f86612927565b81526020016000815260200160405180604001604052808e6001600160a01b0316815260200160008152506040516020016110a5919081516001600160a01b031681526020918201519181019190915260400190565b604051602081830303815290604052815250896040518363ffffffff1660e01b81526004016110d5929190612772565b610180604051808303816000875af11580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111991906127ef565b6005860154909650611146908490889061113f90859042906001600160401b0316611731565b60006117b8565b8454865160408089015190516001600160a01b038d16937f2ef5ef7892fd47bca3fd79c40fdc998a196934760b5fefd0914d07b0fc147d5893611190938e938a928a929091612b56565b60405180910390a250506001600355509195945050505050565b6000816040516020016111bd9190612487565b6040516020818303038152906040529050805181602001fd5b60405163324abcfb60e21b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c92af3ec9060240161078060405180830381865afa158015611241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112659190612e2c565b60600151519392505050565b600060405163a9059cbb60e01b81526001600160a01b0384166004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806108415760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161088c565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000808460a0015113611350576000611356565b8360a001515b90506040518060a001604052808560000151815260200185604001516001600160a01b0316815260200182815260200161138f866118e1565b81526020018490529150505b92915050565b6000828152600260205260409020546001600160a01b0316158015906113e057506000828152600260205260409020546001600160a01b038281169116145b6113e957600080fd5b5050565b6113f681611982565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663137c29fe61149a836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b604080518082018252600080825260209182015281518083018352308152918601519082015284600001516020015185606001516040516020016114dd90612f17565b60408051601f1981840301815260808301909152604780835290919061336a6020830139604051602001611512929190613091565b60408051601f1981840301815260608301909152602e80835290919061333c60208301396040516020016115479291906130c0565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b16835261157e9695949392600401613111565b600060405180830381600087803b15801561159857600080fd5b505af115801561083f573d6000803e3d6000fd5b82611c2011156115cf5760405163b429afab60e01b815260040160405180910390fd5b620f42406001600160401b038216118015906116035750620f46286115f7620f4240836131b4565b6001600160401b031610155b61160c57600080fd5b6002840183905560048401829055611627620f4240826131b4565b600594909401805467ffffffffffffffff19166001600160401b0390951694909417909355505050565b600083611662600160601b856131db565b61166c9190613221565b611676908361324f565b90505b9392505050565b600042836040015184602001516116979190612b43565b116116a45750600161139b565b82608001516000036116b85750600061139b565b6000612710846080015185606001516116d19190613277565b6116db919061328e565b90506000846080015185606001516127106116f69190613277565b611700919061328e565b90508381106117145760019250505061139b565b8382116117265760019250505061139b565b506000949350505050565b60008383116117445750620f4628611679565b60006104b061175386866132a2565b61175f90612710613277565b611769919061328e565b905061271081111561177e5782915050611679565b61271061178e620f4628856132a2565b6117989083613277565b6117a2919061328e565b6117af90620f4628612b43565b95945050505050565b600060606117c68680613277565b901c905083608001516000036117ef5760405163cb78a88f60e01b815260040160405180910390fd5b60008460800151131561182f57608084015161180b82856119d3565b111561182a576040516378eff95d60e11b815260040160405180910390fd5b611873565b60008460800151121561187357836080015161184a90612927565b61185482856119ed565b1015611873576040516378eff95d60e11b815260040160405180910390fd5b6000821180156118c357508161188d866305f5e100613277565b611897919061328e565b8460c0015110806118c3575060c08401516305f5e1006118b78488613277565b6118c1919061328e565b105b1561083f5760405163dbaffb0160e01b815260040160405180910390fd5b60006040516020016118f290612f17565b6040516020818303038152906040528051906020012061191583600001516119fd565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001516040516020016119659c9b9a999897969594939291906132b5565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146119ad57604051639db8d5b160e01b815260040160405180910390fd5b805160600151421115610cfd5760405163387b2e5560e11b815260040160405180910390fd5b6000816119e3620f424085613277565b611679919061328e565b6000620f42406119e38385613277565b600060405180608001604052806047815260200161336a6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c001611965565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001611aab604051806040016040528060008152602001600081525090565b905290565b6040518060c001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001611aab611b75565b6040518060e00160405280611b456040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805161010081018252600080825260208083018290528284018290526060830182905283518085019094528184528301529060808201908152602001611bec6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611c0e604051806040016040528060008152602001600081525090565b8152602001611aab604051806040016040528060008152602001600081525090565b6001600160a01b0381168114610cfd57600080fd5b8035611c5081611c30565b919050565b60008060408385031215611c6857600080fd5b8235611c7381611c30565b946020939093013593505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b80518252602081015160018060a01b03808216602085015280604084015116604085015280606084015116606085015250506080810151608083015260a0810151805160a0840152602081015160020b60c0840152604081015160020b60e08401526001600160401b036060820151166101008401526080810151611d4e61012085018280518252602090810151910152565b5060a0810151611d62610160850182611c81565b5060c0810151805161022085015260208101516102408501525060e0015180516102608401526020810151610280840152505050565b835181526020808501518183015260408086015181840152606080870151818501526080808801518186015260a0808901516001600160401b031690860152865160c08601528684015160e086015291860151610100850152850151610120840152840151805161014084015201516101608201526104208101611e20610180830184611cbb565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611e6057611e60611e28565b60405290565b604080519081016001600160401b0381118282101715611e6057611e60611e28565b60405161016081016001600160401b0381118282101715611e6057611e60611e28565b60405160e081016001600160401b0381118282101715611e6057611e60611e28565b60405160c081016001600160401b0381118282101715611e6057611e60611e28565b60405160a081016001600160401b0381118282101715611e6057611e60611e28565b60405161010081016001600160401b0381118282101715611e6057611e60611e28565b60405161022081016001600160401b0381118282101715611e6057611e60611e28565b60405161018081016001600160401b0381118282101715611e6057611e60611e28565b604051601f8201601f191681016001600160401b0381118282101715611fa257611fa2611e28565b604052919050565b600060808284031215611fbc57600080fd5b611fc4611e3e565b90508135611fd181611c30565b81526020820135611fe181611c30565b80602083015250604082013560408201526060820135606082015292915050565b6001600160401b0381168114610cfd57600080fd5b8035611c5081612002565b60006001600160401b0382111561203b5761203b611e28565b50601f01601f191660200190565b600082601f83011261205a57600080fd5b813561206d61206882612022565b611f7a565b81815284602083860101111561208257600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156120b157600080fd5b6120b9611e66565b905081356120c681611c30565b815260208201356001600160401b038111156120e157600080fd5b6120ed84828501612049565b60208301525092915050565b6000806040838503121561210c57600080fd5b82356001600160401b038082111561212357600080fd5b908401906101c0828703121561213857600080fd5b612140611e88565b61214a8784611faa565b815261215860808401612017565b602082015261216960a08401611c45565b604082015260c0830135606082015260e083013560808201526101008084013560a08301526101208085013560c08401526101408086013560e08501526121b36101608701612017565b838501526121c46101808701611c45565b828501526101a08601359250848311156121dd57600080fd5b6121e98a848801612049565b908401525090945050602085013591508082111561220657600080fd5b506122138582860161209f565b9150509250929050565b600081830361018081121561223157600080fd5b612239611eab565b915060c081121561224957600080fd5b50612252611ecd565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a083850312156122e657600080fd5b82356001600160401b03808211156122fd57600080fd5b9084019060a0828703121561231157600080fd5b612319611eef565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561234d57600080fd5b61235988828601612049565b608083015250809450505050612372846020850161221d565b90509250929050565b60006020828403121561238d57600080fd5b813561167981611c30565b600080604083850312156123ab57600080fd5b82356001600160401b03808211156123c257600080fd5b90840190604082870312156123d657600080fd5b6123de611e66565b8235828111156123ed57600080fd5b6123f988828601612049565b82525060208301358281111561240e57600080fd5b61241a88828601612049565b60208301525080945050602085013591508082111561220657600080fd5b612443828251611c81565b602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b610180810161139b8284612438565b6000602082840312156124a857600080fd5b5035919050565b6000806000606084860312156124c457600080fd5b83356124cf81611c30565b92506020840135915060408401356001600160401b038111156124f157600080fd5b6124fd8682870161209f565b9150509250925092565b60006040828403121561251957600080fd5b612521611e66565b9050815181526020820151602082015292915050565b600060c0828403121561254957600080fd5b612551611eef565b825181526020830151602082015260408301516040820152606083015160608201526125808460808501612507565b60808201529392505050565b8051611c5081611c30565b8051600281900b8114611c5057600080fd5b8051611c5081612002565b600060c082840312156125c657600080fd5b6125ce611ecd565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a081121561262057600080fd5b612628611ecd565b83518152602084015161263a81611c30565b6020820152604084015161264d81611c30565b6040820152606084015161266081611c30565b606082015260808481015190820152610200609f198301121561268257600080fd5b61268a611f11565b915060a0840151825261269f60c08501612597565b60208301526126b060e08501612597565b60408301526126c261010085016125a9565b60608301526126d5856101208601612507565b60808301526126e88561016086016125b4565b60a08301526126fb856102208601612507565b60c083015261270e856102608601612507565b60e083015260a08101919091529392505050565b60005b8381101561273d578181015183820152602001612725565b50506000910152565b6000815180845261275e816020860160208601612722565b601f01601f19169290920160200192915050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526127b660e0840182612746565b9050828103602084015260018060a01b0384511681526020840151604060208301526127e56040830182612746565b9695505050505050565b600081830361018081121561280357600080fd5b61280b611eab565b60c082121561281957600080fd5b612821611ecd565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b60006101e08683528560208401528060408401526128c781840186612746565b9150506117af6060830184612438565b6000604082840312156128e957600080fd5b6128f1611e66565b82516128fc81611c30565b81526020928301519281019290925250919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161293c5761293c612911565b5060000390565b60006080828403121561295557600080fd5b61295d611e3e565b9050815161296a81611c30565b8152602082015161297a81611c30565b80602083015250604082015160408201526060820151606082015292915050565b600082601f8301126129ac57600080fd5b81516129ba61206882612022565b8181528460208386010111156129cf57600080fd5b611e20826020830160208701612722565b6000602082840312156129f257600080fd5b81516001600160401b0380821115612a0957600080fd5b908301906101c08286031215612a1e57600080fd5b612a26611e88565b612a308684612943565b8152612a3e608084016125a9565b6020820152612a4f60a0840161258c565b604082015260c0830151606082015260e083015160808201526101008084015160a08301526101208085015160c08401526101408086015160e0850152612a9961016087016125a9565b83850152612aaa610180870161258c565b828501526101a0860151925084831115612ac357600080fd5b612acf8984880161299b565b9084015250909695505050505050565b6000610180820190506001600160401b0389168252876020830152866040830152856060830152612b136080830186611c81565b610140820193909352610160015295945050505050565b600060208284031215612b3c57600080fd5b5051919050565b8082018082111561139b5761139b612911565b600061016082019050878252866020830152856040830152846060830152612b816080830185611c81565b82610140830152979650505050505050565b600060808284031215612ba557600080fd5b612bad611e3e565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c0811215612beb57600080fd5b612bf3611ecd565b91508251612c0081611c30565b82526020830151612c1081611c30565b602083015260c0603f1982011215612c2757600080fd5b50612c30611ecd565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015280604083015250612c7e836101008401612b93565b606082015261018082015160808201526101a082015160a082015292915050565b600060a08284031215612cb157600080fd5b612cb9611eef565b905081518152612ccb60208301612597565b6020820152612cdc60408301612597565b60408201526060820151612cef81612002565b60608201526080820151612d0281612002565b608082015292915050565b60006102608284031215612d2057600080fd5b612d28611f34565b9050612d338261258c565b8152612d4160208301612597565b6020820152612d5260408301612597565b6040820152612d63606083016125a9565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0612dd684828501612507565b908201526101e0612de984848301612507565b6101c08301526102208301519082015261024090910151610200820152919050565b80518015158114611c5057600080fd5b805160ff81168114611c5057600080fd5b60006107808284031215612e3f57600080fd5b612e47611f57565b82518152612e576020840161258c565b6020820152612e686040840161258c565b6040820152612e7a8460608501612bd7565b6060820152612e8d846102208501612bd7565b6080820152612ea0846103e08501612c9f565b60a0820152612eb3846104808501612d0d565b60c0820152612ec56106e0840161258c565b60e0820152612ed76107008401612e0b565b610100820152612eea6107208401612e0b565b610120820152612efd6107408401612e1b565b610140820152610760929092015161016083015250919050565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b8201526d1d5a5b9d0d8d081c185a5c92590b60921b601a8201527f6164647265737320656e747279546f6b656e416464726573732c0000000000006028820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60428201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006055820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b606c820152751d5a5b9d0c8d4d881a195919d9525b9d195c9d985b0b60521b60808201527f75696e7432353620737172745072696365547269676765722c0000000000000060968201527f75696e743634206d6178536c697070616765546f6c6572616e63652c0000000060af8201527f616464726573732076616c696461746f7241646472657373000000000000000060cb8201527462797465732076616c69646174696f6e446174612960581b60e382015260f80190565b600083516130a3818460208801612722565b8351908301906130b7818360208801612722565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b8152600083516130ee816013850160208801612722565b835190830190613105816013840160208801612722565b01601301949350505050565b6000610140613134838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152613168608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261319281840186612746565b90508281036101208401526131a78185612746565b9998505050505050505050565b6001600160401b038181168382160190808211156131d4576131d4612911565b5092915050565b80820260008212600160ff1b841416156131f7576131f7612911565b818105831482151761139b5761139b612911565b634e487b7160e01b600052601260045260246000fd5b6000826132305761323061320b565b600160ff1b82146000198414161561324a5761324a612911565b500590565b808201828112600083128015821682158216171561326f5761326f612911565b505092915050565b808202811582820484141761139b5761139b612911565b60008261329d5761329d61320b565b500490565b8181038181111561139b5761139b612911565b60006101808e83528d60208401526001600160401b03808e16604085015260018060a01b03808e1660608601528c60808601528b60a08601528a60c08601528960e08601528861010086015281881661012086015280871661014086015250508061016084015261332881840185612746565b9f9e50505050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a26469706673582212205b4dc650a82ffc785c1f943bedeadd94ff561684d85ccef712060a7687c94f3464736f6c63430008130033'

type GammaTradeMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: GammaTradeMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class GammaTradeMarket__factory extends ContractFactory {
  constructor(...args: GammaTradeMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    whitelistFiller: PromiseOrValue<string>,
    quoterAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GammaTradeMarket> {
    return super.deploy(
      predyPool,
      permit2Address,
      whitelistFiller,
      quoterAddress,
      overrides || {}
    ) as Promise<GammaTradeMarket>
  }
  override getDeployTransaction(
    predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    whitelistFiller: PromiseOrValue<string>,
    quoterAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      predyPool,
      permit2Address,
      whitelistFiller,
      quoterAddress,
      overrides || {}
    )
  }
  override attach(address: string): GammaTradeMarket {
    return super.attach(address) as GammaTradeMarket
  }
  override connect(signer: Signer): GammaTradeMarket__factory {
    return super.connect(signer) as GammaTradeMarket__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): GammaTradeMarketInterface {
    return new utils.Interface(_abi) as GammaTradeMarketInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaTradeMarket {
    return new Contract(address, _abi, signerOrProvider) as GammaTradeMarket
  }
}

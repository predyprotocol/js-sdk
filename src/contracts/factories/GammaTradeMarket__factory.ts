/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  GammaTradeMarket,
  GammaTradeMarketInterface
} from '../GammaTradeMarket'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IPredyPool',
        name: '_predyPool',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'permit2Address',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'CallerIsNotFiller',
    type: 'error'
  },
  {
    inputs: [],
    name: 'CallerIsNotPredyPool',
    type: 'error'
  },
  {
    inputs: [],
    name: 'DeadlinePassed',
    type: 'error'
  },
  {
    inputs: [],
    name: 'HedgeTriggerNotMatched',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InvalidMarket',
    type: 'error'
  },
  {
    inputs: [],
    name: 'OutOfAcceptablePriceRange',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SignerIsNotVaultOwner',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SlippageTooLarge',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sqrtPrice',
        type: 'uint256'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'delta',
        type: 'int256'
      }
    ],
    name: 'Hedged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'trader',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      }
    ],
    name: 'Traded',
    type: 'event'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'execDeltaHedge',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'order',
            type: 'bytes'
          },
          {
            internalType: 'bytes',
            name: 'sig',
            type: 'bytes'
          }
        ],
        internalType: 'struct IFillerMarket.SignedOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'executeOrder',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'pairId',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes'
          }
        ],
        internalType: 'struct IPredyPool.TradeParams',
        name: 'tradeParams',
        type: 'tuple'
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    name: 'predyTradeAfterCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'updateQuoteTokenMap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'userPositions',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'lastHedgedTime',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'hedgeInterval',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'lastHedgedSqrtPrice',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'sqrtPriceTrigger',
        type: 'uint256'
      },
      {
        internalType: 'uint64',
        name: 'maxSlippageTolerance',
        type: 'uint64'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620028d5380380620028d583398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b61280780620000ce6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635e1b4d991461005c578063944b560b14610110578063a966d86314610125578063e1c951ca14610145578063fa54ecba14610158575b600080fd5b6100c361006a366004611356565b6003602081815260009384526040808520909152918352912080546001820154600283015493830154600484015460058501546006909501546001600160a01b039094169592949293919290916001600160401b031687565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a08301526001600160401b031660c082015260e0015b60405180910390f35b61012361011e366004611636565b61016b565b005b610138610133366004611739565b6103ad565b604051610107919061186d565b61012361015336600461187c565b610729565b610138610166366004611895565b61077e565b6000546001600160a01b0316331461019657604051637542ed5d60e11b815260040160405180910390fd5b600082608001518060200190518101906101b091906118fd565b905081606001516000036102cc57600080546020850151604051632500ed8d60e21b81526001600160a01b0390921691639403b634916101f69160040190815260200190565b6102a060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023891906119e8565b600054608082015160405163031adb4d60e61b81526001600482015230602482015260448101919091529192506001600160a01b03169063c6b6d34090606401600060405180830381600087803b15801561029257600080fd5b505af11580156102a6573d6000803e3d6000fd5b505050506102c66102ba8560000151610b30565b83516080840151610bab565b50505050565b60208101516000811315610301576102fc6102ea8560000151610b30565b6000546001600160a01b031683610bab565b6102c6565b60008112156102c6576000546001600160a01b031663c6b6d34060013061032785611b14565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561037557600080fd5b505af1158015610389573d6000803e3d6000fd5b505050506102c661039d8560000151610b30565b83516103a884611b14565b610bab565b6103b56112cd565b600083600001518060200190518101906103cf9190611bf9565b905060006103e1828660200151610caf565b6020808401516001600160401b03166000908152600190915260409020549091506001600160a01b031661041457600080fd5b6020808301516001600160401b03166000908152600190915260409081902054908301516001600160a01b0390811691161461044f57600080fd5b61045881610d5d565b81516020908101516001600160a01b03908116600090815260038352604080822084870180516001600160401b0390811685529186528284209354835160a08082018652925190931683526001850154838801526060808a0151848601526080808b015182860152855180870187528b518a01518916808252948c0151908a019081528651998a0194909452925188860152845180890386018152970184529082019590955290516309b819b360e41b8152919390921691639b819b309161052591908990600401611d24565b610180604051808303816000875af1158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190611da1565b9350806001015460000361060557825160209081015182546001600160a01b0319166001600160a01b039182169081178455918601516001840181905560005460405163055a6d9b60e51b81526004810192909252602482019390935291169063ab4db36090604401600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b505050505b60c0830151600382015560e083015160058201556101008301516103e86001600160401b03909116111561063857600080fd5b61010083015161064a90612710611e59565b60068201805467ffffffffffffffff19166001600160401b0392909216919091179055610120830151604051630b6b082960e31b81526001600160a01b0390911690635b584148906106a29086908890600401611e80565b60006040518083038186803b1580156106ba57600080fd5b505afa1580156106ce573d6000803e3d6000fd5b5050845160209081015187820151604080516001600160a01b039093168352928201527fe39122fcaa92bc902344d31c0f322ba04506be819fd20dafb197b26bf2e9045d935001905060405180910390a15050505b92915050565b6000818152600160205260409020546001600160a01b031661077b5761074e81610b30565b600082815260016020526040902080546001600160a01b0319166001600160a01b03929092169190911790555b50565b6107866112cd565b6001600160a01b038416600090815260036020908152604080832086845290915290206001810154158015906107c8575080546001600160a01b038681169116145b6107d157600080fd5b600080546001830154604051632500ed8d60e21b81526001600160a01b0390921691639403b634916108099160040190815260200190565b6102a060405180830381865afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906119e8565b6000805460a08301515160405163acfcd9fd60e01b8152600481019190915292935090916001600160a01b039091169063acfcd9fd90602401602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190611f7c565b905060006108ec828460a0015160a00151600001518560a001516080015160000151610efe565b6040805160e08101825286546001600160a01b03168152600187015460208201526002870154918101919091526003860154606082015260048601546080820152600586015460a082015260068601546001600160401b031660c08201529091506109579083610f2d565b61097457604051637597f42d60e11b815260040160405180910390fd5b6000546040805160a08082018352860151518152600187015460208201526001600160a01b0390921691639b819b309181016109af85611b14565b81526020016000815260200160405180604001604052808d6001600160a01b031681526020016000815250604051602001610a05919081516001600160a01b031681526020918201519181019190915260400190565b604051602081830303815290604052815250886040518363ffffffff1660e01b8152600401610a35929190611d24565b610180604051808303816000875af1158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190611da1565b9450610abc8286610aac87600301548860020154610a979190611f95565b600689015442906001600160401b0316610fca565b60a080880151015151151561104e565b600484018290554260028501556001840154604080516001600160a01b038b168152602081018a9052808201929092526060820184905260808201839052517fc77efa5c27a2e4c82f8d9552b2340094450d41921adf7945f439b6e991089f929181900360a00190a1505050509392505050565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161078060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f919061223d565b60600151519392505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610c079190612328565b6000604051808303816000865af19150503d8060008114610c44576040519150601f19603f3d011682016040523d82523d6000602084013e610c49565b606091505b5091509150818015610c73575080511580610c73575080806020019051810190610c739190612344565b610ca85760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640160405180910390fd5b5050505050565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000808460a0015113610d0d576000610d13565b8360a001515b90506040518060a001604052808560000151815260200185604001516001600160a01b03168152602001828152602001610d4c86611171565b815260200184905291505092915050565b610d6681611212565b6002546001600160a01b031663137c29fe610dec836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b60408051808201825260008082526020918201528151808301835230815291860151908201528460000151602001518560600151604051602001610e2f9061235f565b60408051601f1981840301815260808301909152604780835290919061278b6020830139604051602001610e649291906124d9565b60408051601f1981840301815260608301909152602e80835290919061275d6020830139604051602001610e99929190612508565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b168352610ed09695949392600401612559565b600060405180830381600087803b158015610eea57600080fd5b505af1158015610ca8573d6000803e3d6000fd5b600083610f0f600160601b856125fc565b610f199190612642565b610f239083612670565b90505b9392505050565b60004283606001518460400151610f449190611f95565b11610f5157506001610723565b60006127108460a001518560800151610f6a9190612698565b610f7491906126af565b905060008460a001518560800151612710610f8f9190612698565b610f9991906126af565b9050838110610fad57600192505050610723565b838211610fbf57600192505050610723565b506000949350505050565b6000838311610fdc575061271a610f26565b60006104b0610feb86866126c3565b610ff790612710612698565b61100191906126af565b90506127108111156110165782915050610f26565b61271061102561271a856126c3565b61102f9083612698565b61103991906126af565b6110459061271a611f95565b95945050505050565b6000606061105c8680612698565b901c90506000846080015113156110ad5760808401518361107f83612710612698565b61108991906126af565b11156110a8576040516378eff95d60e11b815260040160405180910390fd5b6110fe565b6000846080015112156110fe5783608001516110c890611b14565b6127106110d58584612698565b6110df91906126af565b10156110fe576040516378eff95d60e11b815260040160405180910390fd5b818015611153575063060c9913611119866305f5e100612698565b61112391906126af565b8460c001511080611153575060c08401516305f5e10061114763060c991388612698565b61115191906126af565b105b15610ca85760405163dbaffb0160e01b815260040160405180910390fd5b60006040516020016111829061235f565b604051602081830303815290604052805190602001206111a58360000151611263565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c61014001516040516020016111f59c9b9a999897969594939291906126d6565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b0316301461123d57604051639db8d5b160e01b815260040160405180910390fd5b80516060015142111561077b5760405163387b2e5560e11b815260040160405180910390fd5b600060405180608001604052806047815260200161278b6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c0016111f5565b6040518060e001604052806113116040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b038116811461077b57600080fd5b6000806040838503121561136957600080fd5b823561137481611341565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156113ba576113ba611382565b60405290565b60405160c081016001600160401b03811182821017156113ba576113ba611382565b60405160a081016001600160401b03811182821017156113ba576113ba611382565b604080519081016001600160401b03811182821017156113ba576113ba611382565b60405161010081016001600160401b03811182821017156113ba576113ba611382565b604051608081016001600160401b03811182821017156113ba576113ba611382565b60405161016081016001600160401b03811182821017156113ba576113ba611382565b60405161022081016001600160401b03811182821017156113ba576113ba611382565b60405161018081016001600160401b03811182821017156113ba576113ba611382565b604051601f8201601f191681016001600160401b03811182821017156114fc576114fc611382565b604052919050565b60006001600160401b0382111561151d5761151d611382565b50601f01601f191660200190565b600082601f83011261153c57600080fd5b813561154f61154a82611504565b6114d4565b81815284602083860101111561156457600080fd5b816020850160208301376000918101602001919091529392505050565b600081830361018081121561159557600080fd5b61159d611398565b915060c08112156115ad57600080fd5b506115b66113c0565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a0838503121561164a57600080fd5b82356001600160401b038082111561166157600080fd5b9084019060a0828703121561167557600080fd5b61167d6113e2565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156116b157600080fd5b6116bd8882860161152b565b6080830152508094505050506116d68460208501611581565b90509250929050565b6000604082840312156116f157600080fd5b6116f9611404565b9050813561170681611341565b815260208201356001600160401b0381111561172157600080fd5b61172d8482850161152b565b60208301525092915050565b6000806040838503121561174c57600080fd5b82356001600160401b038082111561176357600080fd5b908401906040828703121561177757600080fd5b61177f611404565b82358281111561178e57600080fd5b61179a8882860161152b565b8252506020830135828111156117af57600080fd5b6117bb8882860161152b565b6020830152508094505060208501359150808211156117d957600080fd5b506117e6858286016116df565b9150509250929050565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b610180810161072382846117f0565b60006020828403121561188e57600080fd5b5035919050565b6000806000606084860312156118aa57600080fd5b83356118b581611341565b92506020840135915060408401356001600160401b038111156118d757600080fd5b6118e3868287016116df565b9150509250925092565b80516118f881611341565b919050565b60006040828403121561190f57600080fd5b611917611404565b825161192281611341565b81526020928301519281019290925250919050565b8051600281900b81146118f857600080fd5b80516001600160401b03811681146118f857600080fd5b60006040828403121561197257600080fd5b61197a611404565b9050815181526020820151602082015292915050565b600060c082840312156119a257600080fd5b6119aa6113c0565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a08112156119fc57600080fd5b611a046113c0565b835181526020840151611a1681611341565b60208201526040840151611a2981611341565b60408201526060840151611a3c81611341565b606082015260808481015190820152610200609f1983011215611a5e57600080fd5b611a66611426565b915060a08401518252611a7b60c08501611937565b6020830152611a8c60e08501611937565b6040830152611a9e6101008501611949565b6060830152611ab1856101208601611960565b6080830152611ac4856101608601611990565b60a0830152611ad7856102208601611960565b60c0830152611aea856102608601611960565b60e083015260a08101919091529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201611b2957611b29611afe565b5060000390565b600060808284031215611b4257600080fd5b611b4a611449565b90508151611b5781611341565b81526020820151611b6781611341565b80602083015250604082015160408201526060820151606082015292915050565b60005b83811015611ba3578181015183820152602001611b8b565b50506000910152565b600082601f830112611bbd57600080fd5b8151611bcb61154a82611504565b818152846020838601011115611be057600080fd5b611bf1826020830160208701611b88565b949350505050565b600060208284031215611c0b57600080fd5b81516001600160401b0380821115611c2257600080fd5b908301906101c08286031215611c3757600080fd5b611c3f61146b565b611c498684611b30565b8152611c5760808401611949565b6020820152611c6860a084016118ed565b604082015260c0830151606082015260e083015160808201526101008084015160a08301526101208085015160c08401526101408086015160e0850152611cb26101608701611949565b83850152611cc361018087016118ed565b828501526101a0860151925084831115611cdc57600080fd5b611ce889848801611bac565b9084015250909695505050505050565b60008151808452611d10816020860160208601611b88565b601f01601f19169290920160200192915050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152611d6860e0840182611cf8565b9050828103602084015260018060a01b038451168152602084015160406020830152611d976040830182611cf8565b9695505050505050565b6000818303610180811215611db557600080fd5b611dbd611398565b60c0821215611dcb57600080fd5b611dd36113c0565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6001600160401b03818116838216019080821115611e7957611e79611afe565b5092915050565b6101a0808252835180516001600160a01b03908116848401526020820151166101c084015260408101516101e0840152606001516102008301526000905060208401516001600160401b0381166102208401525060408401516001600160a01b038116610240840152506060840151610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e08401516102e08301526101008401516001600160401b038116610300840152506101208401516001600160a01b038116610320840152506101408401516101c0610340840152611f6c610360840182611cf8565b915050610f2660208301846117f0565b600060208284031215611f8e57600080fd5b5051919050565b8082018082111561072357610723611afe565b600060808284031215611fba57600080fd5b611fc2611449565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561200057600080fd5b6120086113c0565b9150825161201581611341565b8252602083015161202581611341565b602083015260c0603f198201121561203c57600080fd5b506120456113c0565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a082015280604083015250612093836101008401611fa8565b606082015261018082015160808201526101a082015160a082015292915050565b600060a082840312156120c657600080fd5b6120ce6113e2565b9050815181526120e060208301611937565b60208201526120f160408301611937565b604082015261210260608301611949565b606082015261211360808301611949565b608082015292915050565b6000610260828403121561213157600080fd5b61213961148e565b9050612144826118ed565b815261215260208301611937565b602082015261216360408301611937565b604082015261217460608301611949565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a06121e784828501611960565b908201526101e06121fa84848301611960565b6101c08301526102208301519082015261024090910151610200820152919050565b805180151581146118f857600080fd5b805160ff811681146118f857600080fd5b6000610780828403121561225057600080fd5b6122586114b1565b82518152612268602084016118ed565b6020820152612279604084016118ed565b604082015261228b8460608501611fec565b606082015261229e846102208501611fec565b60808201526122b1846103e085016120b4565b60a08201526122c484610480850161211e565b60c08201526122d66106e084016118ed565b60e08201526122e8610700840161221c565b6101008201526122fb610720840161221c565b61012082015261230e610740840161222c565b610140820152610760929092015161016083015250919050565b6000825161233a818460208701611b88565b9190910192915050565b60006020828403121561235657600080fd5b610f268261221c565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b8201526d1d5a5b9d0d8d081c185a5c92590b60921b601a8201527f6164647265737320656e747279546f6b656e416464726573732c0000000000006028820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60428201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006055820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b606c820152751d5a5b9d0c8d4d881a195919d9525b9d195c9d985b0b60521b60808201527f75696e7432353620737172745072696365547269676765722c0000000000000060968201527f75696e743634206d6178536c697070616765546f6c6572616e63652c0000000060af8201527f616464726573732076616c696461746f7241646472657373000000000000000060cb8201527462797465732076616c69646174696f6e446174612960581b60e382015260f80190565b600083516124eb818460208801611b88565b8351908301906124ff818360208801611b88565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351612536816013850160208801611b88565b83519083019061254d816013840160208801611b88565b01601301949350505050565b600061014061257c838a5180516001600160a01b03168252602090810151910152565b60208901516040840152604089015160608401526125b0608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e0830186905261010083018190526125da81840186611cf8565b90508281036101208401526125ef8185611cf8565b9998505050505050505050565b80820260008212600160ff1b8414161561261857612618611afe565b818105831482151761072357610723611afe565b634e487b7160e01b600052601260045260246000fd5b6000826126515761265161262c565b600160ff1b82146000198414161561266b5761266b611afe565b500590565b808201828112600083128015821682158216171561269057612690611afe565b505092915050565b808202811582820484141761072357610723611afe565b6000826126be576126be61262c565b500490565b8181038181111561072357610723611afe565b60006101808e83528d60208401526001600160401b03808e16604085015260018060a01b03808e1660608601528c60808601528b60a08601528a60c08601528960e08601528861010086015281881661012086015280871661014086015250508061016084015261274981840185611cf8565b9f9e50505050505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a2646970667358221220ad84f7eecf7aa39dfda11b1141ec4d1a6382f6b6f117587842e0ab6afe44324364736f6c63430008130033'

type GammaTradeMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: GammaTradeMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class GammaTradeMarket__factory extends ContractFactory {
  constructor(...args: GammaTradeMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GammaTradeMarket> {
    return super.deploy(
      _predyPool,
      permit2Address,
      overrides || {}
    ) as Promise<GammaTradeMarket>
  }
  override getDeployTransaction(
    _predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _predyPool,
      permit2Address,
      overrides || {}
    )
  }
  override attach(address: string): GammaTradeMarket {
    return super.attach(address) as GammaTradeMarket
  }
  override connect(signer: Signer): GammaTradeMarket__factory {
    return super.connect(signer) as GammaTradeMarket__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): GammaTradeMarketInterface {
    return new utils.Interface(_abi) as GammaTradeMarketInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GammaTradeMarket {
    return new Contract(address, _abi, signerOrProvider) as GammaTradeMarket
  }
}

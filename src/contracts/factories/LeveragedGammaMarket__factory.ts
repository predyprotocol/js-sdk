/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  LeveragedGammaMarket,
  LeveragedGammaMarketInterface
} from '../LeveragedGammaMarket'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IPredyPool',
        name: '_predyPool',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'permit2Address',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'CallerIsNotFiller',
    type: 'error'
  },
  {
    inputs: [],
    name: 'CallerIsNotPredyPool',
    type: 'error'
  },
  {
    inputs: [],
    name: 'DeadlinePassed',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InvalidMarket',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SignerIsNotVaultOwner',
    type: 'error'
  },
  {
    inputs: [],
    name: 'BORROW_FEE_RATE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      }
    ],
    name: 'confirmLiquidation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'marginAmount',
        type: 'uint256'
      }
    ],
    name: 'depositMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256'
      }
    ],
    name: 'depositToInsurancePool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'positionId',
        type: 'uint64'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'execLiquidationCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'order',
            type: 'bytes'
          },
          {
            internalType: 'bytes',
            name: 'sig',
            type: 'bytes'
          }
        ],
        internalType: 'struct IFillerMarket.SignedOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'executeOrder',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'insurancePools',
    outputs: [
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      },
      {
        internalType: 'address',
        name: 'fillerAddress',
        type: 'address'
      },
      {
        internalType: 'int256',
        name: 'marginAmount',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'fillercumulativeFundingRates',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'fundingRateGrobalGrowth',
        type: 'int256'
      },
      {
        internalType: 'uint256',
        name: 'lastFundingRateCalculationTime',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'pairId',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes'
          }
        ],
        internalType: 'struct IPredyPool.TradeParams',
        name: 'tradeParams',
        type: 'tuple'
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    name: 'predyTradeAfterCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'pairId',
        type: 'uint256'
      }
    ],
    name: 'updateQuoteTokenMap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256'
      }
    ],
    name: 'userPositions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256'
      },
      {
        internalType: 'address',
        name: 'filler',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address'
      },
      {
        internalType: 'int256',
        name: 'positionAmount',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'positionAmountSqrt',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'assuranceMargin',
        type: 'int256'
      },
      {
        internalType: 'int256',
        name: 'marginAmount',
        type: 'int256'
      },
      {
        internalType: 'uint256',
        name: 'lastBorrowFeeCalculationTime',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'withdrawAmount',
        type: 'uint256'
      }
    ],
    name: 'withdrawFromInsurancePool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'marginAmount',
        type: 'uint256'
      }
    ],
    name: 'withdrawMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620031193803806200311983398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b61304b80620000ce6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636eec1330116100715780636eec1330146101b0578063944b560b146101c7578063a966d863146101da578063c2a063e9146101fa578063e1c951ca1461020d578063e2a2796b1461022057600080fd5b80630cea7534146100b957806319bd1776146100b95780631e7f1370146100cc57806337ec56ea146101775780633cb4560c1461018a578063649f3ce51461019d575b600080fd5b6100ca6100c7366004611bfe565b50565b005b61012b6100da366004611bfe565b60036020819052600091825260409091208054600182015460028301549383015460048401546005850154600686015460079096015494966001600160a01b03948516969416949293919290919088565b604080519889526001600160a01b0397881660208a015295909616948701949094526060860192909252608085015260a084015260c083015260e0820152610100015b60405180910390f35b6100ca610185366004611bfe565b6102a2565b6100ca610198366004611bfe565b610481565b6100ca6101ab366004611bfe565b610578565b6101b96104b081565b60405190815260200161016e565b6100ca6101d5366004611eed565b610669565b6101ed6101e8366004612005565b6106f4565b60405161016e9190612139565b6100ca61020836600461215d565b610c22565b6100ca61021b366004611bfe565b610e09565b61026d61022e3660046121a2565b600460208190526000918252604090912080546001820154600283015460038401549484015460059094015492946001600160a01b0390921693909286565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161016e565b600081815260036020526040808220825491516349ebb77d60e01b8152600481018590529092916001600160a01b0316906349ebb77d90602401606060405180830381865afa1580156102f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031d91906121c6565b905080604001516000148015610343575060038201541515806103435750600482015415155b61034c57600080fd5b60008054604051632500ed8d60e21b8152600481018690526001600160a01b0390911690639403b634906024016102a060405180830381865afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb91906122b7565b60005460808201519192506001600160a01b031690635393e7809086906103e1906123e3565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b505060006003860181905560018601546001600160a01b03168152600460205260408120608085015160028201805492955090935091906104759084906123ff565b90915550505050505050565b336000818152600460205260409020600101546001600160a01b0316146104bb57604051638173c76360e01b815260040160405180910390fd5b336000908152600460205260409020546104d490610e5d565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d919061242f565b5033600090815260046020526040812060020180548392906105709084906123ff565b909155505050565b336000818152600460205260409020600101546001600160a01b0316146105b257604051638173c76360e01b815260040160405180910390fd5b33600090815260046020526040812060020180548392906105d490849061244a565b9091555050336000908152600460205260409020546105f290610e5d565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015610641573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610665919061242f565b5050565b6000546001600160a01b0316331461069457604051637542ed5d60e11b815260040160405180910390fd5b602080830151600090815260038252604080822060018101546001600160a01b03168352600484529082206080860151805192949193926106db9290820181019101612471565b90506106ed8284838760600151610ed8565b5050505050565b6106fc611b8a565b600083600001518060200190518101906107169190612570565b905060006107288286602001516111bb565b6040808401516001600160401b03166000908152600160205220549091506001600160a01b031661075857600080fd5b6040808301516001600160401b031660009081526001602052205460608301516001600160a01b0390811691161461078f57600080fd5b61079881611269565b6020820151156107c1576107c1600360008460200151815260200190815260200160002061140a565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a0016040528085604001516001600160401b0316815260200185602001518152602001856080015181526020018560a00151815260200160405180604001604052806000600181111561083d5761083d612651565b815260c0880151602091820152604051610858929101612667565b604051602081830303815290604052815250866040518363ffffffff1660e01b81526004016108889291906126cc565b610180604051808303816000875af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190612749565b9250816020015160000361098857602082810151848201805160009081526003845260408082209390935585518401518251825283822060020180546001600160a01b0319166001600160a01b0392831617905590549151865190940151925163055a6d9b60e51b815260048101949094529182166024840152169063ab4db36090604401600060405180830381600087803b15801561096b57600080fd5b505af115801561097f573d6000803e3d6000fd5b505050506109d0565b60208084015160009081526003825260409020600201548351909101516001600160a01b039081169116146109d05760405163708c545360e01b815260040160405180910390fd5b8160800151600360008560200151815260200190815260200160002060030160008282546109fe91906123ff565b909155505060a082015160208085015160009081526003909152604081206004018054909190610a2f9084906123ff565b9091555050602080840151600090815260038083526040918290208251610100810184528154815260018201546001600160a01b0390811695820195909552600282015490941692840192909252810154606083015260048101546080830152600581015460a0830152600681015460c08301526007015460e0820152610ab5906114b0565b610af35760405162461bcd60e51b8152600401610aea906020808252600490820152635341464560e01b604082015260600190565b60405180910390fd5b8160e001516001600160a01b031663156b582a83856040518363ffffffff1660e01b8152600401610b25929190612801565b60006040518083038186803b158015610b3d57600080fd5b505afa158015610b51573d6000803e3d6000fd5b5050505060008260c001511215610c19576040808301516001600160401b03166000908152600160209081529190205483519091015160c08401516001600160a01b039092169163a9059cbb9190610ba8906123e3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c17919061242f565b505b50505b92915050565b6001600160401b038216600090815260036020818152604080842060018101546001600160a01b039081168087526004808652968490208451610100810186528454815295860191909152600283015490911692840192909252928301546060830152928201546080820152600582015460a0820152600682015460c0820152600782015460e0820152909190610cb8906114b0565b15610cf05760405162461bcd60e51b81526020600482015260086024820152674e4f54205341464560c01b6044820152606401610aea565b6000546040805160a081018252835481526001600160401b038716602082015260038501546001600160a01b0390931692639b819b3092820190610d33906123e3565b81526020018560040154610d46906123e3565b81526020016040518060400160405280600180811115610d6857610d68612651565b81526000602091820152604051610d80929101612667565b604051602081830303815290604052815250856040518363ffffffff1660e01b8152600401610db09291906126cc565b610180604051808303816000875af1158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190612749565b50610e038482600001546114c9565b50505050565b6000818152600160205260409020546001600160a01b03166100c757610e2e81610e5d565b60009182526001602052604090912080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805460405163324abcfb60e21b81526004810184905282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc9190612b2a565b60600151519392505050565b600080548454604051632500ed8d60e21b81526001600160a01b0390921691639403b63491610f0d9160040190815260200190565b6102a060405180830381865afa158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4f91906122b7565b608001516005850154909150600084516001811115610f7057610f70612651565b0361112d576000610f81828461244a565b90506000856020015182610f9591906123ff565b1215610fa057600080fd5b60058601849055600082610fb486846123ff565b610fbe919061244a565b90508560200151876006016000828254610fd891906123ff565b9250508190555080886002016000828254610ff391906123ff565b9091555050602086015161100790826123ff565b9050600081131561109957875461101d90610e5d565b60005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af115801561106f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611093919061242f565b50611126565b6000811215611126576000546001600160a01b031663c6b6d3406001306110bf856123e3565b6040516001600160e01b031960e086901b16815292151560048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050505b50506111b3565b60018451600181111561114257611142612651565b036111b35760005460405163031adb4d60e61b815260016004820152306024820152604481018490526001600160a01b039091169063c6b6d34090606401600060405180830381600087803b15801561119a57600080fd5b505af11580156111ae573d6000803e3d6000fd5b505050505b505050505050565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000808460c001511361121957600061121f565b8360c001515b90506040518060a001604052808560000151815260200185606001516001600160a01b03168152602001828152602001611258866115e2565b815260200184905291505092915050565b61127281611675565b6002546001600160a01b031663137c29fe6112f8836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830183523081529186015190820152846000015160200151856060015160405160200161133b90612c02565b60408051601f19818403018152608083019091526047808352909190612fcf6020830139604051602001611370929190612d2d565b60408051601f1981840301815260608301909152602e808352909190612fa160208301396040516020016113a5929190612d5c565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526113dc9695949392600401612dad565b600060405180830381600087803b1580156113f657600080fd5b505af11580156106ed573d6000803e3d6000fd5b60018101546001600160a01b0316600090815260046020526040812060078301549091906114389042612e50565b90506000660b342eb7c38000826104b086600501546114579190612e63565b6114619190612e63565b61146b9190612e90565b905080846006016000828254611481919061244a565b925050819055508083600201600082825461149c91906123ff565b909155505042600790940193909355505050565b60008060006114be846116c6565b501215949350505050565b6001600160401b03821660009081526003602081905260408220908101549091036115dd576003810154158015611504575060008160060154135b1561159c576006810180546000918290558382526001602052604091829020546002840154925163a9059cbb60e01b81526001600160a01b039384166004820152602481018390529192169063a9059cbb906044016020604051808303816000875af1158015611578573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed919061242f565b600681015460018201546001600160a01b0316600090815260046020526040812060020180549091906115d09084906123ff565b9091555050600060068201555b505050565b60006040516020016115f390612c02565b60405160208183030381529060405280519060200120611616836000015161184b565b83602001518460400151856060015186608001518760a001518860c001518960e001518a61010001516040516020016116589a99989796959493929190612ea4565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146116a057604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156100c75760405163387b2e5560e11b815260040160405180910390fd5b600080548251604051639174e1a160e01b815260048101919091528291829182916001600160a01b031690639174e1a190602401606060405180830381865afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b91906121c6565b600080546020888101516001600160a01b039081168452600491829052604080852054905163acfcd9fd60e01b815292830152939450919283928392919091169063acfcd9fd90602401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c69190612f16565b90506117dc8860c0015185836305fd7d446118b5565b9198509096509093509150600061180b620f42406117fc856103e8612e63565b6118069190612e90565b611933565b905080611818858961244a565b61182291906123ff565b97508580156118335750620f424088125b1561183f57620f424097505b50505050509193909250565b6000604051806080016040528060478152602001612fcf6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c001611658565b6000806000806118c68688876119a1565b6118d090856123ff565b93506118dc8688611aa0565b6118e690846123ff565b92506118f28688611b2a565b6118fc9083612f2f565b9150808061190e575061190e87611b6f565b905061191a88856123ff565b935061192688846123ff565b9250945094509450949050565b60006001600160ff1b0382111561199d5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610aea565b5090565b6001600160ff1b0360006305f5e1006119ba8487612e63565b6119c49190612e90565b90506000836119d76305f5e10088612e63565b6119e19190612e90565b905060006119ef8387611aa0565b9050838112156119fd578093505b506000611a0a8287611aa0565b905083811215611a18578093505b5060008560200151128015611a31575060008560400151135b15611a975760008560400151600160601b8760200151611a50906123e3565b611a5a9190612e63565b611a649190612e90565b90508082108015611a7457508281105b15611a95576000611a858288611aa0565b905084811215611a93578094505b505b505b50509392505050565b6000806060611aaf8580612e63565b8451911c9150600160601b611ac386611933565b8560200151611ad29190612f42565b611add906002612f42565b611ae79190612f72565b600160601b611af584611933565b8660400151611b049190612f42565b611b0e9190612f72565b611b1891906123ff565b611b2291906123ff565b949350505050565b602081015160009081811315611b44576000915050610c1c565b606084611b50836123e3565b611b5a9190612e63565b611b65906002612e63565b901c949350505050565b600081602001516000141580610c1c57505060400151151590565b6040518060e00160405280611bce6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611c1057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715611c4f57611c4f611c17565b60405290565b60405160c081016001600160401b0381118282101715611c4f57611c4f611c17565b60405160a081016001600160401b0381118282101715611c4f57611c4f611c17565b604080519081016001600160401b0381118282101715611c4f57611c4f611c17565b604051606081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161010081016001600160401b0381118282101715611c4f57611c4f611c17565b604051608081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161012081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161022081016001600160401b0381118282101715611c4f57611c4f611c17565b60405161016081016001600160401b0381118282101715611c4f57611c4f611c17565b604051601f8201601f191681016001600160401b0381118282101715611db357611db3611c17565b604052919050565b60006001600160401b03821115611dd457611dd4611c17565b50601f01601f191660200190565b600082601f830112611df357600080fd5b8135611e06611e0182611dbb565b611d8b565b818152846020838601011115611e1b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000818303610180811215611e4c57600080fd5b611e54611c2d565b915060c0811215611e6457600080fd5b50611e6d611c55565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215611f0157600080fd5b82356001600160401b0380821115611f1857600080fd5b9084019060a08287031215611f2c57600080fd5b611f34611c77565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115611f6857600080fd5b611f7488828601611de2565b608083015250809450505050611f8d8460208501611e38565b90509250929050565b6001600160a01b03811681146100c757600080fd5b600060408284031215611fbd57600080fd5b611fc5611c99565b90508135611fd281611f96565b815260208201356001600160401b03811115611fed57600080fd5b611ff984828501611de2565b60208301525092915050565b6000806040838503121561201857600080fd5b82356001600160401b038082111561202f57600080fd5b908401906040828703121561204357600080fd5b61204b611c99565b82358281111561205a57600080fd5b61206688828601611de2565b82525060208301358281111561207b57600080fd5b61208788828601611de2565b6020830152508094505060208501359150808211156120a557600080fd5b506120b285828601611fab565b9150509250929050565b8051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b6101808101610c1c82846120bc565b6001600160401b03811681146100c757600080fd5b6000806040838503121561217057600080fd5b823561217b81612148565b915060208301356001600160401b0381111561219657600080fd5b6120b285828601611fab565b6000602082840312156121b457600080fd5b81356121bf81611f96565b9392505050565b6000606082840312156121d857600080fd5b6121e0611cbb565b8251815260208301516020820152604083015160408201528091505092915050565b805161220d81611f96565b919050565b8051600281900b811461220d57600080fd5b805161220d81612148565b60006040828403121561224157600080fd5b612249611c99565b9050815181526020820151602082015292915050565b600060c0828403121561227157600080fd5b612279611c55565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60008183036102a08112156122cb57600080fd5b6122d3611c55565b8351815260208401516122e581611f96565b602082015260408401516122f881611f96565b6040820152606084015161230b81611f96565b606082015260808481015190820152610200609f198301121561232d57600080fd5b612335611cdd565b915060a0840151825261234a60c08501612212565b602083015261235b60e08501612212565b604083015261236d6101008501612224565b606083015261238085610120860161222f565b608083015261239385610160860161225f565b60a08301526123a685610220860161222f565b60c08301526123b985610260860161222f565b60e083015260a08101919091529392505050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016123f8576123f86123cd565b5060000390565b8082018281126000831280158216821582161715610c1957610c196123cd565b8051801515811461220d57600080fd5b60006020828403121561244157600080fd5b6121bf8261241f565b818103600083128015838313168383128216171561246a5761246a6123cd565b5092915050565b60006040828403121561248357600080fd5b61248b611c99565b82516002811061249a57600080fd5b81526020928301519281019290925250919050565b6000608082840312156124c157600080fd5b6124c9611d00565b905081516124d681611f96565b815260208201516124e681611f96565b80602083015250604082015160408201526060820151606082015292915050565b60005b8381101561252257818101518382015260200161250a565b50506000910152565b600082601f83011261253c57600080fd5b815161254a611e0182611dbb565b81815284602083860101111561255f57600080fd5b611b22826020830160208701612507565b60006020828403121561258257600080fd5b81516001600160401b038082111561259957600080fd5b9083019061018082860312156125ae57600080fd5b6125b6611d22565b6125c086846124af565b8152608083015160208201526125d860a08401612224565b60408201526125e960c08401612202565b606082015260e083015160808201526101008084015160a083015261012084015160c083015261261c6101408501612202565b60e08301526101608401518381111561263457600080fd5b6126408882870161252b565b918301919091525095945050505050565b634e487b7160e01b600052602160045260246000fd5b815160408201906002811061268c57634e487b7160e01b600052602160045260246000fd5b808352506020830151602083015292915050565b600081518084526126b8816020860160208601612507565b601f01601f19169290920160200192915050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261271060e08401826126a0565b9050828103602084015260018060a01b03845116815260208401516040602083015261273f60408301826126a0565b9695505050505050565b600081830361018081121561275d57600080fd5b612765611c2d565b60c082121561277357600080fd5b61277b611c55565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6101a0808252835180516001600160a01b039081169284019290925260208082015183166101c08501526040808301516101e0860152606092830151610200860152908601516102208501528501516001600160401b03166102408401528401518116610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e0840151166102e08201526101008301516101806103008301526000906128b76103208401826126a0565b9150506121bf60208301846120bc565b6000608082840312156128d957600080fd5b6128e1611d00565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561291f57600080fd5b612927611c55565b9150825161293481611f96565b8252602083015161294481611f96565b602083015260c0603f198201121561295b57600080fd5b50612964611c55565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a0820152806040830152506129b28361010084016128c7565b606082015261018082015160808201526101a082015160a082015292915050565b6000606082840312156129e557600080fd5b6129ed611cbb565b9050815181526129ff60208301612212565b6020820152612a1060408301612212565b604082015292915050565b60006102608284031215612a2e57600080fd5b612a36611d45565b9050612a4182612202565b8152612a4f60208301612212565b6020820152612a6060408301612212565b6040820152612a7160608301612224565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0612ae48482850161222f565b908201526101e0612af78484830161222f565b6101c08301526102208301519082015261024090910151610200820152919050565b805160ff8116811461220d57600080fd5b60006107208284031215612b3d57600080fd5b612b45611d68565b82518152612b5560208401612202565b6020820152612b6660408401612202565b6040820152612b78846060850161290b565b6060820152612b8b84610220850161290b565b6080820152612b9e846103e085016129d3565b60a0820152612bb1846104408501612a1b565b60c0820152612bc36106a08401612202565b60e0820152612bd56106c0840161241f565b610100820152612be86106e08401612b19565b610120820152610700929092015161014083015250919050565b6a08ec2dadac29ee4c8cae4560ab1b81526e13dc99195c925b999bc81a5b999bcb608a1b600b820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b601a8201526d1d5a5b9d0d8d081c185a5c92590b60921b602d8201527f6164647265737320656e747279546f6b656e416464726573732c000000000000603b820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b60558201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006068820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b607f8201527f616464726573732076616c696461746f7241646472657373000000000000000060938201527462797465732076616c69646174696f6e446174612960581b60ab82015260c00190565b60008351612d3f818460208801612507565b835190830190612d53818360208801612507565b01949350505050565b7247616d6d614f72646572207769746e6573732960681b815260008351612d8a816013850160208801612507565b835190830190612da1816013840160208801612507565b01601301949350505050565b6000610140612dd0838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152612e04608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e083018690526101008301819052612e2e818401866126a0565b9050828103610120840152612e4381856126a0565b9998505050505050505050565b81810381811115610c1c57610c1c6123cd565b8082028115828204841417610c1c57610c1c6123cd565b634e487b7160e01b600052601260045260246000fd5b600082612e9f57612e9f612e7a565b500490565b60006101408c83528b60208401528a60408401526001600160401b038a16606084015260018060a01b03808a1660808501528860a08501528760c08501528660e08501528086166101008501525080610120840152612f05818401856126a0565b9d9c50505050505050505050505050565b600060208284031215612f2857600080fd5b5051919050565b80820180821115610c1c57610c1c6123cd565b80820260008212600160ff1b84141615612f5e57612f5e6123cd565b8181058314821517610c1c57610c1c6123cd565b600082612f8157612f81612e7a565b600160ff1b821460001984141615612f9b57612f9b6123cd565b50059056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122076977e13c655feaf8e0a8d9ae3396968cb0d371f2004d462749fa42da9d7aa4664736f6c63430008130033'

type LeveragedGammaMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: LeveragedGammaMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class LeveragedGammaMarket__factory extends ContractFactory {
  constructor(...args: LeveragedGammaMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LeveragedGammaMarket> {
    return super.deploy(
      _predyPool,
      permit2Address,
      overrides || {}
    ) as Promise<LeveragedGammaMarket>
  }
  override getDeployTransaction(
    _predyPool: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _predyPool,
      permit2Address,
      overrides || {}
    )
  }
  override attach(address: string): LeveragedGammaMarket {
    return super.attach(address) as LeveragedGammaMarket
  }
  override connect(signer: Signer): LeveragedGammaMarket__factory {
    return super.connect(signer) as LeveragedGammaMarket__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): LeveragedGammaMarketInterface {
    return new utils.Interface(_abi) as LeveragedGammaMarketInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveragedGammaMarket {
    return new Contract(address, _abi, signerOrProvider) as LeveragedGammaMarket
  }
}

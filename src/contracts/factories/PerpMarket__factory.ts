/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PerpMarket, PerpMarketInterface } from "../PerpMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPredyPool",
        name: "_predyPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "permit2Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFiller",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotPredyPool",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "FillerPoolIsNotSafe",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "MarginIsNegative",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerIsNotVaultOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UserMarginIsNegative",
    type: "error",
  },
  {
    inputs: [],
    name: "UserPositionIsNotDanger",
    type: "error",
  },
  {
    inputs: [],
    name: "UserPositionIsNotSafe",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "fundingFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "fillerFundingFee",
        type: "int256",
      },
    ],
    name: "FundingPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "tradeAmount",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    name: "PositionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "addFillerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "close",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "perpTradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
    ],
    name: "confirmLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginAmount",
        type: "uint256",
      },
    ],
    name: "depositMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "depositToFillerPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "execLiquidationCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct IFillerMarket.SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "executeOrder",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "perpTradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fillers",
    outputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "fillerAddress",
        type: "address",
      },
      {
        internalType: "int256",
        name: "marginAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fillercumulativeFundingRates",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fundingRateGrobalGrowth",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastFundingRateCalculationTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShortAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PerpMarket.TotalPosition",
        name: "totalPosition",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLiquidated",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidationPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pairId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "tradeAmountSqrt",
            type: "int256",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IPredyPool.TradeParams",
        name: "tradeParams",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "perpEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateUnderlying",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateStable",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "perpPayoff",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtPayoff",
                type: "int256",
              },
            ],
            internalType: "struct IPredyPool.Payoff",
            name: "payoff",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "fee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minMargin",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "averagePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "sqrtTwap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sqrtPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPredyPool.TradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    name: "predyTradeAfterCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "trader",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
            ],
            internalType: "struct OrderInfo",
            name: "info",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "pairId",
            type: "uint64",
          },
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "marginAmount",
            type: "int256",
          },
          {
            internalType: "address",
            name: "validatorAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "validationData",
            type: "bytes",
          },
        ],
        internalType: "struct PerpOrder",
        name: "perpOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
      {
        internalType: "contract PredyPoolQuoter",
        name: "quoter",
        type: "address",
      },
    ],
    name: "quoteExecuteOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "quoteUserPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "userPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int256",
        name: "positionAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "entryValue",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "marginAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "cumulativeFundingRates",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawFromFillerPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginAmount",
        type: "uint256",
      },
    ],
    name: "withdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003f5e38038062003f5e833981016040819052620000349162000093565b600080546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560018054919093169116178155600355620000e7565b6001600160a01b03811681146200009057600080fd5b50565b600080600060608486031215620000a957600080fd5b8351620000b6816200007a565b6020850151909350620000c9816200007a565b6040850151909250620000dc816200007a565b809150509250925092565b613e6780620000f76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806373cddc5a11610097578063944b560b11610066578063944b560b14610337578063e3c25ff51461034a578063e7702d051461035d578063fe753f711461036657600080fd5b806373cddc5a146102115780637521ec921461022457806382091a6b1461023757806386f9f1141461032457600080fd5b806337ec56ea116100d357806337ec56ea146101aa57806337fc71c3146101bd57806347421334146101d0578063596c8976146101f157600080fd5b80630cea7534146100fa57806319bd1776146100fa5780631e7f13701461010d575b600080fd5b61010b610108366004612a35565b50565b005b61016261011b366004612a35565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600690950154939592946001600160a01b039092169390919087565b6040805197885260208801969096526001600160a01b03909416948601949094526060850191909152608084015260a083019190915260c082015260e0015b60405180910390f35b61010b6101b8366004612a35565b610379565b61010b6101cb366004612a4e565b6104be565b6101e36101de366004612a35565b6105d8565b6040519081526020016101a1565b6102046101ff366004612a4e565b6105ea565b6040516101a19190612a70565b61020461021f366004612ce1565b61071a565b61010b610232366004612a35565b610c64565b6102bb610245366004612a35565b600560208181526000928352604092839020805460018201546002830154600384015460048501549685015460068601548951808b01909a5260078701548a526008870154978a01979097526009860154600a90960154949893976001600160a01b0390931696919592949093919260ff16908a565b604080519a8b526020808c019a909a526001600160a01b03909816978a01979097526060890195909552608088019390935260a087019190915260c0860152805160e08601529290920151610100840152901515610120830152610140820152610160016101a1565b61010b610332366004612d9f565b610cf0565b61010b610345366004612e9a565b610f16565b61010b610358366004612a4e565b610f41565b6101e360035481565b61010b610374366004612fbb565b611114565b6000818152600560205260408082208254815492516349ebb77d60e01b81529193926001600160a01b03909116916349ebb77d916103bd9160040190815260200190565b606060405180830381865afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906130b1565b905080604001516000148015610424575060078201541515806104245750600882015415155b61042d57600080fd5b60008054600184015460405163acfcd9fd60e01b81526001600160a01b039092169163acfcd9fd916104659160040190815260200190565b602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a691906130ed565b600a8401555050600901805460ff1916600117905550565b60008281526005602052604090206002015482906001600160a01b031633146104fa57604051638173c76360e01b815260040160405180910390fd5b6000821161050757600080fd5b6000805484825260056020526040909120546001600160a01b0390911690635393e780906105348561311c565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050600084815260056020526040812060030180548593509091906105ad908490613138565b909155506105bc90508361129f565b6002546105d3906001600160a01b0316338461147b565b505050565b60006105e4823361157b565b92915050565b60408051808201909152600080825260208201526000838152600560205260409020600981015460ff166106655760405162461bcd60e51b815260206004820152601860248201527f66696c6c6572206973206e6f74206c697175696461746564000000000000000060448201526064015b60405180910390fd5b6000838152600460205260408120600a830154909190600160601b9061068b908061315f565b610695919061318c565b9050600082600301546106a79061311c565b90506000600160601b836106ba8461311c565b6106c491906131a0565b6106ce91906131d0565b90506106dc8588848461163a565b95506106e9876000611709565b60078501541580156106fd57506008850154155b1561070f5760098501805460ff191690555b505050505092915050565b6040805180820190915260008082526020820152600254600090819061074a9086906001600160a01b031661180b565b915091506107578161189b565b60008260800151131561085d57600254600054608084015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156107bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e3919061320e565b50600080548782526005602052604091829020546080850151925162a727cf60e71b8152600481019190915260248101929092526001600160a01b031690635393e78090604401600060405180830381600087803b15801561084457600080fd5b505af1158015610858573d6000803e3d6000fd5b505050505b81602001516000036108d7576003805460208481018281526000838152600483526040808220949094558651909201518151835283832060020180546001600160a01b0319166001600160a01b03909216919091179055518152908120600101889055815491906108cd83613229565b919050555061099a565b60208083015160009081526004808352604091829020825160e0810184528154815260018201548186015260028201546001600160a01b0390811694820185905260038301546060830152928201546080820152600582015460a082015260069091015460c082015285519093015116146109655760405163708c545360e01b815260040160405180910390fd5b60056000826020015181526020019081526020016000206001015483604001516001600160401b03161461099857600080fd5b505b600086815260056020908152604080832085830151845260049092529091206109c39190611a3e565b6109cb6128f1565b6109f66005600089815260200190815260200160002084602001518560600151866080015189611c4b565b9094509050610a048761129f565b8260a001516001600160a01b0316637004098684836040518363ffffffff1660e01b8152600401610a36929190613292565b60006040518083038186803b158015610a4e57600080fd5b505afa158015610a62573d6000803e3d6000fd5b50505050826080015160046000856020015181526020019081526020016000206005016000828254610a9491906133c6565b90915550506020808401516000908152600490915260408120600501541215610ad057604051631129976760e21b815260040160405180910390fd5b602083810151600090815260048083526040808320815160e0810183528154815260018201549581019590955260028101546001600160a01b039081168684015260038201546060870152818401546080870152600582015460a087015260069091015460c0860152925481880151915163acfcd9fd60e01b81526001600160401b0390921692820192909252610bb69392919091169063acfcd9fd90602401602060405180830381865afa158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb191906130ed565b611d89565b610bd357604051635469b69360e11b815260040160405180910390fd5b610c0183602001516000856080015112610bee576000611709565b8460800151610bfc9061311c565b611709565b602080840151606080860151604080519384528385018c90528301528651908201529085015160808201527fad0cceed2970c6b4c68cb5ed8686f529b327f88403b307c509bcd02076768eb89060a00160405180910390a15050505b9392505050565b6000818152600460209081526040808320600181015484526005909252909120610c8e9082611a3e565b6040805160e081018252825481526001830154602082015260028301546001600160a01b0316918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152610cec90611e1d565b5050565b6000828152600460209081526040808320600181015484526005909252909120610d1a8183611a3e565b60008054600183015460405163acfcd9fd60e01b81526001600160a01b039092169163acfcd9fd91610d529160040190815260200190565b602060405180830381865afa158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9391906130ed565b6040805160e081018252855481526001860154602082015260028601546001600160a01b0316918101919091526003850154606082015260048501546080820152600585015460a0820152600685015460c0820152909150610df59082611d89565b15610e135760405163456f3d3360e11b815260040160405180910390fd5b60008360030154610e239061311c565b90506000610e3584888460008a611c4b565b509050600082600160601b610e5c84602001518560000151610e5791906133c6565b611e96565b610e66919061315f565b610e7091906131d0565b90506127426000821315610eba578181610e8c8761271061315f565b610e96919061318c565b1115610eb5576040516378eff95d60e11b815260040160405180910390fd5b610f02565b6000821215610f0257610ecc8261311c565b612710610ed9838861315f565b610ee3919061318c565b1015610f02576040516378eff95d60e11b815260040160405180910390fd5b5050610f0d87611eb2565b50505050505050565b6000546001600160a01b03163314610cec57604051637542ed5d60e11b815260040160405180910390fd5b60008281526005602052604090206002015482906001600160a01b03163314610f7d57604051638173c76360e01b815260040160405180910390fd5b60008211610f8a57600080fd5b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fe1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611005919061320e565b50600083815260056020526040812060030180548492906110279084906133c6565b909155505060025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015611081573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a5919061320e565b5060008054848252600560205260409182902054915162a727cf60e71b81526004810192909252602482018490526001600160a01b031690635393e78090604401600060405180830381600087803b15801561110057600080fd5b505af1158015610f0d573d6000803e3d6000fd5b6040805180820190915260008082526020820152836020015160000361113d5760035460208501525b60208085018051600090815260048084526040808320815160e0810183528154815260018201548188015260028201546001600160a01b0390811682850152600383015460608084019190915283860154608080850191909152600585015460a08086019190915260069095015460c085015285519485018652858e01516001600160401b031685529751848a0152808d015184860152830186905283519788018452858852958201969096529051630a20b62d60e21b81529293871692632882d8b49261120e92918a91016133e6565b610180604051808303816000875af115801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190613463565b905061128782606001518360800151886060015184600001516080015185600001516000015161128291906133c6565b612132565b6020850152835261129783612205565b505050505050565b60008181526005602081815260408084208151610140810183528154815260018201548185015260028201546001600160a01b03908116828501526003830154606083015260048084015460808401529583015460a0830152600683015460c0830152835180850185526007840154815260088401549581019590955260e0820194909452600982015460ff161515610100820152600a909101546101208201528454815192516349ebb77d60e01b81529485019290925293929116906349ebb77d90602401606060405180830381865afa158015611382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a691906130b1565b60008054602085015160405163acfcd9fd60e01b8152600481019190915292935090916001600160a01b039091169063acfcd9fd90602401602060405180830381865afa1580156113fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141f91906130ed565b9050600083606001511215611447576040516391dcf9e360e01b815260040160405180910390fd5b6114518382612218565b82602001511215611475576040516386548aef60e01b815260040160405180910390fd5b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916114d7919061351b565b6000604051808303816000865af19150503d8060008114611514576040519150601f19603f3d011682016040523d82523d6000602084013e611519565b606091505b5091509150818015611543575080511580611543575080806020019051810190611543919061320e565b6115745760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161065c565b5050505050565b60008054604051639abbdf4b60e01b81526004810185905282916001600160a01b031690639abbdf4b906024016020604051808303816000875af11580156115c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115eb91906130ed565b6000818152600560205260409020818155600181018690556002810180546001600160a01b0319166001600160a01b038716179055426006820155600901805460ff1916905591505092915050565b604080518082019091526000808252602082015260008481526004602081905260409091206003810154918101549091611675918686612132565b60208401528083526004820180546000906116919084906133c6565b925050819055506116a78682600301548661239c565b838160030160008282546116bb91906133c6565b925050819055506116d286836020015160046124cb565b602083018190526005820180546000906116ed9084906133c6565b9091555050600590950154600690950194909455509192915050565b600082815260046020526040812060038101549091036117a6576000808260050154131561173e575060058101805460009091555b6040805160e081018252835481526001840154602082015260028401546001600160a01b0316918101919091526003830154606082015260048301546080820152600583015460a0820152600683015460c0820152611475906117a18584613537565b612517565b81156105d3576040805160e081018252825481526001830154602082015260028301546001600160a01b0316918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c08201526105d39083612517565b611813612965565b61181b6129ba565b836000015180602001905181019061183391906135fd565b915060008083608001511361184957600061184f565b82608001515b9050826040518060a0016040528085600001518152602001866001600160a01b0316815260200183815260200161188586612644565b8152602097880151970196909652959350505050565b6118a4816126ca565b6001546001600160a01b031663137c29fe61192a836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b60408051808201825260008082526020918201528151808301835230815291860151908201528460000151602001518560600151604051806080016040528060478152602001613deb60479139604051602001611986906136be565b60408051601f19818403018152908290526119a4929160200161379c565b60408051601f1981840301815260608301909152602e808352909190613dbd60208301396040516020016119d99291906137cb565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b168352611a10969594939260040161381b565b600060405180830381600087803b158015611a2a57600080fd5b505af1158015611574573d6000803e3d6000fd5b6301e13380826006015442611a5391906138be565b604080516101408101825285548152600186015460208083019190915260028701546001600160a01b0316828401526003870154606083015260048701546080830152600587015460a0830152600687015460c083015282518084019093526007870154835260088701549083015260e0810191909152600985015460ff161515610100820152600a850154610120820152611aee9061271b565b611af891906131a0565b611b0291906131d0565b826005016000828254611b1591906133c6565b925050819055504282600601819055506000600160601b826003015483600601548560050154611b459190613138565b611b4f91906131a0565b611b5991906131d0565b9050611b67838260046124cb565b905080826005016000828254611b7d91906133c6565b90915550506005830154600683015560078301546008840154600091600160601b91611ba99190613138565b85600401548660050154611bbd9190613138565b611bc791906131a0565b611bd191906131d0565b905080846003016000828254611be791906133c6565b909155505060058401546004850155825460018401546040805192835260208301919091528101839052606081018290527f5268bd312578794f4cd0a1cd8c66ca294cf24778519f4dec9aafff70494da6de9060800160405180910390a150505050565b6040805180820190915260008082526020820152611c676128f1565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a001604052808a6001015481526020018a6000015481526020018881526020016000815260200187604051602001611cc891815260200190565b604051602081830303815290604052815250856040518363ffffffff1660e01b8152600401611cf89291906133e6565b610180604051808303816000875af1158015611d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3c9190613463565b90508060400151876003016000828254611d5691906133c6565b9091555050805160808101519051611d7d91899189918991611d7891906133c6565b61163a565b91509550959350505050565b6000806060611d98848061315f565b901c905060008460800151600160601b838760600151611db891906131a0565b611dc291906131d0565b8660a00151611dd191906133c6565b611ddb91906133c6565b90506000611dee600160601b603261315f565b83611dfc8860600151611e96565b611e0691906131a0565b611e1091906131d0565b9091121595945050505050565b600081604051602001611e7d919081518152602080830151908201526040808301516001600160a01b031690820152606080830151908201526080808301519082015260a0808301519082015260c0918201519181019190915260e00190565b6040516020818303038152906040529050805181602001fd5b600080821215611eae57611ea98261311c565b6105e4565b5090565b60008181526004602052604081206003810154909103610cec57600081600501541315611f43576005810180546000918290556040805160e081018252845481526001850154602082015260028501546001600160a01b031691810191909152600384015460608201526004840154608082015260a0810192909252600683015460c0830152906105d39082612517565b600081600501541215610cec576001810154600090815260056020526040902060028101546001600160a01b03163303611fb2578160050154816003016000828254611f8f91906133c6565b9091555050600381015460001315611fa657600080fd5b60006005830155505050565b60008260050154611fc29061311c565b600060058501556002546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015612021573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612045919061320e565b5060025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561209b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bf919061320e565b50600054825460405162a727cf60e71b81526001600160a01b0390921691635393e780916120fa918590600401918252602082015260400190565b600060405180830381600087803b15801561211457600080fd5b505af1158015612128573d6000803e3d6000fd5b5050505050505050565b60008083600003612148575060009050806121fc565b600061215485886131a0565b12612161578291506121fc565b61216a84611e96565b61217387611e96565b106121a65760008661218586886131a0565b61218f91906131d0565b925082905061219e8185613138565b9150506121fc565b60006121b18661311c565b90506000856121c0818a6133c6565b6121ca90876131a0565b6121d491906131d0565b90506121e081836133c6565b9350806121ed8387613138565b6121f79190613138565b925050505b94509492505050565b600081604051602001611e7d9190612a70565b60008054602084015160405163324abcfb60e21b8152600481019190915282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015612269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228d9190613b76565b90506000606061229d858061315f565b60e0870151602081015190519190921c9250111561232f5760a0820151516000906305f5e100906122ce908061315f565b6122d8919061318c565b90506000816122eb6305f5e100826138be565b6122f5908561315f565b6122ff919061318c565b9050600160601b818860e001516000015161231a919061315f565b612324919061318c565b9450505050506105e4565b60a0820151516000906305f5e10090612348908061315f565b612352919061318c565b905060006305f5e10061236581846138be565b61236f908561315f565b612379919061318c565b9050600160601b818860e001516020015161231a919061315f565b505092915050565b600080806123aa84866131a0565b126123b7578291506123ed565b6123c083611e96565b6123c985611e96565b106123d55750816123ed565b6123df83856133c6565b91506123ea8461311c565b90505b6000821315612413578185600701600001600082825461240d9190613537565b90915550505b600082121561243f576124258261311c565b600886018054600090612439908490613537565b90915550505b6000811315612465578085600701600101600082825461245f91906138be565b90915550505b6000811215612491576124778161311c565b60078601805460009061248b9084906138be565b90915550505b81158015906124ad575060028501546001600160a01b03163314155b1561157457604051638173c76360e01b815260040160405180910390fd5b6000806124e2846124dd85600a613d32565b6127f3565b90508084131561250f576124f68185613138565b85600301600082825461250991906133c6565b90915550505b949350505050565b6020808301516000908152600580835260408083208151610140810183528154815260018201548187015260028201546001600160a01b039081168285015260038301546060830152600483015460808301529382015460a0820152600682015460c082015282518084019093526007820154835260088201549583019590955260e0850191909152600981015460ff161515610100850152600a015461012084015290548251911690635393e780906125d08561311c565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561260e57600080fd5b505af1158015612622573d6000803e3d6000fd5b505060025460408601516105d393506001600160a01b0390911691508461147b565b6000604051602001612655906136be565b604051602081830303815290604052805190602001206126788360000151612843565b83602001518460400151856060015186608001518760a001518860c001516040516020016126ad989796959493929190613d41565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146126f557604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156101085760405163387b2e5560e11b815260040160405180910390fd5b6000805460208301516040516318e8074960e01b8152600481019190915282916001600160a01b0316906318e8074990602401602060405180830381865afa15801561276b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278f9190613d9f565b6001600160a01b031690506000600160601b6127ab838061315f565b6127b5919061318c565b905060646127c482600c6131a0565b6127ce91906131d0565b60e08501516020810151905191945010156127ea575050919050565b61250f8361311c565b60008083131561281b578161280a846001856128ad565b612814919061315f565b90506105e4565b816128306128288561311c565b6001856128cb565b61283a919061315f565b6128149061311c565b6000604051806080016040528060478152602001613deb6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c0016126ad565b60008260001904841183021582026128c457600080fd5b5091020490565b60008260001904841183021582026128e257600080fd5b50910281810615159190040190565b6040518060e001604052806129356040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060e001604052806129786129fb565b81526020016000815260200160006001600160401b03168152602001600081526020016000815260200160006001600160a01b03168152602001606081525090565b6040518060a001604052806129cd6129fb565b815260200160006001600160a01b031681526020016000815260200160008019168152602001606081525090565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b600060208284031215612a4757600080fd5b5035919050565b60008060408385031215612a6157600080fd5b50508035926020909101359150565b8151815260208083015190820152604081016105e4565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612abf57612abf612a87565b60405290565b60405160e081016001600160401b0381118282101715612abf57612abf612a87565b60405160c081016001600160401b0381118282101715612abf57612abf612a87565b60405160a081016001600160401b0381118282101715612abf57612abf612a87565b604051608081016001600160401b0381118282101715612abf57612abf612a87565b604051606081016001600160401b0381118282101715612abf57612abf612a87565b60405161022081016001600160401b0381118282101715612abf57612abf612a87565b60405161016081016001600160401b0381118282101715612abf57612abf612a87565b604051601f8201601f191681016001600160401b0381118282101715612bdd57612bdd612a87565b604052919050565b60006001600160401b03821115612bfe57612bfe612a87565b50601f01601f191660200190565b600082601f830112612c1d57600080fd5b8135612c30612c2b82612be5565b612bb5565b818152846020838601011115612c4557600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461010857600080fd5b8035612c8281612c62565b919050565b600060408284031215612c9957600080fd5b612ca1612a9d565b90508135612cae81612c62565b815260208201356001600160401b03811115612cc957600080fd5b612cd584828501612c0c565b60208301525092915050565b600080600060608486031215612cf657600080fd5b8335925060208401356001600160401b0380821115612d1457600080fd5b9085019060408288031215612d2857600080fd5b612d30612a9d565b823582811115612d3f57600080fd5b612d4b89828601612c0c565b825250602083013582811115612d6057600080fd5b612d6c89828601612c0c565b60208301525093506040860135915080821115612d8857600080fd5b50612d9586828701612c87565b9150509250925092565b60008060408385031215612db257600080fd5b8235915060208301356001600160401b03811115612dcf57600080fd5b612ddb85828601612c87565b9150509250929050565b6000818303610180811215612df957600080fd5b612e01612ac5565b915060c0811215612e1157600080fd5b50612e1a612ae7565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215612eae57600080fd5b82356001600160401b0380821115612ec557600080fd5b9084019060a08287031215612ed957600080fd5b612ee1612b09565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612f1557600080fd5b612f2188828601612c0c565b608083015250809450505050612f3a8460208501612de5565b90509250929050565b600060808284031215612f5557600080fd5b612f5d612b2b565b90508135612f6a81612c62565b81526020820135612f7a81612c62565b80602083015250604082013560408201526060820135606082015292915050565b6001600160401b038116811461010857600080fd5b8035612c8281612f9b565b600080600060608486031215612fd057600080fd5b83356001600160401b0380821115612fe757600080fd5b908501906101408288031215612ffc57600080fd5b613004612ac5565b61300e8884612f43565b81526080830135602082015261302660a08401612fb0565b604082015260c0830135606082015260e0830135608082015261304c6101008401612c77565b60a08201526101208301358281111561306457600080fd5b61307089828601612c0c565b60c0830152509450602086013591508082111561308c57600080fd5b5061309986828701612c87565b9250506130a860408501612c77565b90509250925092565b6000606082840312156130c357600080fd5b6130cb612b4d565b8251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156130ff57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161313157613131613106565b5060000390565b818103600083128015838313168383128216171561315857613158613106565b5092915050565b80820281158282048414176105e4576105e4613106565b634e487b7160e01b600052601260045260246000fd5b60008261319b5761319b613176565b500490565b80820260008212600160ff1b841416156131bc576131bc613106565b81810583148215176105e4576105e4613106565b6000826131df576131df613176565b600160ff1b8214600019841416156131f9576131f9613106565b500590565b80518015158114612c8257600080fd5b60006020828403121561322057600080fd5b610c5d826131fe565b60006001820161323b5761323b613106565b5060010190565b60005b8381101561325d578181015183820152602001613245565b50506000910152565b6000815180845261327e816020860160208601613242565b601f01601f19169290920160200192915050565b60006101a0808352845160018060a01b038082511683860152806020830151166101c08601525060408101516101e085015260608101516102008501525050602084015161022083015260408401516132f76102408401826001600160401b03169052565b506060840151610260830152608084015161028083015260a08401516001600160a01b03166102a083015260c08401516101406102c084015261333e6102e0840182613266565b915050610c5d60208301848051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b808201828112600083128015821682158216171561239457612394613106565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261342a60e0840182613266565b9050828103602084015260018060a01b0384511681526020840151604060208301526134596040830182613266565b9695505050505050565b600081830361018081121561347757600080fd5b61347f612ac5565b60c082121561348d57600080fd5b613495612ae7565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6000825161352d818460208701613242565b9190910192915050565b808201808211156105e4576105e4613106565b8051612c8281612c62565b60006080828403121561356757600080fd5b61356f612b2b565b9050815161357c81612c62565b8152602082015161358c81612c62565b80602083015250604082015160408201526060820151606082015292915050565b8051612c8281612f9b565b600082601f8301126135c957600080fd5b81516135d7612c2b82612be5565b8181528460208386010111156135ec57600080fd5b61250f826020830160208701613242565b60006020828403121561360f57600080fd5b81516001600160401b038082111561362657600080fd5b90830190610140828603121561363b57600080fd5b613643612ac5565b61364d8684613555565b81526080830151602082015261366560a084016135ad565b604082015260c0830151606082015260e0830151608082015261368b610100840161354a565b60a0820152610120830151828111156136a357600080fd5b6136af878286016135b8565b60c08301525095945050505050565b690a0cae4e09ee4c8cae4560b31b81526e13dc99195c925b999bc81a5b999bcb608a1b600a820152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b60198201526d1d5a5b9d0d8d081c185a5c92590b60921b602c820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b603a820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b604d8201527f616464726573732076616c696461746f7241646472657373000000000000000060618201527462797465732076616c69646174696f6e446174612960581b6079820152608e0190565b600083516137ae818460208801613242565b8351908301906137c2818360208801613242565b01949350505050565b71506572704f72646572207769746e6573732960701b8152600083516137f8816012850160208801613242565b83519083019061380f816012840160208801613242565b01601201949350505050565b600061014061383e838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152613872608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261389c81840186613266565b90508281036101208401526138b18185613266565b9998505050505050505050565b818103818111156105e4576105e4613106565b6000608082840312156138e357600080fd5b6138eb612b2b565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561392957600080fd5b613931612ae7565b9150825161393e81612c62565b8252602083015161394e81612c62565b602083015260c0603f198201121561396557600080fd5b5061396e612ae7565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a0820152806040830152506139bc8361010084016138d1565b606082015261018082015160808201526101a082015160a082015292915050565b8051600281900b8114612c8257600080fd5b600060608284031215613a0157600080fd5b613a09612b4d565b905081518152613a1b602083016139dd565b6020820152613a2c604083016139dd565b604082015292915050565b600060408284031215613a4957600080fd5b613a51612a9d565b9050815181526020820151602082015292915050565b60006102608284031215613a7a57600080fd5b613a82612b6f565b9050613a8d8261354a565b8152613a9b602083016139dd565b6020820152613aac604083016139dd565b6040820152613abd606083016135ad565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a0613b3084828501613a37565b908201526101e0613b4384848301613a37565b6101c08301526102208301519082015261024090910151610200820152919050565b805160ff81168114612c8257600080fd5b60006107208284031215613b8957600080fd5b613b91612b92565b82518152613ba16020840161354a565b6020820152613bb26040840161354a565b6040820152613bc48460608501613915565b6060820152613bd7846102208501613915565b6080820152613bea846103e085016139ef565b60a0820152613bfd846104408501613a67565b60c0820152613c0f6106a0840161354a565b60e0820152613c216106c084016131fe565b610100820152613c346106e08401613b65565b610120820152610700929092015161014083015250919050565b600181815b80851115613c89578160001904821115613c6f57613c6f613106565b80851615613c7c57918102915b93841c9390800290613c53565b509250929050565b600082613ca0575060016105e4565b81613cad575060006105e4565b8160018114613cc35760028114613ccd57613ce9565b60019150506105e4565b60ff841115613cde57613cde613106565b50506001821b6105e4565b5060208310610133831016604e8410600b8410161715613d0c575081810a6105e4565b613d168383613c4e565b8060001904821115613d2a57613d2a613106565b029392505050565b6000610c5d60ff841683613c91565b60006101008a83528960208401528860408401526001600160401b03881660608401528660808401528560a084015260018060a01b03851660c08401528060e0840152613d9081840185613266565b9b9a5050505050505050505050565b600060208284031215613db157600080fd5b8151610c5d81612c6256fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a2646970667358221220e749c3b81abd65539520ac905b54b9ea59fdb84b4f9fd83b4ecd866960d7b2c364736f6c63430008130033";

type PerpMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerpMarket__factory extends ContractFactory {
  constructor(...args: PerpMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _predyPool: PromiseOrValue<string>,
    quoteTokenAddress: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PerpMarket> {
    return super.deploy(
      _predyPool,
      quoteTokenAddress,
      permit2Address,
      overrides || {}
    ) as Promise<PerpMarket>;
  }
  override getDeployTransaction(
    _predyPool: PromiseOrValue<string>,
    quoteTokenAddress: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _predyPool,
      quoteTokenAddress,
      permit2Address,
      overrides || {}
    );
  }
  override attach(address: string): PerpMarket {
    return super.attach(address) as PerpMarket;
  }
  override connect(signer: Signer): PerpMarket__factory {
    return super.connect(signer) as PerpMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpMarketInterface {
    return new utils.Interface(_abi) as PerpMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpMarket {
    return new Contract(address, _abi, signerOrProvider) as PerpMarket;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PerpMarket, PerpMarketInterface } from "../PerpMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPredyPool",
        name: "_predyPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "permit2Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFiller",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotPredyPool",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "FillerPoolIsNotSafe",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "MarginIsNegative",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerIsNotVaultOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "UserMarginIsNegative",
    type: "error",
  },
  {
    inputs: [],
    name: "UserPositionIsNotDanger",
    type: "error",
  },
  {
    inputs: [],
    name: "UserPositionIsNotSafe",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "fundingFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "fillerFundingFee",
        type: "int256",
      },
    ],
    name: "FundingPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    name: "PositionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "addFillerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
    ],
    name: "close",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "perpTradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
    ],
    name: "confirmLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginAmount",
        type: "uint256",
      },
    ],
    name: "depositMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "depositToFillerPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "execLiquidationCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct IFillerMarket.SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "executeOrder",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "entryUpdate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "payoff",
            type: "int256",
          },
        ],
        internalType: "struct PerpMarket.PerpTradeResult",
        name: "perpTradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fillers",
    outputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "fillerAddress",
        type: "address",
      },
      {
        internalType: "int256",
        name: "marginAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fillercumulativeFundingRates",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "fundingRateGrobalGrowth",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastFundingRateCalculationTime",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "totalLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalShortAmount",
            type: "uint256",
          },
        ],
        internalType: "struct PerpMarket.TotalPosition",
        name: "totalPosition",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLiquidated",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "liquidationPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positionCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pairId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "tradeAmountSqrt",
            type: "int256",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IPredyPool.TradeParams",
        name: "tradeParams",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "perpEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateUnderlying",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateStable",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "perpPayoff",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtPayoff",
                type: "int256",
              },
            ],
            internalType: "struct IPredyPool.Payoff",
            name: "payoff",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "fee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minMargin",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "averagePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "sqrtTwap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sqrtPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPredyPool.TradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    name: "predyTradeAfterCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "userPositions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fillerMarketId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int256",
        name: "positionAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "entryValue",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "marginAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "cumulativeFundingRates",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillerPoolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawFromFillerPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marginAmount",
        type: "uint256",
      },
    ],
    name: "withdrawMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200398538038062003985833981016040819052620000349162000093565b600080546001600160a01b039485166001600160a01b031991821617909155600280549385169382169390931790925560018054919093169116178155600355620000e7565b6001600160a01b03811681146200009057600080fd5b50565b600080600060608486031215620000a957600080fd5b8351620000b6816200007a565b6020850151909350620000c9816200007a565b6040850151909250620000dc816200007a565b809150509250925092565b61388e80620000f76000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063596c89761161008c57806382091a6b1161006657806382091a6b1461020757806386f9f114146102f4578063944b560b14610307578063e3c25ff51461031a57600080fd5b8063596c8976146101cb5780635d6ffea4146101eb57806373cddc5a146101f457600080fd5b80630cea7534146100d457806319bd1776146100d45780631e7f1370146100e757806337ec56ea1461018457806337fc71c31461019757806347421334146101aa575b600080fd5b6100e56100e2366004612611565b50565b005b61013c6100f5366004612611565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600690950154939592946001600160a01b039092169390919087565b6040805197885260208801969096526001600160a01b03909416948601949094526060850191909152608084015260a083019190915260c082015260e0015b60405180910390f35b6100e5610192366004612611565b61032d565b6100e56101a536600461262a565b610472565b6101bd6101b8366004612611565b61058c565b60405190815260200161017b565b6101de6101d936600461262a565b61059e565b60405161017b919061264c565b6101bd60035481565b6101de6102023660046128da565b6106de565b61028b610215366004612611565b600560208181526000928352604092839020805460018201546002830154600384015460048501549685015460068601548951808b01909a5260078701548a526008870154978a01979097526009860154600a90960154949893976001600160a01b0390931696919592949093919260ff16908a565b604080519a8b526020808c019a909a526001600160a01b03909816978a01979097526060890195909552608088019390935260a087019190915260c0860152805160e086015292909201516101008401529015156101208301526101408201526101600161017b565b6100e5610302366004612998565b610c03565b6100e5610315366004612a93565b610e27565b6100e561032836600461262a565b610e56565b6000818152600560205260408082208254815492516349ebb77d60e01b81529193926001600160a01b03909116916349ebb77d916103719160040190815260200190565b606060405180830381865afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190612b3c565b9050806040015160001480156103d8575060078201541515806103d85750600882015415155b6103e157600080fd5b60008054600184015460405163acfcd9fd60e01b81526001600160a01b039092169163acfcd9fd916104199160040190815260200190565b602060405180830381865afa158015610436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045a9190612b78565b600a8401555050600901805460ff1916600117905550565b60008281526005602052604090206002015482906001600160a01b031633146104ae57604051638173c76360e01b815260040160405180910390fd5b600082116104bb57600080fd5b6000805484825260056020526040909120546001600160a01b0390911690635393e780906104e885612ba7565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b50505060008481526005602052604081206003018054859350909190610561908490612bc3565b90915550610570905083611032565b600254610587906001600160a01b0316338461120e565b505050565b6000610598823361130e565b92915050565b6105c260405180606001604052806000815260200160008152602001600081525090565b6000838152600560205260409020600981015460ff166106295760405162461bcd60e51b815260206004820152601860248201527f66696c6c6572206973206e6f74206c697175696461746564000000000000000060448201526064015b60405180910390fd5b6000838152600460205260408120600a830154909190600160601b9061064f9080612bea565b6106599190612c17565b90506000826003015461066b90612ba7565b90506000600160601b8361067e84612ba7565b6106889190612c2b565b6106929190612c5b565b90506106a0858884846113d4565b95506106ad8760006114a6565b60078501541580156106c157506008850154155b156106d35760098501805460ff191690555b505050505092915050565b61070260405180606001604052806000815260200160008152602001600081525090565b600254600090819061071e9086906001600160a01b03166115a7565b9150915061072b81611637565b60008260a0015113156108315760025460005460a084015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190612c9e565b506000805487825260056020526040918290205460a0850151925162a727cf60e71b8152600481019190915260248101929092526001600160a01b031690635393e78090604401600060405180830381600087803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b505050505b81602001516000036108ab576003805460208481018281526000838152600483526040808220949094558651909201518151835283832060020180546001600160a01b0319166001600160a01b03909216919091179055518152908120600101889055815491906108a183612cb9565b919050555061096e565b60208083015160009081526004808352604091829020825160e0810184528154815260018201548186015260028201546001600160a01b0390811694820185905260038301546060830152928201546080820152600582015460a082015260069091015460c082015285519093015116146109395760405163708c545360e01b815260040160405180910390fd5b60056000826020015181526020019081526020016000206001015483604001516001600160401b03161461096c57600080fd5b505b6000868152600560209081526040808320858301518452600490925290912061099791906117d8565b61099f6124be565b6109ca60056000898152602001908152602001600020846020015185606001518660a00151896119d7565b90945090506109d887611032565b8260e001516001600160a01b0316630e136af584836040518363ffffffff1660e01b8152600401610a0a929190612d22565b60006040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050508260a0015160046000856020015181526020019081526020016000206005016000828254610a689190612e68565b90915550506020808401516000908152600490915260408120600501541215610aa457604051631129976760e21b815260040160405180910390fd5b602083810151600090815260048083526040808320815160e0810183528154815260018201549581019590955260028101546001600160a01b039081168684015260038201546060870152818401546080870152600582015460a087015260069091015460c0860152925481880151915163acfcd9fd60e01b81526001600160401b0390921692820192909252610b8a9392919091169063acfcd9fd90602401602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190612b78565b611b25565b610ba757604051635469b69360e11b815260040160405180910390fd5b610bb983602001518460a001516114a6565b7feb36d2079495738c781832ed54d512807f98195837b6dbacb76cfba115ac243c83602001518886604051610bf093929190612e88565b60405180910390a15050505b9392505050565b6000828152600460209081526040808320600181015484526005909252909120610c2d81836117d8565b60008054600183015460405163acfcd9fd60e01b81526001600160a01b039092169163acfcd9fd91610c659160040190815260200190565b602060405180830381865afa158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190612b78565b6040805160e081018252855481526001860154602082015260028601546001600160a01b0316918101919091526003850154606082015260048501546080820152600585015460a0820152600685015460c0820152909150610d089082611b25565b15610d265760405163456f3d3360e11b815260040160405180910390fd5b6000610d4383878660030154610d3b90612ba7565b6000896119d7565b50905060008160000151600160601b610d6e84604001518560200151610d699190612e68565b611bb9565b610d789190612bea565b610d829190612c5b565b90506127426000821315610dcc578181610d9e86612710612bea565b610da89190612c17565b1115610dc7576040516378eff95d60e11b815260040160405180910390fd5b610e14565b6000821215610e1457610dde82612ba7565b612710610deb8387612bea565b610df59190612c17565b1015610e14576040516378eff95d60e11b815260040160405180910390fd5b5050610e1f86611bd5565b505050505050565b6000546001600160a01b03163314610e5257604051637542ed5d60e11b815260040160405180910390fd5b5050565b60008281526005602052604090206002015482906001600160a01b03163314610e9257604051638173c76360e01b815260040160405180910390fd5b60008211610e9f57600080fd5b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1a9190612c9e565b5060008381526005602052604081206003018054849290610f3c908490612e68565b909155505060025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba9190612c9e565b5060008054848252600560205260409182902054915162a727cf60e71b81526004810192909252602482018490526001600160a01b031690635393e78090604401600060405180830381600087803b15801561101557600080fd5b505af1158015611029573d6000803e3d6000fd5b50505050505050565b60008181526005602081815260408084208151610140810183528154815260018201548185015260028201546001600160a01b03908116828501526003830154606083015260048084015460808401529583015460a0830152600683015460c0830152835180850185526007840154815260088401549581019590955260e0820194909452600982015460ff161515610100820152600a909101546101208201528454815192516349ebb77d60e01b81529485019290925293929116906349ebb77d90602401606060405180830381865afa158015611115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111399190612b3c565b60008054602085015160405163acfcd9fd60e01b8152600481019190915292935090916001600160a01b039091169063acfcd9fd90602401602060405180830381865afa15801561118e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b29190612b78565b90506000836060015112156111da576040516391dcf9e360e01b815260040160405180910390fd5b6111e48382611e55565b82602001511215611208576040516386548aef60e01b815260040160405180910390fd5b50505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161126a9190612eb7565b6000604051808303816000865af19150503d80600081146112a7576040519150601f19603f3d011682016040523d82523d6000602084013e6112ac565b606091505b50915091508180156112d65750805115806112d65750808060200190518101906112d69190612c9e565b6113075760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610620565b5050505050565b6000805460405163e5fbab8560e01b8152600481018390526024810185905282916001600160a01b03169063e5fbab85906044016020604051808303816000875af1158015611361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113859190612b78565b6000818152600560205260409020818155600181018690556002810180546001600160a01b0319166001600160a01b038716179055426006820155600901805460ff1916905591505092915050565b6113f860405180606001604052806000815260200160008152602001600081525090565b60008481526004602081905260409091208483526003810154918101549091611422918686611fd9565b604084015260208301819052600482018054600090611442908490612e68565b92505081905550611458868260030154866120ac565b8381600301600082825461146c9190612e68565b9091555050604082015160058201805460009061148a908490612e68565b9091555050600590950154600690950194909455509192915050565b6000828152600460205260408120600381015490910361153757600081600501541315610587576005810180546000918290556040805160e081018252845481526001850154602082015260028501546001600160a01b031691810191909152600384015460608201526004840154608082015260a0810192909252600683015460c08301529061120890826121db565b6000821215610587576040805160e081018252825481526001830154602082015260028301546001600160a01b0316918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152610587906115a284612ba7565b6121db565b6115af612532565b6115b7612596565b83600001518060200190518101906115cf9190612f92565b91506000808360a00151136115e55760006115eb565b8260a001515b9050826040518060a0016040528085600001518152602001866001600160a01b0316815260200183815260200161162186612308565b8152602097880151970196909652959350505050565b6116408161238d565b6001546001600160a01b031663137c29fe6116c6836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b604080518082018252600080825260209182015281518083018352308152918601519082015284600001516020015185606001516040516020016117099061306c565b60408051601f19818403018152608083019091526047808352909190613812602083013960405160200161173e929190613163565b60408051601f1981840301815260608301909152602e8083529091906137e46020830139604051602001611773929190613192565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b1683526117aa96959493926004016131e5565b600060405180830381600087803b1580156117c457600080fd5b505af1158015611307573d6000803e3d6000fd5b6301e133808260060154426117ed9190613288565b604080516101408101825285548152600186015460208083019190915260028701546001600160a01b0316828401526003870154606083015260048701546080830152600587015460a0830152600687015460c083015282518084019093526007870154835260088701549083015260e0810191909152600985015460ff161515610100820152600a850154610120820152611888906123de565b6118929190612c2b565b61189c9190612c5b565b8260050160008282546118af9190612e68565b925050819055504282600601819055506000600160601b8260030154836006015485600501546118df9190612bc3565b6118e99190612c2b565b6118f39190612c5b565b9050808260050160008282546119099190612e68565b90915550506005830154600683015560078301546008840154600091600160601b916119359190612bc3565b856004015486600501546119499190612bc3565b6119539190612c2b565b61195d9190612c5b565b9050808460030160008282546119739190612e68565b909155505060058401546004850155825460018401546040805192835260208301919091528101839052606081018290527f5268bd312578794f4cd0a1cd8c66ca294cf24778519f4dec9aafff70494da6de9060800160405180910390a150505050565b6119fb60405180606001604052806000815260200160008152602001600081525090565b611a036124be565b60008054906101000a90046001600160a01b03166001600160a01b0316639b819b306040518060a001604052808a6001015481526020018a6000015481526020018881526020016000815260200187604051602001611a6491815260200190565b604051602081830303815290604052815250856040518363ffffffff1660e01b8152600401611a9492919061329b565b610180604051808303816000875af1158015611ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad89190613318565b90508060400151876003016000828254611af29190612e68565b9091555050805160808101519051611b1991899189918991611b149190612e68565b6113d4565b91509550959350505050565b6000806060611b348480612bea565b901c905060008460800151600160601b838760600151611b549190612c2b565b611b5e9190612c5b565b8660a00151611b6d9190612e68565b611b779190612e68565b90506000611b8a600160601b6032612bea565b83611b988860600151611bb9565b611ba29190612c2b565b611bac9190612c5b565b9091121595945050505050565b600080821215611bd157611bcc82612ba7565b610598565b5090565b60008181526004602052604081206003810154909103610e5257600081600501541315611c66576005810180546000918290556040805160e081018252845481526001850154602082015260028501546001600160a01b031691810191909152600384015460608201526004840154608082015260a0810192909252600683015460c08301529061058790826121db565b600081600501541215610e52576001810154600090815260056020526040902060028101546001600160a01b03163303611cd5578160050154816003016000828254611cb29190612e68565b9091555050600381015460001315611cc957600080fd5b60006005830155505050565b60008260050154611ce590612ba7565b600060058501556002546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d689190612c9e565b5060025460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015611dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de29190612c9e565b50600054825460405162a727cf60e71b81526001600160a01b0390921691635393e78091611e1d918590600401918252602082015260400190565b600060405180830381600087803b158015611e3757600080fd5b505af1158015611e4b573d6000803e3d6000fd5b5050505050505050565b60008054602084015160405163324abcfb60e21b8152600481019190915282916001600160a01b03169063c92af3ec9060240161072060405180830381865afa158015611ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eca9190613675565b905060006060611eda8580612bea565b60e0870151602081015190519190921c92501115611f6c5760a0820151516000906305f5e10090611f0b9080612bea565b611f159190612c17565b9050600081611f286305f5e10082613288565b611f329085612bea565b611f3c9190612c17565b9050600160601b818860e0015160000151611f579190612bea565b611f619190612c17565b945050505050610598565b60a0820151516000906305f5e10090611f859080612bea565b611f8f9190612c17565b905060006305f5e100611fa28184613288565b611fac9085612bea565b611fb69190612c17565b9050600160601b818860e0015160200151611f579190612bea565b505092915050565b60008083600003611fef575060009050806120a3565b6000611ffb8588612c2b565b12612008578291506120a3565b61201184611bb9565b61201a87611bb9565b1061204d5760008661202c8688612c2b565b6120369190612c5b565b92508290506120458185612bc3565b9150506120a3565b600061205886612ba7565b9050600085612067818a612e68565b6120719087612c2b565b61207b9190612c5b565b90506120878183612e68565b9350806120948387612bc3565b61209e9190612bc3565b925050505b94509492505050565b600080806120ba8486612c2b565b126120c7578291506120fd565b6120d083611bb9565b6120d985611bb9565b106120e55750816120fd565b6120ef8385612e68565b91506120fa84612ba7565b90505b6000821315612123578185600701600001600082825461211d919061374d565b90915550505b600082121561214f5761213582612ba7565b60088601805460009061214990849061374d565b90915550505b6000811315612175578085600701600101600082825461216f9190613288565b90915550505b60008112156121a15761218781612ba7565b60078601805460009061219b908490613288565b90915550505b81158015906121bd575060028501546001600160a01b03163314155b1561130757604051638173c76360e01b815260040160405180910390fd5b6020808301516000908152600580835260408083208151610140810183528154815260018201548187015260028201546001600160a01b039081168285015260038301546060830152600483015460808301529382015460a0820152600682015460c082015282518084019093526007820154835260088201549583019590955260e0850191909152600981015460ff161515610100850152600a015461012084015290548251911690635393e7809061229485612ba7565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b1580156122d257600080fd5b505af11580156122e6573d6000803e3d6000fd5b5050600254604086015161058793506001600160a01b0390911691508461120e565b60006040516020016123199061306c565b6040516020818303038152906040528051906020012082602001518360400151846060015185608001518660a001518760c001518860e0015189610100015160405160200161237099989796959493929190613760565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146123b857604051639db8d5b160e01b815260040160405180910390fd5b8051606001514211156100e25760405163387b2e5560e11b815260040160405180910390fd5b6000805460208301516040516318e8074960e01b8152600481019190915282916001600160a01b0316906318e8074990602401602060405180830381865afa15801561242e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245291906137c6565b6001600160a01b031690506000600160601b61246e8380612bea565b6124789190612c17565b9050606461248782600c612c2b565b6124919190612c5b565b60e08501516020810151905191945010156124ad575050919050565b6124b683612ba7565b949350505050565b6040518060e001604052806125026040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518061012001604052806125466125d7565b81526020016000815260200160006001600160401b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001606081525090565b6040518060a001604052806125a96125d7565b815260200160006001600160a01b031681526020016000815260200160008019168152602001606081525090565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b60006020828403121561262357600080fd5b5035919050565b6000806040838503121561263d57600080fd5b50508035926020909101359150565b81518152602080830151908201526040808301519082015260608101610598565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156126a5576126a561266d565b60405290565b60405160e081016001600160401b03811182821017156126a5576126a561266d565b60405160c081016001600160401b03811182821017156126a5576126a561266d565b60405160a081016001600160401b03811182821017156126a5576126a561266d565b604051606081016001600160401b03811182821017156126a5576126a561266d565b604051608081016001600160401b03811182821017156126a5576126a561266d565b60405161012081016001600160401b03811182821017156126a5576126a561266d565b60405161022081016001600160401b03811182821017156126a5576126a561266d565b60405161016081016001600160401b03811182821017156126a5576126a561266d565b604051601f8201601f191681016001600160401b03811182821017156127e6576127e661266d565b604052919050565b60006001600160401b038211156128075761280761266d565b50601f01601f191660200190565b600082601f83011261282657600080fd5b8135612839612834826127ee565b6127be565b81815284602083860101111561284e57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b03811681146100e257600080fd5b60006040828403121561289257600080fd5b61289a612683565b905081356128a78161286b565b815260208201356001600160401b038111156128c257600080fd5b6128ce84828501612815565b60208301525092915050565b6000806000606084860312156128ef57600080fd5b8335925060208401356001600160401b038082111561290d57600080fd5b908501906040828803121561292157600080fd5b612929612683565b82358281111561293857600080fd5b61294489828601612815565b82525060208301358281111561295957600080fd5b61296589828601612815565b6020830152509350604086013591508082111561298157600080fd5b5061298e86828701612880565b9150509250925092565b600080604083850312156129ab57600080fd5b8235915060208301356001600160401b038111156129c857600080fd5b6129d485828601612880565b9150509250929050565b60008183036101808112156129f257600080fd5b6129fa6126ab565b915060c0811215612a0a57600080fd5b50612a136126cd565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528082525060c0820135602082015260e082013560408201526101008201356060820152610120820135608082015261014082013560a082015261016082013560c082015292915050565b6000806101a08385031215612aa757600080fd5b82356001600160401b0380821115612abe57600080fd5b9084019060a08287031215612ad257600080fd5b612ada6126ef565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612b0e57600080fd5b612b1a88828601612815565b608083015250809450505050612b3384602085016129de565b90509250929050565b600060608284031215612b4e57600080fd5b612b56612711565b8251815260208301516020820152604083015160408201528091505092915050565b600060208284031215612b8a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201612bbc57612bbc612b91565b5060000390565b8181036000831280158383131683831282161715612be357612be3612b91565b5092915050565b808202811582820484141761059857610598612b91565b634e487b7160e01b600052601260045260246000fd5b600082612c2657612c26612c01565b500490565b80820260008212600160ff1b84141615612c4757612c47612b91565b818105831482151761059857610598612b91565b600082612c6a57612c6a612c01565b600160ff1b821460001984141615612c8457612c84612b91565b500590565b80518015158114612c9957600080fd5b919050565b600060208284031215612cb057600080fd5b610bfc82612c89565b600060018201612ccb57612ccb612b91565b5060010190565b60005b83811015612ced578181015183820152602001612cd5565b50506000910152565b60008151808452612d0e816020860160208601612cd2565b601f01601f19169290920160200192915050565b6101a0808252835180516001600160a01b03908116848401526020820151166101c084015260408101516101e08401526060015161020083015260009050602084015161022083015260408401516001600160401b038116610240840152506060840151610260830152608084015161028083015260a08401516102a083015260c08401516102c083015260e08401516001600160a01b0381166102e084015250610100840151610180610300840152612de0610320840182612cf6565b915050610bfc60208301848051805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a084015250602081015160c0830152604081015160e08301526060810151610100830152608081015161012083015260a081015161014083015260c08101516101608301525050565b8082018281126000831280158216821582161715611fd157611fd1612b91565b8381526020810183905260a081016124b660408301848051825260208082015190830152604090810151910152565b60008251612ec9818460208701612cd2565b9190910192915050565b8051612c998161286b565b600060808284031215612ef057600080fd5b612ef8612733565b90508151612f058161286b565b81526020820151612f158161286b565b80602083015250604082015160408201526060820151606082015292915050565b80516001600160401b0381168114612c9957600080fd5b600082601f830112612f5e57600080fd5b8151612f6c612834826127ee565b818152846020838601011115612f8157600080fd5b6124b6826020830160208701612cd2565b600060208284031215612fa457600080fd5b81516001600160401b0380821115612fbb57600080fd5b908301906101808286031215612fd057600080fd5b612fd8612755565b612fe28684612ede565b815260808301516020820152612ffa60a08401612f36565b604082015260c0830151606082015260e083015160808201526101008084015160a083015261012084015160c08301526130376101408501612ed3565b60e08301526101608401518381111561304f57600080fd5b61305b88828701612f4d565b918301919091525095945050505050565b6c08ecadccae4c2d89ee4c8cae45609b1b8152721d5a5b9d0c8d4d881c1bdcda5d1a5bdb92590b606a1b600d8201526d1d5a5b9d0d8d081c185a5c92590b60921b6020820152721a5b9d0c8d4d881d1c985919505b5bdd5b9d0b606a1b602e8201527f696e74323536207472616465416d6f756e74537172742c0000000000000000006041820152731a5b9d0c8d4d881b585c99da5b905b5bdd5b9d0b60621b60588201527f75696e74323536206d617267696e526174696f616464726573732076616c6964606c8201527f61746f724164647265737362797465732076616c69646174696f6e4461746129608c82015260ac0190565b60008351613175818460208801612cd2565b835190830190613189818360208801612cd2565b01949350505050565b7447656e6572616c4f72646572207769746e6573732960581b8152600083516131c2816015850160208801612cd2565b8351908301906131d9816015840160208801612cd2565b01601501949350505050565b6000610140613208838a5180516001600160a01b03168252602090810151910152565b602089015160408401526040890151606084015261323c608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261326681840186612cf6565b905082810361012084015261327b8185612cf6565b9998505050505050505050565b8181038181111561059857610598612b91565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526132df60e0840182612cf6565b9050828103602084015260018060a01b03845116815260208401516040602083015261330e6040830182612cf6565b9695505050505050565b600081830361018081121561332c57600080fd5b6133346126ab565b60c082121561334257600080fd5b61334a6126cd565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c0820152809250505092915050565b6000608082840312156133e257600080fd5b6133ea612733565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60008183036101c081121561342857600080fd5b6134306126cd565b9150825161343d8161286b565b8252602083015161344d8161286b565b602083015260c0603f198201121561346457600080fd5b5061346d6126cd565b60408301518152606083015160208201526080830151604082015260a0830151606082015260c0830151608082015260e083015160a0820152806040830152506134bb8361010084016133d0565b606082015261018082015160808201526101a082015160a082015292915050565b8051600281900b8114612c9957600080fd5b60006060828403121561350057600080fd5b613508612711565b90508151815261351a602083016134dc565b602082015261352b604083016134dc565b604082015292915050565b60006040828403121561354857600080fd5b613550612683565b9050815181526020820151602082015292915050565b6000610260828403121561357957600080fd5b613581612778565b905061358c82612ed3565b815261359a602083016134dc565b60208201526135ab604083016134dc565b60408201526135bc60608301612f36565b60608201526080828101519082015260a0808301519082015260c0808301519082015260e08083015190820152610100808301519082015261012080830151908201526101408083015190820152610160808301519082015261018080830151908201526101a061362f84828501613536565b908201526101e061364284848301613536565b6101c08301526102208301519082015261024090910151610200820152919050565b805160ff81168114612c9957600080fd5b6000610720828403121561368857600080fd5b61369061279b565b825181526136a060208401612ed3565b60208201526136b160408401612ed3565b60408201526136c38460608501613414565b60608201526136d6846102208501613414565b60808201526136e9846103e085016134ee565b60a08201526136fc846104408501613566565b60c082015261370e6106a08401612ed3565b60e08201526137206106c08401612c89565b6101008201526137336106e08401613664565b610120820152610700929092015161014083015250919050565b8082018082111561059857610598612b91565b60006101208b83528a60208401526001600160401b038a1660408401528860608401528760808401528660a08401528560c084015260018060a01b03851660e0840152806101008401526137b681840185612cf6565b9c9b505050505050505050505050565b6000602082840312156137d857600080fd5b8151610bfc8161286b56fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a264697066735822122003fa2b0e2bfda2d911975640600426c23ef14df822e63adbd2b8d1594fcfb03d64736f6c63430008130033";

type PerpMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerpMarket__factory extends ContractFactory {
  constructor(...args: PerpMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _predyPool: PromiseOrValue<string>,
    quoteTokenAddress: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PerpMarket> {
    return super.deploy(
      _predyPool,
      quoteTokenAddress,
      permit2Address,
      overrides || {}
    ) as Promise<PerpMarket>;
  }
  override getDeployTransaction(
    _predyPool: PromiseOrValue<string>,
    quoteTokenAddress: PromiseOrValue<string>,
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _predyPool,
      quoteTokenAddress,
      permit2Address,
      overrides || {}
    );
  }
  override attach(address: string): PerpMarket {
    return super.attach(address) as PerpMarket;
  }
  override connect(signer: Signer): PerpMarket__factory {
    return super.connect(signer) as PerpMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpMarketInterface {
    return new utils.Interface(_abi) as PerpMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpMarket {
    return new Contract(address, _abi, signerOrProvider) as PerpMarket;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type {
  PredictMarketQuoter,
  PredictMarketQuoterInterface
} from '../PredictMarketQuoter'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract PredictMarket',
        name: '_perpMarket',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'predictMarket',
    outputs: [
      {
        internalType: 'contract PredictMarket',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'market',
                type: 'address'
              },
              {
                internalType: 'address',
                name: 'trader',
                type: 'address'
              },
              {
                internalType: 'uint256',
                name: 'nonce',
                type: 'uint256'
              },
              {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256'
              }
            ],
            internalType: 'struct OrderInfo',
            name: 'info',
            type: 'tuple'
          },
          {
            internalType: 'uint64',
            name: 'pairId',
            type: 'uint64'
          },
          {
            internalType: 'uint64',
            name: 'duration',
            type: 'uint64'
          },
          {
            internalType: 'address',
            name: 'entryTokenAddress',
            type: 'address'
          },
          {
            internalType: 'int256',
            name: 'tradeAmount',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'tradeAmountSqrt',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'marginAmount',
            type: 'uint256'
          },
          {
            internalType: 'address',
            name: 'validatorAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'validationData',
            type: 'bytes'
          }
        ],
        internalType: 'struct PredictOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'quoteExecuteOrder',
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'perpEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtEntryUpdate',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateUnderlying',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtRebalanceEntryUpdateStable',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'perpPayoff',
                type: 'int256'
              },
              {
                internalType: 'int256',
                name: 'sqrtPayoff',
                type: 'int256'
              }
            ],
            internalType: 'struct IPredyPool.Payoff',
            name: 'payoff',
            type: 'tuple'
          },
          {
            internalType: 'uint256',
            name: 'vaultId',
            type: 'uint256'
          },
          {
            internalType: 'int256',
            name: 'fee',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'minMargin',
            type: 'int256'
          },
          {
            internalType: 'int256',
            name: 'averagePrice',
            type: 'int256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtTwap',
            type: 'uint256'
          },
          {
            internalType: 'uint256',
            name: 'sqrtPrice',
            type: 'uint256'
          }
        ],
        internalType: 'struct IPredyPool.TradeResult',
        name: 'tradeResult',
        type: 'tuple'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  }
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161087c38038061087c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6107e9806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063212ff3de1461003b5780637e09f0aa146100d0575b600080fd5b61004e610049366004610478565b6100fb565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e0850152850151610100840152840151610120830152830151610140820152910151610160820152610180015b60405180910390f35b6000546100e3906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6101036101da565b600054604051631097f9ef60e11b81526001600160a01b039091169063212ff3de9061013590869086906004016105fb565b600060405180830381600087803b15801561014f57600080fd5b505af1925050508015610160575060015b6101a1573d80801561018e576040519150601f19603f3d011682016040523d82523d6000602084013e610193565b606091505b5061019d816101a7565b9150505b92915050565b6101af6101da565b60c0825110156101c157815182602001fd5b818060200190518101906101a191906106fb565b919050565b6040518060e0016040528061021e6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156102885761028861024e565b60405290565b60405160e0810167ffffffffffffffff811182821017156102885761028861024e565b60405160c0810167ffffffffffffffff811182821017156102885761028861024e565b80356001600160a01b03811681146101d557600080fd5b6000608082840312156102fd57600080fd5b6040516080810181811067ffffffffffffffff821117156103205761032061024e565b60405290508061032f836102d4565b815261033d602084016102d4565b602082015260408301356040820152606083013560608201525092915050565b803567ffffffffffffffff811681146101d557600080fd5b600082601f83011261038657600080fd5b813567ffffffffffffffff808211156103a1576103a161024e565b604051601f8301601f19908116603f011681019082821181831017156103c9576103c961024e565b816040528381528660208588010111156103e257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006040828403121561041457600080fd5b6040516040810167ffffffffffffffff82821081831117156104385761043861024e565b81604052829350610448856102d4565b8352602085013591508082111561045e57600080fd5b5061046b85828601610375565b6020830152505092915050565b6000806040838503121561048b57600080fd5b823567ffffffffffffffff808211156104a357600080fd5b9084019061018082870312156104b857600080fd5b6104c0610264565b6104ca87846102eb565b81526104d86080840161035d565b60208201526104e960a0840161035d565b60408201526104fa60c084016102d4565b606082015260e083013560808201526101008084013560a083015261012084013560c083015261052d61014085016102d4565b60e08301526101608401358381111561054557600080fd5b61055189828701610375565b82840152505080945050602085013591508082111561056f57600080fd5b5061057c85828601610402565b9150509250929050565b6000815180845260005b818110156105ac57602081850181015186830182015201610590565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b03815116825260006020820151604060208501526105f36040850182610586565b949350505050565b6040808252835180516001600160a01b0390811684840152602082015116606080850191909152918101516080840152015160a08201526000602084015161064f60c084018267ffffffffffffffff169052565b50604084015167ffffffffffffffff811660e0840152506060840151610100610682818501836001600160a01b03169052565b608086015161012085015260a086015161014085015260c086015161016085015260e086015191506101806106c1818601846001600160a01b03169052565b818701519250806101a086015250506106de6101c0840182610586565b905082810360208401526106f281856105cc565b95945050505050565b600081830361018081121561070f57600080fd5b61071761028e565b60c082121561072557600080fd5b61072d6102b1565b9150835182526020840151602083015260408401516040830152606084015160608301526080840151608083015260a084015160a083015281815260c0840151602082015260e084015160408201526101008401516060820152610120840151608082015261014084015160a082015261016084015160c082015280925050509291505056fea2646970667358221220fd90324ddd3c40835fd29d1eeaa89029357d7f1057b2f4d0040960e780dc921b64736f6c63430008130033'

type PredictMarketQuoterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: PredictMarketQuoterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class PredictMarketQuoter__factory extends ContractFactory {
  constructor(...args: PredictMarketQuoterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _perpMarket: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredictMarketQuoter> {
    return super.deploy(
      _perpMarket,
      overrides || {}
    ) as Promise<PredictMarketQuoter>
  }
  override getDeployTransaction(
    _perpMarket: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_perpMarket, overrides || {})
  }
  override attach(address: string): PredictMarketQuoter {
    return super.attach(address) as PredictMarketQuoter
  }
  override connect(signer: Signer): PredictMarketQuoter__factory {
    return super.connect(signer) as PredictMarketQuoter__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): PredictMarketQuoterInterface {
    return new utils.Interface(_abi) as PredictMarketQuoterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredictMarketQuoter {
    return new Contract(address, _abi, signerOrProvider) as PredictMarketQuoter
  }
}

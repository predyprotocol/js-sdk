/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PredyPool, PredyPoolInterface } from "../PredyPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "uniswapFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotVaultOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "CurrencyNotSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPairId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "locker",
        type: "address",
      },
    ],
    name: "LockedBy",
    type: "error",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultAlreadyHasAnotherMarginId",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultAlreadyHasAnotherPair",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultIsNotDanger",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedUniswapPools",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closeRatio",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "execLiquidationCall",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "perpEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateUnderlying",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateStable",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "perpPayoff",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtPayoff",
                type: "int256",
              },
            ],
            internalType: "struct IPredyPool.Payoff",
            name: "payoff",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "fee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minMargin",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "averagePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "sqrtTwap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sqrtPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPredyPool.TradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "getPairStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "marginId",
            type: "address",
          },
          {
            internalType: "address",
            name: "poolOwner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "supplyTokenAddress",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "totalCompoundDeposited",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalNormalDeposited",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalNormalBorrowed",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetScaler",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetGrowth",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "debtGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.AssetStatus",
                name: "tokenStatus",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "baseRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "kinkRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "slope1",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "slope2",
                    type: "uint256",
                  },
                ],
                internalType: "struct InterestRateModel.IRMParams",
                name: "irmParams",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "accumulatedProtocolRevenue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accumulatedCreatorRevenue",
                type: "uint256",
              },
            ],
            internalType: "struct Perp.AssetPoolStatus",
            name: "quotePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "address",
                name: "supplyTokenAddress",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "totalCompoundDeposited",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalNormalDeposited",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalNormalBorrowed",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetScaler",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetGrowth",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "debtGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.AssetStatus",
                name: "tokenStatus",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "baseRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "kinkRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "slope1",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "slope2",
                    type: "uint256",
                  },
                ],
                internalType: "struct InterestRateModel.IRMParams",
                name: "irmParams",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "accumulatedProtocolRevenue",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accumulatedCreatorRevenue",
                type: "uint256",
              },
            ],
            internalType: "struct Perp.AssetPoolStatus",
            name: "basePool",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "riskRatio",
                type: "uint256",
              },
              {
                internalType: "int24",
                name: "rangeSize",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "rebalanceThreshold",
                type: "int24",
              },
            ],
            internalType: "struct Perp.AssetRiskParams",
            name: "riskParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "uniswapPool",
                type: "address",
              },
              {
                internalType: "int24",
                name: "tickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "tickUpper",
                type: "int24",
              },
              {
                internalType: "uint64",
                name: "numRebalance",
                type: "uint64",
              },
              {
                internalType: "uint256",
                name: "totalAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowedAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastRebalanceTotalSquartAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastFee0Growth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastFee1Growth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowPremium0Growth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowPremium1Growth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee0Growth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee1Growth",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "positionAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastFeeGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.UserStatus",
                name: "rebalancePositionUnderlying",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "positionAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastFeeGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.UserStatus",
                name: "rebalancePositionStable",
                type: "tuple",
              },
              {
                internalType: "int256",
                name: "rebalanceFeeGrowthUnderlying",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "rebalanceFeeGrowthStable",
                type: "int256",
              },
            ],
            internalType: "struct Perp.SqrtPerpAssetStatus",
            name: "sqrtAssetStatus",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isMarginZero",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "feeRatio",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Perp.PairStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "getSqrtIndexPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
    ],
    name: "getSqrtPrice",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "getVault",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "marginId",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "recepient",
            type: "address",
          },
          {
            internalType: "int256",
            name: "margin",
            type: "int256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "pairId",
                type: "uint256",
              },
              {
                internalType: "int24",
                name: "rebalanceLastTickLower",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "rebalanceLastTickUpper",
                type: "int24",
              },
              {
                internalType: "uint64",
                name: "lastNumRebalance",
                type: "uint64",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "amount",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "entryValue",
                    type: "int256",
                  },
                ],
                internalType: "struct Perp.PositionStatus",
                name: "perp",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "amount",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "entryValue",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "quoteRebalanceEntryValue",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "baseRebalanceEntryValue",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryTradeFee0",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryTradeFee1",
                    type: "uint256",
                  },
                ],
                internalType: "struct Perp.SqrtPositionStatus",
                name: "sqrtPerp",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "positionAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastFeeGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.UserStatus",
                name: "underlying",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "positionAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "lastFeeGrowth",
                    type: "uint256",
                  },
                ],
                internalType: "struct ScaledAsset.UserStatus",
                name: "stable",
                type: "tuple",
              },
            ],
            internalType: "struct Perp.UserStatus",
            name: "openPosition",
            type: "tuple",
          },
        ],
        internalType: "struct DataType.Vault",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    name: "getVaultStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "vaultValue",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minMargin",
            type: "int256",
          },
        ],
        internalType: "struct IPredyPool.VaultStatus",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "globalData",
    outputs: [
      {
        internalType: "uint256",
        name: "pairsCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultCount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uniswapFactory",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "locker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "quoteReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseReserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pairId",
            type: "uint256",
          },
        ],
        internalType: "struct LockDataLibrary.LockData",
        name: "lockData",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "reallocate",
    outputs: [
      {
        internalType: "bool",
        name: "relocationOccurred",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marginId",
            type: "address",
          },
          {
            internalType: "address",
            name: "poolOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "uniswapPool",
            type: "address",
          },
          {
            internalType: "address",
            name: "priceFeed",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "fee",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "riskRatio",
                type: "uint256",
              },
              {
                internalType: "int24",
                name: "rangeSize",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "rebalanceThreshold",
                type: "int24",
              },
            ],
            internalType: "struct Perp.AssetRiskParams",
            name: "assetRiskParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "kinkRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
            ],
            internalType: "struct InterestRateModel.IRMParams",
            name: "stableIrmParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "kinkRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope1",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "slope2",
                type: "uint256",
              },
            ],
            internalType: "struct InterestRateModel.IRMParams",
            name: "underlyingIrmParams",
            type: "tuple",
          },
        ],
        internalType: "struct AddPairLogic.AddPairParams",
        name: "addPairParam",
        type: "tuple",
      },
    ],
    name: "registerPair",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isQuoteAsset",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "supplyAmount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "finalSuppliedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isQuoteAsset",
        type: "bool",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pairId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "tradeAmount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "tradeAmountSqrt",
            type: "int256",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct IPredyPool.TradeParams",
        name: "tradeParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "trade",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int256",
                name: "perpEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtEntryUpdate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateUnderlying",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtRebalanceEntryUpdateStable",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "perpPayoff",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "sqrtPayoff",
                type: "int256",
              },
            ],
            internalType: "struct IPredyPool.Payoff",
            name: "payoff",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "fee",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minMargin",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "averagePrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "sqrtTwap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sqrtPrice",
            type: "uint256",
          },
        ],
        internalType: "struct IPredyPool.TradeResult",
        name: "tradeResult",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "marginAmount",
        type: "int256",
      },
    ],
    name: "updateMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recepient",
        type: "address",
      },
    ],
    name: "updateRecepient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isQuoteAsset",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "finalBurnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finalWithdrawAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620047b6380380620047b68339810160408190526200003491620000bb565b600280546001600160a01b0319166001600160a01b03831617905560405163743b521360e11b81526000600482015273__$95910b7b93a5208ca27f4262a74795a535$__9063e876a4269060240160006040518083038186803b1580156200009b57600080fd5b505af4158015620000b0573d6000803e3d6000fd5b5050505050620000ed565b600060208284031215620000ce57600080fd5b81516001600160a01b0381168114620000e657600080fd5b9392505050565b6146b980620000fd6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80639b819b30116100a2578063c92af3ec11610071578063c92af3ec14610396578063d3487997146103b6578063db9d4a19146103c9578063e5fbab85146103dc578063f3eb8cd8146103ef57600080fd5b80639b819b301461034a578063ab4db3601461035d578063acfcd9fd14610370578063c6b6d3401461038357600080fd5b80635393e780116100e95780635393e780146101c4578063613ce410146101d95780637f223b4c1461027257806391d0370f1461029a5780639403b6341461032a57600080fd5b806318e807491461011b5780633b39b99d1461014b57806349ebb77d1461016c5780634e20a76e146101a1575b600080fd5b61012e610129366004613509565b610412565b6040516001600160a01b0390911681526020015b60405180910390f35b61015e610159366004613714565b610461565b604051908152602001610142565b61017f61017a366004613509565b6104e1565b6040805182518152602080840151908201529181015190820152606001610142565b6101b46101af3660046138a5565b610c4c565b6040519015158152602001610142565b6101d76101d23660046138eb565b610cd2565b005b600054600154600254604080516080810182526006546001600160a01b0390811682526007546020830152600854928201929092526009546060820152610224949392919091169084565b604080519485526020808601949094526001600160a01b039283168582015281519092166060808601919091529281015160808501529081015160a0840152015160c082015260e001610142565b61028561028036600461391b565b610d53565b60408051928352602083019190915201610142565b6102ad6102a8366004613953565b610ded565b60408051825180518252602080820151818401528184015183850152606080830151818501526080808401518186015260a093840151848601529186015160c0808601919091529486015160e085015285015161010084015284015161012083015283015161014082015291015161016082015261018001610142565b61033d610338366004613509565b610e7d565b60405161014291906139a2565b6102ad610358366004613ab6565b610fd6565b6101d761036b366004613b65565b611048565b61015e61037e366004613509565b6110a1565b6101d7610391366004613b95565b6113ae565b6103a96103a4366004613509565b6113fd565b6040516101429190613d6d565b6101d76103c4366004613e55565b61170d565b61015e6103d736600461391b565b611815565b61015e6103ea3660046138eb565b6118a2565b6101b46103fd366004613ed4565b600a6020526000908152604090205460ff1681565b60008181526003602052604081206021015461045b9061043a906001600160a01b03166118c4565b600084815260036020526040902060320154600160a01b900460ff16611935565b92915050565b604051635641324160e11b815260009073__$95910b7b93a5208ca27f4262a74795a535$__9063ac826482906104a0908490600a908790600401613ef1565b602060405180830381865af41580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190613fe6565b61050560405180606001604052806000815260200160008152602001600081525090565b6000806005016000848152602001908152602001600020600501600001549050600080610c296000600301600085815260200190815260200160002060405180610160016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600382016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601182016040518060c00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600882016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001600c8201548152602001600d820154815250508152602001601f8201604051806060016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81525050815260200160218201604051806102200160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460020b60020b60020b81526020016001820160009054906101000a90046001600160401b03166001600160401b03166001600160401b031681526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b8201604051806040016040529081600082015481526020016001820154815250508152602001600d8201604051806040016040529081600082015481526020016001820154815250508152602001600f820154815260200160108201548152505081526020016032820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016032820160149054906101000a900460ff161515151581526020016032820160159054906101000a900460ff1660ff1660ff1681526020016033820154815250506000600401600060050160008981526020019081526020016000206040518060c0016040529081600082015481526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016003820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600482015481526020016005820160405180610100016040529081600082015481526020016001820160009054906101000a900460020b60020b60020b81526020016001820160039054906101000a900460020b60020b60020b81526020016001820160069054906101000a90046001600160401b03166001600160401b03166001600160401b0316815260200160028201604051806040016040529081600082015481526020016001820154815250508152602001600482016040518060c001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250508152602001600a8201604051806040016040529081600082015481526020016001820154815250508152602001600c8201604051806040016040529081600082015481526020016001820154815250508152505081525050611962565b505060408051606081018252978852602088019190915286015250929392505050565b60405163f78c1fb560e01b815260009073__$82e740bfb21403018c74028207d6b78a82$__9063f78c1fb590610c8a90849087908790600401614076565b602060405180830381865af4158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb919061409e565b9392505050565b610cdd600083611a05565b5060405163f66f5cc760e01b815260006004820152602481018390526044810182905273__$dce61b2ba8cb2bacc386287dc451d94595$__9063f66f5cc79060640160006040518083038186803b158015610d3757600080fd5b505af4158015610d4b573d6000803e3d6000fd5b505050505050565b604051633e16468d60e01b81526000600482018190526024820185905260448201839052831515606483015290819073__$22e71cc2a9e9de4b2967c224ed91c7d01e$__90633e16468d906084016040805180830381865af4158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de191906140bb565b91509150935093915050565b610df5613187565b60405163fe8473e160e01b815273__$a1fa80d38d689cae49e54718da49b6432c$__9063fe8473e190610e33908790879060009088906004016140df565b61018060405180830381865af4158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e75919061410e565b949350505050565b610e856131fb565b50600090815260056020818152604092839020835160c080820186528254825260018301546001600160a01b039081168386015260028085015482168489015260038501549091166060808501919091526004850154608080860191909152885161010081018a52978601548852600686015480840b898901526301000000810490930b888a015266010000000000009092046001600160401b0316878201528751808901895260078601548152600886015481880152878301528751808401895260098601548152600a86015481880152600b860154818a0152600c86015491810191909152600d85015491810191909152600e84015460a0808301919091528087019190915286518088018852600f8501548152601085015481870152918601919091528551808701909652601183015486526012909201549285019290925260e08301939093529182015290565b610fde613187565b8251610fec90600090611a42565b6020830151835160009161100291839190611a72565b8054602086015260405163010bcadf60e21b815290915073__$bc9f384c073b2381249378965b2d698cf3$__9063042f2b7c90610e3390600090889088906004016141c6565b60006110548184611a05565b90506001600160a01b03821661107d5760405163e6c4247b60e01b815260040160405180910390fd5b60030180546001600160a01b0319166001600160a01b039290921691909117905550565b6000818152600360208181526040808420815161016080820184528254825260018301546001600160a01b0390811683870152600280850154821684870152855160c08082018852988601548316815260048601548316818901528651808a018852600587015481526006870154818a015260078701548189015260088701546060828101919091526009880154608080840191909152600a89015460a080850191909152848b019390935289518082018b52600b8a01548152600c8a0154818d0152600d8a0154818c0152600e8a01548184015284830152600f89015481850152601089015483850152818801939093528851808c018a5260118901548616815260128901548616818c01528951808d018b5260138a0154815260148a0154818d015260158a0154818c015260168a01548184015260178a01548186015260188a015481850152818b015289518085018b5260198a01548152601a8a0154818d0152601b8a0154818c0152601c8a01548184015281830152601d89015481850152601e890154818401528388015288518082018a52601f8901548152888b015480860b828d015263010000009004850b818b015282880152885161022081018a5260218901548087168252600160a01b808204870b838e0152600160b81b90910490950b818b015260228901546001600160401b0316918101919091526023880154928101929092526024870154908201526025860154818a0152602686015460e080830191909152602787015461010083810191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528951808b018b52602c8a01548152602d8a0154818d01526101a08501528951808b01909a52602e8901548a52602f8901549a8a019a909a526101c083019890985260308701546101e083015260318701546102008301529885015260328501549182169784019790975260ff9681048716151594830194909452600160a81b909304909416928401929092526033909101549082015261045b90611bab565b6006546001600160a01b03163381146113ea576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b6113f76000858585611c36565b50505050565b611405613251565b50600090815260036020818152604092839020835161016080820186528254825260018301546001600160a01b0390811683860152600280850154821684890152875160c08082018a529786015483168152600486015483168188015288518089018a52600587015481526006870154818901526007870154818b015260088701546060808301919091526009880154608080840191909152600a89015460a080850191909152848d01939093528b518082018d52600b8a01548152600c8a0154818c0152600d8a0154818e0152600e8a01548184015282850152600f89015481850152601089015483850152818801939093528a51808b018c5260118901548616815260128901548616818b01528b51808c018d5260138a0154815260148a0154818c015260158a0154818e015260168a01548184015260178a01548186015260188a015481850152818d01528b518085018d5260198a01548152601a8a0154818c0152601b8a0154818e0152601c8a01548184015281830152601d89015481850152601e89015481840152838801528a518082018c52601f8901548152888a015480860b828c015263010000009004850b818d0152828801528a5161022081018c5260218901548087168252600160a01b808204870b838d0152600160b81b90910490950b818d015260228901546001600160401b031691810191909152602388015492810192909252602487015490820152602586015481890152602686015460e080830191909152602787015461010080840191909152602888015461012080850191909152602989015461014080860191909152602a8a015497850197909752602b8901546101808501528b51808d018d52602c8a01548152602d8a0154818c01526101a08501528b51808d01909c52602e8901548c52602f890154998c01999099526101c083019a909a5260308701546101e083015260318701546102008301529785015260328501549182169684019690965294850460ff908116151596830196909652600160a81b90940490941691840191909152603301549082015290565b336000908152600a602052604090205460ff1661172957600080fd5b33841561179c5761179c816001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117959190614225565b3387611fdd565b831561180e5761180e816001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190614225565b3386611fdd565b5050505050565b604051633ec463bf60e01b8152600060048201819052602482018590526044820183905283151560648301529073__$22e71cc2a9e9de4b2967c224ed91c7d01e$";

type PredyPoolConstructorParams =
  | [linkLibraryAddresses: PredyPoolLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredyPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PredyPool__factory extends ContractFactory {
  constructor(...args: PredyPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PredyPool__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: PredyPoolLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$95910b7b93a5208ca27f4262a74795a535\\$__", "g"),
      linkLibraryAddresses["src/libraries/logic/AddPairLogic.sol:AddPairLogic"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$82e740bfb21403018c74028207d6b78a82\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/logic/ReallocationLogic.sol:ReallocationLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dce61b2ba8cb2bacc386287dc451d94595\\$__", "g"),
      linkLibraryAddresses["src/libraries/logic/MarginLogic.sol:MarginLogic"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$22e71cc2a9e9de4b2967c224ed91c7d01e\\$__", "g"),
      linkLibraryAddresses["src/libraries/logic/SupplyLogic.sol:SupplyLogic"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a1fa80d38d689cae49e54718da49b6432c\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/logic/LiquidationLogic.sol:LiquidationLogic"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$bc9f384c073b2381249378965b2d698cf3\\$__", "g"),
      linkLibraryAddresses["src/libraries/logic/TradeLogic.sol:TradeLogic"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PredyPool> {
    return super.deploy(uniswapFactory, overrides || {}) as Promise<PredyPool>;
  }
  override getDeployTransaction(
    uniswapFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uniswapFactory, overrides || {});
  }
  override attach(address: string): PredyPool {
    return super.attach(address) as PredyPool;
  }
  override connect(signer: Signer): PredyPool__factory {
    return super.connect(signer) as PredyPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredyPoolInterface {
    return new utils.Interface(_abi) as PredyPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PredyPool {
    return new Contract(address, _abi, signerOrProvider) as PredyPool;
  }
}

export interface PredyPoolLibraryAddresses {
  ["src/libraries/logic/AddPairLogic.sol:AddPairLogic"]: string;
  ["src/libraries/logic/ReallocationLogic.sol:ReallocationLogic"]: string;
  ["src/libraries/logic/MarginLogic.sol:MarginLogic"]: string;
  ["src/libraries/logic/SupplyLogic.sol:SupplyLogic"]: string;
  ["src/libraries/logic/LiquidationLogic.sol:LiquidationLogic"]: string;
  ["src/libraries/logic/TradeLogic.sol:TradeLogic"]: string;
}

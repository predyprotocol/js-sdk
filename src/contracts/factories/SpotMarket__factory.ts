/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SpotMarket, SpotMarketInterface } from "../SpotMarket";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "permit2Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFiller",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "LockedBy",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerIsNotVaultOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "baseAmount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "quoteAmount",
        type: "int256",
      },
    ],
    name: "SpotTraded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "order",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "sig",
            type: "bytes",
          },
        ],
        internalType: "struct IFillerMarket.SignedOrder",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "settlementContractAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "encodedData",
            type: "bytes",
          },
        ],
        internalType: "struct ISettlement.SettlementData",
        name: "settlementData",
        type: "tuple",
      },
    ],
    name: "executeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isQuoteAsset",
        type: "bool",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161148938038061148983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6113f6806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a966d8631461003b578063c6b6d34014610050575b600080fd5b61004e610049366004610c0d565b610063565b005b61004e61005e366004610cd3565b61020a565b6000826000015180602001905181019061007d9190610e0f565b9050600061008f828560200151610348565b905061009a81610410565b606082015160006100ac8486846105b1565b60a0850151604051633fbae5c560e11b81529192506001600160a01b031690637f75cb8a906100e5908790869086903390600401610f04565b60006040518083038186803b1580156100fd57600080fd5b505afa158015610111573d6000803e3d6000fd5b50505050600081131561013a5761013584602001518560000151602001518361084f565b610187565b60008112156101875760008185608001516101559190610ff7565b9050600081121561016557600080fd5b60008113156101855761018585602001518660000151602001518361084f565b505b60008213156101a7576101a784604001518560000151602001518461084f565b60408085015160208087015183516001600160a01b039384168152921690820152908101839052606081018290527f246ac4b1ef7c0646b6d7cd48af370fd2dd14980158717bdf8d57e9f60b8d47e09060800160405180910390a1505050505050565b6001546001600160a01b0316338114610246576040516313d2c13360e21b81526001600160a01b03821660048201526024015b60405180910390fd5b83156102c95760025460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c3919061101f565b50610342565b60035460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610340919061101f565b505b50505050565b6040805161012081018252600060a0820181815260c0830182905260e08301829052610100830182905282526020820181905291810182905260608082019290925260808101919091526000806000856060015113156103b457505060208301516080840151906103cb565b50604084015160608501516103c890611043565b91505b6040518060a0016040528086600001518152602001826001600160a01b031681526020018381526020016103fe87610948565b81526020018590529250505092915050565b610419816109ce565b6000546001600160a01b031663137c29fe61049f836040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a0810182526020808401516001600160a01b031660608084019182528585015160808501529083528451840151918301919091529251909201519082015290565b604080518082018252600080825260209182015281518083018352308152918601519082015284600001516020015185606001516040516020016104e29061105f565b60408051601f1981840301815260808301909152604780835290919061137a602083013960405160200161051792919061114c565b60408051601f1981840301815260608301909152602e80835290919061134c602083013960405160200161054c92919061117b565b60408051601f198184030181529082905260808901516001600160e01b031960e089901b16835261058396959493926004016111cb565b600060405180830381600087803b15801561059d57600080fd5b505af1158015610340573d6000803e3d6000fd5b60208301516040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610624919061126e565b60408087015190516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610698919061126e565b8551600180546001600160a01b03199081166001600160a01b0393841690811790925560208a8101516002805484169186169190911790556040808c015160038054909416951694909417909155880151915163459ad14b60e11b815292935091638b35a2969161070d918890600401611287565b600060405180830381600087803b15801561072757600080fd5b505af115801561073b573d6000803e3d6000fd5b5050505060208601516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae919061126e565b60408089015190516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610822919061126e565b90508061082f8488610ff7565b1461083957600080fd5b61084384836112a9565b98975050505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916108ab91906112d0565b6000604051808303816000865af19150503d80600081146108e8576040519150601f19603f3d011682016040523d82523d6000602084013e6108ed565b606091505b5091509150818015610917575080511580610917575080806020019051810190610917919061101f565b6103405760405162461bcd60e51b815260206004820152600260248201526114d560f21b604482015260640161023d565b60006040516020016109599061105f565b6040516020818303038152906040528051906020012061097c8360000151610a22565b83602001518460400151856060015186608001518760a001518860c001516040516020016109b19897969594939291906112ec565b604051602081830303815290604052805190602001209050919050565b8051516001600160a01b031630146109f957604051639db8d5b160e01b815260040160405180910390fd5b805160600151421115610a1f5760405163387b2e5560e11b815260040160405180910390fd5b50565b600060405180608001604052806047815260200161137a6047913980516020918201208351848301516040808701516060808901518351978801969096526001600160a01b03948516928701929092529290911690840152608083015260a082015260c0016109b1565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610ac557610ac5610a8c565b60405290565b60405160e0810167ffffffffffffffff81118282101715610ac557610ac5610a8c565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b1757610b17610a8c565b604052919050565b600067ffffffffffffffff821115610b3957610b39610a8c565b50601f01601f191660200190565b600082601f830112610b5857600080fd5b8135610b6b610b6682610b1f565b610aee565b818152846020838601011115610b8057600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b0381168114610a1f57600080fd5b600060408284031215610bc457600080fd5b610bcc610aa2565b90508135610bd981610b9d565b8152602082013567ffffffffffffffff811115610bf557600080fd5b610c0184828501610b47565b60208301525092915050565b60008060408385031215610c2057600080fd5b823567ffffffffffffffff80821115610c3857600080fd5b9084019060408287031215610c4c57600080fd5b610c54610aa2565b823582811115610c6357600080fd5b610c6f88828601610b47565b825250602083013582811115610c8457600080fd5b610c9088828601610b47565b602083015250809450506020850135915080821115610cae57600080fd5b50610cbb85828601610bb2565b9150509250929050565b8015158114610a1f57600080fd5b600080600060608486031215610ce857600080fd5b8335610cf381610cc5565b92506020840135610d0381610b9d565b929592945050506040919091013590565b8051610d1f81610b9d565b919050565b600060808284031215610d3657600080fd5b6040516080810181811067ffffffffffffffff82111715610d5957610d59610a8c565b80604052508091508251610d6c81610b9d565b81526020830151610d7c81610b9d565b8060208301525060408301516040820152606083015160608201525092915050565b60005b83811015610db9578181015183820152602001610da1565b50506000910152565b600082601f830112610dd357600080fd5b8151610de1610b6682610b1f565b818152846020838601011115610df657600080fd5b610e07826020830160208701610d9e565b949350505050565b600060208284031215610e2157600080fd5b815167ffffffffffffffff80821115610e3957600080fd5b908301906101408286031215610e4e57600080fd5b610e56610acb565b610e608684610d24565b8152610e6e60808401610d14565b6020820152610e7f60a08401610d14565b604082015260c0830151606082015260e08301516080820152610ea56101008401610d14565b60a082015261012083015182811115610ebd57600080fd5b610ec987828601610dc2565b60c08301525095945050505050565b60008151808452610ef0816020860160208601610d9e565b601f01601f19169290920160200192915050565b608081526000855160018060a01b038082511660808501528060208301511660a085015250604081015160c0840152606081015160e0840152506020860151610f596101008401826001600160a01b03169052565b5060408601516001600160a01b03908116610120840152606087015161014080850191909152608088015161016085015260a088015190911661018084015260c08701516101a0840191909152610fb46101c0840182610ed8565b915050846020830152836040830152610fd860608301846001600160a01b03169052565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b808201828112600083128015821682158216171561101757611017610fe1565b505092915050565b60006020828403121561103157600080fd5b815161103c81610cc5565b9392505050565b6000600160ff1b820161105857611058610fe1565b5060000390565b690a6e0dee89ee4c8cae4560b31b81526e13dc99195c925b999bc81a5b999bcb608a1b600a820152721859191c995cdcc81c5d5bdd19551bdad95b8b606a1b60198201527030b2323932b9b9903130b9b2aa37b5b2b760791b602c820152751a5b9d0c8d4d8818985cd9551bdad95b905b5bdd5b9d60521b603d8201527f75696e743235362071756f7465546f6b656e416d6f756e74000000000000000060538201527f616464726573732076616c696461746f72416464726573730000000000000000606b8201527462797465732076616c69646174696f6e446174612960581b608382015260980190565b6000835161115e818460208801610d9e565b835190830190611172818360208801610d9e565b01949350505050565b7153706f744f72646572207769746e6573732960701b8152600083516111a8816012850160208801610d9e565b8351908301906111bf816012840160208801610d9e565b01601201949350505050565b60006101406111ee838a5180516001600160a01b03168252602090810151910152565b6020890151604084015260408901516060840152611222608084018980516001600160a01b03168252602090810151910152565b6001600160a01b03871660c084015260e08301869052610100830181905261124c81840186610ed8565b90508281036101208401526112618185610ed8565b9998505050505050505050565b60006020828403121561128057600080fd5b5051919050565b60408152600061129a6040830185610ed8565b90508260208301529392505050565b81810360008312801583831316838312821617156112c9576112c9610fe1565b5092915050565b600082516112e2818460208701610d9e565b9190910192915050565b888152602081018890526001600160a01b03878116604083015286811660608301526080820186905260a08201859052831660c082015261010060e0820181905260009061133c83820185610ed8565b9b9a505050505050505050505056fe546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f2861646472657373206d61726b65742c61646472657373207472616465722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529a26469706673582212200b4cef6752da39774a4027bab6ce7fd44c3ed8886d6e30333b71d5546be1902464736f6c63430008130033";

type SpotMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpotMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpotMarket__factory extends ContractFactory {
  constructor(...args: SpotMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpotMarket> {
    return super.deploy(permit2Address, overrides || {}) as Promise<SpotMarket>;
  }
  override getDeployTransaction(
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(permit2Address, overrides || {});
  }
  override attach(address: string): SpotMarket {
    return super.attach(address) as SpotMarket;
  }
  override connect(signer: Signer): SpotMarket__factory {
    return super.connect(signer) as SpotMarket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpotMarketInterface {
    return new utils.Interface(_abi) as SpotMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpotMarket {
    return new Contract(address, _abi, signerOrProvider) as SpotMarket;
  }
}

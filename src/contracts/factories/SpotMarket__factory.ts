/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { SpotMarket, SpotMarketInterface } from '../SpotMarket'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'permit2Address',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'BaseCurrencyNotSettled',
    type: 'error'
  },
  {
    inputs: [],
    name: 'CallerIsNotFiller',
    type: 'error'
  },
  {
    inputs: [],
    name: 'DeadlinePassed',
    type: 'error'
  },
  {
    inputs: [],
    name: 'InvalidMarket',
    type: 'error'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'LockedBy',
    type: 'error'
  },
  {
    inputs: [],
    name: 'RequiredQuoteAmountExceedsMax',
    type: 'error'
  },
  {
    inputs: [],
    name: 'SignerIsNotVaultOwner',
    type: 'error'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'trader',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'filler',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'baseToken',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'quoteToken',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'baseAmount',
        type: 'int256'
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'quoteAmount',
        type: 'int256'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'validatorAddress',
        type: 'address'
      }
    ],
    name: 'SpotTraded',
    type: 'event'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes',
            name: 'order',
            type: 'bytes'
          },
          {
            internalType: 'bytes',
            name: 'sig',
            type: 'bytes'
          }
        ],
        internalType: 'struct IFillerMarket.SignedOrder',
        name: 'order',
        type: 'tuple'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'settlementContractAddress',
            type: 'address'
          },
          {
            internalType: 'bytes',
            name: 'encodedData',
            type: 'bytes'
          }
        ],
        internalType: 'struct ISettlement.SettlementData',
        name: 'settlementData',
        type: 'tuple'
      }
    ],
    name: 'executeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'quoteTokenAmount',
        type: 'int256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isQuoteAsset',
        type: 'bool'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'take',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
] as const

const _bytecode =
  ''

type SpotMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: SpotMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class SpotMarket__factory extends ContractFactory {
  constructor(...args: SpotMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpotMarket> {
    return super.deploy(permit2Address, overrides || {}) as Promise<SpotMarket>
  }
  override getDeployTransaction(
    permit2Address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(permit2Address, overrides || {})
  }
  override attach(address: string): SpotMarket {
    return super.attach(address) as SpotMarket
  }
  override connect(signer: Signer): SpotMarket__factory {
    return super.connect(signer) as SpotMarket__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): SpotMarketInterface {
    return new utils.Interface(_abi) as SpotMarketInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpotMarket {
    return new Contract(address, _abi, signerOrProvider) as SpotMarket
  }
}
